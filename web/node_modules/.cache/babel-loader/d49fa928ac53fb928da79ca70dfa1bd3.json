{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/lodgeDispute/lodgeDispute.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport close from \"../../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../../assets/images/add-image.png\";\nimport { onFileUpload } from \"../../../../redux/auth/actions\";\nimport { setShowToast, setLoading } from \"../../../../redux/common/actions\";\nimport { withRouter } from \"react-router-dom\"; //@ts-ignore\n\nimport FsLightbox from \"fslightbox-react\";\nimport { lodgeDispute } from \"../../../../redux/jobs/actions\";\nimport { JobLodgeReasons } from \"../../../../utils/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\n\nconst LodgeDispute = props => {\n  _s();\n\n  var _props$item, _props$item2;\n\n  let jobId = props === null || props === void 0 ? void 0 : (_props$item = props.item) === null || _props$item === void 0 ? void 0 : _props$item.jobId;\n  let jobName = props === null || props === void 0 ? void 0 : (_props$item2 = props.item) === null || _props$item2 === void 0 ? void 0 : _props$item2.jobName;\n  let history = props === null || props === void 0 ? void 0 : props.history;\n  const [stateData, setStateData] = useState({\n    reason: 0,\n    detail: \"\",\n    upload: []\n  });\n  const [errorData, setErrorData] = useState({\n    reason: \"\",\n    detail: \"\",\n    upload: \"\"\n  });\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [isItemsLoad, setLoadItems] = useState({});\n  const {\n    reason,\n    detail\n  } = stateData;\n\n  const isValid = ({\n    name,\n    value,\n    title\n  }) => {\n    if (name === \"reason\") {\n      return value === 0 ? `${title} is required.` : \"\";\n    }\n\n    return !(value === null || value === void 0 ? void 0 : value.length) ? `${title} is required.` : \"\";\n  };\n\n  const checkErrors = () => {\n    let error_1 = isValid({\n      name: \"reason\",\n      value: reason,\n      title: \"Reason\"\n    });\n    let error_2 = isValid({\n      name: \"detail\",\n      value: detail,\n      title: \"Detail\"\n    });\n    let error_3 = isValid({\n      name: \"upload\",\n      value: filesUrl,\n      title: \"Media file\"\n    }); // if (!error_1?.length && !error_2?.length && !error_3?.length) {\n\n    if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    setErrorData(prev => {\n      var _stateData$detail;\n\n      return { ...prev,\n        detail: (stateData === null || stateData === void 0 ? void 0 : (_stateData$detail = stateData.detail) === null || _stateData$detail === void 0 ? void 0 : _stateData$detail.length) > 1000 ? \"Maximum 1000 characters are allowed.\" : \"\"\n      };\n    });\n  }, [stateData]);\n  useEffect(() => {\n    var _Object$values;\n\n    let IsRenderValues = null;\n\n    if ((_Object$values = Object.values(isItemsLoad)) === null || _Object$values === void 0 ? void 0 : _Object$values.length) {\n      IsRenderValues = Array.isArray(Object.values(isItemsLoad)) && Object.values(isItemsLoad)[0] === true ? Object.values(isItemsLoad)[0] : false;\n    }\n\n    if (IsRenderValues === false) {\n      setLoading(true);\n    }\n\n    if (IsRenderValues === true) {\n      setLoading(false);\n    }\n  }, [isItemsLoad]);\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if ((filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) === 6) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    setLoadItems({});\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      let link = res.imgUrl;\n      let check_type = 1;\n      setFilesUrl(prev => [...prev, {\n        mediaType: check_type,\n        link: link\n      }]);\n      setLoadItems(prev => ({\n        [filesUrl.length - 1]: false\n      }));\n      setLocalFiles(prev => ({ ...prev,\n        [filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length]: URL.createObjectURL(newFile)\n      }));\n    }\n  };\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderbyFileFormat = (item, index) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            setItemToggle(index);\n          },\n          title: get_split_name,\n          src: item,\n          alt: \"media\",\n          onLoad: () => {\n            setLoadItems(prev => ({\n              [index]: true\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            removeFromItem(index);\n          },\n          src: close,\n          alt: \"remove\",\n          className: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      jobId: jobId,\n      reason: reason\n    };\n\n    if (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) {\n      data[\"photos\"] = filesUrl;\n    }\n\n    if (detail === null || detail === void 0 ? void 0 : detail.length) {\n      data[\"details\"] = detail;\n    }\n\n    let response = await lodgeDispute(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      history.push(\"/lodge-success\");\n    }\n  };\n\n  const renderTypes = ({\n    id\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox_wrap agree_check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: reason,\n        onClick: () => {\n          setStateData(prev => ({ ...prev,\n            reason: id\n          }));\n        },\n        checked: reason === id,\n        name: \"Reason\",\n        className: \"filter-type filled-in\",\n        type: \"checkbox\",\n        id: `reason${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `reason${id}`,\n        children: JobLodgeReasons(id, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderFilteredItems = () => {\n    let sources = [];\n    let types = [];\n\n    if (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) {\n      filesUrl.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const {\n    sources,\n    types\n  } = renderFilteredItems();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.backTab(\"lodge\");\n          },\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: jobName || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Lodge dispute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"commn_para\",\n        children: \"Enter reason text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n        toggler: toggler,\n        slide: selectedSlide,\n        sources: sources,\n        types: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reason_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: [renderTypes({\n            id: 1\n          }), renderTypes({\n            id: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: [renderTypes({\n            id: 3\n          }), renderTypes({\n            id: 4\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: [renderTypes({\n            id: 5\n          }), renderTypes({\n            id: 6\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: renderTypes({\n            id: 7\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_9\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Details (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: detail,\n            onChange: e => {\n              setStateData(prev => ({ ...prev,\n                detail: e.target.value.trimLeft()\n              }));\n            },\n            placeholder: \"It\\u2019s really bad work, because...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errorData.detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_img_video\",\n        children: [(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) ? filesUrl.map((item, index) => renderbyFileFormat(item.link, index)) : null, (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) < 6 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload_media\",\n            htmlFor: \"upload_img_video\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: addMedia,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: onFileChange,\n            type: \"file\",\n            accept: \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\",\n            style: {\n              display: \"none\"\n            },\n            id: \"upload_img_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: `fill_btn full_btn btn-effect ${checkErrors() ? \"disable_btn\" : \"\"}`,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LodgeDispute, \"4eolOVNWLSN1FPdy2+RRVjY5g50=\");\n\n_c = LodgeDispute;\nexport default _c2 = withRouter(LodgeDispute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LodgeDispute\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/lodgeDispute/lodgeDispute.tsx"],"names":["React","useState","useEffect","close","addMedia","onFileUpload","setShowToast","setLoading","withRouter","FsLightbox","lodgeDispute","JobLodgeReasons","imageFormats","LodgeDispute","props","jobId","item","jobName","history","stateData","setStateData","reason","detail","upload","errorData","setErrorData","filesUrl","setFilesUrl","localFiles","setLocalFiles","update","forceUpdate","toggler","setToggler","selectedSlide","setSelectSlide","isItemsLoad","setLoadItems","isValid","name","value","title","length","checkErrors","error_1","error_2","error_3","prev","IsRenderValues","Object","values","Array","isArray","removeFromItem","index","splice","onFileChange","e","formData","FormData","newFile","target","files","fileType","type","split","toLowerCase","selectedFileSize","size","indexOf","includes","append","res","success","link","imgUrl","check_type","mediaType","URL","createObjectURL","setItemToggle","renderbyFileFormat","split_item_format","get_split_fromat","split_item_name","get_split_name","image_render","handleSubmit","data","response","push","renderTypes","id","renderFilteredItems","sources","types","forEach","backTab","trimLeft","map","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport close from \"../../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../../assets/images/add-image.png\";\n\nimport { onFileUpload } from \"../../../../redux/auth/actions\";\nimport { setShowToast, setLoading } from \"../../../../redux/common/actions\";\n\nimport { withRouter } from \"react-router-dom\";\n\n//@ts-ignore\nimport FsLightbox from \"fslightbox-react\";\n\nimport { lodgeDispute } from \"../../../../redux/jobs/actions\";\n\nimport { JobLodgeReasons } from \"../../../../utils/common\";\n\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\n\nconst LodgeDispute = (props: any) => {\n  let jobId = props?.item?.jobId;\n  let jobName = props?.item?.jobName;\n  let history = props?.history;\n  const [stateData, setStateData] = useState({\n    reason: 0,\n    detail: \"\",\n    upload: [],\n  });\n  const [errorData, setErrorData] = useState({\n    reason: \"\",\n    detail: \"\",\n    upload: \"\",\n  });\n  const [filesUrl, setFilesUrl] = useState([] as any);\n  const [localFiles, setLocalFiles] = useState({});\n\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n\n  const [isItemsLoad, setLoadItems] = useState({});\n\n  const { reason, detail } = stateData;\n\n  const isValid = ({ name, value, title }: any) => {\n    if (name === \"reason\") {\n      return value === 0 ? `${title} is required.` : \"\";\n    }\n    return !value?.length ? `${title} is required.` : \"\";\n  };\n\n  const checkErrors = () => {\n    let error_1 = isValid({ name: \"reason\", value: reason, title: \"Reason\" });\n    let error_2 = isValid({ name: \"detail\", value: detail, title: \"Detail\" });\n    let error_3 = isValid({\n      name: \"upload\",\n      value: filesUrl,\n      title: \"Media file\",\n    });\n\n    // if (!error_1?.length && !error_2?.length && !error_3?.length) {\n    if (!error_1?.length) {\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    setErrorData((prev: any) => ({\n      ...prev,\n      detail:\n        stateData?.detail?.length > 1000\n          ? \"Maximum 1000 characters are allowed.\"\n          : \"\",\n    }));\n  }, [stateData]);\n\n  useEffect(() => {\n    let IsRenderValues = null;\n    if (Object.values(isItemsLoad)?.length) {\n      IsRenderValues =\n        Array.isArray(Object.values(isItemsLoad)) &&\n        Object.values(isItemsLoad)[0] === true\n          ? Object.values(isItemsLoad)[0]\n          : false;\n    }\n\n    if (IsRenderValues === false) {\n      setLoading(true);\n    }\n\n    if (IsRenderValues === true) {\n      setLoading(false);\n    }\n  }, [isItemsLoad]);\n\n  const removeFromItem = (index: any) => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async (e: any) => {\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if (filesUrl?.length === 6) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    var fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n    var selectedFileSize = newFile?.size / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    setLoadItems({});\n    const res = await onFileUpload(formData);\n    if (res.success) {\n      let link: string = res.imgUrl;\n      let check_type: any = 1;\n      setFilesUrl((prev: Array<any>) => [\n        ...prev,\n        {\n          mediaType: check_type,\n          link: link,\n        },\n      ]);\n      setLoadItems((prev: any) => ({\n        [filesUrl.length - 1]: false,\n      }));\n      setLocalFiles((prev: any) => ({\n        ...prev,\n        [filesUrl?.length]: URL.createObjectURL(newFile),\n      }));\n    }\n  };\n\n  const setItemToggle = (index: any) => {\n    setToggler((prev: boolean) => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderbyFileFormat = (item: any, index: any) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render: any = null;\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = (\n          <img\n            onClick={() => {\n              setItemToggle(index);\n            }}\n            title={get_split_name}\n            src={item}\n            alt=\"media\"\n            onLoad={() => {\n              setLoadItems((prev: any) => ({\n                [index]: true,\n              }));\n            }}\n          />\n        );\n      }\n      return (\n        <figure className=\"img_video\">\n          {image_render}\n          <img\n            onClick={() => {\n              removeFromItem(index);\n            }}\n            src={close}\n            alt=\"remove\"\n            className=\"remove\"\n          />\n          {/* <span style={{ fontSize: '10px' }}>{get_split_name}</span> */}\n        </figure>\n      );\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data: any = {\n      jobId: jobId,\n      reason: reason,\n    };\n\n    if (filesUrl?.length) {\n      data[\"photos\"] = filesUrl;\n    }\n\n    if (detail?.length) {\n      data[\"details\"] = detail;\n    }\n\n    let response: any = await lodgeDispute(data);\n\n    if (response?.success) {\n      history.push(\"/lodge-success\");\n    }\n  };\n\n  const renderTypes = ({ id }: any) => {\n    return (\n      <div className=\"checkbox_wrap agree_check\">\n        <input\n          value={reason}\n          onClick={() => {\n            setStateData((prev: any) => ({ ...prev, reason: id }));\n          }}\n          checked={reason === id}\n          name=\"Reason\"\n          className=\"filter-type filled-in\"\n          type=\"checkbox\"\n          id={`reason${id}`}\n        />\n        <label htmlFor={`reason${id}`}>{JobLodgeReasons(id, true)}</label>\n      </div>\n    );\n  };\n\n  const renderFilteredItems = () => {\n    let sources: any = [];\n    let types: any = [];\n\n    if (filesUrl?.length) {\n      filesUrl.forEach((item: any) => {\n        if (item?.mediaType === 1) {\n          sources.push(item.link);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return { sources, types };\n  };\n\n  const { sources, types } = renderFilteredItems();\n\n  return (\n    <div className=\"flex_row\">\n      <div className=\"flex_col_sm_8\">\n        <div className=\"relate\">\n          <button\n            onClick={() => {\n              props.backTab(\"lodge\");\n            }}\n            className=\"back\"\n          ></button>\n          <span className=\"xs_sub_title\">{jobName || \"\"}</span>\n        </div>\n        <span className=\"sub_title\">Lodge dispute</span>\n        <p className=\"commn_para\">Enter reason text</p>\n\n        <FsLightbox\n          toggler={toggler}\n          slide={selectedSlide}\n          sources={sources}\n          types={types}\n        />\n\n        <div className=\"reason_wrap\">\n          <div className=\"f_spacebw\">\n            {renderTypes({ id: 1 })}\n            {renderTypes({ id: 2 })}\n          </div>\n\n          <div className=\"f_spacebw\">\n            {renderTypes({ id: 3 })}\n            {renderTypes({ id: 4 })}\n          </div>\n\n          <div className=\"f_spacebw\">\n            {renderTypes({ id: 5 })}\n            {renderTypes({ id: 6 })}\n          </div>\n\n          <div className=\"f_spacebw\">{renderTypes({ id: 7 })}</div>\n        </div>\n      </div>\n\n      <div className=\"flex_col_sm_9\">\n        <div className=\"form_field\">\n          <label className=\"form_label\">Details (optional)</label>\n          <div className=\"text_field\">\n            <textarea\n              value={detail}\n              onChange={(e: any) => {\n                setStateData((prev: any) => ({\n                  ...prev,\n                  detail: e.target.value.trimLeft(),\n                }));\n              }}\n              placeholder=\"It’s really bad work, because...\"\n            ></textarea>\n          </div>\n          <span className=\"error_msg\">{errorData.detail}</span>\n        </div>\n      </div>\n      <div className=\"flex_col_sm_12\">\n        <div className=\"upload_img_video\">\n          {filesUrl?.length\n            ? filesUrl.map((item: any, index: number) =>\n                renderbyFileFormat(item.link, index)\n              )\n            : null}\n\n          {filesUrl?.length < 6 ? (\n            <React.Fragment>\n              <label className=\"upload_media\" htmlFor=\"upload_img_video\">\n                <img src={addMedia} alt=\"\" />\n              </label>\n              <input\n                onChange={onFileChange}\n                type=\"file\"\n                accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                style={{ display: \"none\" }}\n                id=\"upload_img_video\"\n              />\n            </React.Fragment>\n          ) : null}\n        </div>\n        <button\n          onClick={handleSubmit}\n          className={`fill_btn full_btn btn-effect ${\n            checkErrors() ? \"disable_btn\" : \"\"\n          }`}\n        >\n          {\"Send\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(LodgeDispute);\n"]},"metadata":{},"sourceType":"module"}