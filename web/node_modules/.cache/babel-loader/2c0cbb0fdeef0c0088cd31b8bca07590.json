{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/EmailVerification.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { verifyOtp, resendOtp } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { setShowToast } from '../../../redux/common/actions';\nimport OtpInput from \"react-otp-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneNumber = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [counter, setCounter] = useState(Constants.OTP_TIMER);\n  const [otp, setOTP] = useState('');\n\n  const changeHandler = newOtp => {\n    setOTP(newOtp);\n  };\n\n  useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!otp) {\n      newErrors.otp = Constants.errorStrings.otpEmpty;\n    } else {\n      const otpRegex = new RegExp(regex.otp);\n\n      if (!otpRegex.test(otp)) {\n        newErrors.otp = Constants.errorStrings.otpIncorrect;\n      }\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const data = {\n        email: props.email,\n        otp: otp\n      };\n      const res = await verifyOtp(data);\n\n      if (res.success) {\n        props.updateSteps(props.step + 1, {\n          email: props.email\n        });\n      }\n    }\n  };\n\n  const resendHandler = async () => {\n    let data = {\n      \"email\": props.email\n    };\n    let response = await resendOtp(data);\n\n    if (response.success) {\n      setShowToast(true, 'We have resent the verification code on your email. Please check your email');\n      setCounter(Constants.OTP_TIMER);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"otp_input_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(OtpInput, {\n            className: \"sms-no-box\",\n            inputStyle: {\n              \"width\": \"48px\"\n            },\n            value: otp,\n            onChange: changeHandler,\n            numInputs: 5,\n            isInputNum: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), !!errors.otp && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.otp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: 'We have sent a verification code to your email. Please check the messages and enter the 5-digit code here.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), counter === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: \"Don\\u2019t you receive any codes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"link\",\n          onClick: resendHandler,\n          children: \"Re-send code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), counter > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label timer\",\n          children: counter > 59 ? `01 : 00` : `00 : ${counter}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhoneNumber, \"JxbVA7j/6U7TBfkAsELR3eMJ5Ak=\");\n\n_c = PhoneNumber;\nexport default PhoneNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneNumber\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/EmailVerification.tsx"],"names":["React","useState","useEffect","verifyOtp","resendOtp","Constants","regex","setShowToast","OtpInput","PhoneNumber","props","errors","setErrors","counter","setCounter","OTP_TIMER","otp","setOTP","changeHandler","newOtp","timer","setInterval","clearInterval","validateForm","newErrors","errorStrings","otpEmpty","otpRegex","RegExp","test","otpIncorrect","Object","keys","length","onSubmit","e","preventDefault","data","email","res","success","updateSteps","step","resendHandler","response"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { verifyOtp, resendOtp } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { setShowToast } from '../../../redux/common/actions';\nimport OtpInput from \"react-otp-input\";\n\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void\n    step: number\n    history?: any\n    email: any,\n}\n\nconst PhoneNumber = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [counter, setCounter] = useState(Constants.OTP_TIMER);\n    const [otp, setOTP] = useState('');\n\n    const changeHandler = (newOtp: any) => {\n        setOTP(newOtp)\n    }\n\n    useEffect(() => {\n        const timer: any = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n        return () => clearInterval(timer);\n    }, [counter]);\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!otp) {\n            newErrors.otp = Constants.errorStrings.otpEmpty;\n        } else {\n            const otpRegex = new RegExp(regex.otp);\n            if (!otpRegex.test(otp)) {\n                newErrors.otp = Constants.errorStrings.otpIncorrect\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const data = {\n                email: props.email,\n                otp: otp\n            }\n            const res: any = await verifyOtp(data)\n            if (res.success) {\n                props.updateSteps(props.step + 1, {\n                    email: props.email\n                })\n            }\n        }\n    }\n\n    const resendHandler = async () => {\n        let data = {\n            \"email\": props.email,\n        };\n        let response = await resendOtp(data);\n        if (response.success) {\n            setShowToast(true, 'We have resent the verification code on your email. Please check your email');\n            setCounter(Constants.OTP_TIMER);\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <div className=\"otp_input_wrapper\">\n                        <OtpInput\n                            className=\"sms-no-box\"\n                            inputStyle={{ \"width\": \"48px\" }}\n                            value={otp}\n                            onChange={changeHandler}\n                            numInputs={5}\n                            isInputNum\n                        />\n                    </div>\n                    {!!errors.otp && <span className=\"error_msg\">{errors.otp}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <span className=\"show_label\">\n                        {'We have sent a verification code to your email. Please check the messages and enter the 5-digit code here.'}\n                        {/* We have sent a verification code to your email. Please check email and enter the 5-digit code here. */}\n                    </span>\n                </div>\n\n                {counter === 0 &&\n                    <div className=\"form_field text-center\">\n                        <span className=\"show_label\">Don’t you receive any codes?</span>\n                        <a href=\"#\" className=\"link\" onClick={resendHandler}>Re-send code</a>\n                    </div>\n                }\n\n                {counter > 0 && <div className=\"form_field text-center\">\n                    <span className=\"show_label timer\">{counter > 59 ? `01 : 00` : `00 : ${counter}`}</span>\n                </div>}\n\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nexport default PhoneNumber;\n\n"]},"metadata":{},"sourceType":"module"}