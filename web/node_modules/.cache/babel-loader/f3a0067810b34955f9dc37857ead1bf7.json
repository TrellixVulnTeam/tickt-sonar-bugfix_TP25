{"ast":null,"code":"import _defineProperty from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import Constants from'../../../utils/constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";;var JobType=function JobType(_ref){var categoriesData=_ref.categories,jobTypes=_ref.jobTypes,data=_ref.data,stepCompleted=_ref.stepCompleted,editDetailPage=_ref.editDetailPage,handleStepForward=_ref.handleStepForward,handleStepJustUpdate=_ref.handleStepJustUpdate,handleStepComplete=_ref.handleStepComplete,handleStepBack=_ref.handleStepBack;var errorStrings=Constants.errorStrings;var _useState=useState({categories:[],job_type:[],specialization:[]}),_useState2=_slicedToArray(_useState,2),jobTypeDetails=_useState2[0],setJobTypeDetails=_useState2[1];var _useState3=useState({job_type:'',categories:'',specialization:''}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),continueClicked=_useState6[0],setContinueClicked=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),selectedAll=_useState8[0],setSelectedAll=_useState8[1];var specializations=[];var categoriesHTML=[];var job_type=jobTypeDetails.job_type,categories=jobTypeDetails.categories,specialization=jobTypeDetails.specialization;categoriesData.forEach(function(_ref2){var _id=_ref2._id,trade_name=_ref2.trade_name,selected_url=_ref2.selected_url,specialisations=_ref2.specialisations;if(categories.includes(_id)){specializations.push.apply(specializations,_toConsumableArray(specialisations));}categoriesHTML.push(/*#__PURE__*/_jsxs(\"li\",{className:categories.includes(_id)?'active':undefined,onClick:function onClick(){handleChange(_id,'categories');setSelectedAll(true);},children:[/*#__PURE__*/_jsx(\"figure\",{children:/*#__PURE__*/_jsx(\"img\",{src:selected_url,alt:\"cat-icon\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:trade_name})]},_id));});useEffect(function(){if(stepCompleted){var checkSelected=false;if(categoriesData===null||categoriesData===void 0?void 0:categoriesData.length){var _preSelectedSpec,_data$specialization,_preSelectedSpec2,_data$specialization2;var preSelectedSpec=[];preSelectedSpec=categoriesData.find(function(item){return item._id===data.categories[0];}).specialisations;if(((_preSelectedSpec=preSelectedSpec)===null||_preSelectedSpec===void 0?void 0:_preSelectedSpec.length)===((_data$specialization=data.specialization)===null||_data$specialization===void 0?void 0:_data$specialization.length)){checkSelected=true;}if(((_preSelectedSpec2=preSelectedSpec)===null||_preSelectedSpec2===void 0?void 0:_preSelectedSpec2.length)&&!((_data$specialization2=data.specialization)===null||_data$specialization2===void 0?void 0:_data$specialization2.length)){checkSelected=true;}}setJobTypeDetails({categories:data.categories,job_type:data.job_type,specialization:checkSelected?[]:data.specialization});console.log({checkSelected:checkSelected});setSelectedAll(checkSelected);}},[stepCompleted,data]);// for error messages\nvar label={job_type:'Job Type',categories:'Categories',specialization:'Specialization'};var isEmpty=function isEmpty(name,value){return!value.length?\"\".concat(label[name],\" is required.\"):'';};var isInvalid=function isInvalid(name,value){switch(name){case'job_type':return isEmpty(name,value);case'categories':return isEmpty(name,value);case'specialization':return isEmpty(name,value);}};// update errors and jobDetails\nvar updateDetails=function updateDetails(value,name){if(stepCompleted||continueClicked){setErrors(function(prevErrors){return _objectSpread(_objectSpread({},prevErrors),{},_defineProperty({},name,isInvalid(name,value)));});}setJobTypeDetails(function(prevDetails){return _objectSpread(_objectSpread({},prevDetails),{},_defineProperty({},name,value));});};// function callable on handle change\nvar handleChange=function handleChange(value,name){if(jobTypeDetails[name].includes(value)){updateDetails(jobTypeDetails[name].filter(function(val){return val!==value;}),name);// when category is deselected, remove it's specialization\nif(name==='categories'){var _categoriesData$find$;var specializationsToBeRemoved=((_categoriesData$find$=categoriesData.find(function(_ref3){var _id=_ref3._id;return _id===value;}).specialisations)===null||_categoriesData$find$===void 0?void 0:_categoriesData$find$.map(function(_ref4){var _id=_ref4._id;return _id;}))||[];var itemsSpec=jobTypeDetails.specialization.filter(function(value){return!specializationsToBeRemoved.includes(value);});updateDetails(itemsSpec,'specialization');updateDetails([],'categories');}}else{if(name!==\"specialization\"){jobTypeDetails[name]=[value];updateDetails(jobTypeDetails[name],name);// updateDetails([], 'specialization');\n}else{updateDetails(jobTypeDetails[name].concat([value]),name);}}};var handleContinue=function handleContinue(){var hasErrors;if(selectedAll){setJobTypeDetails(function(prev){return _objectSpread(_objectSpread({},prev),{},{'specialization':specializations.map(function(item){return item._id;})});});}console.log({jobTypeDetails:jobTypeDetails},'-->');if(!continueClicked){setContinueClicked(true);hasErrors=Object.keys(jobTypeDetails).reduce(function(prevError,name){var hasError=!!isInvalid(name,jobTypeDetails[name]);if(name==='specialization'&&hasError){hasError=false;}setErrors(function(prevErrors){return _objectSpread(_objectSpread({},prevErrors),{},_defineProperty({},name,isInvalid(name,jobTypeDetails[name])));});return hasError||prevError;},false);}if(!hasErrors){var _jobTypeDetails$speci;var dataItems=jobTypeDetails;if((jobTypeDetails===null||jobTypeDetails===void 0?void 0:(_jobTypeDetails$speci=jobTypeDetails.specialization)===null||_jobTypeDetails$speci===void 0?void 0:_jobTypeDetails$speci.length)===0){if(selectedAll){dataItems['specialization']=specializations.map(function(item){return item._id;});}}if(editDetailPage===null||editDetailPage===void 0?void 0:editDetailPage.currentScreen){handleStepJustUpdate(dataItems,true);}else{handleStepComplete(dataItems);}}else{setContinueClicked(false);}};var checkErrors=function checkErrors(){var error_1=isInvalid('categories',jobTypeDetails['categories']);var error_2=isInvalid('job_type',jobTypeDetails['job_type']);var error_3=isInvalid('specialization',jobTypeDetails['specialization']);if(!(error_1===null||error_1===void 0?void 0:error_1.length)&&!(error_2===null||error_2===void 0?void 0:error_2.length)&&(!(error_3===null||error_3===void 0?void 0:error_3.length)||selectedAll&&(specializations===null||specializations===void 0?void 0:specializations.length))){return false;}return true;};return/*#__PURE__*/_jsx(\"div\",{className:\"app_wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"section_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex_row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex_col_sm_5\",children:[(editDetailPage===null||editDetailPage===void 0?void 0:editDetailPage.currentScreen)?/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:function onClick(){handleStepForward(14);}}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Job type\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:handleStepBack}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Job type\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:\"Select the category and the specialisations required\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"xs_sub_title\",children:\"Categories\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"select_sphere\",children:[/*#__PURE__*/_jsx(\"ul\",{children:categoriesHTML}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.categories})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"xs_sub_title\",children:\"Job Types\"})}),/*#__PURE__*/_jsx(\"ul\",{className:\"job_categories\",children:jobTypes&&Array.isArray(jobTypes)?jobTypes.map(function(_ref5){var _id=_ref5._id,name=_ref5.name,image=_ref5.image;return/*#__PURE__*/_jsxs(\"li\",{className:\"\".concat(job_type.includes(_id)?' active':''),onClick:function onClick(){return handleChange(_id,'job_type');},children:[/*#__PURE__*/_jsx(\"figure\",{className:\"type_icon\",children:/*#__PURE__*/_jsx(\"img\",{src:image,alt:\"icon\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:name})]},_id);}):null}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.job_type}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"xs_sub_title\",children:'Specialisation'})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tags_wrap\",children:[/*#__PURE__*/_jsxs(\"ul\",{children:[console.log({selectedAll:selectedAll,specializations:specializations}),(specializations===null||specializations===void 0?void 0:specializations.length)>0&&/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){if(!selectedAll){setSelectedAll(true);}updateDetails([],'specialization');},className:selectedAll?'selected':'',children:'All'}),specializations.map(function(_ref6){var _id=_ref6._id,name=_ref6.name;return/*#__PURE__*/_jsx(\"li\",{className:specialization.includes(_id)&&!selectedAll?'selected':undefined,onClick:function onClick(){handleChange(_id,'specialization');if(selectedAll){setSelectedAll(false);}},children:name},_id);})]}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:!selectedAll?errors.specialization:''})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect \".concat(checkErrors()?'disable_btn':''),onClick:function onClick(){if(selectedAll){// setJobTypeDetails((prev: any) => ({ ...prev, 'specialization': specializations.map((item: any) => item._id) }))\nupdateDetails(specializations.map(function(item){return item._id;}),'specialization');}handleContinue();},children:\"Continue\"})})]})})});};export default JobType;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/jobType.tsx"],"names":["useEffect","useState","Constants","JobType","categoriesData","categories","jobTypes","data","stepCompleted","editDetailPage","handleStepForward","handleStepJustUpdate","handleStepComplete","handleStepBack","errorStrings","job_type","specialization","jobTypeDetails","setJobTypeDetails","errors","setErrors","continueClicked","setContinueClicked","selectedAll","setSelectedAll","specializations","categoriesHTML","forEach","_id","trade_name","selected_url","specialisations","includes","push","undefined","handleChange","checkSelected","length","preSelectedSpec","find","item","console","log","label","isEmpty","name","value","isInvalid","updateDetails","prevErrors","prevDetails","filter","val","specializationsToBeRemoved","map","itemsSpec","concat","handleContinue","hasErrors","prev","Object","keys","reduce","prevError","hasError","dataItems","currentScreen","checkErrors","error_1","error_2","error_3","Array","isArray","image"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Constants from '../../../utils/constants';\n\ninterface Proptypes {\n  categories: any;\n  jobTypes: any;\n  data: any;\n  editDetailPage: any;\n  stepCompleted: Boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepBack: () => void;\n  handleStepForward: (data: any) => void;\n  handleStepJustUpdate: (data: any, goto: any) => void;\n};\n\nconst JobType = ({ categories: categoriesData, jobTypes, data, stepCompleted, editDetailPage, handleStepForward, handleStepJustUpdate, handleStepComplete, handleStepBack }: Proptypes) => {\n  const { errorStrings } = Constants;\n\n  const [jobTypeDetails, setJobTypeDetails] = useState<{ [index: string]: string[] }>({ categories: [], job_type: [], specialization: [] });\n  const [errors, setErrors] = useState({ job_type: '', categories: '', specialization: '' });\n  const [continueClicked, setContinueClicked] = useState(false);\n  const [selectedAll, setSelectedAll] = useState(false);\n\n\n\n\n  const specializations: Array<{ _id: string, name: string }> = [];\n  const categoriesHTML: JSX.Element[] = [];\n\n\n  const { job_type, categories, specialization } = jobTypeDetails;\n\n  categoriesData.forEach(({ _id, trade_name, selected_url, specialisations }: { _id: string, trade_name: string, selected_url: string, specialisations: [] }) => {\n    if (categories.includes(_id)) {\n      specializations.push(...specialisations);\n    }\n\n    categoriesHTML.push(\n      <li\n        key={_id}\n        className={categories.includes(_id) ? 'active' : undefined}\n        onClick={() => {\n          handleChange(_id, 'categories')\n          setSelectedAll(true);\n        }}>\n        <figure>\n          <img\n            src={selected_url}\n            alt=\"cat-icon\"\n          />\n        </figure>\n        <span className=\"name\">{trade_name}</span>\n      </li>\n    );\n  });\n\n  useEffect(() => {\n    if (stepCompleted) {\n      let checkSelected = false;\n\n      if (categoriesData?.length) {\n        let preSelectedSpec = [];\n        preSelectedSpec = categoriesData.find((item: any) => item._id === data.categories[0]).specialisations;\n\n        if (preSelectedSpec?.length === data.specialization?.length) {\n          checkSelected = true;\n        }\n\n        if (preSelectedSpec?.length && !data.specialization?.length) {\n          checkSelected = true;\n        }\n      }\n\n      setJobTypeDetails({\n        categories: data.categories,\n        job_type: data.job_type,\n        specialization: checkSelected ? [] : data.specialization\n      });\n\n      console.log({ checkSelected })\n      setSelectedAll(checkSelected)\n    }\n  }, [stepCompleted, data]);\n\n  // for error messages\n  const label: { [index: string]: string } = {\n    job_type: 'Job Type',\n    categories: 'Categories',\n    specialization: 'Specialization',\n  }\n\n  const isEmpty = (name: string, value: string[]) => !value.length ? `${label[name]} is required.` : '';\n\n  const isInvalid = (name: string, value: string[]) => {\n    switch (name) {\n      case 'job_type':\n        return isEmpty(name, value);\n      case 'categories':\n        return isEmpty(name, value);\n      case 'specialization':\n        return isEmpty(name, value);\n    }\n  }\n\n  // update errors and jobDetails\n  const updateDetails = (value: string[], name: string) => {\n    if (stepCompleted || continueClicked) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: isInvalid(name, value),\n      }));\n    }\n\n    setJobTypeDetails((prevDetails) => ({\n      ...prevDetails,\n      [name]: value,\n    }));\n  };\n\n  // function callable on handle change\n  const handleChange = (value: string, name: string) => {\n\n    if (jobTypeDetails[name].includes(value)) {\n      updateDetails(jobTypeDetails[name].filter((val) => val !== value), name);\n\n      // when category is deselected, remove it's specialization\n      if (name === 'categories') {\n        const specializationsToBeRemoved = categoriesData.find(({ _id }: { _id: string }) => _id === value).specialisations?.map(({ _id }: { _id: string }) => _id) || [];\n        let itemsSpec = jobTypeDetails.specialization.filter((value) => !specializationsToBeRemoved.includes(value));\n        updateDetails(itemsSpec, 'specialization');\n        updateDetails([], 'categories');\n      }\n    } else {\n      if (name !== \"specialization\") {\n        jobTypeDetails[name] = [value]\n        updateDetails(jobTypeDetails[name], name);\n        // updateDetails([], 'specialization');\n      } else {\n        updateDetails(jobTypeDetails[name].concat([value]), name);\n      }\n    }\n  };\n\n  const handleContinue = () => {\n    let hasErrors;\n\n    if (selectedAll) {\n      setJobTypeDetails((prev: any) => ({ ...prev, 'specialization': specializations.map((item: any) => item._id) }))\n    }\n    console.log({ jobTypeDetails }, '-->')\n    if (!continueClicked) {\n      setContinueClicked(true);\n\n      hasErrors = Object.keys(jobTypeDetails).reduce((prevError, name) => {\n        let hasError = !!isInvalid(name, jobTypeDetails[name]);\n\n        if (name === 'specialization' && hasError) {\n          hasError = false;\n        }\n\n        setErrors((prevErrors) => ({\n          ...prevErrors,\n          [name]: isInvalid(name, jobTypeDetails[name]),\n        }));\n\n        return hasError || prevError;\n      }, false);\n    }\n\n    if (!hasErrors) {\n      let dataItems = jobTypeDetails;\n\n      if (jobTypeDetails?.specialization?.length === 0) {\n        if (selectedAll) {\n          dataItems['specialization'] = specializations.map((item: any) => item._id);\n        }\n      }\n\n      if (editDetailPage?.currentScreen) {\n        handleStepJustUpdate(dataItems, true)\n      } else {\n        handleStepComplete(dataItems);\n      }\n    } else {\n      setContinueClicked(false);\n    }\n  };\n\n  const checkErrors = () => {\n    let error_1 = isInvalid('categories', jobTypeDetails['categories']);\n    let error_2 = isInvalid('job_type', jobTypeDetails['job_type']);\n    let error_3 = isInvalid('specialization', jobTypeDetails['specialization']);\n    if (!error_1?.length && !error_2?.length && (!error_3?.length || (selectedAll && specializations?.length))) {\n      return false;\n    }\n    return true;\n  }\n\n  return (\n    <div className=\"app_wrapper\">\n      <div className=\"section_wrapper\">\n        <div className=\"custom_container\">\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_5\">\n\n                {editDetailPage?.currentScreen ? (\n                  <div className=\"relate\">\n                    <button className=\"back\" onClick={() => { handleStepForward(14) }}></button>\n                    <span className=\"title\">Job type</span>\n                  </div>\n                ) : (\n                  <div className=\"relate\">\n                    <button className=\"back\" onClick={handleStepBack}></button>\n                    <span className=\"title\">Job type</span>\n                  </div>\n                )}\n\n                <p className=\"commn_para\">Select the category and the specialisations required</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"form_field\">\n            <span className=\"xs_sub_title\">Categories</span>\n          </div>\n          <div className=\"select_sphere\">\n            <ul>\n              {categoriesHTML}\n            </ul>\n            <span className=\"error_msg\">{errors.categories}</span>\n          </div>\n          <div className=\"form_field\">\n            <span className=\"xs_sub_title\">Job Types</span>\n          </div>\n          <ul className=\"job_categories\">\n            {jobTypes && Array.isArray(jobTypes) ?\n              jobTypes.map(({ _id, name, image }: { _id: string, name: string, image: string }) => (\n                <li\n                  key={_id}\n                  className={`${job_type.includes(_id) ? ' active' : ''}`}\n                  onClick={() => handleChange(_id, 'job_type')}\n                >\n                  <figure className=\"type_icon\">\n                    <img\n                      src={image}\n                      alt=\"icon\"\n                    />\n                  </figure>\n                  <span className=\"name\">{name}</span>\n                </li>\n              )) : null}\n          </ul>\n          <span className=\"error_msg\">{errors.job_type}</span>\n          <div className=\"form_field\">\n            <span className=\"xs_sub_title\">\n              {'Specialisation'}\n            </span>\n          </div>\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_6\">\n              <div className=\"tags_wrap\">\n                <ul>\n                  {console.log({ selectedAll, specializations })}\n                  {specializations?.length > 0 && (\n                    <li\n                      onClick={() => {\n                        if (!selectedAll) {\n                          setSelectedAll(true);\n                        }\n                        updateDetails([], 'specialization')\n                      }}\n                      className={selectedAll ? 'selected' : ''}>\n                      {'All'}\n                    </li>\n                  )}\n                  {specializations.map(({ _id, name }: { _id: string, name: string }) => {\n                    return (\n                      <li\n                        key={_id}\n                        className={specialization.includes(_id) && !selectedAll ? 'selected' : undefined}\n                        onClick={() => {\n                          handleChange(_id, 'specialization');\n                          if (selectedAll) {\n                            setSelectedAll(false);\n                          }\n                        }}\n                      >\n                        {name}\n                      </li>\n                    )\n                  })}\n                </ul>\n                <span className=\"error_msg\">\n                  {!selectedAll ? errors.specialization : ''}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"form_field\">\n            <button\n              className={`fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`}\n              onClick={() => {\n\n                if (selectedAll) {\n                  // setJobTypeDetails((prev: any) => ({ ...prev, 'specialization': specializations.map((item: any) => item._id) }))\n                  updateDetails(specializations.map((item: any) => item._id), 'specialization');\n                }\n\n                handleContinue();\n              }}>Continue</button>\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\nexport default JobType\n"]},"metadata":{},"sourceType":"module"}