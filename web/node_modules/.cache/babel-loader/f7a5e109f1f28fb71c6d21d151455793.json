{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{Component}from'react';import menu from'../../assets/images/menu-line-blue.png';import close from'../../assets/images/ic-cancel-blue.png';import ActiveJobsComponent from'./components/activeJobs';import OpenJobsComponent from'./components/openJobs';import PastJobsComponent from'./components/pastJobs';import NewApplicantComponent from'./components/newApplicants';import NeedApproval from'./components/needApproval';import ApplicantsList from'./components/applicantsList';//@ts-ignore\nimport InfiniteScroll from\"react-infinite-scroll-component\";import ViewQuote from'./components/quoteJobs/viewQuote';import ListQuotes from'./components/quoteJobs/ListQuotes';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var JobDashboard=/*#__PURE__*/function(_Component){_inherits(JobDashboard,_Component);var _super=_createSuper(JobDashboard);function JobDashboard(props){var _this;_classCallCheck(this,JobDashboard);_this=_super.call(this,props);_this.checkAndUpdateCount=function(_ref){var _this$state;var needApprovalCount=_ref.needApprovalCount,newApplicantsCount=_ref.newApplicantsCount;var _this$state$count=(_this$state=_this.state)===null||_this$state===void 0?void 0:_this$state.count,approveCount=_this$state$count.approveCount,applicantCount=_this$state$count.applicantCount;if(needApprovalCount!==approveCount||newApplicantsCount!==applicantCount){_this.setState({count:{approveCount:needApprovalCount,applicantCount:newApplicantsCount}});}};_this.toggleSidebar=function(){return _this.setState({isToggleSidebar:!_this.state.isToggleSidebar});};_this.setSelected=function(jobtype,jobid,sortby,specializationId){var currentPage=_this.state.currentPage;var item_position=localStorage.getItem('position');var locationLocal=JSON.parse(item_position);var dataItemsAddons={page:currentPage,jobId:jobid,sortBy:sortby};if(sortby===2){dataItemsAddons['location']={\"type\":\"Point\",\"coordinates\":[locationLocal[1],locationLocal[0]]};}if(['active','past','open','applicant','approval'].includes(jobtype)){_this.setState({activeType:jobtype,currentPage:1,hasLoad:true,activeJobs:[],pastJobs:[],openJobs:[],applicantJobs:[],approvalJobs:[],applicantsListJobs:[],actualLoad:false,selectedItem:{jobtype:jobtype,jobid:jobid,sortby:sortby,specializationId:specializationId}},function(){_this.props.getClearJobs();_this.props.history.push(\"/jobs?active=\".concat(jobtype));window.scrollTo(0,0);_this.setAfterItems({jobtype:jobtype,currentPage:_this.state.currentPage,dataItemsAddons:dataItemsAddons});});}else{_this.setState({selectedItem:{jobtype:jobtype,jobid:jobid,sortby:sortby,specializationId:specializationId},applicantsListJobs:[]},function(){_this.props.getClearJobs();_this.setAfterItems({jobtype:jobtype,currentPage:_this.state.currentPage,dataItemsAddons:dataItemsAddons});});}};_this.setAfterItems=function(_ref2){var jobtype=_ref2.jobtype,currentPage=_ref2.currentPage,dataItemsAddons=_ref2.dataItemsAddons;var _this$props=_this.props,getActiveJobsBuilder=_this$props.getActiveJobsBuilder,getPastJobsBuilder=_this$props.getPastJobsBuilder,getOpenJobsBuilder=_this$props.getOpenJobsBuilder,getNewApplicantsBuilder=_this$props.getNewApplicantsBuilder,getnewJobApplicationListBuilder=_this$props.getnewJobApplicationListBuilder,getNewApprovalList=_this$props.getNewApprovalList;if(jobtype==='active'){getActiveJobsBuilder(currentPage);}if(jobtype==='past'){getPastJobsBuilder(currentPage);}if(jobtype==='open'){getOpenJobsBuilder(currentPage);}if(jobtype==='applicant'){getNewApplicantsBuilder(currentPage);}if(jobtype==='approval'){getNewApprovalList(currentPage);}if(jobtype==='applicantList'){getnewJobApplicationListBuilder(dataItemsAddons);}};_this.setToggleActiveToFalse=function(){_this.setState({toggleClearActiveChecks:false});};_this.state={currentPage:1,isToggleSidebar:false,activeType:'active',selectedItem:{jobtype:'active',jobid:null,sortby:1,specializationId:''},count:{applicantCount:0,approveCount:0},activeJobs:[],pastJobs:[],openJobs:[],applicantJobs:[],approvalJobs:[],applicantsListJobs:[],enableEditMilestone:false,enableLodgeDispute:false,enableCancelJob:false,enableMakMilestone:false,globalJobId:'',hasLoad:true,actualLoad:false,toggleClearActiveChecks:false};return _this;}_createClass(JobDashboard,[{key:\"componentDidMount\",value:function componentDidMount(){var _nextProps$location,_this2=this;var _this$state2=this.state,activeType=_this$state2.activeType,jobtype=_this$state2.selectedItem.jobtype,currentPage=_this$state2.currentPage,hasLoad=_this$state2.hasLoad;var nextProps=this.props;if(nextProps===null||nextProps===void 0?void 0:(_nextProps$location=nextProps.location)===null||_nextProps$location===void 0?void 0:_nextProps$location.search){var _nextProps$location2;var urlParams=new URLSearchParams(nextProps===null||nextProps===void 0?void 0:(_nextProps$location2=nextProps.location)===null||_nextProps$location2===void 0?void 0:_nextProps$location2.search);var activeType_=urlParams.get('active');var ListQuote=urlParams.get('quotes');var viewQuotes=urlParams.get('viewQuotes');var activeTypeByUrl=activeType_;if(ListQuote===\"true\"){activeTypeByUrl='listQuote';}if(viewQuotes===\"true\"){activeTypeByUrl='quotes';}if(activeTypeByUrl){if(activeTypeByUrl!==activeType){this.setState({activeType:activeTypeByUrl,selectedItem:{jobtype:activeTypeByUrl,jobid:null,sortby:1,specializationId:''}},function(){_this2.setAfterItems({jobtype:activeTypeByUrl,currentPage:1,dataItemsAddons:{page:1,jobId:null,sortBy:1}});});}else{this.props.getActiveJobsBuilder(1);}}}else{this.props.getActiveJobsBuilder(1);}}},{key:\"componentDidUpdate\",value:// milestone dates should be lie betwwn job details\nfunction componentDidUpdate(prevProps){var _nextProps$location3,_activeJobs$active,_this$state4,_activeJobs$active2,_this$state5,_this$state6,_this$state6$activeJo,_this$state7,_this$state7$activeJo,_openJobs$open,_this$state13,_this$state14,_this$state14$openJob,_pastJobs$past,_this$state19,_this$state20,_this$state20$pastJob,_this$state25,_this$state26,_this$state26$applica,_this$state31,_this$state32,_this$state32$approva;var nextProps=this.props;var activeJobs=nextProps.activeJobs,pastJobs=nextProps.pastJobs,openJobs=nextProps.openJobs,applicantsListJobs=nextProps.applicantsListJobs,applicantJobs=nextProps.applicantJobs,approvalJobs=nextProps.approvalJobs;var _this$state3=this.state,activeType=_this$state3.activeType,jobtype=_this$state3.selectedItem.jobtype,currentPage=_this$state3.currentPage,hasLoad=_this$state3.hasLoad;var state_=this.state;var urlParams=new URLSearchParams(nextProps===null||nextProps===void 0?void 0:(_nextProps$location3=nextProps.location)===null||_nextProps$location3===void 0?void 0:_nextProps$location3.search);var activeType_=urlParams.get('active');var jobId_=urlParams.get('jobId');var editMilestone_=urlParams.get('editMilestone');var lodgeDispute_=urlParams.get('lodgeDispute');var cancelJob_=urlParams.get('cancelJob');var markMilestone_=urlParams.get('markMilestone');var stateActive=this.state.activeJobs;console.log({activeJobs:activeJobs,pastJobs:pastJobs,openJobs:openJobs,applicantsListJobs:applicantsListJobs,applicantJobs:applicantJobs,approvalJobs:approvalJobs,1:jobtype==='active',2:!(activeJobs===null||activeJobs===void 0?void 0:(_activeJobs$active=activeJobs.active)===null||_activeJobs$active===void 0?void 0:_activeJobs$active.length)?true:JSON.stringify(activeJobs===null||activeJobs===void 0?void 0:activeJobs.active)!==JSON.stringify((_this$state4=this.state)===null||_this$state4===void 0?void 0:_this$state4.activeJobs),3:(stateActive===null||stateActive===void 0?void 0:stateActive.length)<currentPage*10,stateActive:stateActive,currentPage:currentPage});if(jobtype==='active'&&!(activeJobs===null||activeJobs===void 0?void 0:(_activeJobs$active2=activeJobs.active)===null||_activeJobs$active2===void 0?void 0:_activeJobs$active2.length)?true:JSON.stringify(activeJobs===null||activeJobs===void 0?void 0:activeJobs.active)!==JSON.stringify((_this$state5=this.state)===null||_this$state5===void 0?void 0:_this$state5.activeJobs)&&(((_this$state6=this.state)===null||_this$state6===void 0?void 0:(_this$state6$activeJo=_this$state6.activeJobs)===null||_this$state6$activeJo===void 0?void 0:_this$state6$activeJo.length)<currentPage*10||((_this$state7=this.state)===null||_this$state7===void 0?void 0:(_this$state7$activeJo=_this$state7.activeJobs)===null||_this$state7$activeJo===void 0?void 0:_this$state7$activeJo.length)===currentPage*10)){if(activeJobs===null||activeJobs===void 0?void 0:activeJobs.active){var _this$state8,_this$state9,_this$state9$activeJo,_this$state11,_this$state11$activeJ;var active=activeJobs.active,needApprovalCount=activeJobs.needApprovalCount,newApplicantsCount=activeJobs.newApplicantsCount;var page_get=0;var prevValues=[];if(Array.isArray(active)&&(active===null||active===void 0?void 0:active.length)){var _active$;page_get=(_active$=active[0])===null||_active$===void 0?void 0:_active$.page;}if(Array.isArray((_this$state8=this.state)===null||_this$state8===void 0?void 0:_this$state8.activeJobs)&&((_this$state9=this.state)===null||_this$state9===void 0?void 0:(_this$state9$activeJo=_this$state9.activeJobs)===null||_this$state9$activeJo===void 0?void 0:_this$state9$activeJo.length)){var _this$state10;prevValues=(_this$state10=this.state)===null||_this$state10===void 0?void 0:_this$state10.activeJobs;};if(hasLoad&&!(active===null||active===void 0?void 0:active.length)&&page_get===0&&((_this$state11=this.state)===null||_this$state11===void 0?void 0:(_this$state11$activeJ=_this$state11.activeJobs)===null||_this$state11$activeJ===void 0?void 0:_this$state11$activeJ.length)!==0){if(this.state.hasLoad!==false){this.setState({hasLoad:false});}}else if(hasLoad&&(active===null||active===void 0?void 0:active.length)&&page_get===currentPage){var _this$state12,_this$state$activeJob,_result;var result=[];if(JSON.stringify(prevValues)===JSON.stringify(active)&&page_get===currentPage){// same data items here!\n}else{var _firstItem;var concatedItems=prevValues;var firstItem=null;if(Array.isArray(active)&&(active===null||active===void 0?void 0:active.length)){firstItem=active[0];}if((_firstItem=firstItem)===null||_firstItem===void 0?void 0:_firstItem.jobId){var ifMatch=prevValues.find(function(item){var _firstItem2;return item.jobId===((_firstItem2=firstItem)===null||_firstItem2===void 0?void 0:_firstItem2.jobId);});if(!ifMatch){concatedItems=[].concat(_toConsumableArray(prevValues),_toConsumableArray(active));}}result=page_get>0&&page_get===currentPage?page_get==1&&currentPage==1?active:concatedItems:active;}var globalJobId=jobId_&&(jobId_===null||jobId_===void 0?void 0:jobId_.length)?jobId_:'';var enableEditMilestone=editMilestone_===\"true\"?true:false;var enableLodgeDispute=lodgeDispute_===\"true\"?true:false;var enableCancelJob=cancelJob_===\"true\"?true:false;var enableMakMilestone=markMilestone_===\"true\"?true:false;var _this$state$count2=(_this$state12=this.state)===null||_this$state12===void 0?void 0:_this$state12.count,approveCount=_this$state$count2.approveCount,applicantCount=_this$state$count2.applicantCount;var randomState=this.state.activeJobs&&Array.isArray(this.state.activeJobs)&&this.state.activeJobs[0]&&this.state.activeJobs[0].mathrandom?this.state.activeJobs[0].mathrandom:'';var randomResult=result&&Array.isArray(result)&&result[0]&&result[0].mathrandom?result[0].mathrandom:'';if(needApprovalCount!==approveCount||newApplicantsCount!==applicantCount||this.state.globalJobId!==globalJobId||this.state.enableEditMilestone!==enableEditMilestone||this.state.enableLodgeDispute!==enableLodgeDispute||this.state.enableCancelJob!==enableCancelJob||this.state.enableCancelJob!==enableCancelJob||this.state.enableMakMilestone!==enableMakMilestone||((_this$state$activeJob=this.state.activeJobs)===null||_this$state$activeJob===void 0?void 0:_this$state$activeJob.length)!==((_result=result)===null||_result===void 0?void 0:_result.length)||randomState!==randomResult){this.setState({globalJobId:jobId_&&(jobId_===null||jobId_===void 0?void 0:jobId_.length)?jobId_:'',enableEditMilestone:editMilestone_===\"true\"?true:false,enableLodgeDispute:lodgeDispute_===\"true\"?true:false,enableCancelJob:cancelJob_===\"true\"?true:false,enableMakMilestone:markMilestone_===\"true\"?true:false,activeJobs:result,count:{approveCount:needApprovalCount,applicantCount:newApplicantsCount},actualLoad:true});}}else{this.checkAndUpdateCount({needApprovalCount:needApprovalCount,newApplicantsCount:newApplicantsCount});}}}if(jobtype==='open'&&!(openJobs===null||openJobs===void 0?void 0:(_openJobs$open=openJobs.open)===null||_openJobs$open===void 0?void 0:_openJobs$open.length)?true:JSON.stringify(openJobs===null||openJobs===void 0?void 0:openJobs.open)!==JSON.stringify((_this$state13=this.state)===null||_this$state13===void 0?void 0:_this$state13.openJobs)&&((_this$state14=this.state)===null||_this$state14===void 0?void 0:(_this$state14$openJob=_this$state14.openJobs)===null||_this$state14$openJob===void 0?void 0:_this$state14$openJob.length)<currentPage*10){if(openJobs===null||openJobs===void 0?void 0:openJobs.open){var _this$state15,_this$state16,_this$state16$openJob,_this$state18,_this$state18$openJob;var open=openJobs.open,_needApprovalCount=openJobs.needApprovalCount,_newApplicantsCount=openJobs.newApplicantsCount;var _page_get=0;var _prevValues=[];if(Array.isArray(open)&&(open===null||open===void 0?void 0:open.length)){var _open$;_page_get=(_open$=open[0])===null||_open$===void 0?void 0:_open$.page;}if(Array.isArray((_this$state15=this.state)===null||_this$state15===void 0?void 0:_this$state15.openJobs)&&((_this$state16=this.state)===null||_this$state16===void 0?void 0:(_this$state16$openJob=_this$state16.openJobs)===null||_this$state16$openJob===void 0?void 0:_this$state16$openJob.length)){var _this$state17;_prevValues=(_this$state17=this.state)===null||_this$state17===void 0?void 0:_this$state17.openJobs;};if(hasLoad&&!(open===null||open===void 0?void 0:open.length)&&_page_get===0&&((_this$state18=this.state)===null||_this$state18===void 0?void 0:(_this$state18$openJob=_this$state18.openJobs)===null||_this$state18$openJob===void 0?void 0:_this$state18$openJob.length)!==0){if(this.state.hasLoad!==false){this.setState({hasLoad:false});}}else if(hasLoad&&(open===null||open===void 0?void 0:open.length)&&_page_get===currentPage){var _this$state$openJobs,_result3;var _result2=[];if(JSON.stringify(_prevValues)===JSON.stringify(open)&&_page_get===currentPage){// same data items here!\nalert('Ok!');}else{var _firstItem4;var _concatedItems=_prevValues;var _firstItem3=null;if(Array.isArray(open)&&(open===null||open===void 0?void 0:open.length)){_firstItem3=open[0];}if((_firstItem4=_firstItem3)===null||_firstItem4===void 0?void 0:_firstItem4.jobId){var _ifMatch=_prevValues.find(function(item){var _firstItem5;return item.jobId===((_firstItem5=_firstItem3)===null||_firstItem5===void 0?void 0:_firstItem5.jobId);});if(!_ifMatch){_concatedItems=[].concat(_toConsumableArray(_prevValues),_toConsumableArray(open));}}_result2=_page_get>0&&_page_get===currentPage?_page_get==1&&currentPage==1?open:_concatedItems:open;}var _randomState=this.state.openJobs&&Array.isArray(this.state.openJobs)&&this.state.openJobs[0]&&this.state.openJobs[0].mathrandom?this.state.openJobs[0].mathrandom:'';var _randomResult=_result2&&Array.isArray(_result2)&&_result2[0]&&_result2[0].mathrandom?_result2[0].mathrandom:'';if(this.state.count.approveCount!==_needApprovalCount||this.state.count.applicantCount!==_newApplicantsCount||((_this$state$openJobs=this.state.openJobs)===null||_this$state$openJobs===void 0?void 0:_this$state$openJobs.length)!==((_result3=_result2)===null||_result3===void 0?void 0:_result3.length)||_randomState!==_randomResult){this.setState({openJobs:_result2,count:{approveCount:_needApprovalCount,applicantCount:_newApplicantsCount},actualLoad:true});}}else{this.checkAndUpdateCount({needApprovalCount:_needApprovalCount,newApplicantsCount:_newApplicantsCount});}}}if(jobtype==='past'&&!(pastJobs===null||pastJobs===void 0?void 0:(_pastJobs$past=pastJobs.past)===null||_pastJobs$past===void 0?void 0:_pastJobs$past.length)?true:JSON.stringify(pastJobs===null||pastJobs===void 0?void 0:pastJobs.past)!==JSON.stringify((_this$state19=this.state)===null||_this$state19===void 0?void 0:_this$state19.pastJobs)&&((_this$state20=this.state)===null||_this$state20===void 0?void 0:(_this$state20$pastJob=_this$state20.pastJobs)===null||_this$state20$pastJob===void 0?void 0:_this$state20$pastJob.length)<currentPage*10){if(pastJobs===null||pastJobs===void 0?void 0:pastJobs.past){var _this$state21,_this$state22,_this$state22$pastJob,_this$state24,_this$state24$pastJob;var past=pastJobs.past,_needApprovalCount2=pastJobs.needApprovalCount,_newApplicantsCount2=pastJobs.newApplicantsCount;var _page_get2=0;var _prevValues2=[];if(Array.isArray(past)&&(past===null||past===void 0?void 0:past.length)){var _past$;_page_get2=(_past$=past[0])===null||_past$===void 0?void 0:_past$.page;}if(Array.isArray((_this$state21=this.state)===null||_this$state21===void 0?void 0:_this$state21.pastJobs)&&((_this$state22=this.state)===null||_this$state22===void 0?void 0:(_this$state22$pastJob=_this$state22.pastJobs)===null||_this$state22$pastJob===void 0?void 0:_this$state22$pastJob.length)){var _this$state23;_prevValues2=(_this$state23=this.state)===null||_this$state23===void 0?void 0:_this$state23.pastJobs;};if(hasLoad&&!(past===null||past===void 0?void 0:past.length)&&_page_get2===0&&((_this$state24=this.state)===null||_this$state24===void 0?void 0:(_this$state24$pastJob=_this$state24.pastJobs)===null||_this$state24$pastJob===void 0?void 0:_this$state24$pastJob.length)!==0){if(this.state.hasLoad!==false){this.setState({hasLoad:false});}}else if(hasLoad&&(past===null||past===void 0?void 0:past.length)&&_page_get2===currentPage){var _firstItem7,_this$state$pastJobs,_result5;var _result4=[];var _concatedItems2=_prevValues2;var _firstItem6=null;if(Array.isArray(past)&&(past===null||past===void 0?void 0:past.length)){_firstItem6=past[0];}if((_firstItem7=_firstItem6)===null||_firstItem7===void 0?void 0:_firstItem7.jobId){var _ifMatch2=_prevValues2.find(function(item){var _firstItem8;return item.jobId===((_firstItem8=_firstItem6)===null||_firstItem8===void 0?void 0:_firstItem8.jobId);});if(!_ifMatch2){_concatedItems2=[].concat(_toConsumableArray(_prevValues2),_toConsumableArray(past));}}_result4=_page_get2>0&&_page_get2===currentPage?_page_get2==1&&currentPage==1?past:_concatedItems2:past;var _randomState2=this.state.pastJobs&&Array.isArray(this.state.pastJobs)&&this.state.pastJobs[0]&&this.state.pastJobs[0].mathrandom?this.state.pastJobs[0].mathrandom:'';var _randomResult2=_result4&&Array.isArray(_result4)&&_result4[0]&&_result4[0].mathrandom?_result4[0].mathrandom:'';if(this.state.count.approveCount!==_needApprovalCount2||this.state.count.applicantCount!==_newApplicantsCount2||((_this$state$pastJobs=this.state.pastJobs)===null||_this$state$pastJobs===void 0?void 0:_this$state$pastJobs.length)!==((_result5=_result4)===null||_result5===void 0?void 0:_result5.length)||_randomState2!==_randomResult2){this.setState({pastJobs:_result4,count:{approveCount:_needApprovalCount2,applicantCount:_newApplicantsCount2},actualLoad:true});}}else{this.checkAndUpdateCount({needApprovalCount:_needApprovalCount2,newApplicantsCount:_newApplicantsCount2});}}}if(jobtype==='applicantList'&&JSON.stringify(applicantsListJobs)!==JSON.stringify(this.state.applicantsListJobs)){this.setState({applicantsListJobs:applicantsListJobs});}if(jobtype==='applicant'&&JSON.stringify(applicantJobs)!==JSON.stringify((_this$state25=this.state)===null||_this$state25===void 0?void 0:_this$state25.applicantJobs)&&((_this$state26=this.state)===null||_this$state26===void 0?void 0:(_this$state26$applica=_this$state26.applicantJobs)===null||_this$state26$applica===void 0?void 0:_this$state26$applica.length)<currentPage*10){var _this$state27,_this$state28,_this$state28$applica,_this$state30,_this$state30$applica;var _page_get3=0;var _prevValues3=[];if(Array.isArray(applicantJobs)&&(applicantJobs===null||applicantJobs===void 0?void 0:applicantJobs.length)){var _applicantJobs$;_page_get3=(_applicantJobs$=applicantJobs[0])===null||_applicantJobs$===void 0?void 0:_applicantJobs$.page;}if(Array.isArray((_this$state27=this.state)===null||_this$state27===void 0?void 0:_this$state27.applicantJobs)&&((_this$state28=this.state)===null||_this$state28===void 0?void 0:(_this$state28$applica=_this$state28.applicantJobs)===null||_this$state28$applica===void 0?void 0:_this$state28$applica.length)){var _this$state29;_prevValues3=(_this$state29=this.state)===null||_this$state29===void 0?void 0:_this$state29.applicantJobs;};if(hasLoad&&!(applicantJobs===null||applicantJobs===void 0?void 0:applicantJobs.length)&&_page_get3===0&&((_this$state30=this.state)===null||_this$state30===void 0?void 0:(_this$state30$applica=_this$state30.applicantJobs)===null||_this$state30$applica===void 0?void 0:_this$state30$applica.length)!==0){if(this.state.hasLoad!==false){this.setState({hasLoad:false});}}else{if(hasLoad&&(applicantJobs===null||applicantJobs===void 0?void 0:applicantJobs.length)&&_page_get3===currentPage){this.setState({applicantJobs:_page_get3>0&&_page_get3===currentPage?[].concat(_toConsumableArray(_prevValues3),_toConsumableArray(applicantJobs)):applicantJobs,actualLoad:true});}}}if(jobtype==='approval'&&JSON.stringify(approvalJobs)!==JSON.stringify((_this$state31=this.state)===null||_this$state31===void 0?void 0:_this$state31.approvalJobs)&&((_this$state32=this.state)===null||_this$state32===void 0?void 0:(_this$state32$approva=_this$state32.approvalJobs)===null||_this$state32$approva===void 0?void 0:_this$state32$approva.length)<currentPage*10){var _this$state33,_this$state34,_this$state34$approva,_this$state36,_this$state36$approva;var _page_get4=0;var _prevValues4=[];if(Array.isArray(approvalJobs)&&(approvalJobs===null||approvalJobs===void 0?void 0:approvalJobs.length)){var _approvalJobs$;_page_get4=(_approvalJobs$=approvalJobs[0])===null||_approvalJobs$===void 0?void 0:_approvalJobs$.page;}if(Array.isArray((_this$state33=this.state)===null||_this$state33===void 0?void 0:_this$state33.approvalJobs)&&((_this$state34=this.state)===null||_this$state34===void 0?void 0:(_this$state34$approva=_this$state34.approvalJobs)===null||_this$state34$approva===void 0?void 0:_this$state34$approva.length)){var _this$state35;_prevValues4=(_this$state35=this.state)===null||_this$state35===void 0?void 0:_this$state35.approvalJobs;};if(hasLoad&&!(approvalJobs===null||approvalJobs===void 0?void 0:approvalJobs.length)&&_page_get4===0&&((_this$state36=this.state)===null||_this$state36===void 0?void 0:(_this$state36$approva=_this$state36.approvalJobs)===null||_this$state36$approva===void 0?void 0:_this$state36$approva.length)!==0){if(this.state.hasLoad!==false){this.setState({hasLoad:false});}}else{if(hasLoad&&(approvalJobs===null||approvalJobs===void 0?void 0:approvalJobs.length)&&_page_get4===currentPage){this.setState({approvalJobs:_page_get4>0&&_page_get4===currentPage?[].concat(_toConsumableArray(_prevValues4),_toConsumableArray(approvalJobs)):approvalJobs,actualLoad:true});}}}}},{key:\"render\",value:function render(){var _this3=this;var _this$state37=this.state,actualLoad=_this$state37.actualLoad,hasLoad=_this$state37.hasLoad,currentPage=_this$state37.currentPage,enableEditMilestone=_this$state37.enableEditMilestone,enableLodgeDispute=_this$state37.enableLodgeDispute,enableCancelJob=_this$state37.enableCancelJob,enableMakMilestone=_this$state37.enableMakMilestone,globalJobId=_this$state37.globalJobId,isToggleSidebar=_this$state37.isToggleSidebar,activeType=_this$state37.activeType,_this$state37$selecte=_this$state37.selectedItem,jobtype=_this$state37$selecte.jobtype,jobid=_this$state37$selecte.jobid,specializationId=_this$state37$selecte.specializationId,_this$state37$count=_this$state37.count,applicantCount=_this$state37$count.applicantCount,approveCount=_this$state37$count.approveCount,activeJobs=_this$state37.activeJobs,pastJobs=_this$state37.pastJobs,openJobs=_this$state37.openJobs,applicantJobs=_this$state37.applicantJobs,applicantsListJobs=_this$state37.applicantsListJobs,approvalJobs=_this$state37.approvalJobs;var toggleSidebar=this.toggleSidebar,setSelected=this.setSelected;var props=this.props;var isLoading=props.isLoading;var totalCount=0;if(jobtype==='active'){totalCount=activeJobs===null||activeJobs===void 0?void 0:activeJobs.length;}if(jobtype==='past'){totalCount=pastJobs===null||pastJobs===void 0?void 0:pastJobs.length;}if(jobtype==='open'){totalCount=openJobs===null||openJobs===void 0?void 0:openJobs.length;}if(jobtype==='applicant'){totalCount=applicantJobs===null||applicantJobs===void 0?void 0:applicantJobs.length;}if(jobtype==='approval'){totalCount=approvalJobs===null||approvalJobs===void 0?void 0:approvalJobs.length;}if(jobtype==='applicantList'){totalCount=applicantsListJobs===null||applicantsListJobs===void 0?void 0:applicantsListJobs.length;}return/*#__PURE__*/_jsx(\"div\",{className:\"app_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mob_side_nav\",onClick:function onClick(){toggleSidebar();},children:/*#__PURE__*/_jsx(\"img\",{src:menu,alt:\"mob-side-nav\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"f_row h-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"side_nav_col\".concat(isToggleSidebar?\" active\":\"\"),children:[/*#__PURE__*/_jsx(\"button\",{className:\"close_nav\",onClick:function onClick(){toggleSidebar();},children:/*#__PURE__*/_jsx(\"img\",{src:close,alt:\"close\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stick\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Job Dashboard\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"dashboard_menu\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"icon star \".concat(activeType===\"active\"?\"active\":\"\"),children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){console.log(\"Here!!!!\");// setResetItem(true);\nsetSelected(\"active\");_this3.setState({toggleClearActiveChecks:true});},className:\"menu_txt\",children:\"Active\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"icon open \".concat(activeType===\"open\"?\"active\":\"\"),children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){setSelected(\"open\");},className:\"menu_txt\",children:\"Open\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"icon past \".concat(activeType===\"past\"?\"active\":\"\"),children:/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){setSelected(\"past\");},className:\"menu_txt\",children:\"Past\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"icon applicants \".concat(activeType===\"applicant\"?\"active\":\"\"),children:/*#__PURE__*/_jsxs(\"span\",{onClick:function onClick(){setSelected(\"applicant\");},className:\"menu_txt\",children:[\"New applicants\",!!applicantCount&&/*#__PURE__*/_jsx(\"span\",{className:\"badge_count\",children:applicantCount>9?\"9+\":applicantCount})]})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"icon approved \".concat(activeType===\"approval\"?\"active\":\"\"),children:/*#__PURE__*/_jsxs(\"span\",{onClick:function onClick(){setSelected(\"approval\");},className:\"menu_txt\",children:[\"Need approval\",!!approveCount&&/*#__PURE__*/_jsx(\"span\",{className:\"badge_count\",children:approveCount>9?\"9+\":approveCount})]})})})]})]})]}),/*#__PURE__*/_jsxs(InfiniteScroll,{dataLength:totalCount,next:function next(){if(totalCount==_this3.state.currentPage*10){_this3.setState({currentPage:_this3.state.currentPage+1},function(){var cp=_this3.state.currentPage;if(jobtype===\"active\"){_this3.props.getActiveJobsBuilder(cp);}if(jobtype===\"past\"){_this3.props.getPastJobsBuilder(cp);}if(jobtype===\"open\"){_this3.props.getOpenJobsBuilder(cp);}if(jobtype===\"applicant\"){_this3.props.getNewApplicantsBuilder(cp);}if(jobtype===\"approval\"){_this3.props.getNewApprovalList(cp);}});}else{// this.setState({ hasLoad: false })\n}},hasMore:hasLoad,loader:/*#__PURE__*/_jsx(_Fragment,{}),style:{overflowX:\"hidden\"},className:\"detail_col element-side-scroll hide_scroll\",children:[jobtype===\"past\"&&/*#__PURE__*/_jsx(PastJobsComponent,{isLoading:isLoading,dataItems:pastJobs,jobType:jobtype,activeType:activeType,history:props.history,getPastJobsBuilder:props===null||props===void 0?void 0:props.getPastJobsBuilder}),jobtype===\"active\"&&/*#__PURE__*/_jsx(ActiveJobsComponent,{isLoading:isLoading,dataItems:activeJobs,jobType:jobtype,activeType:activeType,setJobLabel:setSelected,setToggleActiveToFalse:this.setToggleActiveToFalse,recallHeaderNotification:this.props.recallHeaderNotification,toggleClearActiveChecks:this.state.toggleClearActiveChecks,history:props.history,globalJobId:globalJobId,enableEditMilestone:enableEditMilestone,enableLodgeDispute:enableLodgeDispute,enableCancelJob:enableCancelJob,enableMakMilestone:enableMakMilestone}),jobtype===\"open\"&&/*#__PURE__*/_jsx(OpenJobsComponent,{isLoading:isLoading,dataItems:openJobs,jobType:jobtype,setJobLabel:setSelected,activeType:activeType,history:props.history}),jobtype===\"applicant\"&&/*#__PURE__*/_jsx(NewApplicantComponent,{isLoading:isLoading,dataItems:applicantJobs,jobType:jobtype,setJobLabel:setSelected,history:props.history}),jobtype===\"approval\"&&/*#__PURE__*/_jsx(NeedApproval,{isLoading:isLoading,dataItems:approvalJobs,jobType:jobtype,setJobLabel:setSelected,activeType:activeType,history:props.history}),jobtype===\"applicantList\"&&/*#__PURE__*/_jsx(ApplicantsList,{isLoading:isLoading,items:applicantsListJobs,jobid:jobid,specializationId:specializationId,setJobLabel:setSelected,activeType:activeType,history:props.history}),jobtype===\"listQuote\"&&/*#__PURE__*/_jsx(ListQuotes,_objectSpread(_objectSpread({},props),{},{setJobLabel:setSelected})),jobtype===\"quotes\"&&/*#__PURE__*/_jsx(ViewQuote,_objectSpread(_objectSpread({},props),{},{setJobLabel:setSelected}))]})]})]})});}}]);return JobDashboard;}(Component);export default JobDashboard;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/jobDashboard.tsx"],"names":["Component","menu","close","ActiveJobsComponent","OpenJobsComponent","PastJobsComponent","NewApplicantComponent","NeedApproval","ApplicantsList","InfiniteScroll","ViewQuote","ListQuotes","JobDashboard","props","checkAndUpdateCount","needApprovalCount","newApplicantsCount","state","count","approveCount","applicantCount","setState","toggleSidebar","isToggleSidebar","setSelected","jobtype","jobid","sortby","specializationId","currentPage","item_position","localStorage","getItem","locationLocal","JSON","parse","dataItemsAddons","page","jobId","sortBy","includes","activeType","hasLoad","activeJobs","pastJobs","openJobs","applicantJobs","approvalJobs","applicantsListJobs","actualLoad","selectedItem","getClearJobs","history","push","window","scrollTo","setAfterItems","getActiveJobsBuilder","getPastJobsBuilder","getOpenJobsBuilder","getNewApplicantsBuilder","getnewJobApplicationListBuilder","getNewApprovalList","setToggleActiveToFalse","toggleClearActiveChecks","enableEditMilestone","enableLodgeDispute","enableCancelJob","enableMakMilestone","globalJobId","nextProps","location","search","urlParams","URLSearchParams","activeType_","get","ListQuote","viewQuotes","activeTypeByUrl","prevProps","state_","jobId_","editMilestone_","lodgeDispute_","cancelJob_","markMilestone_","stateActive","console","log","active","length","stringify","page_get","prevValues","Array","isArray","result","concatedItems","firstItem","ifMatch","find","item","randomState","mathrandom","randomResult","open","alert","past","isLoading","totalCount","cp","overflowX","recallHeaderNotification"],"mappings":"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","sourcesContent":["import { Component } from 'react'\nimport menu from '../../assets/images/menu-line-blue.png';\nimport close from '../../assets/images/ic-cancel-blue.png';\n\nimport ActiveJobsComponent from './components/activeJobs';\nimport OpenJobsComponent from './components/openJobs';\nimport PastJobsComponent from './components/pastJobs';\nimport NewApplicantComponent from './components/newApplicants';\nimport NeedApproval from './components/needApproval';\nimport ApplicantsList from './components/applicantsList';\n//@ts-ignore\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n\nimport ViewQuote from './components/quoteJobs/viewQuote';\nimport ListQuotes from './components/quoteJobs/ListQuotes';\n\ninterface Props {\n    getActiveJobsBuilder: (page: number) => void,\n    getPastJobsBuilder: (page: number) => void,\n    getNewApplicantsBuilder: (page: number) => void,\n    getOpenJobsBuilder: (page: number) => void,\n    getnewJobApplicationListBuilder: (item: any) => void,\n    getNewApprovalList: (page: number) => void,\n    recallHeaderNotification: (data: boolean) => void,\n    getClearJobs: () => void,\n    activeJobs: any,\n    pastJobs: any,\n    openJobs: any\n    applicantJobs: any,\n    approvalJobs: any,\n    applicantsListJobs: any,\n    history: any,\n    isLoading: any\n}\ninterface State {\n    isToggleSidebar: any,\n    selectedItem: any,\n    count: any,\n    currentPage: any,\n    activeType: any,\n    activeJobs: any,\n    pastJobs: any,\n    openJobs: any\n    applicantJobs: any,\n    approvalJobs: any,\n    applicantsListJobs: any,\n    enableEditMilestone: any,\n    enableLodgeDispute: any,\n    enableCancelJob: any,\n    enableMakMilestone: any,\n    globalJobId: string,\n    hasLoad: boolean,\n    actualLoad: boolean,\n    toggleClearActiveChecks: boolean\n}\nclass JobDashboard extends Component<Props, State> {\n    constructor(props: any) {\n        super(props)\n\n        this.state = {\n            currentPage: 1,\n            isToggleSidebar: false,\n            activeType: 'active',\n            selectedItem: { jobtype: 'active', jobid: null, sortby: 1, specializationId: '' },\n            count: { applicantCount: 0, approveCount: 0 },\n            activeJobs: [],\n            pastJobs: [],\n            openJobs: [],\n            applicantJobs: [],\n            approvalJobs: [],\n            applicantsListJobs: [],\n            enableEditMilestone: false,\n            enableLodgeDispute: false,\n            enableCancelJob: false,\n            enableMakMilestone: false,\n            globalJobId: '',\n            hasLoad: true,\n            actualLoad: false,\n            toggleClearActiveChecks: false\n        }\n    }\n\n    componentDidMount() {\n        let { activeType, selectedItem: { jobtype }, currentPage, hasLoad } = this.state;\n        let nextProps: any = this.props;\n        if (nextProps?.location?.search) {\n\n            let urlParams = new URLSearchParams(nextProps?.location?.search);\n            let activeType_ = urlParams.get('active');\n            let ListQuote = urlParams.get('quotes');\n            let viewQuotes = urlParams.get('viewQuotes');\n\n            let activeTypeByUrl: any = activeType_;\n            if (ListQuote === \"true\") {\n                activeTypeByUrl = 'listQuote'\n            }\n\n            if (viewQuotes === \"true\") {\n                activeTypeByUrl = 'quotes'\n            }\n\n            if (activeTypeByUrl) {\n                if (activeTypeByUrl !== activeType) {\n                    this.setState({\n                        activeType: activeTypeByUrl,\n                        selectedItem: {\n                            jobtype: activeTypeByUrl,\n                            jobid: null,\n                            sortby: 1,\n                            specializationId: '',\n                        },\n                    }, () => {\n                        this.setAfterItems({\n                            jobtype: activeTypeByUrl,\n                            currentPage: 1,\n                            dataItemsAddons: { page: 1, jobId: null, sortBy: 1 }\n                        })\n                    })\n                } else {\n                    this.props.getActiveJobsBuilder(1);\n                }\n            }\n        } else {\n            this.props.getActiveJobsBuilder(1);\n        }\n    }\n\n\n    checkAndUpdateCount = ({\n        needApprovalCount,\n        newApplicantsCount\n    }: any) => {\n        let { approveCount, applicantCount } = this.state?.count\n        if (needApprovalCount !== approveCount ||\n            newApplicantsCount !== applicantCount) {\n            this.setState({\n                count: {\n                    approveCount: needApprovalCount,\n                    applicantCount: newApplicantsCount\n                },\n            })\n        }\n    }\n\n    // milestone dates should be lie betwwn job details\n    componentDidUpdate(prevProps: any) {\n        let nextProps: any = this.props;\n        let { activeJobs, pastJobs, openJobs, applicantsListJobs, applicantJobs, approvalJobs } = nextProps;\n        let { activeType, selectedItem: { jobtype }, currentPage, hasLoad } = this.state;\n        let state_: any = this.state;\n\n        let urlParams = new URLSearchParams(nextProps?.location?.search);\n        let activeType_ = urlParams.get('active');\n        let jobId_ = urlParams.get('jobId');\n        let editMilestone_ = urlParams.get('editMilestone');\n        let lodgeDispute_ = urlParams.get('lodgeDispute');\n        let cancelJob_ = urlParams.get('cancelJob');\n        let markMilestone_ = urlParams.get('markMilestone');\n\n        let stateActive = this.state.activeJobs;\n\n        console.log({\n            activeJobs, pastJobs, openJobs, applicantsListJobs, applicantJobs, approvalJobs,\n            1: jobtype === 'active',\n            2: !activeJobs?.active?.length ? true : JSON.stringify(activeJobs?.active) !== JSON.stringify(this.state?.activeJobs),\n            3: (stateActive?.length < currentPage * 10),\n            stateActive: stateActive,\n            currentPage\n        })\n\n        if (\n            jobtype === 'active' &&\n                !activeJobs?.active?.length ? true : JSON.stringify(activeJobs?.active) !== JSON.stringify(this.state?.activeJobs) &&\n            (this.state?.activeJobs?.length < currentPage * 10 || this.state?.activeJobs?.length === currentPage * 10)\n        ) {\n            if (activeJobs?.active) {\n\n                let { active, needApprovalCount, newApplicantsCount } = activeJobs;\n                let page_get = 0;\n                let prevValues = [];\n\n                if (Array.isArray(active) && active?.length) {\n                    page_get = active[0]?.page;\n                }\n\n                if (Array.isArray(this.state?.activeJobs) && this.state?.activeJobs?.length) {\n                    prevValues = this.state?.activeJobs;\n                };\n\n                if (hasLoad && !active?.length && page_get === 0 && this.state?.activeJobs?.length !== 0) {\n                    if (this.state.hasLoad !== false) {\n                        this.setState({ hasLoad: false });\n                    }\n                } else if (hasLoad && active?.length && page_get === currentPage) {\n                    let result = [];\n                    if (JSON.stringify(prevValues) === JSON.stringify(active) && page_get === currentPage) {\n                        // same data items here!\n                    } else {\n                        let concatedItems: any = prevValues;\n                        let firstItem: any = null;\n\n                        if (Array.isArray(active) && active?.length) {\n                            firstItem = active[0];\n                        }\n\n                        if (firstItem?.jobId) {\n                            let ifMatch = prevValues.find((item: any) => item.jobId === firstItem?.jobId);\n                            if (!ifMatch) {\n                                concatedItems = [...prevValues, ...active]\n                            }\n                        }\n\n                        result = page_get > 0 && page_get === currentPage ?\n                            page_get == 1 && currentPage == 1 ? active : concatedItems\n                            : active;\n                    }\n\n                    let globalJobId = jobId_ && jobId_?.length ? jobId_ : ''\n                    let enableEditMilestone = editMilestone_ === \"true\" ? true : false;\n                    let enableLodgeDispute = lodgeDispute_ === \"true\" ? true : false;\n                    let enableCancelJob = cancelJob_ === \"true\" ? true : false;\n                    let enableMakMilestone = markMilestone_ === \"true\" ? true : false;\n                    let { approveCount, applicantCount } = this.state?.count;\n\n                    let randomState = this.state.activeJobs && Array.isArray(this.state.activeJobs) && this.state.activeJobs[0] && this.state.activeJobs[0].mathrandom ? this.state.activeJobs[0].mathrandom : ''\n\n                    let randomResult = result && Array.isArray(result) && result[0] && result[0].mathrandom ? result[0].mathrandom : '';\n\n                    if (needApprovalCount !== approveCount ||\n                        newApplicantsCount !== applicantCount ||\n                        this.state.globalJobId !== globalJobId ||\n                        this.state.enableEditMilestone !== enableEditMilestone ||\n                        this.state.enableLodgeDispute !== enableLodgeDispute ||\n                        this.state.enableCancelJob !== enableCancelJob ||\n                        this.state.enableCancelJob !== enableCancelJob ||\n                        this.state.enableMakMilestone !== enableMakMilestone ||\n                        this.state.activeJobs?.length !== result?.length ||\n                        randomState !== randomResult\n                    ) {\n                        this.setState({\n                            globalJobId: jobId_ && jobId_?.length ? jobId_ : '',\n                            enableEditMilestone: editMilestone_ === \"true\" ? true : false,\n                            enableLodgeDispute: lodgeDispute_ === \"true\" ? true : false,\n                            enableCancelJob: cancelJob_ === \"true\" ? true : false,\n                            enableMakMilestone: markMilestone_ === \"true\" ? true : false,\n                            activeJobs: result,\n                            count: {\n                                approveCount: needApprovalCount,\n                                applicantCount: newApplicantsCount\n                            },\n                            actualLoad: true\n                        });\n                    }\n                } else {\n                    this.checkAndUpdateCount({\n                        needApprovalCount,\n                        newApplicantsCount\n                    })\n                }\n            }\n        }\n\n        if (\n            jobtype === 'open' &&\n                !openJobs?.open?.length ? true : JSON.stringify(openJobs?.open) !== JSON.stringify(this.state?.openJobs) &&\n            (this.state?.openJobs?.length < currentPage * 10)\n        ) {\n            if (openJobs?.open) {\n                let { open, needApprovalCount, newApplicantsCount } = openJobs;\n                let page_get = 0;\n                let prevValues = [];\n\n                if (Array.isArray(open) && open?.length) {\n                    page_get = open[0]?.page;\n                }\n\n                if (Array.isArray(this.state?.openJobs) && this.state?.openJobs?.length) {\n                    prevValues = this.state?.openJobs;\n                };\n\n\n                if (hasLoad && !open?.length && page_get === 0 && this.state?.openJobs?.length !== 0) {\n                    if (this.state.hasLoad !== false) {\n                        this.setState({ hasLoad: false });\n                    }\n                } else if (hasLoad && open?.length && page_get === currentPage) {\n                    let result = [];\n                    if (JSON.stringify(prevValues) === JSON.stringify(open) && page_get === currentPage) {\n                        // same data items here!\n                        alert('Ok!')\n                    } else {\n                        let concatedItems: any = prevValues;\n                        let firstItem: any = null;\n\n                        if (Array.isArray(open) && open?.length) {\n                            firstItem = open[0];\n                        }\n\n                        if (firstItem?.jobId) {\n                            let ifMatch = prevValues.find((item: any) => item.jobId === firstItem?.jobId);\n                            if (!ifMatch) {\n                                concatedItems = [...prevValues, ...open]\n                            }\n                        }\n\n                        result = page_get > 0 && page_get === currentPage ?\n                            page_get == 1 && currentPage == 1 ? open : concatedItems\n                            : open;\n                    }\n\n                    let randomState = this.state.openJobs && Array.isArray(this.state.openJobs) && this.state.openJobs[0] && this.state.openJobs[0].mathrandom ? this.state.openJobs[0].mathrandom : ''\n\n                    let randomResult = result && Array.isArray(result) && result[0] && result[0].mathrandom ? result[0].mathrandom : '';\n\n\n                    if (this.state.count.approveCount !== needApprovalCount ||\n                        this.state.count.applicantCount !== newApplicantsCount ||\n                        this.state.openJobs?.length !== result?.length ||\n                        randomState !== randomResult\n                    ) {\n                        this.setState({\n                            openJobs: result,\n                            count: {\n                                approveCount: needApprovalCount,\n                                applicantCount: newApplicantsCount\n                            },\n                            actualLoad: true\n                        });\n                    }\n\n                } else {\n                    this.checkAndUpdateCount({\n                        needApprovalCount,\n                        newApplicantsCount\n                    })\n                }\n\n            }\n        }\n\n        if (\n            jobtype === 'past' &&\n                !pastJobs?.past?.length ? true : JSON.stringify(pastJobs?.past) !== JSON.stringify(this.state?.pastJobs) &&\n            (this.state?.pastJobs?.length < currentPage * 10)\n        ) {\n\n            if (pastJobs?.past) {\n\n                let { past, needApprovalCount, newApplicantsCount } = pastJobs;\n                let page_get = 0;\n                let prevValues = [];\n\n                if (Array.isArray(past) && past?.length) {\n                    page_get = past[0]?.page;\n                }\n\n                if (Array.isArray(this.state?.pastJobs) && this.state?.pastJobs?.length) {\n                    prevValues = this.state?.pastJobs;\n                };\n\n\n                if (hasLoad && !past?.length && page_get === 0 && this.state?.pastJobs?.length !== 0) {\n                    if (this.state.hasLoad !== false) {\n                        this.setState({ hasLoad: false });\n                    }\n                } else if (hasLoad && past?.length && page_get === currentPage) {\n                    let result = [];\n                    let concatedItems: any = prevValues;\n                    let firstItem: any = null;\n\n                    if (Array.isArray(past) && past?.length) {\n                        firstItem = past[0];\n                    }\n\n                    if (firstItem?.jobId) {\n                        let ifMatch = prevValues.find((item: any) => item.jobId === firstItem?.jobId);\n                        if (!ifMatch) {\n                            concatedItems = [...prevValues, ...past]\n                        }\n                    }\n\n                    result = page_get > 0 && page_get === currentPage ?\n                        page_get == 1 && currentPage == 1 ? past : concatedItems\n                        : past;\n\n                    let randomState = this.state.pastJobs && Array.isArray(this.state.pastJobs) && this.state.pastJobs[0] && this.state.pastJobs[0].mathrandom ? this.state.pastJobs[0].mathrandom : ''\n                    let randomResult = result && Array.isArray(result) && result[0] && result[0].mathrandom ? result[0].mathrandom : '';\n\n\n                    if (this.state.count.approveCount !== needApprovalCount ||\n                        this.state.count.applicantCount !== newApplicantsCount ||\n                        this.state.pastJobs?.length !== result?.length ||\n                        randomState !== randomResult\n                    ) {\n                        this.setState({\n                            pastJobs: result,\n                            count: {\n                                approveCount: needApprovalCount,\n                                applicantCount: newApplicantsCount\n                            },\n                            actualLoad: true\n                        });\n                    }\n                } else {\n                    this.checkAndUpdateCount({\n                        needApprovalCount,\n                        newApplicantsCount\n                    })\n                }\n            }\n        }\n\n        if (jobtype === 'applicantList' && JSON.stringify(applicantsListJobs) !== JSON.stringify(this.state.applicantsListJobs)) {\n            this.setState({ applicantsListJobs });\n        }\n\n        if (\n            jobtype === 'applicant' &&\n            JSON.stringify(applicantJobs) !== JSON.stringify(this.state?.applicantJobs) &&\n            (this.state?.applicantJobs?.length < currentPage * 10)\n        ) {\n            let page_get = 0;\n            let prevValues = [];\n\n            if (Array.isArray(applicantJobs) && applicantJobs?.length) {\n                page_get = applicantJobs[0]?.page;\n            }\n\n            if (Array.isArray(this.state?.applicantJobs) && this.state?.applicantJobs?.length) {\n                prevValues = this.state?.applicantJobs;\n            };\n\n\n            if (hasLoad && !applicantJobs?.length && page_get === 0 && this.state?.applicantJobs?.length !== 0) {\n                if (this.state.hasLoad !== false) {\n                    this.setState({ hasLoad: false });\n                }\n            } else {\n                if (hasLoad && applicantJobs?.length && page_get === currentPage) {\n                    this.setState({\n                        applicantJobs: page_get > 0 && page_get === currentPage ? [...prevValues, ...applicantJobs] : applicantJobs,\n                        actualLoad: true\n                    });\n                }\n            }\n        }\n\n\n        if (\n            jobtype === 'approval' &&\n            JSON.stringify(approvalJobs) !== JSON.stringify(this.state?.approvalJobs) &&\n            (this.state?.approvalJobs?.length < currentPage * 10)\n        ) {\n            let page_get = 0;\n            let prevValues = [];\n\n            if (Array.isArray(approvalJobs) && approvalJobs?.length) {\n                page_get = approvalJobs[0]?.page;\n            }\n\n            if (Array.isArray(this.state?.approvalJobs) && this.state?.approvalJobs?.length) {\n                prevValues = this.state?.approvalJobs;\n            };\n\n\n            if (hasLoad && !approvalJobs?.length && page_get === 0 && this.state?.approvalJobs?.length !== 0) {\n                if (this.state.hasLoad !== false) {\n                    this.setState({ hasLoad: false });\n                }\n            } else {\n                if (hasLoad && approvalJobs?.length && page_get === currentPage) {\n                    this.setState({\n                        approvalJobs: page_get > 0 && page_get === currentPage ? [...prevValues, ...approvalJobs] : approvalJobs,\n                        actualLoad: true\n                    });\n                }\n            }\n        }\n    }\n\n    toggleSidebar = () => this.setState({ isToggleSidebar: !this.state.isToggleSidebar });\n    setSelected = (jobtype: any, jobid?: any, sortby?: any, specializationId?: any) => {\n\n        let { currentPage } = this.state;\n        let item_position: any = localStorage.getItem('position');\n        let locationLocal: any = JSON.parse(item_position);\n\n        let dataItemsAddons: any = { page: currentPage, jobId: jobid, sortBy: sortby };\n        if (sortby === 2) {\n            dataItemsAddons['location'] = {\n                \"type\": \"Point\",\n                \"coordinates\": [\n                    locationLocal[1],\n                    locationLocal[0]\n                ]\n            };\n        }\n\n        if (['active', 'past', 'open', 'applicant', 'approval'].includes(jobtype)) {\n            this.setState({\n                activeType: jobtype,\n                currentPage: 1,\n                hasLoad: true,\n                activeJobs: [],\n                pastJobs: [],\n                openJobs: [],\n                applicantJobs: [],\n                approvalJobs: [],\n                applicantsListJobs: [],\n                actualLoad: false,\n                selectedItem: { jobtype, jobid, sortby, specializationId },\n            }, () => {\n                this.props.getClearJobs();\n                this.props.history.push(`/jobs?active=${jobtype}`);\n                window.scrollTo(0, 0);\n\n                this.setAfterItems({ jobtype, currentPage: this.state.currentPage, dataItemsAddons });\n            })\n        } else {\n            this.setState({\n                selectedItem: { jobtype, jobid, sortby, specializationId },\n                applicantsListJobs: [],\n            }, () => {\n                this.props.getClearJobs();\n                this.setAfterItems({ jobtype, currentPage: this.state.currentPage, dataItemsAddons });\n            });\n        }\n    }\n\n    setAfterItems = ({ jobtype, currentPage, dataItemsAddons }: any) => {\n        const { getActiveJobsBuilder, getPastJobsBuilder, getOpenJobsBuilder, getNewApplicantsBuilder, getnewJobApplicationListBuilder, getNewApprovalList } = this.props;\n\n        if (jobtype === 'active') { getActiveJobsBuilder(currentPage); }\n        if (jobtype === 'past') { getPastJobsBuilder(currentPage); }\n        if (jobtype === 'open') { getOpenJobsBuilder(currentPage); }\n        if (jobtype === 'applicant') { getNewApplicantsBuilder(currentPage); }\n        if (jobtype === 'approval') { getNewApprovalList(currentPage); }\n        if (jobtype === 'applicantList') { getnewJobApplicationListBuilder(dataItemsAddons); }\n    }\n\n    setToggleActiveToFalse = () => {\n        this.setState({ toggleClearActiveChecks: false });\n    }\n\n    render() {\n        let {\n            actualLoad,\n            hasLoad,\n            currentPage,\n            enableEditMilestone,\n            enableLodgeDispute,\n            enableCancelJob,\n            enableMakMilestone,\n            globalJobId,\n            isToggleSidebar,\n            activeType,\n            selectedItem: { jobtype, jobid, specializationId },\n            count: { applicantCount, approveCount },\n            activeJobs, pastJobs, openJobs, applicantJobs, applicantsListJobs, approvalJobs\n        } = this.state;\n        const { toggleSidebar, setSelected } = this;\n        let props: any = this.props;\n        let isLoading: any = props.isLoading;\n        let totalCount: any = 0;\n\n        if (jobtype === 'active') {\n            totalCount = activeJobs?.length;\n        }\n\n        if (jobtype === 'past') {\n            totalCount = pastJobs?.length;\n        }\n\n        if (jobtype === 'open') {\n            totalCount = openJobs?.length;\n        }\n\n        if (jobtype === 'applicant') {\n            totalCount = applicantJobs?.length;\n        }\n\n        if (jobtype === 'approval') {\n            totalCount = approvalJobs?.length;\n        }\n\n        if (jobtype === 'applicantList') {\n            totalCount = applicantsListJobs?.length;\n        }\n\n        return (\n          <div className=\"app_wrapper\">\n            <div className=\"custom_container\">\n              <span\n                className=\"mob_side_nav\"\n                onClick={() => {\n                  toggleSidebar();\n                }}\n              >\n                <img src={menu} alt=\"mob-side-nav\" />\n              </span>\n              <div className=\"f_row h-100\">\n                <div\n                  className={`side_nav_col${isToggleSidebar ? \" active\" : \"\"}`}\n                >\n                  <button\n                    className=\"close_nav\"\n                    onClick={() => {\n                      toggleSidebar();\n                    }}\n                  >\n                    <img src={close} alt=\"close\" />\n                  </button>\n                  <div className=\"stick\">\n                    <span className=\"title\">Job Dashboard</span>\n                    <ul className=\"dashboard_menu\">\n                      <li>\n                        <span\n                          className={`icon star ${\n                            activeType === \"active\" ? \"active\" : \"\"\n                          }`}\n                        >\n                          <span\n                            onClick={() => {\n                              console.log(\"Here!!!!\");\n                              // setResetItem(true);\n                              setSelected(\"active\");\n                              this.setState({ toggleClearActiveChecks: true });\n                            }}\n                            className=\"menu_txt\"\n                          >\n                            Active\n                          </span>\n                        </span>\n                      </li>\n                      <li>\n                        <span\n                          className={`icon open ${\n                            activeType === \"open\" ? \"active\" : \"\"\n                          }`}\n                        >\n                          <span\n                            onClick={() => {\n                              setSelected(\"open\");\n                            }}\n                            className=\"menu_txt\"\n                          >\n                            Open\n                          </span>\n                        </span>\n                      </li>\n                      <li>\n                        <span\n                          className={`icon past ${\n                            activeType === \"past\" ? \"active\" : \"\"\n                          }`}\n                        >\n                          <span\n                            onClick={() => {\n                              setSelected(\"past\");\n                            }}\n                            className=\"menu_txt\"\n                          >\n                            Past\n                          </span>\n                        </span>\n                      </li>\n                      {/* <hr></hr> */}\n                      <li>\n                        <span\n                          className={`icon applicants ${\n                            activeType === \"applicant\" ? \"active\" : \"\"\n                          }`}\n                        >\n                          <span\n                            onClick={() => {\n                              setSelected(\"applicant\");\n                            }}\n                            className=\"menu_txt\"\n                          >\n                            {\"New applicants\"}\n                            {!!applicantCount && (\n                              <span className=\"badge_count\">\n                                {applicantCount > 9 ? \"9+\" : applicantCount}\n                              </span>\n                            )}\n                          </span>\n                        </span>\n                      </li>\n                      <li>\n                        {/* <span className=\"icon approved\"> */}\n                        <span\n                          className={`icon approved ${\n                            activeType === \"approval\" ? \"active\" : \"\"\n                          }`}\n                        >\n                          <span\n                            onClick={() => {\n                              setSelected(\"approval\");\n                            }}\n                            className=\"menu_txt\"\n                          >\n                            {\"Need approval\"}\n                            {!!approveCount && (\n                              <span className=\"badge_count\">\n                                {approveCount > 9 ? \"9+\" : approveCount}\n                              </span>\n                            )}\n                          </span>\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n\n                <InfiniteScroll\n                  dataLength={totalCount}\n                  next={() => {\n                    if (totalCount == this.state.currentPage * 10) {\n                      this.setState(\n                        { currentPage: this.state.currentPage + 1 },\n                        () => {\n                          let cp: any = this.state.currentPage;\n\n                          if (jobtype === \"active\") {\n                            this.props.getActiveJobsBuilder(cp);\n                          }\n\n                          if (jobtype === \"past\") {\n                            this.props.getPastJobsBuilder(cp);\n                          }\n\n                          if (jobtype === \"open\") {\n                            this.props.getOpenJobsBuilder(cp);\n                          }\n\n                          if (jobtype === \"applicant\") {\n                            this.props.getNewApplicantsBuilder(cp);\n                          }\n\n                          if (jobtype === \"approval\") {\n                            this.props.getNewApprovalList(cp);\n                          }\n                        }\n                      );\n                    } else {\n                      // this.setState({ hasLoad: false })\n                    }\n                  }}\n                  hasMore={hasLoad}\n                  loader={<></>}\n                  style={{ overflowX: \"hidden\" }}\n                  className={`detail_col element-side-scroll hide_scroll`}\n                >\n                  {jobtype === \"past\" && (\n                    <PastJobsComponent\n                      isLoading={isLoading}\n                      dataItems={pastJobs}\n                      jobType={jobtype}\n                      activeType={activeType}\n                      history={props.history}\n                      getPastJobsBuilder={props?.getPastJobsBuilder}\n                    />\n                  )}\n                  {jobtype === \"active\" && (\n                    <ActiveJobsComponent\n                      isLoading={isLoading}\n                      dataItems={activeJobs}\n                      jobType={jobtype}\n                      activeType={activeType}\n                      setJobLabel={setSelected}\n                      setToggleActiveToFalse={this.setToggleActiveToFalse}\n                      recallHeaderNotification={\n                        this.props.recallHeaderNotification\n                      }\n                      toggleClearActiveChecks={\n                        this.state.toggleClearActiveChecks\n                      }\n                      history={props.history}\n                      globalJobId={globalJobId}\n                      enableEditMilestone={enableEditMilestone}\n                      enableLodgeDispute={enableLodgeDispute}\n                      enableCancelJob={enableCancelJob}\n                      enableMakMilestone={enableMakMilestone}\n                    />\n                  )}\n                  {jobtype === \"open\" && (\n                    <OpenJobsComponent\n                      isLoading={isLoading}\n                      dataItems={openJobs}\n                      jobType={jobtype}\n                      setJobLabel={setSelected}\n                      activeType={activeType}\n                      history={props.history}\n                    />\n                  )}\n                  {jobtype === \"applicant\" && (\n                    <NewApplicantComponent\n                      isLoading={isLoading}\n                      dataItems={applicantJobs}\n                      jobType={jobtype}\n                      setJobLabel={setSelected}\n                      history={props.history}\n                    />\n                  )}\n                  {jobtype === \"approval\" && (\n                    <NeedApproval\n                      isLoading={isLoading}\n                      dataItems={approvalJobs}\n                      jobType={jobtype}\n                      setJobLabel={setSelected}\n                      activeType={activeType}\n                      history={props.history}\n                    />\n                  )}\n                  {jobtype === \"applicantList\" && (\n                    <ApplicantsList\n                      isLoading={isLoading}\n                      items={applicantsListJobs}\n                      jobid={jobid}\n                      specializationId={specializationId}\n                      setJobLabel={setSelected}\n                      activeType={activeType}\n                      history={props.history}\n                    />\n                  )}\n                  {jobtype === \"listQuote\" && (\n                    <ListQuotes {...props} setJobLabel={setSelected} />\n                  )}\n                  {jobtype === \"quotes\" && (\n                    <ViewQuote {...props} setJobLabel={setSelected} />\n                  )}\n                </InfiniteScroll>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default JobDashboard;"]},"metadata":{},"sourceType":"module"}