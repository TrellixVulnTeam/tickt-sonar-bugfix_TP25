{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/login/login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // @ts-ignore\n\nimport { callLogin } from '../../redux/auth/actions';\nimport eyeIconClose from '../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../assets/images/icon-eye-open.png';\nimport AuthParent from '../../common/auth/authParent';\nimport Constants from '../../utils/constants';\nimport regex from '../../utils/regex';\nimport SocialAuth from \"../../common/auth/socialAuth\";\nimport { loginAnonymously } from '../../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  let window_ = window;\n  window_.Intercom('shutdown');\n\n  const backButtonHandler = () => {\n    var _props$history;\n\n    props === null || props === void 0 ? void 0 : (_props$history = props.history) === null || _props$history === void 0 ? void 0 : _props$history.push('/signup');\n  };\n\n  useEffect(() => {\n    if (window_ === null || window_ === void 0 ? void 0 : window_.Intercom) {\n      window_.Intercom('shutdown');\n      window_.Intercom('hide');\n      localStorage.clear();\n    }\n  }, []);\n\n  const changeHandler = e => {\n    setLoginData(prevData => ({ ...prevData,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!loginData.email) {\n      newErrors.email = Constants.errorStrings.emailEmpty;\n    } else {\n      const emailRegex = new RegExp(regex.email);\n\n      if (!emailRegex.test(loginData.email)) {\n        newErrors.email = Constants.errorStrings.emailErr;\n      }\n    }\n\n    if (!loginData.password) {\n      newErrors.password = Constants.errorStrings.password;\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onNewAccount = (profileData, socialType) => {\n    console.log('profileData: ', profileData);\n    const newProfileData = {\n      firstName: profileData.name,\n      authType: \"signup\",\n      email: profileData.email,\n      accountType: socialType,\n      user_image: profileData === null || profileData === void 0 ? void 0 : profileData.imageUrl,\n      ...(socialType === 'google' && {\n        socialId: profileData.googleId\n      }),\n      ...(socialType === 'linkedIn' && {\n        socialId: profileData.socialId\n      })\n    };\n\n    if (props.showModal) {\n      props.modalUpdateSteps(2);\n      props.setSocialData(newProfileData);\n      return;\n    } // props.history.push('/signup')\n\n\n    props.history.push({\n      pathname: '/signup',\n      redirect: 'socialRedirectFromLogin',\n      state: {\n        profileData: newProfileData\n      }\n    });\n  };\n\n  const forgetPasswordClicked = e => {\n    e.preventDefault();\n\n    if (props.showModal) {\n      // <ForgetPassword />\n      props.modalUpdateSteps(1);\n      return;\n    }\n\n    props.history.push('/reset-password');\n  };\n\n  const phoneViewHandler = e => {\n    e.preventDefault();\n\n    if (props.showModal) {\n      props.modalUpdateSteps(2);\n      return;\n    }\n\n    props.history.push('/signup');\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let newData = {\n      email: loginData.email,\n      password: loginData.password\n    }; // const newData = { email: loginData.email, password: loginData.password, deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\" };\n\n    if (validateForm()) {\n      const res = await callLogin(newData);\n\n      if (res.success) {\n        var _props$history2;\n\n        const authData = {\n          email: newData.email,\n          password: '12345678' //'R^4-3Wx?VTRufV=$B_pM9HP5GxqQF@'\n\n        };\n        loginAnonymously(); // firebaseLogInWithEmailPassword(authData, res?.data);\n\n        if (props.showModal) {\n          // window.location.reload();\n          props.setShowModal(!props.showModal);\n        }\n\n        props === null || props === void 0 ? void 0 : (_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : _props$history2.push('/');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthParent, {\n    sliderType: \"signup\",\n    backButtonHandler: backButtonHandler,\n    header: {\n      title: 'Log In'\n    },\n    history: props.history,\n    showModal: props.showModal,\n    modalUpdateSteps: props.modalUpdateSteps,\n    setSocialData: props.setSocialData,\n    modalLoginBackBtn: props.modalLoginBackBtn,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Email\",\n              name: \"email\",\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), !!errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? \"text\" : \"password\",\n              className: \"detect_input\",\n              placeholder: \"Enter Password\",\n              name: \"password\",\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              onClick: () => setShowPassword(!showPassword),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showPassword ? eyeIconOpen : eyeIconClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 106\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), !!errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            onClick: forgetPasswordClicked,\n            children: \"Forgotten your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn btn-effect\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"show_label text-center\",\n        children: \"or continue with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SocialAuth, {\n        onNewAccount: onNewAccount,\n        history: props.history,\n        showModal: props.showModal,\n        setShowModal: props.setShowModal,\n        modalUpdateSteps: props.modalUpdateSteps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field hide text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reg\",\n          children: [\"No account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            onClick: phoneViewHandler,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"LD8vykN+6csAZVliXlcFJQLIiHI=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/login/login.tsx"],"names":["useState","useEffect","callLogin","eyeIconClose","eyeIconOpen","AuthParent","Constants","regex","SocialAuth","loginAnonymously","LoginPage","props","errors","setErrors","loginData","setLoginData","email","password","showPassword","setShowPassword","window_","window","Intercom","backButtonHandler","history","push","localStorage","clear","changeHandler","e","prevData","target","name","value","validateForm","newErrors","errorStrings","emailEmpty","emailRegex","RegExp","test","emailErr","Object","keys","length","onNewAccount","profileData","socialType","console","log","newProfileData","firstName","authType","accountType","user_image","imageUrl","socialId","googleId","showModal","modalUpdateSteps","setSocialData","pathname","redirect","state","forgetPasswordClicked","preventDefault","phoneViewHandler","onSubmit","newData","res","success","authData","setShowModal","title","modalLoginBackBtn"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n// @ts-ignore\nimport { Link } from \"react-router-dom\";\nimport { callLogin } from '../../redux/auth/actions';\nimport eyeIconClose from '../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../assets/images/icon-eye-open.png';\nimport AuthParent from '../../common/auth/authParent';\nimport Constants from '../../utils/constants';\nimport regex from '../../utils/regex'\nimport SocialAuth from \"../../common/auth/socialAuth\";\nimport { firebaseLogInWithEmailPassword, loginAnonymously } from '../../services/firebase';\ninterface Propstype {\n    history: any,\n    showModal?: boolean,\n    modalUpdateSteps: (data: any) => void,\n    setShowModal: (data: any) => void,\n    setSocialData: (data: any) => void,\n    modalLoginBackBtn?: string,\n}\n\nconst LoginPage = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [loginData, setLoginData] = useState<any>({\n        email: '',\n        password: ''\n    })\n    const [showPassword, setShowPassword] = useState(false)\n    let window_: any = window;\n    window_.Intercom('shutdown');\n\n\n    const backButtonHandler = () => {\n        props?.history?.push('/signup')\n    }\n\n    useEffect(() => {\n        if (window_?.Intercom) {\n            window_.Intercom('shutdown');\n            window_.Intercom('hide');\n            localStorage.clear();\n        }\n    }, [])\n\n    const changeHandler = (e: any) => {\n        setLoginData((prevData: any) => ({ ...prevData, [e.target.name]: e.target.value }))\n    }\n\n    const validateForm = () => {\n        const newErrors: any = {};\n\n        if (!loginData.email) {\n            newErrors.email = Constants.errorStrings.emailEmpty;\n        } else {\n            const emailRegex = new RegExp(regex.email);\n            if (!emailRegex.test(loginData.email)) {\n                newErrors.email = Constants.errorStrings.emailErr;\n            }\n        }\n\n        if (!loginData.password) {\n            newErrors.password = Constants.errorStrings.password;\n        }\n\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onNewAccount = (profileData: any, socialType: string) => {\n        console.log('profileData: ', profileData);\n        const newProfileData = {\n            firstName: profileData.name,\n            authType: \"signup\",\n            email: profileData.email,\n            accountType: socialType,\n            user_image: profileData?.imageUrl,\n            ...(socialType === 'google' && { socialId: profileData.googleId }),\n            ...(socialType === 'linkedIn' && { socialId: profileData.socialId })\n        }\n        if (props.showModal) {\n            props.modalUpdateSteps(2)\n            props.setSocialData(newProfileData)\n            return;\n        }\n        // props.history.push('/signup')\n        props.history.push({\n            pathname: '/signup',\n            redirect: 'socialRedirectFromLogin',\n            state: { profileData: newProfileData }\n        })\n    }\n\n    const forgetPasswordClicked = (e: any) => {\n        e.preventDefault();\n        if (props.showModal) {\n            // <ForgetPassword />\n            props.modalUpdateSteps(1)\n            return;\n        }\n        props.history.push('/reset-password')\n    }\n\n    const phoneViewHandler = (e: any) => {\n        e.preventDefault();\n        if (props.showModal) {\n            props.modalUpdateSteps(2)\n            return;\n        }\n        props.history.push('/signup')\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        let newData = { email: loginData.email, password: loginData.password };\n        // const newData = { email: loginData.email, password: loginData.password, deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\" };\n        if (validateForm()) {\n            const res: any = await callLogin(newData);\n            if (res.success) {\n                const authData = {\n                    email: newData.email,\n                    password: '12345678', //'R^4-3Wx?VTRufV=$B_pM9HP5GxqQF@'\n                }\n                loginAnonymously();\n                // firebaseLogInWithEmailPassword(authData, res?.data);\n                if (props.showModal) {\n                    // window.location.reload();\n                    props.setShowModal(!props.showModal);\n                }\n                props?.history?.push('/');\n            }\n        }\n    }\n\n    return (\n        <AuthParent sliderType='signup' backButtonHandler={backButtonHandler} header={{ title: 'Log In' }} history={props.history} showModal={props.showModal} modalUpdateSteps={props.modalUpdateSteps} setSocialData={props.setSocialData} modalLoginBackBtn={props.modalLoginBackBtn}>\n            <div className=\"form_wrapper\">\n                <form onSubmit={onSubmit}>\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">Email</label>\n                        <div className=\"text_field\">\n                            <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" onChange={changeHandler} />\n                        </div>\n                        {!!errors.email && <span className=\"error_msg\">{errors.email}</span>}\n                    </div>\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">Password</label>\n                        <div className=\"text_field\">\n                            <input type={showPassword ? \"text\" : \"password\"} className=\"detect_input\" placeholder=\"Enter Password\" name=\"password\" onChange={changeHandler} />\n                            <span className=\"detect_icon\" onClick={() => setShowPassword(!showPassword)}><img src={showPassword ? eyeIconOpen : eyeIconClose} /></span>\n                        </div>\n                        {!!errors.password && <span className=\"error_msg\">{errors.password}</span>}\n                    </div>\n                    <div className=\"form_field\">\n                        <a className=\"link\" onClick={forgetPasswordClicked}>Forgotten your password?</a>\n                    </div>\n                    <div className=\"form_field\">\n                        <button className=\"fill_btn btn-effect\">Log in</button>\n                    </div>\n                </form>\n                <span className=\"show_label text-center\">or continue with</span>\n                <SocialAuth onNewAccount={onNewAccount}\n                    history={props.history}\n                    showModal={props.showModal}\n                    setShowModal={props.setShowModal}\n                    modalUpdateSteps={props.modalUpdateSteps} />\n                <div className=\"form_field hide text-center\">\n                    <span className=\"reg\">No account? <a className=\"link\" onClick={phoneViewHandler}>Signup</a></span>\n                </div>\n            </div>\n\n        </AuthParent >\n    )\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}