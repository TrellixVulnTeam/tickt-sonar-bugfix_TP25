{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/routes/index.tsx\";\nimport routes from './routesData';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PrivateRoute from './privateRoute';\nimport Header from '../common/header/index';\nimport ScrollToTop from '../common/scrollToTop';\nimport CustomNotification from \"../common/customNotification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Routes = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map(route => {\n        if (route.redirectTO) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: route.redirectTO\n          }, route.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (route.privateRoute) {\n          // return <PrivateRoute path={route.path} component={route.component} />\n          return /*#__PURE__*/_createElement(PrivateRoute, { ...route,\n            key: route.path,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 20\n            }\n          });\n        }\n\n        if (route.authRoute) {\n          // return <PrivateRoute path={route.path} Component={route.component} authRoute />\n          return /*#__PURE__*/_createElement(PrivateRoute, { ...route,\n            key: route.path,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 20\n            }\n          });\n        }\n\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          component: route.component,\n          exact: route.exact\n        }, route.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/routes/index.tsx"],"names":["routes","BrowserRouter","Router","Switch","Route","Redirect","PrivateRoute","Header","ScrollToTop","CustomNotification","Routes","map","route","redirectTO","path","privateRoute","authRoute","component","exact"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAA,gBACGV,MAAM,CAACW,GAAP,CAAYC,KAAD,IAAgB;AAC1B,YAAIA,KAAK,CAACC,UAAV,EAAsB;AACpB,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAED,KAAK,CAACC;AAApB,aAAqCD,KAAK,CAACE,IAA3C;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD,YAAIF,KAAK,CAACG,YAAV,EAAwB;AACtB;AACA,8BAAO,eAAC,YAAD,OAAkBH,KAAlB;AAAyB,YAAA,GAAG,EAAEA,KAAK,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,YAAIF,KAAK,CAACI,SAAV,EAAqB;AACnB;AACA,8BAAO,eAAC,YAAD,OAAkBJ,KAAlB;AAAyB,YAAA,GAAG,EAAEA,KAAK,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,4BAAO,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEF,KAAK,CAACE,IAAnB;AAAyB,UAAA,SAAS,EAAEF,KAAK,CAACK,SAA1C;AAAqD,UAAA,KAAK,EAAEL,KAAK,CAACM;AAAlE,WAA8EN,KAAK,CAACE,IAApF;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAbA;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3BD;;KAAMJ,M;AA6BN,eAAeA,MAAf","sourcesContent":["import routes from './routesData';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PrivateRoute from './privateRoute';\nimport Header from '../common/header/index';\nimport ScrollToTop from '../common/scrollToTop';\nimport CustomNotification from \"../common/customNotification\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <ScrollToTop />\n      \n      <Header />\n      <CustomNotification />\n      <Switch>\n        {routes.map((route: any) => {\n          if (route.redirectTO) {\n            return <Redirect to={route.redirectTO} key={route.path} />\n          }\n          if (route.privateRoute) {\n            // return <PrivateRoute path={route.path} component={route.component} />\n            return <PrivateRoute {...route} key={route.path} />\n          }\n          if (route.authRoute) {\n            // return <PrivateRoute path={route.path} Component={route.component} authRoute />\n            return <PrivateRoute {...route} key={route.path} />\n          }\n          return <Route path={route.path} component={route.component} exact={route.exact} key={route.path} />\n        }\n        )}\n        {/* <Redirect from='*' to='/' /> */}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}