{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{connect}from'react-redux';import TradieJobInfoBox from'../../common/tradieJobInfoBox';import{getBuildersJob}from'../../redux/jobs/actions';import InfiniteScroll from'react-infinite-scroll-component';import noData from'../../assets/images/no-search-data.png';import storageService from'../../utils/storageService';import{getAllPostedJob}from'../../redux/profile/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";var BuilderPostedJobs=function BuilderPostedJobs(props){var _props$location;var params=new URLSearchParams((_props$location=props.location)===null||_props$location===void 0?void 0:_props$location.search);var builderId=params.get('bId');var totalJobsCount=Number(params.get('jobCount'));var userType=storageService.getItem('userType');var _useState=useState([]),_useState2=_slicedToArray(_useState,2),buildersJob=_useState2[0],setBuildersJob=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),buildersJobPageNo=_useState4[0],setBuildersJobPageNo=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hasMoreItems=_useState6[0],setHasMoreItems=_useState6[1];useEffect(function(){callJobList();},[]);var callJobList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,res1,_res1$data,allJobs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(buildersJob.length>=totalJobsCount)){_context.next=3;break;}setHasMoreItems(false);return _context.abrupt(\"return\");case 3:data={builderId:builderId,page:buildersJobPageNo};if(!(userType===1)){_context.next=10;break;}_context.next=7;return getBuildersJob(data);case 7:_context.t0=_context.sent;_context.next=13;break;case 10:_context.next=12;return getAllPostedJob(data.page);case 12:_context.t0=_context.sent;case 13:res1=_context.t0;if(res1.success){allJobs=[].concat(_toConsumableArray(buildersJob),_toConsumableArray(res1.data));if(((_res1$data=res1.data)===null||_res1$data===void 0?void 0:_res1$data.length)<10){setHasMoreItems(false);}setBuildersJob(allJobs);setBuildersJobPageNo(buildersJobPageNo+1);}case 15:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref.apply(this,arguments);};}();var backButtonClicked=function backButtonClicked(){var _props$history;(_props$history=props.history)===null||_props$history===void 0?void 0:_props$history.goBack();};console.log(totalJobsCount,\"totalJobsCount\",buildersJob,\"buildersJob\",buildersJobPageNo,\"buildersJobPageNo\",hasMoreItems,\"hasMoreItems\");return/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:buildersJob.length,next:callJobList,hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(\"h4\",{}),children:/*#__PURE__*/_jsx(\"div\",{className:'app_wrapper',children:/*#__PURE__*/_jsx(\"div\",{className:\"section_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:backButtonClicked}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"\".concat(totalJobsCount||0,\" jobs\")})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(buildersJob===null||buildersJob===void 0?void 0:buildersJob.length)>0||props.isLoading?buildersJob===null||buildersJob===void 0?void 0:buildersJob.map(function(jobData){return/*#__PURE__*/_createElement(TradieJobInfoBox,_objectSpread(_objectSpread({item:jobData},props),{},{key:jobData.jobId,userType:storageService.getItem('userType')}));}):/*#__PURE__*/_jsxs(\"div\",{className:\"no_record\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noData,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"No Data Found\"})]})})]})})})});};var mapState=function mapState(state){return{isLoading:state.common.isLoading};};export default connect(mapState,null)(BuilderPostedJobs);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderInfo/builderPostedJobs.tsx"],"names":["useState","useEffect","connect","TradieJobInfoBox","getBuildersJob","InfiniteScroll","noData","storageService","getAllPostedJob","BuilderPostedJobs","props","params","URLSearchParams","location","search","builderId","get","totalJobsCount","Number","userType","getItem","buildersJob","setBuildersJob","buildersJobPageNo","setBuildersJobPageNo","hasMoreItems","setHasMoreItems","callJobList","length","data","page","res1","success","allJobs","backButtonClicked","history","goBack","console","log","isLoading","map","jobData","jobId","mapState","state","common"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport TradieJobInfoBox from '../../common/tradieJobInfoBox';\nimport { getBuildersJob } from '../../redux/jobs/actions';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport noData from '../../assets/images/no-search-data.png';\nimport storageService from '../../utils/storageService';\nimport { getAllPostedJob } from '../../redux/profile/actions';\n\ninterface PropsType {\n    location: any,\n    history: any,\n    isLoading: boolean,\n}\n\nconst BuilderPostedJobs = (props: PropsType) => {\n    const params = new URLSearchParams(props.location?.search);\n    const builderId: any = params.get('bId');\n    const totalJobsCount: any = Number(params.get('jobCount'));\n    const userType = storageService.getItem('userType');\n\n    const [buildersJob, setBuildersJob] = useState<Array<any>>([]);\n    const [buildersJobPageNo, setBuildersJobPageNo] = useState<number>(1);\n    const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n\n    useEffect(() => {\n        callJobList();\n    }, []);\n\n    const callJobList = async () => {\n        if (buildersJob.length >= totalJobsCount) {\n            setHasMoreItems(false);\n            return;\n        }\n        const data = {\n            builderId: builderId,\n            page: buildersJobPageNo\n        }\n        const res1 = userType === 1 ? await getBuildersJob(data) : await getAllPostedJob(data.page);\n        if (res1.success) {\n            const allJobs = [...buildersJob, ...res1.data];\n            if (res1.data?.length < 10) {\n                setHasMoreItems(false);\n            }\n            setBuildersJob(allJobs);\n            setBuildersJobPageNo(buildersJobPageNo + 1);\n        }\n    }\n\n    const backButtonClicked = () => {\n        props.history?.goBack();\n    }\n    console.log(totalJobsCount, \"totalJobsCount\", buildersJob, \"buildersJob\", buildersJobPageNo, \"buildersJobPageNo\", hasMoreItems, \"hasMoreItems\")\n\n    return (\n        <InfiniteScroll\n            dataLength={buildersJob.length}\n            next={callJobList}\n            hasMore={hasMoreItems}\n            loader={<h4></h4>}\n        >\n            <div className={'app_wrapper'}>\n                <div className=\"section_wrapper\">\n                    <div className=\"custom_container\">\n                        <div className=\"relate\">\n                            <button className=\"back\" onClick={backButtonClicked}></button>\n                            <span className=\"title\">{`${totalJobsCount || 0} jobs`}</span>\n                        </div>\n                        <div className=\"flex_row tradies_row\">\n                            {(buildersJob?.length > 0 || props.isLoading) ?\n                                buildersJob?.map((jobData: any) => {\n                                    return <TradieJobInfoBox item={jobData} {...props} key={jobData.jobId} userType={storageService.getItem('userType')} />\n                                })\n                                :\n                                <div className=\"no_record\">\n                                    <figure className=\"no_img\">\n                                        <img src={noData} alt=\"data not found\" />\n                                    </figure>\n                                    <span>No Data Found</span>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </InfiniteScroll>\n    )\n}\n\nconst mapState = (state: any) => ({\n    isLoading: state.common.isLoading\n});\n\nexport default connect(mapState, null)(BuilderPostedJobs);\n"]},"metadata":{},"sourceType":"module"}