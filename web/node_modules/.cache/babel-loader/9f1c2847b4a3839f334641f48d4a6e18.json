{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/quoteJobs/quoteJobCancel.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport templateImage from '../../../.././assets/images/job-posted-bg.jpg';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport { closeQuoteJob } from '../../../../redux/quotes/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteJobCancel = props => {\n  _s();\n\n  let location = useLocation();\n  let urlParams = new URLSearchParams(location.search);\n  let jobId = urlParams.get('jobId');\n  let tradieId = urlParams.get('tradieId');\n\n  const cancelJob = async () => {\n    let data = {\n      jobId,\n      tradieId\n    };\n    let response = await closeQuoteJob(data);\n\n    if (response.success) {\n      props.history.push('/jobs?active=past');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_text_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"full_image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: templateImage,\n        alt: \"template-item\",\n        loading: \"eager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short_info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: 'Job Cancelled'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: 'Your job for quoting has just being cancelled. Do you want to close the job or keep it open for new bidders?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelJob,\n              className: \"fill_btn full_btn btn-effect\",\n              children: `Close the job`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => props.history.push(`/post-new-job?jobId=${jobId}`),\n              className: \"fill_grey_btn full_btn btn-effect\",\n              children: 'Keep the job open'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteJobCancel, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = QuoteJobCancel;\nexport default _c2 = withRouter(QuoteJobCancel);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuoteJobCancel\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/quoteJobs/quoteJobCancel.tsx"],"names":["React","templateImage","withRouter","useLocation","closeQuoteJob","QuoteJobCancel","props","location","urlParams","URLSearchParams","search","jobId","get","tradieId","cancelJob","data","response","success","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,SAASC,aAAT,QAA8B,kCAA9B;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAgB;AAAA;;AACrC,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,MAAIK,SAAS,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAhB;AACA,MAAIC,KAAK,GAAGH,SAAS,CAACI,GAAV,CAAc,OAAd,CAAZ;AACA,MAAIC,QAAQ,GAAGL,SAAS,CAACI,GAAV,CAAc,UAAd,CAAf;;AAEA,QAAME,SAAS,GAAG,YAAY;AAC5B,QAAIC,IAAI,GAAG;AAAEJ,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAX;AACA,QAAIG,QAAQ,GAAG,MAAMZ,aAAa,CAACW,IAAD,CAAlC;;AACA,QAAIC,QAAQ,CAACC,OAAb,EAAsB;AACpBX,MAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,mBAAnB;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAElB,aAAV;AAAyB,QAAA,GAAG,EAAC,eAA7B;AAA6C,QAAA,OAAO,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBACG;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,sBACG;AADH;AAAA;AAAA;AAAA;AAAA,kBAJF,eAQE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,OAAO,EAAEa,SADX;AAEE,cAAA,SAAS,EAAC,8BAFZ;AAAA,wBAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAgBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,MAAMR,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAoB,uBAAsBR,KAAM,EAAhD,CADjB;AAEE,cAAA,SAAS,EAAC,mCAFZ;AAAA,wBAGG;AAHH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAhDD;;GAAMN,c;UACWF,W;;;KADXE,c;AAkDN,qBAAeH,UAAU,CAACG,cAAD,CAAzB","sourcesContent":["import React from 'react';\nimport templateImage from '../../../.././assets/images/job-posted-bg.jpg';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport { closeQuoteJob } from '../../../../redux/quotes/actions'\n\n\nconst QuoteJobCancel = (props: any) => {\n  let location = useLocation();\n  let urlParams = new URLSearchParams(location.search);\n  let jobId = urlParams.get('jobId');\n  let tradieId = urlParams.get('tradieId');\n\n  const cancelJob = async () => {\n    let data = { jobId, tradieId };\n    let response = await closeQuoteJob(data);\n    if (response.success) {\n      props.history.push('/jobs?active=past');\n    }\n  }\n\n  return (\n    <div className=\"img_text_wrap\">\n      <figure className=\"full_image\">\n        <img src={templateImage} alt=\"template-item\" loading=\"eager\" />\n        <div className=\"short_info\">\n          <div className=\"content\">\n            <h1 className=\"title\">\n              {'Job Cancelled'}\n            </h1>\n            <span className=\"show_label\">\n              {'Your job for quoting has just being cancelled. Do you want to close the job or keep it open for new bidders?'}\n            </span>\n\n            <div className=\"form_field\">\n              <button\n                onClick={cancelJob}\n                className=\"fill_btn full_btn btn-effect\">\n                {`Close the job`}\n              </button>\n            </div>\n\n            <div className=\"form_field\">\n              <button\n                onClick={() => props.history.push(`/post-new-job?jobId=${jobId}`)}\n                className=\"fill_grey_btn full_btn btn-effect\">\n                {'Keep the job open'}\n              </button>\n            </div>\n\n          </div>\n        </div>\n      </figure>\n    </div>\n  )\n}\n\nexport default withRouter(QuoteJobCancel);"]},"metadata":{},"sourceType":"module"}