{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/searchResultFilters/searchResultFilters.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getSearchParamsData } from \"../../utils/common\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport NumberFormat from \"react-number-format\";\nimport filterUnselected from \"../../assets/images/ic-filter-unselected.png\";\nimport filterSelected from \"../../assets/images/ic-filter-selected.png\";\nimport cancel from \"../../assets/images/ic-cancel.png\";\nimport spherePlaceholder from \"../../assets/images/ic_categories_placeholder.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResultFilters = props => {\n  _s();\n\n  var _props$tradeListData$, _props$tradeListData, _props$jobTypeListDat;\n\n  const [errors, setErrors] = useState({});\n  const [priceAnchorEl, setPriceAnchorEl] = useState(null);\n  const [sortingAnchorEl, setSortingAnchorEl] = useState(null);\n  const [stateData, setStateData] = useState({\n    page: 1,\n    paramData: \"\"\n  });\n  const [sortByFilter, setSortByFilter] = useState({\n    sortByFilterClicked: false,\n    showResultsButtonClicked: false,\n    tradeId: [],\n    jobTypes: [],\n    specializationId: [],\n    allSpecializationClicked: false\n  });\n  const [sortByPrice, setSortByPrice] = useState({\n    priceFilterClicked: false,\n    payTypeClicked: false,\n    pay_type: \"Per hour\",\n    budget: [2100, 5100],\n    showBudgetPerHour: [2100, 5100],\n    showBudgetFixed: [2100, 5100],\n    showResultClicked: false\n  });\n  const [sortBySorting, setSortBySorting] = useState({\n    sortBySorting: false,\n    sortBy: 0\n  });\n  useEffect(() => {\n    var _props$history;\n\n    props.getJobTypeList();\n    props.callTradeList();\n    const paramsList = getSearchParamsData(props === null || props === void 0 ? void 0 : (_props$history = props.history) === null || _props$history === void 0 ? void 0 : _props$history.location);\n\n    if (paramsList) {\n      var _paramsList$tradeId, _paramsList$jobTypes;\n\n      if (paramsList.isFilterOn === \"isFilterOn\" && (((_paramsList$tradeId = paramsList.tradeId) === null || _paramsList$tradeId === void 0 ? void 0 : _paramsList$tradeId.length) || ((_paramsList$jobTypes = paramsList.jobTypes) === null || _paramsList$jobTypes === void 0 ? void 0 : _paramsList$jobTypes.length))) {\n        setSortByFilter(prevData => ({ ...prevData,\n          tradeId: paramsList.tradeId ? paramsList.tradeId : [],\n          jobTypes: paramsList.jobTypes ? paramsList.jobTypes : [],\n          specializationId: paramsList.specializationId ? paramsList.specializationId : [\"123\"],\n          showResultsButtonClicked: true\n        }));\n      }\n\n      if (paramsList.min_budget && paramsList.max_budget && paramsList.pay_type) {\n        const newBudget = [paramsList.min_budget, paramsList.max_budget];\n        setSortByPrice(prevData => ({ ...prevData,\n          pay_type: paramsList.pay_type,\n          budget: newBudget,\n          showResultClicked: true\n        }));\n      }\n\n      if (paramsList.sortBy) {\n        setSortBySorting(prevData => ({ ...prevData,\n          sortBy: paramsList.sortBy\n        }));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (props.cleanFiltersData) {\n      setSortByFilter(prevData => ({ ...prevData,\n        tradeId: [],\n        jobTypes: [],\n        specializationId: [],\n        allSpecializationClicked: false,\n        showResultsButtonClicked: false,\n        sortByFilterClicked: false\n      }));\n      setSortByPrice(prevData => ({ ...prevData,\n        pay_type: \"Per hour\",\n        showResultClicked: false\n      }));\n      setSortBySorting(prevData => ({ ...prevData,\n        sortBy: 0\n      }));\n    }\n  }, [props.cleanFiltersData]);\n\n  const sortByPriceClick = event => {\n    setPriceAnchorEl(event.currentTarget);\n    setSortByPrice(prevData => ({ ...prevData,\n      priceFilterClicked: true\n    }));\n  };\n\n  const sortByPriceClose = () => {\n    setPriceAnchorEl(null);\n    setSortByPrice(prevData => ({ ...prevData,\n      priceFilterClicked: false\n    }));\n    delete errors.maxBudget;\n  };\n\n  const sortByFilterClick = () => {\n    setSortByFilter(prevData => ({ ...prevData,\n      sortByFilterClicked: true\n    }));\n  };\n\n  const sortByFilterClose = () => {\n    setSortByFilter(prevData => ({ ...prevData,\n      sortByFilterClicked: false\n    }));\n  };\n\n  const sortBySortingClick = event => {\n    setSortingAnchorEl(event.currentTarget);\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBySorting: true\n    }));\n  };\n\n  const sortBySortingClose = () => {\n    setSortingAnchorEl(null);\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBySorting: false\n    }));\n  };\n\n  const showResultsByAllFilter = (item, isPriceFilterClicked) => {\n    var _sortByFilter$tradeId, _sortByFilter$jobType, _sortByFilter$special;\n\n    if (item === \"callViewNearByJobApi\") {\n      props.searchByFilter(\"callViewNearByJobApi\");\n      return;\n    }\n\n    const data = { ...(((_sortByFilter$tradeId = sortByFilter.tradeId) === null || _sortByFilter$tradeId === void 0 ? void 0 : _sortByFilter$tradeId.length) && {\n        tradeId: sortByFilter.tradeId\n      }),\n      ...(((_sortByFilter$jobType = sortByFilter.jobTypes) === null || _sortByFilter$jobType === void 0 ? void 0 : _sortByFilter$jobType.length) && {\n        jobTypes: sortByFilter.jobTypes\n      }),\n      ...(((_sortByFilter$special = sortByFilter.specializationId) === null || _sortByFilter$special === void 0 ? void 0 : _sortByFilter$special.length) && {\n        specializationId: sortByFilter.specializationId\n      }),\n      ...((sortByPrice.showResultClicked || isPriceFilterClicked) && sortByPrice.budget[0] >= 0 && sortByPrice.budget[1] >= 0 && {\n        pay_type: sortByPrice.pay_type\n      }),\n      ...((sortByPrice.showResultClicked || isPriceFilterClicked) && sortByPrice.budget[0] >= 0 && sortByPrice.budget[1] >= 0 && {\n        min_budget: Number(sortByPrice.budget[0])\n      }),\n      ...((sortByPrice.showResultClicked || isPriceFilterClicked) && sortByPrice.budget[0] >= 0 && sortByPrice.budget[1] >= 0 && {\n        max_budget: Number(sortByPrice.budget[1])\n      }),\n      ...((item === null || item === void 0 ? void 0 : item.sortBy) && {\n        sortBy: Number(item === null || item === void 0 ? void 0 : item.sortBy)\n      })\n    };\n\n    if (sortByPrice.budget[1] === 0) {\n      setSortByPrice(prevData => ({ ...prevData,\n        showResultClicked: false\n      }));\n    }\n\n    props.searchByFilter(data);\n  };\n\n  const showResultsByFilter1 = () => {\n    if (sortByFilter.jobTypes.length || sortByFilter.tradeId.length) {\n      sortByFilterClose();\n      setSortByFilter(prevData => ({ ...prevData,\n        showResultsButtonClicked: true\n      }));\n      showResultsByAllFilter();\n    } else {\n      // setShowToast(true, \"Please select atleast one field\");\n      sortByFilterClose();\n      setSortByFilter(prevData => ({ ...prevData,\n        tradeId: [],\n        jobTypes: [],\n        specializationId: [],\n        allSpecializationClicked: false,\n        showResultsButtonClicked: false,\n        sortByFilterClicked: false\n      }));\n      setSortByPrice(prevData => ({ ...prevData,\n        pay_type: \"Fixed price\"\n      }));\n      setSortBySorting(prevData => ({ ...prevData,\n        sortBy: 0\n      }));\n      showResultsByAllFilter(\"callViewNearByJobApi\");\n    }\n  };\n\n  const showResultsByBudget = e => {\n    e.preventDefault();\n    setSortByPrice(prevData => ({ ...prevData,\n      showResultClicked: true\n    }));\n    sortByPriceClose();\n    showResultsByAllFilter(\"\", true);\n  };\n\n  const sortByButtonClicked = num => {\n    const item = {\n      sortBy: num\n    };\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBy: num\n    }));\n    sortBySortingClose();\n    showResultsByAllFilter(item);\n  };\n\n  const setSameOnClick = () => {\n    const item = {\n      sortBy: 400 //sending 400 e.g, to delete sortBy from query param ==> by passing to parent component\n\n    };\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBy: 0\n    }));\n    sortBySortingClose();\n    showResultsByAllFilter(item);\n  };\n\n  const sortOnClick = num => {\n    if (sortBySorting.sortBy == num) {\n      setSameOnClick();\n    }\n  };\n\n  const sortOnChange = num => {\n    if (sortBySorting.sortBy !== num) {\n      sortByButtonClicked(num);\n    }\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    console.log(\"newValue: \", newValue);\n\n    if (sortByPrice.pay_type === \"Per hour\") {\n      setSortByPrice(prevData => ({ ...prevData,\n        budget: newValue,\n        showBudgetPerHour: newValue\n      }));\n    } else {\n      setSortByPrice(prevData => ({ ...prevData,\n        budget: newValue,\n        showBudgetFixed: newValue\n      }));\n    }\n  };\n\n  const filterChangeHandler = (id, name) => {\n    if (name === \"jobTypes\") {\n      if (sortByFilter.jobTypes[0] == id) {\n        setSortByFilter(prevData => ({ ...prevData,\n          jobTypes: []\n        }));\n      } else {\n        setSortByFilter(prevData => ({ ...prevData,\n          jobTypes: [id]\n        }));\n      }\n    } else if (name === \"specializationId\") {\n      setSortByFilter(prevData => {\n        var newData = [...prevData.specializationId];\n\n        if (sortByFilter.allSpecializationClicked) {\n          newData = [];\n        }\n\n        const itemIndex = newData.indexOf(id);\n\n        if (newData.indexOf(id) < 0) {\n          newData.push(id);\n        } else {\n          newData.splice(itemIndex, 1);\n        }\n\n        return { ...prevData,\n          specializationId: newData,\n          allSpecializationClicked: false\n        };\n      });\n    } else if (name == \"categories\") {\n      if (sortByFilter.tradeId.length && sortByFilter.tradeId[0] == id) {\n        setSortByFilter(prevData => ({ ...prevData,\n          tradeId: [],\n          specializationId: [],\n          allSpecializationClicked: false\n        }));\n      } else {\n        setSortByFilter(prevData => ({ ...prevData,\n          tradeId: [id],\n          specializationId: [],\n          allSpecializationClicked: false\n        }));\n      }\n    } else if (name == \"All Clicked\") {\n      if (sortByFilter.allSpecializationClicked) {\n        setSortByFilter(prevData => ({ ...prevData,\n          allSpecializationClicked: false,\n          specializationId: []\n        }));\n      } else {\n        const newSpecialization = id.map(({\n          _id\n        }) => {\n          return _id;\n        });\n        setSortByFilter(prevData => ({ ...prevData,\n          allSpecializationClicked: true,\n          specializationId: newSpecialization\n        }));\n      }\n    } else if (name == \"Clear All\") {\n      setSortByFilter(prevData => ({ ...prevData,\n        allSpecializationClicked: false,\n        tradeId: [],\n        jobTypes: [],\n        specializationId: []\n      }));\n    }\n  };\n\n  const specializationList = (_props$tradeListData$ = props.tradeListData.find(({\n    _id\n  }) => _id === sortByFilter.tradeId[0])) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.specialisations;\n  useEffect(() => {\n    if (specializationList === null || specializationList === void 0 ? void 0 : specializationList.length) {\n      const newSpecialization = specializationList.map(({\n        _id\n      }) => {\n        return _id;\n      });\n      setSortByFilter(prevData => ({ ...prevData,\n        specializationId: newSpecialization,\n        allSpecializationClicked: true\n      }));\n    }\n  }, [specializationList]);\n  console.log(\"tradiefilters----------\", sortByFilter, sortByPrice, sortBySorting);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters_wrapr\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"filters_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: sortByFilterClick,\n          className: sortByFilter.showResultsButtonClicked ? \"active\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: sortByFilter.showResultsButtonClicked ? filterSelected : filterUnselected,\n            alt: \"filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), \"Filter\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: sortByPrice.showResultClicked ? \"active\" : \"\",\n          onClick: sortByPriceClick,\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: sortBySorting.sortBy ? \"active\" : \"\",\n          onClick: sortBySortingClick,\n          children: \"Sorting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), sortByFilter.sortByFilterClicked && /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"custom_modal\",\n      open: sortByFilter.sortByFilterClicked,\n      onClose: sortByFilterClose,\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_wh filter_modal\",\n        \"data-aos\": \"zoom-in\",\n        \"data-aos-delay\": \"30\",\n        \"data-aos-duration\": \"1000\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close_btn\",\n            onClick: sortByFilterClose,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancel,\n              alt: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xs_sub_title\",\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select_sphere\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: (_props$tradeListData = props.tradeListData) === null || _props$tradeListData === void 0 ? void 0 : _props$tradeListData.map(({\n                _id,\n                trade_name,\n                selected_url,\n                specialisations\n              }) => {\n                const active = sortByFilter.tradeId[0] === _id;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: active ? \"active\" : \"\",\n                  onClick: () => filterChangeHandler(_id, \"categories\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: selected_url ? selected_url : spherePlaceholder\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: trade_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 27\n                  }, this)]\n                }, _id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xs_sub_title\",\n              children: \"Job types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"job_categories\",\n            children: (_props$jobTypeListDat = props.jobTypeListData) === null || _props$jobTypeListDat === void 0 ? void 0 : _props$jobTypeListDat.map(({\n              _id,\n              name,\n              image\n            }) => {\n              const active = sortByFilter.jobTypes[0] == _id;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `${active ? \"active\" : \"\"}`,\n                onClick: () => filterChangeHandler(_id, \"jobTypes\"),\n                children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"type_icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: image,\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 25\n                }, this)]\n              }, _id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xs_sub_title\",\n              children: \"Specialisation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tags_wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [(specializationList === null || specializationList === void 0 ? void 0 : specializationList.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                className: sortByFilter.allSpecializationClicked ? \"selected\" : \"\",\n                onClick: () => filterChangeHandler(specializationList, \"All Clicked\"),\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this), specializationList === null || specializationList === void 0 ? void 0 : specializationList.map(({\n                _id,\n                name\n              }) => {\n                var _sortByFilter$special2;\n\n                const active = ((_sortByFilter$special2 = sortByFilter.specializationId) === null || _sortByFilter$special2 === void 0 ? void 0 : _sortByFilter$special2.indexOf(_id)) >= 0;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: active && !sortByFilter.allSpecializationClicked ? \"selected\" : \"\",\n                  onClick: () => filterChangeHandler(_id, \"specializationId\"),\n                  children: name\n                }, _id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 25\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter_btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            onClick: () => filterChangeHandler(\"Clear All\", \"Clear All\"),\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn full_btn btn-effect\",\n            onClick: showResultsByFilter1,\n            children: \"Show Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }, this), sortByPrice.priceFilterClicked && /*#__PURE__*/_jsxDEV(Menu, {\n      className: \"fsp_modal range\",\n      id: \"simple-menu\",\n      anchorEl: priceAnchorEl,\n      keepMounted: true,\n      open: Boolean(priceAnchorEl),\n      onClose: sortByPriceClose,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close_btn\",\n        onClick: sortByPriceClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cancel,\n          alt: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Maximum budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio_wrap agree_check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"filter-type filled-in\",\n            name: \"pay_type\",\n            type: \"radio\",\n            id: \"perHour\",\n            checked: sortByPrice.pay_type === \"Per hour\" ? true : false,\n            onClick: () => setSortByPrice(prevData => ({ ...prevData,\n              pay_type: \"Per hour\",\n              budget: [2100, 5100],\n              showBudgetPerHour: [2100, 5100]\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"perHour\",\n            children: \"Per hour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio_wrap agree_check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"filter-type filled-in\",\n            name: \"pay_type\",\n            type: \"radio\",\n            id: \"fixed\",\n            checked: sortByPrice.pay_type === \"Fixed price\" ? true : false,\n            onClick: () => setSortByPrice(prevData => ({ ...prevData,\n              pay_type: \"Fixed price\",\n              budget: [2100, 5100],\n              showBudgetFixed: [2100, 5100]\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fixed\",\n            children: \"Fixed price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"per_day\",\n          children: [/*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: sortByPrice.budget[0],\n            className: \"foo\",\n            displayType: \"text\",\n            thousandSeparator: true,\n            prefix: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NumberFormat, {\n            value: sortByPrice.budget[1],\n            className: \"foo\",\n            displayType: \"text\",\n            thousandSeparator: true,\n            prefix: \" - $\",\n            suffix: sortByPrice.budget[1] === 10000 ? \"+\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"range-slider\",\n          gutterBottom: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          min: 0,\n          max: sortByPrice.pay_type === \"Per hour\" ? 10000 : 10000,\n          step: sortByPrice.pay_type === \"Per hour\" ? 100 : 100,\n          value: sortByPrice.pay_type === \"Per hour\" ? sortByPrice.showBudgetPerHour : sortByPrice.showBudgetFixed,\n          onChange: handleSliderChange,\n          \"aria-labelledby\": \"range-slider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f_spacebw\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"link\",\n          onClick: showResultsByBudget,\n          children: \"Show results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 9\n    }, this), sortBySorting.sortBySorting && /*#__PURE__*/_jsxDEV(Menu, {\n      className: \"fsp_modal range\",\n      anchorEl: sortingAnchorEl,\n      keepMounted: true,\n      open: Boolean(sortingAnchorEl),\n      onClose: sortBySortingClose,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close_btn\",\n        onClick: sortBySortingClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cancel,\n          alt: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio_wrap agree_check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"filter-type filled-in\",\n          type: \"radio\",\n          id: \"highestRated\",\n          value: \"Highest rated\",\n          checked: sortBySorting.sortBy === 1,\n          onClick: () => {\n            sortOnClick(1);\n          },\n          onChange: () => {\n            sortOnChange(1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"highestRated\",\n          children: \"Highest rated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio_wrap agree_check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"filter-type filled-in\",\n          type: \"radio\",\n          id: \"closest\",\n          value: \"Closest to me\",\n          checked: sortBySorting.sortBy === 2,\n          onClick: () => {\n            sortOnClick(2);\n          },\n          onChange: () => {\n            sortOnChange(2);\n          } // onChange={() => sortByButtonClicked(2)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"closest\",\n          children: \"Closest to me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio_wrap agree_check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"filter-type filled-in\",\n          type: \"radio\",\n          id: \"mostJob\",\n          value: \"Most jobs completed\",\n          checked: sortBySorting.sortBy === 3,\n          onClick: () => {\n            sortOnClick(3);\n          },\n          onChange: () => {\n            sortOnChange(3);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mostJob\",\n          children: \"Most jobs completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResultFilters, \"fKjaiutubmby02dCC/zeWwGh9Fk=\");\n\n_c = SearchResultFilters;\nexport default SearchResultFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResultFilters\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/searchResultFilters/searchResultFilters.tsx"],"names":["useState","useEffect","getSearchParamsData","Menu","Modal","Typography","Slider","NumberFormat","filterUnselected","filterSelected","cancel","SearchResultFilters","props","errors","setErrors","priceAnchorEl","setPriceAnchorEl","sortingAnchorEl","setSortingAnchorEl","stateData","setStateData","page","paramData","sortByFilter","setSortByFilter","sortByFilterClicked","showResultsButtonClicked","tradeId","jobTypes","specializationId","allSpecializationClicked","sortByPrice","setSortByPrice","priceFilterClicked","payTypeClicked","pay_type","budget","showBudgetPerHour","showBudgetFixed","showResultClicked","sortBySorting","setSortBySorting","sortBy","getJobTypeList","callTradeList","paramsList","history","location","isFilterOn","length","prevData","min_budget","max_budget","newBudget","cleanFiltersData","sortByPriceClick","event","currentTarget","sortByPriceClose","maxBudget","sortByFilterClick","sortByFilterClose","sortBySortingClick","sortBySortingClose","showResultsByAllFilter","item","isPriceFilterClicked","searchByFilter","data","Number","showResultsByFilter1","showResultsByBudget","e","preventDefault","sortByButtonClicked","num","setSameOnClick","sortOnClick","sortOnChange","handleSliderChange","newValue","console","log","filterChangeHandler","id","name","newData","itemIndex","indexOf","push","splice","newSpecialization","map","_id","specializationList","tradeListData","find","specialisations","trade_name","selected_url","active","spherePlaceholder","jobTypeListData","image","Boolean"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Constants from \"../../utils/constants\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport { getSearchParamsData } from \"../../utils/common\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport NumberFormat from \"react-number-format\";\n\nimport filterUnselected from \"../../assets/images/ic-filter-unselected.png\";\nimport filterSelected from \"../../assets/images/ic-filter-selected.png\";\nimport cancel from \"../../assets/images/ic-cancel.png\";\nimport spherePlaceholder from \"../../assets/images/ic_categories_placeholder.svg\";\n\nconst SearchResultFilters = (props: any) => {\n  const [errors, setErrors] = useState<any>({});\n  const [priceAnchorEl, setPriceAnchorEl] = useState(null);\n  const [sortingAnchorEl, setSortingAnchorEl] = useState(null);\n  const [stateData, setStateData] = useState({\n    page: 1,\n    paramData: \"\",\n  });\n\n  const [sortByFilter, setSortByFilter] = useState<any>({\n    sortByFilterClicked: false,\n    showResultsButtonClicked: false,\n    tradeId: [],\n    jobTypes: [],\n    specializationId: [],\n    allSpecializationClicked: false,\n  });\n\n  const [sortByPrice, setSortByPrice] = useState<any>({\n    priceFilterClicked: false,\n    payTypeClicked: false,\n    pay_type: \"Per hour\",\n    budget: [2100, 5100],\n    showBudgetPerHour: [2100, 5100],\n    showBudgetFixed: [2100, 5100],\n    showResultClicked: false,\n  });\n\n  const [sortBySorting, setSortBySorting] = useState<any>({\n    sortBySorting: false,\n    sortBy: 0,\n  });\n\n  useEffect(() => {\n    props.getJobTypeList();\n    props.callTradeList();\n    const paramsList = getSearchParamsData(props?.history?.location);\n    if (paramsList) {\n      if (\n        paramsList.isFilterOn === \"isFilterOn\" &&\n        (paramsList.tradeId?.length || paramsList.jobTypes?.length)\n      ) {\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          tradeId: paramsList.tradeId ? paramsList.tradeId : [],\n          jobTypes: paramsList.jobTypes ? paramsList.jobTypes : [],\n          specializationId: paramsList.specializationId\n            ? paramsList.specializationId\n            : [\"123\"],\n          showResultsButtonClicked: true,\n        }));\n      }\n      if (\n        paramsList.min_budget &&\n        paramsList.max_budget &&\n        paramsList.pay_type\n      ) {\n        const newBudget = [paramsList.min_budget, paramsList.max_budget];\n        setSortByPrice((prevData: any) => ({\n          ...prevData,\n          pay_type: paramsList.pay_type,\n          budget: newBudget,\n          showResultClicked: true,\n        }));\n      }\n      if (paramsList.sortBy) {\n        setSortBySorting((prevData: any) => ({\n          ...prevData,\n          sortBy: paramsList.sortBy,\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (props.cleanFiltersData) {\n      setSortByFilter((prevData: any) => ({\n        ...prevData,\n        tradeId: [],\n        jobTypes: [],\n        specializationId: [],\n        allSpecializationClicked: false,\n        showResultsButtonClicked: false,\n        sortByFilterClicked: false,\n      }));\n      setSortByPrice((prevData: any) => ({\n        ...prevData,\n        pay_type: \"Per hour\",\n        showResultClicked: false,\n      }));\n      setSortBySorting((prevData: any) => ({ ...prevData, sortBy: 0 }));\n    }\n  }, [props.cleanFiltersData]);\n\n  const sortByPriceClick = (event: any) => {\n    setPriceAnchorEl(event.currentTarget);\n    setSortByPrice((prevData: any) => ({\n      ...prevData,\n      priceFilterClicked: true,\n    }));\n  };\n\n  const sortByPriceClose = () => {\n    setPriceAnchorEl(null);\n    setSortByPrice((prevData: any) => ({\n      ...prevData,\n      priceFilterClicked: false,\n    }));\n    delete errors.maxBudget;\n  };\n\n  const sortByFilterClick = () => {\n    setSortByFilter((prevData: any) => ({\n      ...prevData,\n      sortByFilterClicked: true,\n    }));\n  };\n\n  const sortByFilterClose = () => {\n    setSortByFilter((prevData: any) => ({\n      ...prevData,\n      sortByFilterClicked: false,\n    }));\n  };\n\n  const sortBySortingClick = (event: any) => {\n    setSortingAnchorEl(event.currentTarget);\n    setSortBySorting((prevData: any) => ({ ...prevData, sortBySorting: true }));\n  };\n\n  const sortBySortingClose = () => {\n    setSortingAnchorEl(null);\n    setSortBySorting((prevData: any) => ({\n      ...prevData,\n      sortBySorting: false,\n    }));\n  };\n\n  const showResultsByAllFilter = (\n    item?: any,\n    isPriceFilterClicked?: boolean\n  ) => {\n    if (item === \"callViewNearByJobApi\") {\n      props.searchByFilter(\"callViewNearByJobApi\");\n      return;\n    }\n    const data = {\n      ...(sortByFilter.tradeId?.length && { tradeId: sortByFilter.tradeId }),\n      ...(sortByFilter.jobTypes?.length && { jobTypes: sortByFilter.jobTypes }),\n      ...(sortByFilter.specializationId?.length && {\n        specializationId: sortByFilter.specializationId,\n      }),\n      ...((sortByPrice.showResultClicked || isPriceFilterClicked) &&\n        sortByPrice.budget[0] >= 0 &&\n        sortByPrice.budget[1] >= 0 && { pay_type: sortByPrice.pay_type }),\n      ...((sortByPrice.showResultClicked || isPriceFilterClicked) &&\n        sortByPrice.budget[0] >= 0 &&\n        sortByPrice.budget[1] >= 0 && {\n          min_budget: Number(sortByPrice.budget[0]),\n        }),\n      ...((sortByPrice.showResultClicked || isPriceFilterClicked) &&\n        sortByPrice.budget[0] >= 0 &&\n        sortByPrice.budget[1] >= 0 && {\n          max_budget: Number(sortByPrice.budget[1]),\n        }),\n      ...(item?.sortBy && { sortBy: Number(item?.sortBy) }),\n    };\n    if (sortByPrice.budget[1] === 0) {\n      setSortByPrice((prevData: any) => ({\n        ...prevData,\n        showResultClicked: false,\n      }));\n    }\n    props.searchByFilter(data);\n  };\n\n  const showResultsByFilter1 = () => {\n    if (sortByFilter.jobTypes.length || sortByFilter.tradeId.length) {\n      sortByFilterClose();\n      setSortByFilter((prevData: any) => ({\n        ...prevData,\n        showResultsButtonClicked: true,\n      }));\n      showResultsByAllFilter();\n    } else {\n      // setShowToast(true, \"Please select atleast one field\");\n      sortByFilterClose();\n      setSortByFilter((prevData: any) => ({\n        ...prevData,\n        tradeId: [],\n        jobTypes: [],\n        specializationId: [],\n        allSpecializationClicked: false,\n        showResultsButtonClicked: false,\n        sortByFilterClicked: false,\n      }));\n      setSortByPrice((prevData: any) => ({\n        ...prevData,\n        pay_type: \"Fixed price\",\n      }));\n      setSortBySorting((prevData: any) => ({ ...prevData, sortBy: 0 }));\n      showResultsByAllFilter(\"callViewNearByJobApi\");\n    }\n  };\n\n  const showResultsByBudget = (e: any) => {\n    e.preventDefault();\n    setSortByPrice((prevData: any) => ({\n      ...prevData,\n      showResultClicked: true,\n    }));\n    sortByPriceClose();\n    showResultsByAllFilter(\"\", true);\n  };\n\n  const sortByButtonClicked = (num: number) => {\n    const item = {\n      sortBy: num,\n    };\n    setSortBySorting((prevData: any) => ({ ...prevData, sortBy: num }));\n    sortBySortingClose();\n    showResultsByAllFilter(item);\n  };\n\n  const setSameOnClick = () => {\n    const item = {\n      sortBy: 400, //sending 400 e.g, to delete sortBy from query param ==> by passing to parent component\n    };\n    setSortBySorting((prevData: any) => ({ ...prevData, sortBy: 0 }));\n    sortBySortingClose();\n    showResultsByAllFilter(item);\n  };\n\n  const sortOnClick = (num: number) => {\n    if (sortBySorting.sortBy == num) {\n      setSameOnClick();\n    }\n  };\n\n  const sortOnChange = (num: number) => {\n    if (sortBySorting.sortBy !== num) {\n      sortByButtonClicked(num);\n    }\n  };\n\n  const handleSliderChange = (event: any, newValue: any) => {\n    console.log(\"newValue: \", newValue);\n    if (sortByPrice.pay_type === \"Per hour\") {\n      setSortByPrice((prevData: any) => ({\n        ...prevData,\n        budget: newValue,\n        showBudgetPerHour: newValue,\n      }));\n    } else {\n      setSortByPrice((prevData: any) => ({\n        ...prevData,\n        budget: newValue,\n        showBudgetFixed: newValue,\n      }));\n    }\n  };\n\n  const filterChangeHandler = (id: any, name: string) => {\n    if (name === \"jobTypes\") {\n      if (sortByFilter.jobTypes[0] == id) {\n        setSortByFilter((prevData: any) => ({ ...prevData, jobTypes: [] }));\n      } else {\n        setSortByFilter((prevData: any) => ({ ...prevData, jobTypes: [id] }));\n      }\n    } else if (name === \"specializationId\") {\n      setSortByFilter((prevData: any) => {\n        var newData = [...prevData.specializationId];\n        if (sortByFilter.allSpecializationClicked) {\n          newData = [];\n        }\n        const itemIndex = newData.indexOf(id);\n        if (newData.indexOf(id) < 0) {\n          newData.push(id);\n        } else {\n          newData.splice(itemIndex, 1);\n        }\n        return {\n          ...prevData,\n          specializationId: newData,\n          allSpecializationClicked: false,\n        };\n      });\n    } else if (name == \"categories\") {\n      if (sortByFilter.tradeId.length && sortByFilter.tradeId[0] == id) {\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          tradeId: [],\n          specializationId: [],\n          allSpecializationClicked: false,\n        }));\n      } else {\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          tradeId: [id],\n          specializationId: [],\n          allSpecializationClicked: false,\n        }));\n      }\n    } else if (name == \"All Clicked\") {\n      if (sortByFilter.allSpecializationClicked) {\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          allSpecializationClicked: false,\n          specializationId: [],\n        }));\n      } else {\n        const newSpecialization = id.map(({ _id }: { _id: string }) => {\n          return _id;\n        });\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          allSpecializationClicked: true,\n          specializationId: newSpecialization,\n        }));\n      }\n    } else if (name == \"Clear All\") {\n      setSortByFilter((prevData: any) => ({\n        ...prevData,\n        allSpecializationClicked: false,\n        tradeId: [],\n        jobTypes: [],\n        specializationId: [],\n      }));\n    }\n  };\n\n  const specializationList = props.tradeListData.find(\n    ({ _id }: { _id: string }) => _id === sortByFilter.tradeId[0]\n  )?.specialisations;\n\n  useEffect(() => {\n    if (specializationList?.length) {\n      const newSpecialization = specializationList.map(\n        ({ _id }: { _id: string }) => {\n          return _id;\n        }\n      );\n      setSortByFilter((prevData: any) => ({\n        ...prevData,\n        specializationId: newSpecialization,\n        allSpecializationClicked: true,\n      }));\n    }\n  }, [specializationList]);\n\n  console.log(\n    \"tradiefilters----------\",\n    sortByFilter,\n    sortByPrice,\n    sortBySorting\n  );\n  return (\n    <div className=\"filters_wrapr\">\n      <ul className=\"filters_row\">\n        <li>\n          <a\n            onClick={sortByFilterClick}\n            className={sortByFilter.showResultsButtonClicked ? \"active\" : \"\"}\n          >\n            <img\n              src={\n                sortByFilter.showResultsButtonClicked\n                  ? filterSelected\n                  : filterUnselected\n              }\n              alt=\"filter\"\n            />\n            Filter\n          </a>\n        </li>\n        <li>\n          <a\n            className={sortByPrice.showResultClicked ? \"active\" : \"\"}\n            onClick={sortByPriceClick}\n          >\n            Price\n          </a>\n        </li>\n        <li>\n          <a\n            className={sortBySorting.sortBy ? \"active\" : \"\"}\n            onClick={sortBySortingClick}\n          >\n            Sorting\n          </a>\n        </li>\n      </ul>\n      {/* filter 1 modal box */}\n      {sortByFilter.sortByFilterClicked && (\n        <Modal\n          className=\"custom_modal\"\n          open={sortByFilter.sortByFilterClicked}\n          onClose={sortByFilterClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh filter_modal\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading\">\n              <span className=\"sub_title\">Filter</span>\n              <button className=\"close_btn\" onClick={sortByFilterClose}>\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n\n            <div className=\"inner_wrap\">\n              <div className=\"form_field\">\n                <span className=\"xs_sub_title\">Categories</span>\n              </div>\n              <div className=\"select_sphere\">\n                <ul>\n                  {props.tradeListData?.map(\n                    ({\n                      _id,\n                      trade_name,\n                      selected_url,\n                      specialisations,\n                    }: {\n                      _id: string;\n                      trade_name: string;\n                      selected_url: string;\n                      specialisations: [];\n                    }) => {\n                      const active = sortByFilter.tradeId[0] === _id;\n                      return (\n                        <li\n                          key={_id}\n                          className={active ? \"active\" : \"\"}\n                          onClick={() => filterChangeHandler(_id, \"categories\")}\n                        >\n                          <figure>\n                            <img\n                              src={\n                                selected_url ? selected_url : spherePlaceholder\n                              }\n                            />\n                          </figure>\n                          <span className=\"name\">{trade_name}</span>\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              </div>\n              <div className=\"form_field\">\n                <span className=\"xs_sub_title\">Job types</span>\n              </div>\n              <ul className=\"job_categories\">\n                {props.jobTypeListData?.map(\n                  ({\n                    _id,\n                    name,\n                    image,\n                  }: {\n                    _id: string;\n                    name: string;\n                    image: string;\n                  }) => {\n                    const active = sortByFilter.jobTypes[0] == _id;\n                    return (\n                      <li\n                        className={`${active ? \"active\" : \"\"}`}\n                        key={_id}\n                        onClick={() => filterChangeHandler(_id, \"jobTypes\")}\n                      >\n                        <figure className=\"type_icon\">\n                          <img src={image} alt=\"\" />\n                        </figure>\n                        <span className=\"name\">{name}</span>\n                      </li>\n                    );\n                  }\n                )}\n              </ul>\n              <div className=\"form_field\">\n                <span className=\"xs_sub_title\">Specialisation</span>\n              </div>\n              <div className=\"tags_wrap\">\n                <ul>\n                  {specializationList?.length > 0 && (\n                    <li\n                      className={\n                        sortByFilter.allSpecializationClicked ? \"selected\" : \"\"\n                      }\n                      onClick={() =>\n                        filterChangeHandler(specializationList, \"All Clicked\")\n                      }\n                    >\n                      All\n                    </li>\n                  )}\n                  {specializationList?.map(\n                    ({ _id, name }: { _id: string; name: string }) => {\n                      const active =\n                        sortByFilter.specializationId?.indexOf(_id) >= 0;\n                      return (\n                        <li\n                          key={_id}\n                          className={\n                            active && !sortByFilter.allSpecializationClicked\n                              ? \"selected\"\n                              : \"\"\n                          }\n                          onClick={() =>\n                            filterChangeHandler(_id, \"specializationId\")\n                          }\n                        >\n                          {name}\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              </div>\n            </div>\n            <div className=\"filter_btn\">\n              <a\n                className=\"link\"\n                onClick={() => filterChangeHandler(\"Clear All\", \"Clear All\")}\n              >\n                Clear All\n              </a>\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={showResultsByFilter1}\n              >\n                Show Results\n              </button>\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* price filter box */}\n      {sortByPrice.priceFilterClicked && (\n        <Menu\n          className=\"fsp_modal range\"\n          id=\"simple-menu\"\n          anchorEl={priceAnchorEl}\n          keepMounted\n          open={Boolean(priceAnchorEl)}\n          onClose={sortByPriceClose}\n        >\n          <span className=\"close_btn\" onClick={sortByPriceClose}>\n            <img src={cancel} alt=\"cancel\" />\n          </span>\n          <span className=\"sub_title\">Maximum budget</span>\n          <div className=\"form_field\">\n            <div className=\"radio_wrap agree_check\">\n              <input\n                className=\"filter-type filled-in\"\n                name=\"pay_type\"\n                type=\"radio\"\n                id=\"perHour\"\n                checked={sortByPrice.pay_type === \"Per hour\" ? true : false}\n                onClick={() =>\n                  setSortByPrice((prevData: any) => ({\n                    ...prevData,\n                    pay_type: \"Per hour\",\n                    budget: [2100, 5100],\n                    showBudgetPerHour: [2100, 5100],\n                  }))\n                }\n              />\n              <label htmlFor=\"perHour\">Per hour</label>\n            </div>\n            <div className=\"radio_wrap agree_check\">\n              <input\n                className=\"filter-type filled-in\"\n                name=\"pay_type\"\n                type=\"radio\"\n                id=\"fixed\"\n                checked={sortByPrice.pay_type === \"Fixed price\" ? true : false}\n                onClick={() =>\n                  setSortByPrice((prevData: any) => ({\n                    ...prevData,\n                    pay_type: \"Fixed price\",\n                    budget: [2100, 5100],\n                    showBudgetFixed: [2100, 5100],\n                  }))\n                }\n              />\n              <label htmlFor=\"fixed\">Fixed price</label>\n            </div>\n          </div>\n          <div className=\"form_field\">\n            {/* <span className=\"per_day\">{`$${sortByPrice.budget[0]} - $${sortByPrice.budget[1]}`}</span> */}\n            <span className=\"per_day\">\n              <NumberFormat\n                value={sortByPrice.budget[0]}\n                className=\"foo\"\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\"$\"}\n              />\n              <NumberFormat\n                value={sortByPrice.budget[1]}\n                className=\"foo\"\n                displayType={\"text\"}\n                thousandSeparator={true}\n                prefix={\" - $\"}\n                suffix={sortByPrice.budget[1] === 10000 ? \"+\" : \"\"}\n              />\n            </span>\n            <Typography id=\"range-slider\" gutterBottom></Typography>\n            <Slider\n              min={0}\n              max={sortByPrice.pay_type === \"Per hour\" ? 10000 : 10000}\n              step={sortByPrice.pay_type === \"Per hour\" ? 100 : 100}\n              value={\n                sortByPrice.pay_type === \"Per hour\"\n                  ? sortByPrice.showBudgetPerHour\n                  : sortByPrice.showBudgetFixed\n              }\n              onChange={handleSliderChange}\n              aria-labelledby=\"range-slider\"\n            />\n          </div>\n          <div className=\"f_spacebw\">\n            <a className=\"link\" onClick={showResultsByBudget}>\n              Show results\n            </a>\n          </div>\n        </Menu>\n      )}\n      {/* sorting filter box */}\n      {sortBySorting.sortBySorting && (\n        <Menu\n          className=\"fsp_modal range\"\n          anchorEl={sortingAnchorEl}\n          keepMounted\n          open={Boolean(sortingAnchorEl)}\n          onClose={sortBySortingClose}\n        >\n          <span className=\"close_btn\" onClick={sortBySortingClose}>\n            <img src={cancel} alt=\"cancel\" />\n          </span>\n          <span className=\"sub_title\">Sort by</span>\n          <div className=\"radio_wrap agree_check\">\n            <input\n              className=\"filter-type filled-in\"\n              type=\"radio\"\n              id=\"highestRated\"\n              value=\"Highest rated\"\n              checked={sortBySorting.sortBy === 1}\n              onClick={() => {\n                sortOnClick(1);\n              }}\n              onChange={() => {\n                sortOnChange(1);\n              }}\n            />\n            <label htmlFor=\"highestRated\">Highest rated</label>\n          </div>\n          <div className=\"radio_wrap agree_check\">\n            <input\n              className=\"filter-type filled-in\"\n              type=\"radio\"\n              id=\"closest\"\n              value=\"Closest to me\"\n              checked={sortBySorting.sortBy === 2}\n              onClick={() => {\n                sortOnClick(2);\n              }}\n              onChange={() => {\n                sortOnChange(2);\n              }}\n              // onChange={() => sortByButtonClicked(2)}\n            />\n            <label htmlFor=\"closest\">Closest to me</label>\n          </div>\n          <div className=\"radio_wrap agree_check\">\n            <input\n              className=\"filter-type filled-in\"\n              type=\"radio\"\n              id=\"mostJob\"\n              value=\"Most jobs completed\"\n              checked={sortBySorting.sortBy === 3}\n              onClick={() => {\n                sortOnClick(3);\n              }}\n              onChange={() => {\n                sortOnChange(3);\n              }}\n            />\n            <label htmlFor=\"mostJob\">Most jobs completed</label>\n          </div>\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResultFilters;\n"]},"metadata":{},"sourceType":"module"}