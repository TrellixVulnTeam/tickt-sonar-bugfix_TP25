{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/declineMilestone.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport close from '../../../assets/images/icon-close-1.png';\nimport addMedia from \"../../../assets/images/add-image.png\";\nimport { onFileUpload } from '../../../redux/auth/actions';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\nconst videoFormats = [\"mp4\", \"wmv\", \"avi\"];\n\nconst DeclineMilestone = ({\n  milestoneAcceptOrDecline,\n  toggleBack,\n  jobId,\n  jobName,\n  milestoneId,\n  resetStateLocal\n}) => {\n  _s();\n\n  const [reason, setReason] = useState('');\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n\n  const onSubmitDecline = async () => {\n    if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length)) {\n      setShowToast(true, 'Please attach atleast one media file.');\n      return true;\n    }\n\n    let data = {\n      \"status\": 2,\n      \"jobId\": jobId,\n      \"milestoneId\": milestoneId,\n      \"reason\": reason,\n      \"url\": filesUrl.length ? filesUrl.map(file => file.link) : []\n    };\n    let response = await milestoneAcceptOrDecline(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      console.log({\n        response\n      });\n      resetStateLocal(true);\n    }\n  };\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if ((filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) === 6) {\n      setShowToast(true, \"Max files upload limit is 3.\");\n      return;\n    }\n\n    let filesUrlClone = filesUrl;\n    let countVideoFormats = filesUrlClone.map(item => {\n      let split_items = item.link.split('.');\n      let format_split_items = split_items[(split_items === null || split_items === void 0 ? void 0 : split_items.length) - 1];\n\n      if (videoFormats.includes(format_split_items)) {\n        return format_split_items;\n      }\n    }).filter(item => item !== undefined);\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split('/')[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size.\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 MB.\");\n      return;\n    }\n\n    formData.append('file', newFile);\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      let link = res.imgUrl;\n      let check_type = imageFormats.includes(fileType) ? 1 : 2;\n      setFilesUrl(prev => [...prev, {\n        \"mediaType\": check_type,\n        \"link\": link\n      }]);\n      setLocalFiles(prev => ({ ...prev,\n        newFile\n      }));\n    }\n  };\n\n  const renderbyFileFormat = (item, index) => {\n    let split_item_format = item.split('.');\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split('/');\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          title: get_split_name,\n          src: item,\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 32\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            removeFromItem(index);\n          },\n          src: close,\n          alt: \"remove\",\n          className: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const isValidCheck = () => {\n    if (!(reason === null || reason === void 0 ? void 0 : reason.length) || (reason === null || reason === void 0 ? void 0 : reason.length) > 250) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleBack,\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: jobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Decline milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"commn_para\",\n        children: \"Please write your reason for declining the milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Your reason\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: reason,\n                onChange: e => {\n                  setReason(e.target.value);\n                },\n                placeholder: \"Your reason...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char_count\",\n                children: ['character length: ', (reason === null || reason === void 0 ? void 0 : reason.length) + ' / 250']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), (reason === null || reason === void 0 ? void 0 : reason.length) > 250 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: 'Maximum 250 characters are allowed.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_img_video\",\n        children: [(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) ? filesUrl.map((item, index) => renderbyFileFormat(item.link, index)) : null, (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) < 3 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload_media\",\n            htmlFor: \"upload_img_video\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: addMedia,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\",\n            style: {\n              display: \"none\"\n            },\n            onChange: onFileChange,\n            id: \"upload_img_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmitDecline,\n        className: `fill_btn full_btn btn-effect ${isValidCheck() ? 'disable_btn' : ''}`,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeclineMilestone, \"1pPyx7XhB3JYaZ98AFXZfe/kM0c=\");\n\n_c = DeclineMilestone;\nexport default DeclineMilestone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeclineMilestone\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/declineMilestone.tsx"],"names":["React","useState","close","addMedia","onFileUpload","setShowToast","imageFormats","videoFormats","DeclineMilestone","milestoneAcceptOrDecline","toggleBack","jobId","jobName","milestoneId","resetStateLocal","reason","setReason","filesUrl","setFilesUrl","localFiles","setLocalFiles","update","forceUpdate","onSubmitDecline","length","data","map","file","link","response","success","console","log","removeFromItem","index","splice","Array","isArray","onFileChange","e","formData","FormData","newFile","target","files","filesUrlClone","countVideoFormats","item","split_items","split","format_split_items","includes","filter","undefined","fileType","type","toLowerCase","selectedFileSize","size","indexOf","append","res","imgUrl","check_type","prev","renderbyFileFormat","split_item_format","get_split_fromat","split_item_name","get_split_name","image_render","isValidCheck","value","display"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport media from '../../../assets/images/portfolio-placeholder.jpg';\nimport close from '../../../assets/images/icon-close-1.png';\nimport addMedia from \"../../../assets/images/add-image.png\";\nimport { onFileUpload } from '../../../redux/auth/actions';\nimport { setShowToast } from '../../../redux/common/actions';\nimport videoThumbnail from '../../../assets/images/add-video.png';\ninterface Props {\n    milestoneAcceptOrDecline: any\n    jobId: any\n    jobName: any,\n    milestoneId: any,\n    toggleBack: () => void,\n    resetStateLocal:any\n}\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\nconst videoFormats: Array<any> = [\"mp4\", \"wmv\", \"avi\"];\n\nconst DeclineMilestone = ({ milestoneAcceptOrDecline, toggleBack, jobId, jobName, milestoneId, resetStateLocal }: Props) => {\n    const [reason, setReason] = useState('');\n    const [filesUrl, setFilesUrl] = useState([] as any);\n    const [localFiles, setLocalFiles] = useState({});\n    const [update, forceUpdate] = useState({});\n\n\n    const onSubmitDecline = async () => {\n\n        if(!filesUrl?.length){\n            setShowToast(true, 'Please attach atleast one media file.')\n            return true;\n        }\n        \n        let data = {\n            \"status\": 2,\n            \"jobId\": jobId,\n            \"milestoneId\": milestoneId,\n            \"reason\": reason,\n            \"url\":filesUrl.length ? filesUrl.map((file:any) => file.link) : []\n        }\n\n        let response: any = await milestoneAcceptOrDecline(data);\n        if (response?.success) {\n            console.log({response})\n            resetStateLocal(true);\n            \n        }\n    }\n\n    const removeFromItem = (index: any) => {\n        filesUrl.splice(index, 1);\n        setFilesUrl(filesUrl);\n        Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n    }\n\n    const onFileChange = async (e: any) => {\n        const formData = new FormData();\n        const newFile = e.target.files[0];\n\n        if (filesUrl?.length === 6) {\n            setShowToast(true, \"Max files upload limit is 3.\")\n            return;\n        }\n\n        let filesUrlClone: any = filesUrl;\n\n        let countVideoFormats = filesUrlClone.map((item: any) => {\n            let split_items = item.link.split('.');\n\n            let format_split_items = split_items[split_items?.length - 1];\n\n            if (videoFormats.includes(format_split_items)) {\n                return format_split_items;\n            }\n        }).filter((item: any) => item !== undefined);\n\n        var fileType = (newFile?.type?.split('/')[1])?.toLowerCase();\n        var selectedFileSize = newFile?.size / 1024 / 1024; // size in mib\n\n        if (imageFormats.indexOf(fileType) < 0 || (selectedFileSize > 10)) {\n            setShowToast(true, \"The file must be in proper format or size.\")\n            return;\n        }\n\n        if (imageFormats.includes(fileType) && selectedFileSize > 10) { // image validations\n            setShowToast(true, \"The image file size must be below 10 MB.\")\n            return;\n        }\n\n        formData.append('file', newFile);\n        const res = await onFileUpload(formData)\n        if (res.success) {\n            let link: string = res.imgUrl;\n            let check_type: any = imageFormats.includes(fileType) ? 1 : 2;\n            setFilesUrl((prev: Array<any>) => [...prev, {\n                \"mediaType\": check_type,\n                \"link\": link\n            }]);\n            setLocalFiles((prev: any) => ({ ...prev, newFile }));\n        }\n    }\n\n    const renderbyFileFormat = (item: any, index: any) => {\n        let split_item_format = item.split('.');\n        let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n        let split_item_name = item.split('/');\n        let get_split_name = split_item_name[split_item_name.length - 1];\n        let image_render: any = null;\n        if (get_split_fromat) {\n            if (imageFormats.includes(get_split_fromat)) {\n                image_render = <img title={get_split_name} src={item} alt=\"media\" />\n            }\n            return (\n                <figure className=\"img_video\">\n                    {image_render}\n                    <img\n                        onClick={() => { removeFromItem(index) }}\n                        src={close} alt=\"remove\" className=\"remove\" />\n                    {/* <span style={{ fontSize: '10px' }}>{get_split_name}</span> */}\n                </figure>\n            )\n        }\n    }\n\n\n    const isValidCheck = () => {\n        if (!reason?.length || reason?.length > 250) {\n            return true;\n        }\n\n        return false;\n    }\n\n\n    return (\n        <div className=\"flex_row\">\n            <div className=\"flex_col_sm_12\">\n                <div className=\"relate\">\n                    <button onClick={toggleBack} className=\"back\"></button>\n                    <span className=\"xs_sub_title\">{jobName}</span>\n                </div>\n                <span className=\"sub_title\">Decline milestone</span>\n                <p className=\"commn_para\">Please write your reason for declining the milestone</p>\n                <div className=\"flex_row\">\n                    <div className=\"flex_col_sm_7\">\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">Your reason</label>\n                            <div className=\"text_field\">\n                                <textarea\n                                    value={reason}\n                                    onChange={(e: any) => { setReason(e.target.value) }}\n                                    placeholder=\"Your reason...\"\n                                ></textarea>\n                            <span className=\"char_count\">{'character length: '}{reason?.length + ' / 250'}</span>\n                            </div>\n                        {reason?.length > 250 && (\n                            <span className=\"error_msg\">{'Maximum 250 characters are allowed.'}</span>\n                            )}\n                            </div>\n                    </div>\n                </div>\n                <div className=\"upload_img_video\">\n                    {filesUrl?.length ?\n                        filesUrl.map((item: any, index: number) => (renderbyFileFormat(item.link, index)))\n                        : null}\n\n                    {filesUrl?.length < 3 ? (\n                        <React.Fragment>\n                            <label className=\"upload_media\" htmlFor=\"upload_img_video\">\n                                <img src={addMedia} alt=\"\" />\n                            </label>\n\n                            <input\n                                type=\"file\"\n                                accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                                style={{ display: \"none\" }}\n                                onChange={onFileChange}\n                                id=\"upload_img_video\"\n                            />\n                        </React.Fragment>\n                    ) : null}\n                </div>\n                <button\n                    onClick={onSubmitDecline}\n                    className={`fill_btn full_btn btn-effect ${isValidCheck() ? 'disable_btn' : ''}`}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default DeclineMilestone;\n"]},"metadata":{},"sourceType":"module"}