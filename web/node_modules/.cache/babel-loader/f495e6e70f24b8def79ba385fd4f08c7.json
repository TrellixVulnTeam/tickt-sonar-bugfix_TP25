{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{connect}from'react-redux';import InfiniteScroll from'react-infinite-scroll-component';import storageService from'../../utils/storageService';import{getJobsBWTradieBuilder}from'../../redux/jobs/actions';import{renderTimeWithCustomFormat}from'../../utils/common';import noData from'../../assets/images/no-search-data.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChooseJobToStartChat=function ChooseJobToStartChat(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),editItem=_useState2[0],setEditItems=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),jobId=_useState4[0],setJobId=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),jobName=_useState6[0],setJobName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),jobList=_useState8[0],setJobList=_useState8[1];var _useState9=useState(1),_useState10=_slicedToArray(_useState9,2),pageNo=_useState10[0],setPageNo=_useState10[1];var _useState11=useState(1),_useState12=_slicedToArray(_useState11,2),totalCount=_useState12[0],setTotalCount=_useState12[1];var _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),hasMoreItems=_useState14[0],setHasMoreItems=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),oppUserId=_useState16[0],setOppUserId=_useState16[1];var checkOnClick=function checkOnClick(e,jobId,jobName){if(editItem[jobId]){setEditItems({});setJobId('');setJobName('');return;}setEditItems(function(prev){return _defineProperty({},jobId,e.target.checked);});setJobId(jobId);setJobName(jobName);};useEffect(function(){callJobList();},[]);var callJobList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _props$history,_props$history$locati;var oppUsrId,data,res,_res$result,_res$result2,_res$result2$data,_res$result3,allJobs,_res$result4;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(jobList.length>=totalCount)){_context.next=3;break;}setHasMoreItems(false);return _context.abrupt(\"return\");case 3:console.log('props: ',props);oppUsrId=new URLSearchParams((_props$history=props.history)===null||_props$history===void 0?void 0:(_props$history$locati=_props$history.location)===null||_props$history$locati===void 0?void 0:_props$history$locati.state).get(storageService.getItem('userType')===1?'builderId':'tradieId');console.log('oppUsrId: ',oppUsrId);setOppUserId(oppUsrId);data={oppUserId:oppUsrId,page:pageNo,perPage:10,user_type:storageService.getItem('userType')===1?2:1};_context.next=10;return getJobsBWTradieBuilder(data);case 10:res=_context.sent;if(res.success){allJobs=[].concat(_toConsumableArray(jobList),_toConsumableArray((_res$result=res.result)===null||_res$result===void 0?void 0:_res$result.data));if(((_res$result2=res.result)===null||_res$result2===void 0?void 0:(_res$result2$data=_res$result2.data)===null||_res$result2$data===void 0?void 0:_res$result2$data.length)<10){setHasMoreItems(false);}setJobList(allJobs);setPageNo(pageNo+1);if(((_res$result3=res.result)===null||_res$result3===void 0?void 0:_res$result3.totalCount)!==totalCount){setTotalCount((_res$result4=res.result)===null||_res$result4===void 0?void 0:_res$result4.totalCount);}}case 12:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref2.apply(this,arguments);};}();var handleSubmit=function handleSubmit(){var _storageService$getIt,_storageService$getIt2;props.history.push({pathname:\"/chat\",state:_objectSpread(_objectSpread(_objectSpread({},storageService.getItem('userType')===1?{tradieId:(_storageService$getIt=storageService.getItem('userInfo'))===null||_storageService$getIt===void 0?void 0:_storageService$getIt._id}:{builderId:(_storageService$getIt2=storageService.getItem('userInfo'))===null||_storageService$getIt2===void 0?void 0:_storageService$getIt2._id}),storageService.getItem('userType')===1?{builderId:oppUserId}:{tradieId:oppUserId}),{},{jobId:jobId,jobName:jobName})});};return/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:jobList.length,next:callJobList,hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(\"h4\",{}),children:/*#__PURE__*/_jsx(\"div\",{className:\"app_wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"section_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex_row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:function onClick(){return props.history.goBack();}}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:'Choose the job'})]})}),!props.isLoading&&(jobList===null||jobList===void 0?void 0:jobList.length)===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noData,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"You must have worked on at least a single job with the \".concat(storageService.getItem('userType')===1?'builder':'tradesperson',\" to start conversation with them.\")})]})]})}),(jobList===null||jobList===void 0?void 0:jobList.length)>0&&/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"fill_btn full_btn btn-effect \".concat(!Object.keys(editItem).length&&!jobId&&!jobName?'disable_btn':''),children:\"Start chat\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_5\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"milestones\",children:(jobList===null||jobList===void 0?void 0:jobList.length)>0&&jobList.map(function(i,index){var item=i.jobData;return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox_wrap agree_check\",children:[/*#__PURE__*/_jsx(\"input\",{checked:editItem[item===null||item===void 0?void 0:item._id]==true?true:false,onChange:function onChange(e){checkOnClick(e,item===null||item===void 0?void 0:item._id,item===null||item===void 0?void 0:item.jobName);},className:\"filter-type filled-in\",type:\"checkbox\",id:\"milestone\".concat(index)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"milestone\".concat(index),children:\"\".concat(item===null||item===void 0?void 0:item.tradeName)}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"span\",{children:item===null||item===void 0?void 0:item.jobName}),/*#__PURE__*/_jsx(\"span\",{children:renderTimeWithCustomFormat(item===null||item===void 0?void 0:item.from_date,item===null||item===void 0?void 0:item.to_date,'',['DD MMM','DD MMM YY'])})]})]})},index);})})})})]})})})});};var mapStateToProps=function mapStateToProps(state){return{isLoading:state.common.isLoading};};export default connect(mapStateToProps,null)(ChooseJobToStartChat);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chooseJobToStartChat/chooseJobToStartChat.tsx"],"names":["useState","useEffect","connect","InfiniteScroll","storageService","getJobsBWTradieBuilder","renderTimeWithCustomFormat","noData","ChooseJobToStartChat","props","editItem","setEditItems","jobId","setJobId","jobName","setJobName","jobList","setJobList","pageNo","setPageNo","totalCount","setTotalCount","hasMoreItems","setHasMoreItems","oppUserId","setOppUserId","checkOnClick","e","prev","target","checked","callJobList","length","console","log","oppUsrId","URLSearchParams","history","location","state","get","getItem","data","page","perPage","user_type","res","success","allJobs","result","handleSubmit","push","pathname","tradieId","_id","builderId","goBack","isLoading","Object","keys","map","i","index","item","jobData","tradeName","from_date","to_date","mapStateToProps","common"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport storageService from '../../utils/storageService';\nimport { getJobsBWTradieBuilder } from '../../redux/jobs/actions';\nimport { renderTimeWithCustomFormat } from '../../utils/common';\n\nimport noData from '../../assets/images/no-search-data.png';\n\nconst ChooseJobToStartChat = (props: any) => {\n\n    const [editItem, setEditItems] = useState<{ [index: string]: any }>({});\n    const [jobId, setJobId] = useState('');\n    const [jobName, setJobName] = useState('');\n\n    const [jobList, setJobList] = useState<Array<any>>([]);\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [totalCount, setTotalCount] = useState<number>(1);\n    const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n    const [oppUserId, setOppUserId] = useState<string | null>('');\n\n    const checkOnClick = (e: any, jobId: string, jobName: string) => {\n        if (editItem[jobId]) {\n            setEditItems({});\n            setJobId('');\n            setJobName('');\n            return;\n        }\n        setEditItems((prev) => ({ [jobId]: e.target.checked }));\n        setJobId(jobId);\n        setJobName(jobName);\n    }\n\n    useEffect(() => {\n        callJobList();\n    }, []);\n\n    const callJobList = async () => {\n        if (jobList.length >= totalCount) {\n            setHasMoreItems(false);\n            return;\n        }\n        console.log('props: ', props);\n        const oppUsrId = new URLSearchParams(props.history?.location?.state).get(storageService.getItem('userType') === 1 ? 'builderId' : 'tradieId');\n        console.log('oppUsrId: ', oppUsrId);\n        setOppUserId(oppUsrId);\n        const data = {\n            oppUserId: oppUsrId,\n            page: pageNo,\n            perPage: 10,\n            user_type: storageService.getItem('userType') === 1 ? 2 : 1\n        }\n        const res = await getJobsBWTradieBuilder(data);\n        if (res.success) {\n            const allJobs = [...jobList, ...res.result?.data];\n            if (res.result?.data?.length < 10) {\n                setHasMoreItems(false);\n            }\n            setJobList(allJobs);\n            setPageNo(pageNo + 1);\n            if (res.result?.totalCount !== totalCount) {\n                setTotalCount(res.result?.totalCount);\n            }\n        }\n    }\n\n    const handleSubmit = () => {\n        props.history.push({\n            pathname: `/chat`,\n            state: {\n                ...(storageService.getItem('userType') === 1 ? { tradieId: storageService.getItem('userInfo')?._id } : { builderId: storageService.getItem('userInfo')?._id }),\n                ...(storageService.getItem('userType') === 1 ? { builderId: oppUserId } : { tradieId: oppUserId }),\n                jobId: jobId,\n                jobName: jobName\n            }\n        })\n    }\n\n    return (\n        <InfiniteScroll\n            dataLength={jobList.length}\n            next={callJobList}\n            hasMore={hasMoreItems}\n            loader={<h4></h4>}\n        >\n            <div className=\"app_wrapper\">\n                <div className=\"section_wrapper\">\n                    <div className=\"custom_container\">\n                        <div className=\"form_field\">\n                            <div className=\"flex_row\">\n                                <div className=\"flex_col_sm_5\">\n                                    <div className=\"relate\">\n                                        <button\n                                            className=\"back\"\n                                            onClick={() => props.history.goBack()}\n                                        >\n                                        </button>\n                                        <span className=\"title\">\n                                            {'Choose the job'}\n                                        </span>\n                                    </div>\n                                </div>\n\n                                {!props.isLoading && jobList?.length === 0 && <div className=\"no_record\">\n                                    <figure className=\"no_img\">\n                                        <img src={noData} alt=\"data not found\" />\n                                    </figure>\n                                    {/* <span>No Jobs Found</span> */}\n                                    <span>{`You must have worked on at least a single job with the ${storageService.getItem('userType') === 1 ? 'builder' : 'tradesperson'} to start conversation with them.`}</span>\n                                </div>}\n\n                            </div>\n                        </div>\n\n                        {jobList?.length > 0 && <div className=\"form_field\">\n                            <button onClick={handleSubmit} className={`fill_btn full_btn btn-effect ${(!Object.keys(editItem).length && !jobId && !jobName) ? 'disable_btn' : ''}`}>\n                                Start chat\n                            </button>\n                        </div>}\n\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n                                <ul className={`milestones`}>\n                                    {jobList?.length > 0 &&\n                                        jobList.map((i: any, index: any) => {\n                                            const item: any = i.jobData;\n                                            return (\n                                                <li key={index}>\n                                                    <div className=\"checkbox_wrap agree_check\">\n                                                        <input\n                                                            checked={editItem[item?._id] == true ? true : false}\n                                                            onChange={(e: any) => { checkOnClick(e, item?._id, item?.jobName) }}\n                                                            className=\"filter-type filled-in\"\n                                                            type=\"checkbox\"\n                                                            id={`milestone${index}`} />\n                                                        <label\n                                                            htmlFor={`milestone${index}`}>\n                                                            {`${item?.tradeName}`}\n                                                        </label>\n                                                        <div className=\"info\">\n                                                            <span>{item?.jobName}</span>\n                                                            <span>\n                                                                {renderTimeWithCustomFormat(\n                                                                    item?.from_date,\n                                                                    item?.to_date,\n                                                                    '',\n                                                                    ['DD MMM', 'DD MMM YY']\n                                                                )}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            )\n                                        })}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </InfiniteScroll>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    isLoading: state.common.isLoading\n});\n\nexport default connect(mapStateToProps, null)(ChooseJobToStartChat);\n\n"]},"metadata":{},"sourceType":"module"}