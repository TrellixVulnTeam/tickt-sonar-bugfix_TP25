{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/editMilestones/addEditMile.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Modal from '@material-ui/core/Modal';\nimport { renderTimeWithCustomFormat } from '../../../../utils/common';\nimport { setShowToast } from '../../../../redux/common/actions'; // @ts-ignore\n\nimport { DateRangePicker } from '../../../../plugins/react-date-range/dist/index';\nimport '../../../../plugins/react-date-range/dist/styles.css';\nimport '../../../../plugins/react-date-range/dist/theme/default.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// @ts-ignore\n// import { DateRangePicker } from 'react-date-range';\n// import 'react-date-range/dist/styles.css'; // main style file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\n// for error messages\nconst label = {\n  name: 'Milestone Name',\n  duration: 'From Date',\n  recommended: 'Recommended Hours'\n};\nconst pattern = \"^([0-9][0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\nconst STRING_ERROR = 'Selected data is fully engage';\n\nconst AddEditMile = props => {\n  _s();\n\n  var _props$milestones2, _props$milestones3;\n\n  const {\n    resetItems,\n    item\n  } = props;\n  const [isToggle, setToggle] = useState(false);\n  const [stateData, setStateData] = useState({\n    name: '',\n    isPhoto: false,\n    duration: '',\n    recommended: '',\n    status: -1,\n    order: -1\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    duration: '',\n    hours: '',\n    pattern_error: ''\n  });\n  const [toggleCalender, setToggleCalender] = useState(false);\n  const [changesFor, setChangesFor] = useState({\n    name: false,\n    isPhoto: false,\n    duration: false,\n    recommended: false\n  });\n  const [toggleItem, setToggleItem] = useState(false);\n  const [calenderItems, setCalender] = useState({\n    startDate: '',\n    //new Date(),\n    endDate: '',\n    //new Date(),\n    key: 'selection'\n  });\n\n  const toggleCal = () => {\n    setToggleCalender(prev => !prev);\n  };\n\n  const checkHoursVal = (value, lable, name) => {\n    if (value === null || value === void 0 ? void 0 : value.length) {\n      if (value.match(pattern) !== null) {\n        if (!(+value.split(':')[1] % 5 === 0)) {\n          return 'Time should be in mutiples of 5 like 10:05, 10:10';\n        }\n\n        return '';\n      } else {\n        return 'Please enter a valid pattern like : 10:05';\n      }\n    }\n\n    return `${label[name]} is required.`;\n  };\n\n  const isInvalid = (name, value) => {\n    switch (name) {\n      case 'name':\n        return !value.length ? `${label[name]} is required.` : value.length > 50 ? 'Maximum 50 characters are allowed.' : '';\n\n      case 'duration':\n        return !value.length ? `${label[name]} is required.` : '';\n\n      case 'recommended':\n        return checkHoursVal(value, label, name);\n    }\n  };\n\n  const handleChange = (name, value) => {\n    let error_clone = {};\n\n    if (name === \"name\") {\n      value = value.trimLeft().replace(/[^a-zA-Z|0-9 ]/g, \"\");\n    }\n\n    if (name === \"recommended\") {\n      value = value.trimLeft();\n    }\n\n    if (['name', 'duration', 'recommended'].includes(name)) {\n      error_clone[name] = isInvalid(name, value);\n    }\n\n    setStateData(prev => ({ ...prev,\n      [name]: value\n    }));\n    setErrors(error_clone);\n  };\n\n  const onMountCallable = () => {\n    let count_times = {}; // let randomColors = getRandomColors();\n\n    let milestones = props.milestones;\n    let filteredItems = milestones.filter(item => {\n      let toDate = item === null || item === void 0 ? void 0 : item.toDate;\n      let fromDate = item === null || item === void 0 ? void 0 : item.fromDate;\n\n      if (fromDate) {\n        let from_format = moment(fromDate).format('MM-DD-YYYY');\n        item['from_date'] = from_format;\n        count_times[from_format] = 0;\n      }\n\n      if (toDate) {\n        let to_format = moment(toDate).format('MM-DD-YYYY');\n        item['to_date'] = to_format;\n        count_times[to_format] = 0;\n      }\n\n      if (Object.keys(item).length) {\n        return item;\n      }\n    });\n    console.log({\n      filteredItems,\n      count_times\n    });\n\n    if (filteredItems === null || filteredItems === void 0 ? void 0 : filteredItems.length) {\n      filteredItems.forEach((item, index) => {\n        let to_date = item === null || item === void 0 ? void 0 : item.to_date;\n        let from_date = item === null || item === void 0 ? void 0 : item.from_date;\n        let color_index = index;\n\n        if (index > 500) {\n          // make random index from the limit 0 to 500.\n          // if the index is greater than 500.\n          color_index = Math.floor(Math.random() * 500 + 1);\n        }\n\n        if (!to_date && from_date) {\n          if (count_times[from_date] > -1) {\n            count_times[from_date]++;\n          }\n\n          let from_element = document.getElementsByClassName(`color_${count_times[from_date]}_${from_date}`);\n\n          if (from_element) {\n            let element_from = from_element[0];\n\n            if ((from_element === null || from_element === void 0 ? void 0 : from_element.length) > 1) {\n              element_from = from_element[1];\n            }\n\n            if (element_from) {\n              element_from.classList.add(`color_${color_index}`);\n            }\n          }\n        }\n\n        if (to_date && from_date) {\n          if (count_times[from_date] > -1) {\n            count_times[from_date]++;\n          }\n\n          if (count_times[to_date] > -1) {\n            count_times[to_date]++;\n          } // let colorbyIndex = randomColors[index];\n\n\n          let from_element = document.getElementsByClassName(`color_${count_times[from_date]}_${from_date}`);\n\n          if (from_element) {\n            let element_from = null;\n\n            if ((from_element === null || from_element === void 0 ? void 0 : from_element.length) > 1) {\n              if (!from_element[0].parentElement.parentElement.classList.contains('rdrDayPassive')) {\n                element_from = from_element[0];\n              } else {\n                element_from = from_element[1];\n              }\n            } else {\n              element_from = from_element[0];\n            }\n\n            if (element_from) {\n              element_from.classList.add(`color_${color_index}`);\n            }\n          }\n\n          let to_element = document.getElementsByClassName(`color_${count_times[to_date]}_${to_date}`);\n\n          if (to_element) {\n            let element_to = null;\n\n            if ((to_element === null || to_element === void 0 ? void 0 : to_element.length) > 1) {\n              if (!to_element[0].parentElement.parentElement.classList.contains('rdrDayPassive')) {\n                element_to = to_element[0];\n              } else {\n                element_to = to_element[1];\n              }\n            } else {\n              element_to = to_element[0];\n            }\n\n            if (element_to) {\n              element_to.classList.add(`color_${color_index}`);\n            }\n          }\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const {\n      milestones,\n      editMile\n    } = props;\n\n    if (editMile > -1) {\n      let editItem = milestones[editMile];\n\n      if (editItem) {\n        setStateData(prev => ({\n          order: (editItem === null || editItem === void 0 ? void 0 : editItem.order) ? editItem === null || editItem === void 0 ? void 0 : editItem.order : -1,\n          name: editItem.milestoneName,\n          isPhoto: editItem.isPhotoevidence,\n          duration: renderTimeWithCustomFormat(editItem.fromDate, editItem.toDate, '', ['DD MMM', 'DD MMM YY']),\n          recommended: editItem === null || editItem === void 0 ? void 0 : editItem.recommendedHours,\n          status: editItem === null || editItem === void 0 ? void 0 : editItem.status\n        }));\n        setCalender({\n          startDate: moment(editItem === null || editItem === void 0 ? void 0 : editItem.fromDate).isValid() ? moment(editItem === null || editItem === void 0 ? void 0 : editItem.fromDate).toDate() : '',\n          endDate: moment(editItem === null || editItem === void 0 ? void 0 : editItem.toDate).isValid() ? moment(editItem === null || editItem === void 0 ? void 0 : editItem.toDate).toDate() : '',\n          key: 'selection'\n        });\n      }\n    }\n\n    const interval = setInterval(() => {\n      onMountCallable();\n    }, 2000);\n    return () => {\n      console.log(`clearing interval`);\n      clearInterval(interval);\n    }; // onMountCallable();\n  }, []);\n\n  const checkIfChange = () => {\n    var _stateData$name, _stateData$recommende;\n\n    let renderDuration = renderTimeWithCustomFormat(calenderItems.startDate, calenderItems.endDate, '', ['DD MMM', 'DD MMM YY'], 'Choose');\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : (_stateData$name = stateData.name) === null || _stateData$name === void 0 ? void 0 : _stateData$name.length) && !(stateData === null || stateData === void 0 ? void 0 : stateData.isPhoto) && renderDuration === 'Choose' && !(stateData === null || stateData === void 0 ? void 0 : (_stateData$recommende = stateData.recommended) === null || _stateData$recommende === void 0 ? void 0 : _stateData$recommende.length)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const checkBeforeExist = (time, milestones_) => {\n    let count_times = {};\n    let catch_boolean = true;\n    let milestoneItems = props === null || props === void 0 ? void 0 : props.milestones;\n    milestoneItems.forEach(mile => {\n      let mile_start = mile.from_date;\n      let mile_end = mile.to_date;\n      let time_start = moment(time.fromDate).isValid() ? moment(time.fromDate).format('MM-DD-YYYY') : '';\n      let time_end = moment(time.toDate).isValid() ? moment(time.toDate).format('MM-DD-YYYY') : '';\n\n      if (count_times[mile_start] == undefined) {\n        count_times[mile_start] = 1;\n      } else {\n        count_times[mile_start] = count_times[mile_start] + 1;\n      }\n\n      if (count_times[mile_end] == undefined) {\n        count_times[mile_end] = 1;\n      } else {\n        count_times[mile_end] = count_times[mile_end] + 1;\n      }\n\n      if (count_times[mile_start] === 4) {\n        if (mile_start == time_start || mile_start == time_end) {\n          setShowToast(true, STRING_ERROR);\n          catch_boolean = false;\n        }\n      } else {\n        if (count_times[time_start] === 4) {\n          setShowToast(true, STRING_ERROR);\n          catch_boolean = false;\n        }\n      }\n\n      if (count_times[mile_end] === 4) {\n        if (mile_end == time_start || mile_end == time_end) {\n          setShowToast(true, STRING_ERROR);\n          catch_boolean = false;\n        }\n      } else {\n        if (count_times[time_end] === 4) {\n          setShowToast(true, STRING_ERROR);\n          catch_boolean = false;\n        }\n      }\n    });\n    return catch_boolean;\n  };\n\n  const handleCalender = date => {\n    var _props$milestones;\n\n    let time = {\n      fromDate: date.selection.startDate,\n      toDate: date.selection.endDate\n    };\n    console.log({\n      selection: date.selection\n    });\n    let index = props === null || props === void 0 ? void 0 : (_props$milestones = props.milestones) === null || _props$milestones === void 0 ? void 0 : _props$milestones.length;\n    let isChecked = checkBeforeExist(time);\n\n    if (isChecked) {\n      addTimeToMileStone(time, index);\n    } // setCalender(date.selection);\n\n  };\n\n  const addTimeToMileStone = (time, index, skip) => {\n    let milestone_clone = props === null || props === void 0 ? void 0 : props.milestones;\n    let checkIsValid = true;\n\n    if (!skip && (milestone_clone === null || milestone_clone === void 0 ? void 0 : milestone_clone.length)) {\n      let filter_milestone = milestone_clone.filter((item_mile, index_mile) => index_mile !== index);\n\n      if (filter_milestone === null || filter_milestone === void 0 ? void 0 : filter_milestone.length) {\n        filter_milestone.forEach(mile => {\n          let msw = moment(mile.fromDate).isValid();\n          let mew = moment(mile.toDate).isValid();\n          let tsw = moment(time.fromDate).isValid();\n          let tew = moment(time.toDate).isValid();\n          let mile_start = mile.fromDate;\n          let mile_end = mile.toDate;\n          let time_start = time.fromDate;\n          let time_end = time.toDate;\n\n          if (msw && mew) {\n            if (tsw && tew) {\n              let checkIfSame = moment(time_start).isSame(moment(mile_start)) && moment(time_end).isSame(moment(mile_end)); // if (checkIfSame) {\n              //     checkIsValid = true;\n              // }\n              // if (!checkIfSame) {\n              //     if (\n              //         moment(time_start).isSameOrAfter(moment(mile_start)) &&\n              //         moment(time_start).isSameOrBefore(moment(mile_end))\n              //     ) {\n              //         checkIsValid = false;\n              //     }\n              //     if (\n              //         moment(time_end).isSameOrAfter(moment(mile_start)) &&\n              //         moment(time_end).isSameOrBefore(moment(mile_end))\n              //     ) {\n              //         checkIsValid = false;\n              //     }\n              // }\n            } // if (!tew) {\n            //     if (moment(time_start).isSameOrAfter(moment(mile_start)) && moment(time_start).isSameOrBefore(moment(mile_start))) {\n            //         checkIsValid = false;\n            //     }\n            // }\n\n          } // here conditions\n\n        });\n      }\n    }\n\n    console.log({\n      checkIsValid\n    });\n\n    if (!checkIsValid) {\n      setShowToast(true, 'Please add unique date.');\n      return;\n    }\n\n    setCalender({\n      startDate: moment(time.fromDate).toDate(),\n      endDate: moment(time.toDate).toDate(),\n      key: \"selection\"\n    }); // milestone_clone[index]['fromDate'] = time.fromDate;\n    // milestone_clone[index]['to_date'] = time.to_date;\n    // setMileStones(milestone_clone);\n    // Array.isArray(forceupdate) ? setForceUpdate({}) : setForceUpdate([]);\n  }; // before render check\n\n\n  const {\n    name,\n    isPhoto,\n    recommended,\n    duration\n  } = stateData;\n  let check_errors = false;\n  let renderDuration = renderTimeWithCustomFormat(calenderItems.startDate, calenderItems.endDate, '', ['DD MMM', 'DD MMM YY', true], 'Choose');\n\n  if (!(name === null || name === void 0 ? void 0 : name.length) || !(recommended === null || recommended === void 0 ? void 0 : recommended.length) || renderDuration === 'Choose') {\n    check_errors = true;\n  }\n\n  let ItemCal = calenderItems;\n\n  if (!moment(calenderItems === null || calenderItems === void 0 ? void 0 : calenderItems.startDate).isValid()) {\n    ItemCal = {\n      startDate: new Date(),\n      endDate: '',\n      key: 'selection'\n    };\n  }\n\n  let min_date = moment(item === null || item === void 0 ? void 0 : item.fromDate).isValid() ? moment(item === null || item === void 0 ? void 0 : item.fromDate).toDate() : new Date();\n  let max_date = moment(item === null || item === void 0 ? void 0 : item.toDate).isValid() && !moment(item === null || item === void 0 ? void 0 : item.fromDate).isSame(item === null || item === void 0 ? void 0 : item.toDate) ? moment(item === null || item === void 0 ? void 0 : item.toDate).toDate() : moment().add(2, 'years').toDate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_12\",\n      children: [/*#__PURE__*/_jsxDEV(Dialog, {\n        open: toggleItem // onClose={handleClose}\n        ,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: 'If you click the back arrow, you lose the data, do you want to save it ?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setToggleItem(prev => !prev);\n            },\n            color: \"primary\",\n            children: 'Yes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setToggleItem(prev => !prev);\n              resetItems();\n            },\n            color: \"primary\",\n            autoFocus: true,\n            children: 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal \",\n        open: toggleCalender,\n        onClose: () => {\n          toggleCal();\n        },\n        \"aria-labelledby\": \"calender-active-modal-title\",\n        \"aria-describedby\": \"calender-active-modal-title\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '12px 20px 0px'\n          },\n          className: \"item-modal-ctm custom_wh portfolio_preview \",\n          children: [console.log({\n            jobDetail: props.jobDetail\n          }), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n            ranges: [ItemCal],\n            onChange: date => {\n              handleCalender(date);\n              setChangesFor(prev => ({ ...prev,\n                duration: true\n              }));\n            },\n            months: 2,\n            direction: \"horizontal\",\n            moveRangeOnFirstSelection: false,\n            rangeColors: [\"#fee600\", \"#b5b5b5\"],\n            showDateDisplay: false,\n            showSelectionPreview: true,\n            showPreview: true,\n            minDate: min_date,\n            maxDate: max_date,\n            fixedHeight: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_7\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if (checkIfChange()) {\n                    setToggleItem(prev => !prev);\n                    return;\n                  }\n\n                  resetItems();\n                },\n                className: \"back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: (item === null || item === void 0 ? void 0 : item.jobName) || ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sub_title\",\n              children: [`${props.editMile === '' ? '' : 'Edit '}`, `${props.editMile === '' && (props === null || props === void 0 ? void 0 : props.isSame) ? `Milestones ${(props === null || props === void 0 ? void 0 : (_props$milestones2 = props.milestones) === null || _props$milestones2 === void 0 ? void 0 : _props$milestones2.length) + 1}` : props.editMile !== '' && props.editMile > -1 && (props === null || props === void 0 ? void 0 : props.isSame) ? `Milestones ${props.editMile + 1}` : props.editMile !== '' && props.editMile > -1 && !(props === null || props === void 0 ? void 0 : props.isSame) ? `Milestone ${props.editMile + 1}` : props.editMile === '' && !(props === null || props === void 0 ? void 0 : props.isSame) ? `Milestone ${(props === null || props === void 0 ? void 0 : (_props$milestones3 = props.milestones) === null || _props$milestones3 === void 0 ? void 0 : _props$milestones3.length) + 1}` : null}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_7\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: 'Milestone Name'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter Milestone Name\",\n                onChange: e => {\n                  handleChange('name', e.target.value);\n                  setChangesFor(prev => ({ ...prev,\n                    name: true\n                  }));\n                },\n                value: name,\n                name: \"milestone_name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors === null || errors === void 0 ? void 0 : errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox_wrap agree_check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: () => {\n                  setStateData(prev => ({ ...prev,\n                    isPhoto: !prev.isPhoto\n                  }));\n                  setChangesFor(prev => ({ ...prev,\n                    isPhoto: true\n                  }));\n                },\n                checked: isPhoto,\n                className: \"filter-type filled-in\",\n                type: \"checkbox\",\n                id: \"milestone1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"milestone1\",\n                children: 'Photo evidence required'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"f_spacebw\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: 'Duration of milestone'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  toggleCal();\n                },\n                className: \"fill_btn fill_grey_btn choose_btn\",\n                children: renderDuration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: 'Recommended Hours'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => {\n                  handleChange('recommended', e.target.value);\n                  setChangesFor(prev => ({ ...prev,\n                    recommended: true\n                  }));\n                },\n                autoComplete: \"off\",\n                value: recommended,\n                type: \"text\",\n                placeholder: \"Enter Recommended Hours\",\n                name: \"recommended_hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors.recommended\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                let description = '';\n\n                if (Object.values(changesFor).includes(true)) {\n                  // description = `This job has Milestones change request with changes in ${changesFor?.name ? 'Milestone Name, ' : ''}${changesFor?.isPhoto ? 'Photo evidence required, ' : ''}${changesFor?.duration ? 'Duration of Milestone, ' : ''}${changesFor?.recommended ? 'Recommended Hours ' : ''}.`;\n                  description = `${stateData.name} details are updated.`;\n                }\n\n                if (props.editMile !== '') {\n                  // edit\n                  if (props === null || props === void 0 ? void 0 : props.addNewMile) {\n                    props === null || props === void 0 ? void 0 : props.addNewMile({\n                      milestoneName: stateData.name,\n                      isPhotoevidence: stateData.isPhoto,\n                      order: stateData.order,\n                      index: props.editMile,\n                      status: stateData.status,\n                      recommendedHours: stateData.recommended,\n                      fromDate: calenderItems.startDate,\n                      toDate: calenderItems.endDate,\n                      description: description\n                    });\n                  }\n                } else {\n                  // add\n                  if (props === null || props === void 0 ? void 0 : props.addNewMile) {\n                    var _props$milestones4;\n\n                    props === null || props === void 0 ? void 0 : props.addNewMile({\n                      milestoneName: stateData.name,\n                      isPhotoevidence: stateData.isPhoto,\n                      status: -1,\n                      order: (props === null || props === void 0 ? void 0 : (_props$milestones4 = props.milestones) === null || _props$milestones4 === void 0 ? void 0 : _props$milestones4.length) + 1,\n                      recommendedHours: stateData.recommended,\n                      fromDate: calenderItems.startDate,\n                      toDate: calenderItems.endDate,\n                      description: description\n                    });\n                  }\n                }\n\n                props.resetItems();\n              },\n              className: `fill_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`,\n              children: 'Continue'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddEditMile, \"6Z0UybEawkh84/6AkTviGBVpC6o=\");\n\n_c = AddEditMile;\nexport default AddEditMile;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditMile\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/editMilestones/addEditMile.tsx"],"names":["React","useEffect","useState","moment","Button","Dialog","DialogActions","DialogTitle","Modal","renderTimeWithCustomFormat","setShowToast","DateRangePicker","label","name","duration","recommended","pattern","STRING_ERROR","AddEditMile","props","resetItems","item","isToggle","setToggle","stateData","setStateData","isPhoto","status","order","errors","setErrors","hours","pattern_error","toggleCalender","setToggleCalender","changesFor","setChangesFor","toggleItem","setToggleItem","calenderItems","setCalender","startDate","endDate","key","toggleCal","prev","checkHoursVal","value","lable","length","match","split","isInvalid","handleChange","error_clone","trimLeft","replace","includes","onMountCallable","count_times","milestones","filteredItems","filter","toDate","fromDate","from_format","format","to_format","Object","keys","console","log","forEach","index","to_date","from_date","color_index","Math","floor","random","from_element","document","getElementsByClassName","element_from","classList","add","parentElement","contains","to_element","element_to","editMile","editItem","milestoneName","isPhotoevidence","recommendedHours","isValid","interval","setInterval","clearInterval","checkIfChange","renderDuration","checkBeforeExist","time","milestones_","catch_boolean","milestoneItems","mile","mile_start","mile_end","time_start","time_end","undefined","handleCalender","date","selection","isChecked","addTimeToMileStone","skip","milestone_clone","checkIsValid","filter_milestone","item_mile","index_mile","msw","mew","tsw","tew","checkIfSame","isSame","check_errors","ItemCal","Date","min_date","max_date","padding","jobDetail","jobName","e","target","description","values","addNewMile"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { values } from 'lodash';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Modal from '@material-ui/core/Modal';\nimport { renderTimeWithCustomFormat } from '../../../../utils/common';\nimport { setShowToast } from '../../../../redux/common/actions';\n\n// @ts-ignore\nimport { DateRangePicker } from '../../../../plugins/react-date-range/dist/index';\nimport '../../../../plugins/react-date-range/dist/styles.css'\nimport '../../../../plugins/react-date-range/dist/theme/default.css'\nimport { randomColors as getRandomColors } from '../../../../utils/common'\n\n// @ts-ignore\n// import { DateRangePicker } from 'react-date-range';\n// import 'react-date-range/dist/styles.css'; // main style file\n// import 'react-date-range/dist/theme/default.css'; // theme css file\n\n// for error messages\nconst label: { [index: string]: string } = {\n    name: 'Milestone Name',\n    duration: 'From Date',\n    recommended: 'Recommended Hours',\n}\n\nconst pattern = \"^([0-9][0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\nconst STRING_ERROR = 'Selected data is fully engage';\nconst AddEditMile = (props: any) => {\n    const { resetItems, item } = props;\n    const [isToggle, setToggle] = useState(false);\n    const [stateData, setStateData] = useState({ name: '', isPhoto: false, duration: '', recommended: '', status: -1, order: -1 });\n    const [errors, setErrors] = useState<any>({ name: '', duration: '', hours: '', pattern_error: '' });\n    const [toggleCalender, setToggleCalender] = useState(false);\n\n    const [changesFor, setChangesFor] = useState({\n        name: false,\n        isPhoto: false,\n        duration: false,\n        recommended: false\n    })\n\n    const [toggleItem, setToggleItem] = useState(false);\n\n    const [calenderItems, setCalender] = useState<any>({\n        startDate: '', //new Date(),\n        endDate: '',//new Date(),\n        key: 'selection',\n    });\n\n    const toggleCal = () => {\n        setToggleCalender((prev: any) => !prev);\n    }\n\n    const checkHoursVal = (value: any, lable: any, name: any) => {\n        if (value?.length) {\n            if (value.match(pattern) !== null) {\n                if (!((+value.split(':')[1]) % 5 === 0)) {\n                    return 'Time should be in mutiples of 5 like 10:05, 10:10';\n                }\n                return '';\n            } else {\n                return 'Please enter a valid pattern like : 10:05'\n            }\n        }\n        return `${label[name]} is required.`\n    }\n\n    const isInvalid = (name: string, value: string) => {\n        switch (name) {\n            case 'name':\n                return !value.length ? `${label[name]} is required.` : value.length > 50 ? 'Maximum 50 characters are allowed.' : '';\n            case 'duration':\n                return !value.length ? `${label[name]} is required.` : '';\n            case 'recommended':\n                return checkHoursVal(value, label, name);\n        }\n    }\n\n\n    const handleChange = (name: any, value: any) => {\n        let error_clone: any = {};\n\n        if (name === \"name\") {\n            value = (value).trimLeft().replace(/[^a-zA-Z|0-9 ]/g, \"\")\n        }\n\n        if (name === \"recommended\") {\n            value = (value).trimLeft();\n        }\n\n        if (['name', 'duration', 'recommended'].includes(name)) {\n            error_clone[name] = isInvalid(name, value)\n        }\n\n        setStateData((prev: any) => ({\n            ...prev,\n            [name]: value\n        }));\n        setErrors(error_clone);\n    }\n\n\n\n    const onMountCallable = () => {\n        let count_times: any = {};\n        // let randomColors = getRandomColors();\n        let milestones = props.milestones;\n        let filteredItems = milestones.filter((item: any) => {\n            let toDate = item?.toDate;\n            let fromDate = item?.fromDate;\n\n            if (fromDate) {\n                let from_format = moment(fromDate).format('MM-DD-YYYY')\n                item['from_date'] = from_format;\n                count_times[from_format] = 0;\n            }\n\n            if (toDate) {\n                let to_format = moment(toDate).format('MM-DD-YYYY');\n                item['to_date'] = to_format;\n                count_times[to_format] = 0;\n            }\n\n            if (Object.keys(item).length) {\n                return item;\n            }\n        });\n\n        console.log({ filteredItems, count_times })\n\n        if (filteredItems?.length) {\n            filteredItems.forEach((item: any, index: any) => {\n                let to_date = item?.to_date;\n                let from_date = item?.from_date;\n                let color_index = index;\n                if (index > 500) {\n                    // make random index from the limit 0 to 500.\n                    // if the index is greater than 500.\n                    color_index = Math.floor((Math.random() * 500) + 1);\n                }\n\n                if (!to_date && from_date) {\n                    if (count_times[from_date] > -1) {\n                        count_times[from_date]++;\n                    }\n\n                    let from_element: any = document.getElementsByClassName(`color_${count_times[from_date]}_${from_date}`);\n                    if (from_element) {\n                        let element_from = from_element[0];\n                        if (from_element?.length > 1) {\n                            element_from = from_element[1];\n                        }\n\n                        if (element_from) {\n                            element_from.classList.add(`color_${color_index}`);\n                        }\n                    }\n                }\n\n                if (to_date && from_date) {\n                    if (count_times[from_date] > -1) {\n                        count_times[from_date]++;\n                    }\n\n                    if (count_times[to_date] > -1) {\n                        count_times[to_date]++;\n                    }\n\n                    // let colorbyIndex = randomColors[index];\n                    let from_element: any = document.getElementsByClassName(`color_${count_times[from_date]}_${from_date}`);\n                    if (from_element) {\n                        let element_from = null;\n\n                        if (from_element?.length > 1) {\n                            if (!from_element[0].parentElement.parentElement.classList.contains('rdrDayPassive')) {\n                                element_from = from_element[0];\n                            } else {\n                                element_from = from_element[1];\n                            }\n                        } else {\n                            element_from = from_element[0];\n                        }\n\n                        if (element_from) {\n                            element_from.classList.add(`color_${color_index}`)\n                        }\n                    }\n\n                    let to_element: any = document.getElementsByClassName(`color_${count_times[to_date]}_${to_date}`);\n                    if (to_element) {\n                        let element_to = null;\n                        if (to_element?.length > 1) {\n                            if (!to_element[0].parentElement.parentElement.classList.contains('rdrDayPassive')) {\n                                element_to = to_element[0];\n                            } else {\n                                element_to = to_element[1];\n                            }\n                        } else {\n                            element_to = to_element[0];\n                        }\n                        if (element_to) {\n                            element_to.classList.add(`color_${color_index}`);\n                        }\n                    }\n                }\n\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        const { milestones, editMile } = props;\n        if (editMile > -1) {\n            let editItem: any = milestones[editMile];\n            if (editItem) {\n                setStateData((prev: any) => ({\n                    order: editItem?.order ? editItem?.order : -1,\n                    name: editItem.milestoneName,\n                    isPhoto: editItem.isPhotoevidence,\n                    duration: renderTimeWithCustomFormat(editItem.fromDate, editItem.toDate, '', ['DD MMM', 'DD MMM YY']),\n                    recommended: editItem?.recommendedHours,\n                    status: editItem?.status\n                }));\n\n                setCalender({\n                    startDate: moment(editItem?.fromDate).isValid() ? moment(editItem?.fromDate).toDate() : '',\n                    endDate: moment(editItem?.toDate).isValid() ? moment(editItem?.toDate).toDate() : '',\n                    key: 'selection',\n                })\n            }\n        }\n\n        const interval = setInterval(() => {\n            onMountCallable();\n        }, 2000);\n\n        return () => {\n            console.log(`clearing interval`);\n            clearInterval(interval);\n        };\n        // onMountCallable();\n    }, []);\n\n    const checkIfChange = () => {\n        let renderDuration: any = renderTimeWithCustomFormat(\n            calenderItems.startDate,\n            calenderItems.endDate,\n            '',\n            ['DD MMM', 'DD MMM YY'],\n            'Choose'\n        );\n\n        if (!stateData?.name?.length && !stateData?.isPhoto && renderDuration === 'Choose' && !stateData?.recommended?.length) {\n            return false;\n        }\n        return true;\n    }\n\n    const checkBeforeExist = (time: any, milestones_?: any) => {\n        let count_times: any = {};\n        let catch_boolean: boolean = true;\n        let milestoneItems: any = props?.milestones;\n\n        milestoneItems.forEach((mile: any) => {\n\n            let mile_start = mile.from_date;\n            let mile_end = mile.to_date;\n\n            let time_start = moment(time.fromDate).isValid() ? moment(time.fromDate).format('MM-DD-YYYY') : '';\n            let time_end = moment(time.toDate).isValid() ? moment(time.toDate).format('MM-DD-YYYY') : '';\n\n\n            if (count_times[mile_start] == undefined) {\n                count_times[mile_start] = 1\n            } else {\n                count_times[mile_start] = count_times[mile_start] + 1;\n            }\n\n            if (count_times[mile_end] == undefined) {\n                count_times[mile_end] = 1\n            } else {\n                count_times[mile_end] = count_times[mile_end] + 1;\n            }\n\n            if (count_times[mile_start] === 4) {\n                if (mile_start == time_start || mile_start == time_end) {\n                    setShowToast(true, STRING_ERROR);\n                    catch_boolean = false;\n                }\n            } else {\n                if (count_times[time_start] === 4) {\n                    setShowToast(true, STRING_ERROR);\n                    catch_boolean = false;\n                }\n            }\n\n            if (count_times[mile_end] === 4) {\n                if (mile_end == time_start || mile_end == time_end) {\n                    setShowToast(true, STRING_ERROR);\n                    catch_boolean = false;\n                }\n            } else {\n                if (count_times[time_end] === 4) {\n                    setShowToast(true, STRING_ERROR);\n                    catch_boolean = false;\n                }\n            }\n        });\n\n        return catch_boolean;\n    }\n\n    const handleCalender = (date: any) => {\n        let time = {\n            fromDate: date.selection.startDate,\n            toDate: date.selection.endDate\n        };\n        console.log({ selection: date.selection })\n        let index = props?.milestones?.length;\n\n        let isChecked = checkBeforeExist(time);\n        if (isChecked) {\n            addTimeToMileStone(time, index);\n        }\n        // setCalender(date.selection);\n    }\n\n    const addTimeToMileStone = (time: any, index: any, skip?: any) => {\n        let milestone_clone: any = props?.milestones;\n        let checkIsValid: any = true;\n\n        if (!skip && milestone_clone?.length) {\n\n            let filter_milestone: any = milestone_clone.filter((item_mile: any, index_mile: any) => index_mile !== index);\n\n            if (filter_milestone?.length) {\n                filter_milestone.forEach((mile: any) => {\n                    let msw = moment(mile.fromDate).isValid();\n                    let mew = moment(mile.toDate).isValid();\n\n                    let tsw = moment(time.fromDate).isValid();\n                    let tew = moment(time.toDate).isValid();\n\n                    let mile_start = mile.fromDate;\n                    let mile_end = mile.toDate;\n\n                    let time_start = time.fromDate;\n                    let time_end = time.toDate;\n\n                    if (msw && mew) {\n                        if (tsw && tew) {\n                            let checkIfSame = moment(time_start).isSame(moment(mile_start)) && moment(time_end).isSame(moment(mile_end));\n\n                            // if (checkIfSame) {\n                            //     checkIsValid = true;\n                            // }\n\n                            // if (!checkIfSame) {\n                            //     if (\n                            //         moment(time_start).isSameOrAfter(moment(mile_start)) &&\n                            //         moment(time_start).isSameOrBefore(moment(mile_end))\n                            //     ) {\n                            //         checkIsValid = false;\n                            //     }\n\n                            //     if (\n                            //         moment(time_end).isSameOrAfter(moment(mile_start)) &&\n                            //         moment(time_end).isSameOrBefore(moment(mile_end))\n                            //     ) {\n                            //         checkIsValid = false;\n                            //     }\n                            // }\n                        }\n\n                        // if (!tew) {\n                        //     if (moment(time_start).isSameOrAfter(moment(mile_start)) && moment(time_start).isSameOrBefore(moment(mile_start))) {\n                        //         checkIsValid = false;\n                        //     }\n                        // }\n                    }\n\n                    // here conditions\n                })\n            }\n        }\n        console.log({ checkIsValid });\n        if (!checkIsValid) {\n            setShowToast(true, 'Please add unique date.');\n            return;\n        }\n\n        setCalender({\n            startDate: moment(time.fromDate).toDate(),\n            endDate: moment(time.toDate).toDate(),\n            key: \"selection\"\n        })\n        // milestone_clone[index]['fromDate'] = time.fromDate;\n        // milestone_clone[index]['to_date'] = time.to_date;\n        // setMileStones(milestone_clone);\n        // Array.isArray(forceupdate) ? setForceUpdate({}) : setForceUpdate([]);\n    }\n\n    // before render check\n    const { name, isPhoto, recommended, duration } = stateData;\n    let check_errors = false;\n    let renderDuration: any = renderTimeWithCustomFormat(\n        calenderItems.startDate,\n        calenderItems.endDate,\n        '',\n        ['DD MMM', 'DD MMM YY', true],\n        'Choose'\n    );\n\n    if (!name?.length || !recommended?.length || renderDuration === 'Choose') {\n        check_errors = true;\n    }\n\n    let ItemCal: any = calenderItems;\n    if (!moment(calenderItems?.startDate).isValid()) {\n        ItemCal = { startDate: new Date(), endDate: '', key: 'selection' }\n    }\n\n    let min_date: any = moment(item?.fromDate).isValid() ? moment(item?.fromDate).toDate() : new Date();\n    let max_date: any = moment(item?.toDate).isValid() && !moment(item?.fromDate).isSame(item?.toDate) ? moment(item?.toDate).toDate() : moment().add(2, 'years').toDate();\n    return (\n        <div className=\"flex_row\">\n            <div className=\"flex_col_sm_12\">\n\n\n                <Dialog\n                    open={toggleItem}\n                    // onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        {'If you click the back arrow, you lose the data, do you want to save it ?'}\n                    </DialogTitle>\n                    <DialogActions>\n                        <Button\n                            onClick={() => {\n                                setToggleItem((prev: any) => !prev);\n                            }}\n                            color=\"primary\">\n                            {'Yes'}\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                setToggleItem((prev: any) => !prev);\n                                resetItems();\n                            }}\n                            color=\"primary\" autoFocus>\n                            {'No'}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Modal\n                    className=\"custom_modal \"\n                    open={toggleCalender}\n                    onClose={() => { toggleCal() }}\n                    aria-labelledby=\"calender-active-modal-title\"\n                    aria-describedby=\"calender-active-modal-title\"\n                >\n                    <div\n                        style={{\n                            padding: '12px 20px 0px'\n                        }}\n                        className=\"item-modal-ctm custom_wh portfolio_preview \">\n                        {console.log({ jobDetail: props.jobDetail })}\n                        <DateRangePicker\n                            ranges={[ItemCal]}\n                            onChange={(date: any) => {\n                                handleCalender(date)\n                                setChangesFor((prev: any) => ({ ...prev, duration: true }))\n                            }}\n                            months={2}\n                            direction=\"horizontal\"\n                            moveRangeOnFirstSelection={false}\n                            rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                            showDateDisplay={false}\n                            showSelectionPreview={true}\n                            showPreview={true}\n                            minDate={min_date}\n                            maxDate={max_date}\n                            fixedHeight={true}\n                        />\n                    </div>\n                </Modal>\n\n\n                <div className=\"form_field\">\n                    <div className=\"flex_row\">\n                        <div className=\"flex_col_sm_7\">\n                            <div className=\"relate\">\n                                <button\n                                    onClick={() => {\n                                        if (checkIfChange()) {\n                                            setToggleItem((prev: any) => !prev);\n                                            return\n                                        }\n                                        resetItems();\n                                    }}\n                                    className=\"back\">\n                                </button>\n                                <span className=\"title\">\n                                    {item?.jobName || ''}\n                                </span>\n                            </div>\n                            <p className=\"sub_title\">\n                                {`${props.editMile === '' ? '' : 'Edit '}`}\n                                {`${props.editMile === '' && props?.isSame ? `Milestones ${props?.milestones?.length + 1}` :\n                                    props.editMile !== '' && props.editMile > -1 && props?.isSame ? `Milestones ${props.editMile + 1}` :\n                                        props.editMile !== '' && props.editMile > -1 && !props?.isSame ? `Milestone ${props.editMile + 1}` :\n                                            props.editMile === '' && !props?.isSame ? `Milestone ${props?.milestones?.length + 1}` : null}`}\n                                {/* {`${!props?.isSame && props.editMile ? ' Mileston-e ' + props.editMile : props?.isSame && props.editMile > -1 ? ' Milesto-ne ' + (props.editMile + 1) : props?.milestones?.length + 1}`}\n                                {console.log({ props })} */}\n                                {/* {console.log({ props })} */}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex_row\">\n                    <div className=\"flex_col_sm_7\">\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">\n                                {'Milestone Name'}\n                            </label>\n                            <div className=\"text_field\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter Milestone Name\"\n                                    onChange={(e: any) => {\n                                        handleChange('name', e.target.value)\n                                        setChangesFor((prev: any) => ({ ...prev, name: true }))\n                                    }}\n                                    value={name}\n                                    name=\"milestone_name\" />\n                            </div>\n                            <span className=\"error_msg\">{errors?.name}</span>\n                        </div>\n                        <div className=\"form_field\">\n\n                            <div className=\"checkbox_wrap agree_check\">\n                                <input\n                                    onChange={() => {\n                                        setStateData((prev: any) => ({ ...prev, isPhoto: !prev.isPhoto }))\n                                        setChangesFor((prev: any) => ({ ...prev, isPhoto: true }))\n                                    }}\n                                    checked={isPhoto}\n                                    className=\"filter-type filled-in\"\n                                    type=\"checkbox\"\n                                    id=\"milestone1\" />\n                                <label htmlFor=\"milestone1\">\n                                    {'Photo evidence required'}\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"form_field\">\n                            <div className=\"f_spacebw\">\n                                <label className=\"form_label\">\n                                    {'Duration of milestone'}\n                                </label>\n                                <button\n                                    onClick={() => { toggleCal() }}\n                                    className=\"fill_btn fill_grey_btn choose_btn\">\n                                    {renderDuration}\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">\n                                {'Recommended Hours'}\n                            </label>\n                            <div className=\"text_field\">\n                                <input\n                                    onChange={(e) => {\n                                        handleChange('recommended', e.target.value)\n                                        setChangesFor((prev: any) => ({ ...prev, recommended: true }))\n                                    }}\n                                    autoComplete='off'\n                                    value={recommended}\n                                    type=\"text\"\n                                    placeholder=\"Enter Recommended Hours\"\n                                    name=\"recommended_hours\" />\n                            </div>\n                            <span className=\"error_msg\">{errors.recommended}</span>\n                            {/* <span className=\"error_msg\">{errors.pattern_error}</span> */}\n                        </div>\n\n\n                        <div className=\"form_field\">\n                            <button\n                                onClick={() => {\n                                    let description: any = '';\n                                    if (Object.values(changesFor).includes(true)) {\n                                        // description = `This job has Milestones change request with changes in ${changesFor?.name ? 'Milestone Name, ' : ''}${changesFor?.isPhoto ? 'Photo evidence required, ' : ''}${changesFor?.duration ? 'Duration of Milestone, ' : ''}${changesFor?.recommended ? 'Recommended Hours ' : ''}.`;\n                                        description = `${stateData.name} details are updated.`;\n                                    }\n\n                                    if (props.editMile !== '') {\n                                        // edit\n                                        if (props?.addNewMile) {\n                                            props?.addNewMile({\n                                                milestoneName: stateData.name,\n                                                isPhotoevidence: stateData.isPhoto,\n                                                order: stateData.order,\n                                                index: props.editMile,\n                                                status: stateData.status,\n                                                recommendedHours: stateData.recommended,\n                                                fromDate: calenderItems.startDate,\n                                                toDate: calenderItems.endDate,\n                                                description: description,\n                                            })\n                                        }\n                                    } else {\n                                        // add\n                                        if (props?.addNewMile) {\n                                            props?.addNewMile({\n                                                milestoneName: stateData.name,\n                                                isPhotoevidence: stateData.isPhoto,\n                                                status: -1,\n                                                order: (props?.milestones?.length + 1),\n                                                recommendedHours: stateData.recommended,\n                                                fromDate: calenderItems.startDate,\n                                                toDate: calenderItems.endDate,\n                                                description: description\n                                            })\n                                        }\n                                    }\n                                    props.resetItems();\n                                }}\n                                className={`fill_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`}>\n                                {'Continue'}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default AddEditMile;"]},"metadata":{},"sourceType":"module"}