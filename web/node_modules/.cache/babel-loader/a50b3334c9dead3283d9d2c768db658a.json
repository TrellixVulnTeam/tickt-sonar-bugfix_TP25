{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/newApplicants.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport { withRouter } from 'react-router';\nimport noData from '../../../assets/images/no-search-data.png';\nimport { renderTime } from '../../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewApplicants = props => {\n  _s();\n\n  const {\n    dataItems,\n    jobType,\n    setJobLabel,\n    isLoading\n  } = props;\n  let listData = dataItems;\n  const [isRender, setRender] = useState(false);\n\n  const redirectToInfo = ({\n    jobId\n  }) => {\n    console.log({\n      jobId\n    });\n    const props_ = props;\n    console.log({\n      props_\n    });\n\n    if (jobId === null || jobId === void 0 ? void 0 : jobId.length) {\n      // let urlEncode: any = window.btoa(`?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`)\n      let urlEncode = `?jobId=${jobId}&activeType=${(props_ === null || props_ === void 0 ? void 0 : props_.activeType) || 'applicant'}`;\n      props_.history.push(`/job-detail?${urlEncode}`);\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading == false) {\n      setRender(true);\n    }\n  }, [isLoading]);\n\n  if (!isRender) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sub_title\",\n      children: \"New Applicants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row tradies_row\",\n      children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n        amount,\n        builderId,\n        builderImage,\n        durations,\n        fromDate,\n        jobName,\n        jobDescription,\n        jobId,\n        location,\n        location_name,\n        specializationName,\n        specializationId,\n        timeLeft,\n        toDate,\n        total,\n        tradeId,\n        tradieId,\n        tradeName,\n        tradeSelectedUrl\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card\",\n          \"data-aos\": \"fade-in\",\n          \"data-aos-delay\": \"250\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              redirectToInfo({\n                jobId\n              });\n            },\n            className: \"more_detail circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tradeSelectedUrl || dummy,\n                alt: \"traide-img\",\n                onError: e => {\n                  var _e$target, _e$target2;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                    e.target.src = dummy;\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: tradeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para line-2\",\n            children: jobDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: renderTime(fromDate, toDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: timeLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setJobLabel('applicantList', jobId, 1, specializationId);\n            },\n            className: \"fill_grey_btn full_btn btn-effect\",\n            children: 'Applications'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record  m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noData,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: 'No Data Found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewApplicants, \"PJVwJCYXHNk7ltefTdCSZAca1eQ=\");\n\n_c = NewApplicants;\nexport default _c2 = withRouter(NewApplicants);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewApplicants\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/newApplicants.tsx"],"names":["React","useEffect","useState","dummy","withRouter","noData","renderTime","NewApplicants","props","dataItems","jobType","setJobLabel","isLoading","listData","isRender","setRender","redirectToInfo","jobId","console","log","props_","length","urlEncode","activeType","history","push","map","amount","builderId","builderImage","durations","fromDate","jobName","jobDescription","location","location_name","specializationName","specializationId","timeLeft","toDate","total","tradeId","tradieId","tradeName","tradeSelectedUrl","e","target","onerror","src"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport approved from '../../../assets/images/approved.png';\nimport { withRouter } from 'react-router';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport noData from '../../../assets/images/no-search-data.png';\nimport moment from 'moment';\nimport { renderTime } from '../../../utils/common';\ninterface Applicant {\n    amount: any,\n    builderId: any,\n    builderImage: any,\n    durations: any,\n    fromDate: any,\n    jobName: any,\n    jobDescription: any,\n    jobId: any,\n    specializationName: any,\n    timeLeft: any,\n    toDate: any,\n    total: any,\n    tradeId: any,\n    location: any,\n    location_name: any,\n    specializationId: any,\n    tradeName: any,\n    tradieId: any,\n    isLoading?: any,\n    tradeSelectedUrl: any,\n    activeType?: any\n}\n\nconst NewApplicants = (props: any) => {\n    const { dataItems, jobType, setJobLabel, isLoading } = props;\n    let listData: any = dataItems;\n\n    const [isRender, setRender] = useState(false);\n\n\n\n    const redirectToInfo = ({ jobId }: any) => {\n        console.log({ jobId });\n        const props_: any = props;\n        console.log({ props_ })\n        if (jobId?.length) {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`)\n            let urlEncode: any = `?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`\n            props_.history.push(`/job-detail?${urlEncode}`);\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading == false) {\n            setRender(true);\n        }\n    }, [isLoading])\n\n    if (!isRender) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            <span className=\"sub_title\">New Applicants</span>\n            <div className=\"flex_row tradies_row\">\n                {listData?.length ?\n                    listData.map(({\n                        amount,\n                        builderId,\n                        builderImage,\n                        durations,\n                        fromDate,\n                        jobName,\n                        jobDescription,\n                        jobId,\n                        location,\n                        location_name,\n                        specializationName,\n                        specializationId,\n                        timeLeft,\n                        toDate,\n                        total,\n                        tradeId,\n                        tradieId,\n                        tradeName,\n                        tradeSelectedUrl,\n                    }: Applicant) => (\n                        <div className=\"flex_col_sm_6\">\n                            <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                                <span\n                                    onClick={() => { redirectToInfo({ jobId }) }}\n                                    className=\"more_detail circle\">\n                                </span>\n                                <div className=\"user_wrap\">\n                                    <figure className=\"u_img\">\n                                        <img\n                                            src={tradeSelectedUrl || dummy}\n                                            alt=\"traide-img\"\n                                            onError={(e: any) => {\n                                                if (e?.target?.onerror) {\n                                                    e.target.onerror = null;\n                                                }\n                                                if (e?.target?.src) {\n                                                    e.target.src = dummy;\n                                                }\n                                            }}\n                                        />\n                                    </figure>\n                                    <div className=\"details\">\n                                        <span className=\"name\">{tradeName}</span>\n                                        <p className=\"commn_para\">{jobName}</p>\n                                    </div>\n                                </div>\n                                <p className=\"commn_para line-2\">{jobDescription}</p>\n                                <div className=\"job_info\">\n                                    <ul>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"\">\n                                            <span>\n                                                {total}\n                                            </span>\n                                        </li>\n                                        <li className=\"icon calendar\">\n                                            {renderTime(fromDate, toDate)}\n                                        </li>\n                                        <li className=\"\">\n                                            <span>\n                                                {timeLeft}\n                                            </span>\n                                        </li>\n                                        {/* <li className=\"icon clock\">{renderTime({fromDate,toDate})}</li>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"icon location line-1\">{location_name }</li>\n                                        <li className=\"icon calendar\">{`${durations}`}</li> */}\n                                    </ul>\n                                </div>\n                                {/* {tradieId?.length ? ( */}\n                                <button\n                                    onClick={() => {\n                                        setJobLabel('applicantList', jobId, 1, specializationId)\n                                    }}\n                                    className=\"fill_grey_btn full_btn btn-effect\">\n                                    {'Applications'}\n                                </button>\n                                {/* ) : null} */}\n                            </div>\n                        </div>\n                    )) :\n                    !isLoading && (\n                        <div className=\"no_record  m-t-vh\">\n                            <figure className=\"no_img\">\n                                <img src={noData} alt=\"data not found\" />\n                            </figure>\n                            <span>{'No Data Found'}</span>\n                        </div>\n                    )}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(NewApplicants)"]},"metadata":{},"sourceType":"module"}