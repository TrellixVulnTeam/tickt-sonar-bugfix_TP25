{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/settings.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport storageService from '../../../utils/storageService';\nimport { updateChatUserDetails } from '../../../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTIFICATION_CATEGORY = {\n  //for api reference\n  CHAT: 1,\n  PAYMENT: 2,\n  ADMIN_UPDATE: 3,\n  MILESTONE_UPDATE: 4,\n  REVIEW: 5,\n  VOUCH: 6,\n  CHANGE_REQUEST: 7,\n  CANCELATION: 8,\n  DISPUTE: 9,\n  QUESTION: 10\n};\nconst USER_TRADIE_NOTIF = [{\n  value: 'Chat',\n  number: 1\n}, {\n  value: 'Payment',\n  number: 2\n}, {\n  value: 'New updates from admin',\n  number: 3\n}, {\n  value: 'Milestone updates',\n  number: 4\n}, {\n  value: 'Job review updates',\n  number: 5\n}, {\n  value: 'Vouches updates',\n  number: 6\n}, {\n  value: 'Change request updates',\n  number: 7\n}, {\n  value: 'Cancelation updates',\n  number: 8\n}, {\n  value: 'Dispute updates',\n  number: 9\n}, {\n  value: 'Job answers updates',\n  number: 10\n}];\nconst USER_BUILDER_NOTIF = [{\n  value: 'Chat',\n  number: 1\n}, {\n  value: 'Payment',\n  number: 2\n}, {\n  value: 'New updates from admin',\n  number: 3\n}, {\n  value: 'Milestone updates',\n  number: 4\n}, {\n  value: 'Job review updates',\n  number: 5\n}, {\n  value: 'Change request updates',\n  number: 7\n}, {\n  value: 'Cancelation updates',\n  number: 8\n}, {\n  value: 'Dispute updates',\n  number: 9\n}, {\n  value: 'Job queries updates',\n  number: 10\n}];\n\nconst Settings = ({\n  getSettings,\n  updateSettings,\n  settings\n}) => {\n  _s();\n\n  const [pushCategory, setPushCategory] = useState([]);\n  const [updatedSettingNo, setUpdatedSettingNo] = useState(0);\n  useEffect(() => {\n    getSettings();\n  }, [getSettings]);\n  useEffect(() => {\n    if (Array.isArray(settings === null || settings === void 0 ? void 0 : settings.pushNotificationCategory)) {\n      setPushCategory(settings === null || settings === void 0 ? void 0 : settings.pushNotificationCategory);\n    }\n  }, [settings]);\n  useEffect(() => {\n    if (pushCategory.length > 0 && updatedSettingNo) {\n      const val = pushCategory.includes(1) ? true : false;\n      updateChatUserDetails('isNotification', val);\n      setUpdatedSettingNo(0);\n    }\n  }, [pushCategory]);\n\n  const handleChange = (val, isValExist) => {\n    if (val === 1) setUpdatedSettingNo(val);\n    let updatedPushNotif;\n\n    if (isValExist) {\n      updatedPushNotif = [...pushCategory].filter(i => i !== val);\n    } else {\n      const category = [...pushCategory];\n      category.push(val);\n      updatedPushNotif = category;\n    }\n\n    updateSettings({\n      pushNotificationCategory: updatedPushNotif\n    });\n  };\n\n  const PUSH_NOTIF_ARRAY = storageService.getItem('userType') === 1 ? USER_TRADIE_NOTIF : USER_BUILDER_NOTIF;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row p_settings\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_7\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title mb50\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inner_title\",\n          children: \"Push Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info_note\",\n          children: \"Receive notifications from users, including notifications about new jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), PUSH_NOTIF_ARRAY.map(({\n        value,\n        number\n      }) => {\n        const isValExist = pushCategory === null || pushCategory === void 0 ? void 0 : pushCategory.includes(number);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form_label\",\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle_btn\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: isValExist,\n              onClick: () => handleChange(number, isValExist),\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"onvVWY0ROUqq4MvZ4wwr++xI1mQ=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/settings.tsx"],"names":["useEffect","useState","Switch","storageService","updateChatUserDetails","NOTIFICATION_CATEGORY","CHAT","PAYMENT","ADMIN_UPDATE","MILESTONE_UPDATE","REVIEW","VOUCH","CHANGE_REQUEST","CANCELATION","DISPUTE","QUESTION","USER_TRADIE_NOTIF","value","number","USER_BUILDER_NOTIF","Settings","getSettings","updateSettings","settings","pushCategory","setPushCategory","updatedSettingNo","setUpdatedSettingNo","Array","isArray","pushNotificationCategory","length","val","includes","handleChange","isValExist","updatedPushNotif","filter","i","category","push","PUSH_NOTIF_ARRAY","getItem","map"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport storageService from '../../../utils/storageService';\nimport { updateChatUserDetails } from '../../../services/firebase';\ninterface Setting {\n  pushNotificationCategory: []\n}\n\ninterface Props {\n  getSettings: () => void;\n  updateSettings: (settings: any) => void;\n  settings: Setting;\n}\n\nconst NOTIFICATION_CATEGORY = { //for api reference\n  CHAT: 1,\n  PAYMENT: 2,\n  ADMIN_UPDATE: 3,\n  MILESTONE_UPDATE: 4,\n  REVIEW: 5,\n  VOUCH: 6,\n  CHANGE_REQUEST: 7,\n  CANCELATION: 8,\n  DISPUTE: 9,\n  QUESTION: 10\n}\n\nconst USER_TRADIE_NOTIF = [\n  { value: 'Chat', number: 1 },\n  { value: 'Payment', number: 2 },\n  { value: 'New updates from admin', number: 3 },\n  { value: 'Milestone updates', number: 4 },\n  { value: 'Job review updates', number: 5 },\n  { value: 'Vouches updates', number: 6 },\n  { value: 'Change request updates', number: 7 },\n  { value: 'Cancelation updates', number: 8 },\n  { value: 'Dispute updates', number: 9 },\n  { value: 'Job answers updates', number: 10 }\n];\nconst USER_BUILDER_NOTIF = [\n  { value: 'Chat', number: 1 },\n  { value: 'Payment', number: 2 },\n  { value: 'New updates from admin', number: 3 },\n  { value: 'Milestone updates', number: 4 },\n  { value: 'Job review updates', number: 5 },\n  { value: 'Change request updates', number: 7 },\n  { value: 'Cancelation updates', number: 8 },\n  { value: 'Dispute updates', number: 9 },\n  { value: 'Job queries updates', number: 10 }\n];\n\nconst Settings = ({ getSettings, updateSettings, settings }: Props) => {\n  const [pushCategory, setPushCategory] = useState<Array<number>>([]);\n  const [updatedSettingNo, setUpdatedSettingNo] = useState<number>(0);\n\n  useEffect(() => {\n    getSettings();\n  }, [getSettings]);\n\n  useEffect(() => {\n    if (Array.isArray(settings?.pushNotificationCategory)) {\n      setPushCategory(settings?.pushNotificationCategory);\n    }\n  }, [settings]);\n\n  useEffect(() => {\n    if (pushCategory.length > 0 && updatedSettingNo) {\n      const val: boolean = pushCategory.includes(1) ? true : false;\n      updateChatUserDetails('isNotification', val);\n      setUpdatedSettingNo(0);\n    }\n  }, [pushCategory]);\n\n  const handleChange = (val: number, isValExist: boolean) => {\n    if (val === 1) setUpdatedSettingNo(val);\n    let updatedPushNotif: any;\n    if (isValExist) {\n      updatedPushNotif = [...pushCategory].filter(i => i !== val);\n    } else {\n      const category = [...pushCategory];\n      category.push(val);\n      updatedPushNotif = category;\n    }\n    updateSettings({ pushNotificationCategory: updatedPushNotif });\n  };\n\n  const PUSH_NOTIF_ARRAY = storageService.getItem('userType') === 1 ? USER_TRADIE_NOTIF : USER_BUILDER_NOTIF;\n\n  return (\n    <div className=\"flex_row p_settings\">\n      <div className=\"flex_col_sm_7\">\n        <span className=\"sub_title mb50\">Settings</span>\n        <div className=\"form_field\">\n          <span className=\"inner_title\">Push Notifications</span>\n          <span className=\"info_note\">\n            Receive notifications from users, including notifications about new jobs\n          </span>\n        </div>\n        {PUSH_NOTIF_ARRAY.map(({ value, number }: { value: string, number: number }) => {\n          const isValExist = pushCategory?.includes(number);\n          return (\n            < div className=\"f_spacebw form_field\">\n              <span className=\"form_label\">{value}</span>\n              <div className=\"toggle_btn\">\n                <Switch\n                  checked={isValExist}\n                  onClick={() => handleChange(number, isValExist)}\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}