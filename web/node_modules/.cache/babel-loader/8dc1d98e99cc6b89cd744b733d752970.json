{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieSearchJobResult/renderMap.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useRef } from \"react\"; // @ts-ignore\n\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\nimport jobIconDemo from \"../../assets/images/jobicon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nconst options = {\n  styles: mapStyles[0],\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst RenderMap = props => {\n  _s();\n\n  var _renderJobsData;\n\n  const [center, setCenter] = useState(\"\");\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const mapRef = useRef(null);\n\n  const setMapCenter = () => {\n    var _props$location, _mapCenterCoordinates, _mapCenterCoordinates2, _mapCenterCoordinates3, _mapCenterCoordinates4, _mapCenterCoordinates5, _mapCenterCoordinates6;\n\n    var mapCenterCoordinates;\n    const jobResultsParam = new URLSearchParams((_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search).get(\"jobResults\");\n\n    if (props.searchByFilter) {\n      var _props$homeSearchJobD;\n\n      mapCenterCoordinates = (_props$homeSearchJobD = props.homeSearchJobData) === null || _props$homeSearchJobD === void 0 ? void 0 : _props$homeSearchJobD.slice(0, 1);\n    } else if (jobResultsParam == \"viewNearByJob\") {\n      var _props$viewNearByJobD;\n\n      mapCenterCoordinates = (_props$viewNearByJobD = props.viewNearByJobData) === null || _props$viewNearByJobD === void 0 ? void 0 : _props$viewNearByJobD.slice(0, 1);\n    } else {\n      var _props$homeSearchJobD2;\n\n      mapCenterCoordinates = (_props$homeSearchJobD2 = props.homeSearchJobData) === null || _props$homeSearchJobD2 === void 0 ? void 0 : _props$homeSearchJobD2.slice(0, 1);\n    }\n\n    console.log(mapCenterCoordinates, \"mapCenterCoordinates\");\n    const newCenter = {\n      lat: ((_mapCenterCoordinates = mapCenterCoordinates) === null || _mapCenterCoordinates === void 0 ? void 0 : _mapCenterCoordinates.length) > 0 ? (_mapCenterCoordinates2 = mapCenterCoordinates[0]) === null || _mapCenterCoordinates2 === void 0 ? void 0 : (_mapCenterCoordinates3 = _mapCenterCoordinates2.location) === null || _mapCenterCoordinates3 === void 0 ? void 0 : _mapCenterCoordinates3.coordinates[1] : -37.8136,\n      //lat\n      lng: ((_mapCenterCoordinates4 = mapCenterCoordinates) === null || _mapCenterCoordinates4 === void 0 ? void 0 : _mapCenterCoordinates4.length) > 0 ? (_mapCenterCoordinates5 = mapCenterCoordinates[0]) === null || _mapCenterCoordinates5 === void 0 ? void 0 : (_mapCenterCoordinates6 = _mapCenterCoordinates5.location) === null || _mapCenterCoordinates6 === void 0 ? void 0 : _mapCenterCoordinates6.coordinates[0] : 144.9631 //lng\n\n    };\n\n    if (JSON.stringify(center) == JSON.stringify(newCenter)) {\n      return;\n    } else {\n      setCenter(newCenter);\n    }\n  };\n\n  console.log(props, \"props renderMap\", mapRef, \"mapRef\");\n\n  const renderJobsData = () => {\n    var _props$location2;\n\n    setMapCenter();\n    var jobsData;\n    const jobResultsParam = new URLSearchParams((_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.search).get(\"jobResults\");\n\n    if (props.searchByFilter) {\n      jobsData = props.homeSearchJobData;\n      return jobsData;\n    }\n\n    if (jobResultsParam == \"viewNearByJob\") {\n      jobsData = props.viewNearByJobData;\n      return jobsData;\n    } else {\n      jobsData = props.homeSearchJobData;\n      return jobsData;\n    }\n\n    return null;\n  };\n\n  const jobClickHandler = item => {\n    props.history.push(`/job-details-page?jobId=${item.jobId}&tradeId=${item.tradeId}&specializationId=${item.specializationId}`);\n  };\n\n  const onMapClick = useCallback(event => {\n    setMarkers(current => [...current, {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    mapRef.current = null;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 13,\n    center: center,\n    options: options // onClick={onMapClick}\n    ,\n    onLoad: onMapLoad,\n    onUnmount: onUnmount,\n    children: [(_renderJobsData = renderJobsData()) === null || _renderJobsData === void 0 ? void 0 : _renderJobsData.map(item => {\n      var _item$location;\n\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: (_item$location = item.location) === null || _item$location === void 0 ? void 0 : _item$location.coordinates[1],\n          lng: item.location.coordinates[0]\n        },\n        icon: {\n          url: jobIconDemo,\n          scaledSize: new window.google.maps.Size(45, 45),\n          origin: new window.google.maps.Point(0, 0),\n          anchor: new window.google.maps.Point(20, 20)\n        },\n        onClick: () => {\n          const lat = item.location.coordinates[1];\n          const lng = item.location.coordinates[0];\n          setSelected(item);\n        }\n      }, item.jobId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this);\n    }), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selected.location.coordinates[1],\n        lng: selected.location.coordinates[0]\n      },\n      onCloseClick: () => setSelected(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview_card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"javascript:void(0)\",\n            className: \"more_detail circle\",\n            onClick: () => jobClickHandler(selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: selected.tradeSelectedUrl ? selected.tradeSelectedUrl : \"\",\n                alt: \"tradie-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: selected.tradeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"prof\",\n                children: selected.jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon clock\",\n                children: selected.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: selected.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon location line-1\",\n                children: selected.locationName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: selected.durations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RenderMap, \"jqtaHu4IlCb9+P3qfYXHGGuS0Tw=\");\n\n_c = RenderMap;\nexport default RenderMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderMap\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieSearchJobResult/renderMap.tsx"],"names":["useState","useCallback","useRef","GoogleMap","Marker","InfoWindow","mapStyles","jobIconDemo","mapContainerStyle","width","height","options","styles","disableDefaultUI","zoomControl","RenderMap","props","center","setCenter","markers","setMarkers","selected","setSelected","mapRef","setMapCenter","mapCenterCoordinates","jobResultsParam","URLSearchParams","location","search","get","searchByFilter","homeSearchJobData","slice","viewNearByJobData","console","log","newCenter","lat","length","coordinates","lng","JSON","stringify","renderJobsData","jobsData","jobClickHandler","item","history","push","jobId","tradeId","specializationId","onMapClick","event","current","latLng","time","Date","onMapLoad","map","onUnmount","callback","url","scaledSize","window","google","maps","Size","origin","Point","anchor","tradeSelectedUrl","tradeName","jobName","amount","locationName","durations"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef } from \"react\";\n// @ts-ignore\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\n\nimport jobIconDemo from \"../../assets/images/jobicon.png\";\n\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\",\n};\n\nconst options: any = {\n  styles: mapStyles[0],\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nconst RenderMap = (props: any) => {\n  const [center, setCenter] = useState<any>(\"\");\n  const [markers, setMarkers] = useState<Array<any>>([]);\n  const [selected, setSelected] = useState<any>(null);\n  const mapRef = useRef(null);\n\n  const setMapCenter = () => {\n    var mapCenterCoordinates;\n    const jobResultsParam = new URLSearchParams(props.location?.search).get(\n      \"jobResults\"\n    );\n    if (props.searchByFilter) {\n      mapCenterCoordinates = props.homeSearchJobData?.slice(0, 1);\n    } else if (jobResultsParam == \"viewNearByJob\") {\n      mapCenterCoordinates = props.viewNearByJobData?.slice(0, 1);\n    } else {\n      mapCenterCoordinates = props.homeSearchJobData?.slice(0, 1);\n    }\n    console.log(mapCenterCoordinates, \"mapCenterCoordinates\");\n    const newCenter = {\n      lat:\n        mapCenterCoordinates?.length > 0\n          ? mapCenterCoordinates[0]?.location?.coordinates[1]\n          : -37.8136, //lat\n      lng:\n        mapCenterCoordinates?.length > 0\n          ? mapCenterCoordinates[0]?.location?.coordinates[0]\n          : 144.9631, //lng\n    };\n    if (JSON.stringify(center) == JSON.stringify(newCenter)) {\n      return;\n    } else {\n      setCenter(newCenter);\n    }\n  };\n\n  console.log(props, \"props renderMap\", mapRef, \"mapRef\");\n\n  const renderJobsData = () => {\n    setMapCenter();\n    var jobsData;\n    const jobResultsParam = new URLSearchParams(props.location?.search).get(\n      \"jobResults\"\n    );\n    if (props.searchByFilter) {\n      jobsData = props.homeSearchJobData;\n      return jobsData;\n    }\n    if (jobResultsParam == \"viewNearByJob\") {\n      jobsData = props.viewNearByJobData;\n      return jobsData;\n    } else {\n      jobsData = props.homeSearchJobData;\n      return jobsData;\n    }\n    return null;\n  };\n\n  const jobClickHandler = (item: any) => {\n    props.history.push(\n      `/job-details-page?jobId=${item.jobId}&tradeId=${item.tradeId}&specializationId=${item.specializationId}`\n    );\n  };\n\n  const onMapClick = useCallback((event) => {\n    setMarkers((current) => [\n      ...current,\n      {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const onUnmount = useCallback(function callback(map) {\n    mapRef.current = null;\n  }, []);\n\n  return (\n    <GoogleMap\n      mapContainerStyle={mapContainerStyle}\n      zoom={13}\n      center={center}\n      options={options}\n      // onClick={onMapClick}\n      onLoad={onMapLoad}\n      onUnmount={onUnmount}\n    >\n      {renderJobsData()?.map((item: any) => (\n        <Marker\n          key={item.jobId}\n          position={{\n            lat: item.location?.coordinates[1],\n            lng: item.location.coordinates[0],\n          }}\n          icon={{\n            url: jobIconDemo,\n            scaledSize: new window.google.maps.Size(45, 45),\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(20, 20),\n          }}\n          onClick={() => {\n            const lat = item.location.coordinates[1];\n            const lng = item.location.coordinates[0];\n            setSelected(item);\n          }}\n        />\n      ))}\n      {selected ? (\n        <InfoWindow\n          position={{\n            lat: selected.location.coordinates[1],\n            lng: selected.location.coordinates[0],\n          }}\n          onCloseClick={() => setSelected(null)}\n        >\n          <div className=\"preview_card\">\n            <div className=\"tradie_card\">\n              <a\n                href=\"javascript:void(0)\"\n                className=\"more_detail circle\"\n                onClick={() => jobClickHandler(selected)}\n              ></a>\n              <div className=\"user_wrap\">\n                <figure className=\"u_img\">\n                  <img\n                    src={\n                      selected.tradeSelectedUrl ? selected.tradeSelectedUrl : \"\"\n                    }\n                    alt=\"tradie-img\"\n                  />\n                </figure>\n                <div className=\"details\">\n                  <span className=\"name\">{selected.tradeName}</span>\n                  <span className=\"prof\">{selected.jobName}</span>\n                </div>\n              </div>\n              <div className=\"job_info\">\n                <ul>\n                  <li className=\"icon clock\">{selected.time}</li>\n                  <li className=\"icon dollar\">{selected.amount}</li>\n                  <li className=\"icon location line-1\">\n                    {selected.locationName}\n                  </li>\n                  <li className=\"icon calendar\">{selected.durations}</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </InfoWindow>\n      ) : null}\n    </GoogleMap>\n  );\n};\n\nexport default RenderMap;\n"]},"metadata":{},"sourceType":"module"}