{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieInfo/addVoucher.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport cancel from '../../assets/images/ic-cancel.png';\nimport addMedia from \"../../assets/images/add-image.png\";\nimport Modal from '@material-ui/core/Modal';\nimport { setShowToast } from '../../redux/common/actions';\nimport close from '../../assets/images/icon-close-1.png';\nimport { onFileUpload } from '../../redux/auth/actions';\nimport { AddVoucher, fetchVouchesJobs } from '../../redux/jobs/actions';\nimport docThumbnail from '../../assets/images/add-document.png';\nimport { moengage, mixPanel } from '../../services/analyticsTools';\nimport { MoEConstants } from '../../utils/constants';\nimport Select, { components } from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst docformats = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst AddVoucherComponent = props => {\n  _s();\n\n  const {\n    toggleProps,\n    closeToggle\n  } = props;\n  const [toggle, setToggle] = useState(false);\n  const [jobsList, setJobsList] = useState([]);\n  const [reactSelect, setReactSelect] = useState({\n    label: '',\n    value: ''\n  });\n  const [jobDescription, setJobDesciption] = useState('');\n  const [errorData, setErrorData] = useState({\n    name: '',\n    detail: '',\n    upload: ''\n  });\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  useEffect(() => {\n    prefetch();\n  }, []);\n  useEffect(() => {\n    console.log({\n      toggleProps\n    });\n    setToggle(toggleProps);\n  }, [toggleProps]);\n  useEffect(() => {\n    setErrorData(prev => ({ ...prev,\n      detail: (jobDescription === null || jobDescription === void 0 ? void 0 : jobDescription.length) > 250 ? 'Maximum 250 characters are allowed' : ''\n    }));\n  }, [jobDescription]); // useEffect(() => {\n  //     setErrorData((prev: any) => ({ ...prev, upload: filesUrl?.length ? '' : 'Document file is required' }));\n  // }, [filesUrl]);\n\n  useEffect(() => {\n    console.log({\n      toggle\n    });\n\n    if (!toggle) {\n      closeToggle('isRecall');\n      setReactSelect(prev => ({ ...prev,\n        label: '',\n        value: ''\n      }));\n      setJobDesciption(\"\");\n      setFilesUrl([]);\n      setErrorData(prev => ({ ...prev,\n        name: '',\n        detail: '',\n        upload: ''\n      }));\n    } else {\n      prefetch();\n    }\n  }, [toggle]);\n\n  const prefetch = async () => {\n    if (props === null || props === void 0 ? void 0 : props.id) {\n      let res_jobs = await fetchVouchesJobs({\n        page: 1,\n        tradieId: props.id\n      });\n\n      if (res_jobs === null || res_jobs === void 0 ? void 0 : res_jobs.success) {\n        let list_data = res_jobs.data;\n\n        if (list_data === null || list_data === void 0 ? void 0 : list_data.length) {\n          // let item = list_data[0];\n          // item?.jobId \n          setReactSelect({\n            label: 'Please select  a job',\n            value: ''\n          });\n        }\n\n        setJobsList(list_data);\n      }\n    }\n  };\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split('/')[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mib\n\n    if (docformats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (docformats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append('file', newFile);\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      let link = res.imgUrl;\n      setFilesUrl(prev => [...prev, {\n        \"mediaType\": [\"doc\", \"docx\", \"msword\"].includes(fileType) ? 3 : 4,\n        \"link\": link\n      }]);\n      setLocalFiles(prev => ({ ...prev,\n        [filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length]: URL.createObjectURL(newFile)\n      }));\n    }\n  };\n\n  const renderbyFileFormat = (item, index) => {\n    let split_item_format = item.split('.');\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split('/');\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n\n    if (get_split_fromat) {\n      if (docformats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            setItemToggle(index);\n          },\n          title: get_split_name,\n          src: docThumbnail,\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 32\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            removeFromItem(index);\n          },\n          src: close,\n          alt: \"remove\",\n          className: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      \"jobId\": reactSelect === null || reactSelect === void 0 ? void 0 : reactSelect.value,\n      \"jobName\": reactSelect === null || reactSelect === void 0 ? void 0 : reactSelect.label,\n      \"tradieId\": props.id,\n      \"photos\": [filesUrl[0].link],\n      \"vouchDescription\": jobDescription,\n      \"recommendation\": filesUrl[0].link\n    };\n    let response = await AddVoucher(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      moengage.moE_SendEvent(MoEConstants.LEFT_VOUCHER, {\n        timeStamp: moengage.getCurrentTimeStamp()\n      });\n      mixPanel.mixP_SendEvent(MoEConstants.LEFT_VOUCHER, {\n        timeStamp: moengage.getCurrentTimeStamp()\n      });\n      setToggle(prev => !prev);\n      await prefetch();\n    }\n  };\n\n  let JobSelectOptions = [];\n\n  if (jobsList === null || jobsList === void 0 ? void 0 : jobsList.length) {\n    JobSelectOptions = jobsList.map(item => ({\n      label: item === null || item === void 0 ? void 0 : item.jobName,\n      value: item === null || item === void 0 ? void 0 : item.jobId\n    }));\n    JobSelectOptions.unshift({\n      label: 'Please select a job',\n      value: ''\n    });\n  }\n\n  const NoOptionsMessage = props => {\n    return /*#__PURE__*/_jsxDEV(components.NoOptionsMessage, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"custom-css-class\",\n        children: 'No completed jobs with this tradesperson'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"custom_modal\",\n    open: toggle,\n    onClose: () => {\n      closeToggle('isRecall');\n      setToggle(prev => !prev);\n    },\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_wh profile_modal vouch_modal\",\n      \"data-aos\": \"zoom-in\",\n      \"data-aos-delay\": \"30\",\n      \"data-aos-duration\": \"1000\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: 'Leave a Vouch'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info_note\",\n          children: 'Upload the vouch and write the description.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            closeToggle('isRecall');\n            setToggle(prev => !prev);\n          },\n          className: \"close_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cancel,\n            alt: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner_wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner_wrappr\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                className: \"select_menu\",\n                value: reactSelect,\n                options: JobSelectOptions,\n                components: {\n                  NoOptionsMessage\n                } // options={jobsList.map((item: any) => ({ label: item?.jobName, value: item?.jobId }))}\n                ,\n                onChange: item => {\n                  setReactSelect(item);\n                  setErrorData(prev => ({ ...prev,\n                    name: ''\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errorData === null || errorData === void 0 ? void 0 : errorData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: 'Job Description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: e => {\n                  setJobDesciption(e.target.value.trimLeft());\n                },\n                value: jobDescription,\n                placeholder: \"Enter Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), jobDescription.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char_count\",\n                children: `character length : ${jobDescription.length} / 250`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this) : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errorData === null || errorData === void 0 ? void 0 : errorData.detail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload_img_video\",\n            children: [(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) ? filesUrl.map((item, index) => renderbyFileFormat(item.link, index)) : null, (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) < 1 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload_media\",\n                htmlFor: \"upload_img_video\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: addMedia,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: onFileChange,\n                type: \"file\",\n                accept: \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\",\n                style: {\n                  display: \"none\"\n                },\n                id: \"upload_img_video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errorData === null || errorData === void 0 ? void 0 : errorData.upload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom_btn custom_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) || !(jobDescription === null || jobDescription === void 0 ? void 0 : jobDescription.length)) {\n              var _reactSelect$value;\n\n              if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length)) {\n                setErrorData(prev => ({ ...prev,\n                  upload: 'Document file is required.'\n                }));\n              }\n\n              if (!(jobDescription === null || jobDescription === void 0 ? void 0 : jobDescription.length)) {\n                setErrorData(prev => ({ ...prev,\n                  detail: 'Job Description is required'\n                }));\n              }\n\n              if (!(reactSelect === null || reactSelect === void 0 ? void 0 : (_reactSelect$value = reactSelect.value) === null || _reactSelect$value === void 0 ? void 0 : _reactSelect$value.length)) {\n                setErrorData(prev => ({ ...prev,\n                  name: 'Job Name is required'\n                }));\n              }\n            } else {\n              handleSubmit();\n            }\n          },\n          className: `fill_btn full_btn btn-effect`,\n          children: 'Save changes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddVoucherComponent, \"FLy2eIolkSgQlnpeO/Wd0X0Y3oM=\");\n\n_c = AddVoucherComponent;\nexport default AddVoucherComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVoucherComponent\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieInfo/addVoucher.tsx"],"names":["React","useState","useEffect","cancel","addMedia","Modal","setShowToast","close","onFileUpload","AddVoucher","fetchVouchesJobs","docThumbnail","moengage","mixPanel","MoEConstants","Select","components","docformats","AddVoucherComponent","props","toggleProps","closeToggle","toggle","setToggle","jobsList","setJobsList","reactSelect","setReactSelect","label","value","jobDescription","setJobDesciption","errorData","setErrorData","name","detail","upload","filesUrl","setFilesUrl","localFiles","setLocalFiles","update","forceUpdate","toggler","setToggler","selectedSlide","setSelectSlide","prefetch","console","log","prev","length","id","res_jobs","page","tradieId","success","list_data","data","setItemToggle","index","removeFromItem","splice","Array","isArray","onFileChange","e","formData","FormData","newFile","target","files","fileType","type","split","toLowerCase","selectedFileSize","size","indexOf","includes","append","res","link","imgUrl","URL","createObjectURL","renderbyFileFormat","item","split_item_format","get_split_fromat","split_item_name","get_split_name","image_render","handleSubmit","response","moE_SendEvent","LEFT_VOUCHER","timeStamp","getCurrentTimeStamp","mixP_SendEvent","JobSelectOptions","map","jobName","jobId","unshift","NoOptionsMessage","trimLeft","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport cancel from '../../assets/images/ic-cancel.png';\nimport addMedia from \"../../assets/images/add-image.png\";\nimport Modal from '@material-ui/core/Modal';\nimport { setShowToast } from '../../redux/common/actions';\n\nimport close from '../../assets/images/icon-close-1.png';\nimport { onFileUpload } from '../../redux/auth/actions';\nimport { AddVoucher, fetchVouchesJobs } from '../../redux/jobs/actions';\nimport docThumbnail from '../../assets/images/add-document.png'\nimport { moengage, mixPanel } from '../../services/analyticsTools';\nimport { MoEConstants } from '../../utils/constants';\nimport Select, { components } from 'react-select';\nconst docformats: Array<any> = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst AddVoucherComponent = (props: any) => {\n    const { toggleProps, closeToggle } = props;\n    const [toggle, setToggle] = useState(false);\n    const [jobsList, setJobsList] = useState([]);\n    const [reactSelect, setReactSelect] = useState({ label: '', value: '' });\n    const [jobDescription, setJobDesciption] = useState('');\n\n    const [errorData, setErrorData] = useState({ name: '', detail: '', upload: '' });\n    const [filesUrl, setFilesUrl] = useState([] as any);\n    const [localFiles, setLocalFiles] = useState({});\n\n    const [update, forceUpdate] = useState({});\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState(1);\n\n    useEffect(() => {\n        prefetch();\n    }, [])\n\n    useEffect(() => {\n        console.log({\n            toggleProps\n        })\n        setToggle(toggleProps);\n    }, [toggleProps])\n\n    useEffect(() => {\n        setErrorData((prev: any) => ({ ...prev, detail: jobDescription?.length > 250 ? 'Maximum 250 characters are allowed' : '' }));\n    }, [jobDescription])\n\n    // useEffect(() => {\n    //     setErrorData((prev: any) => ({ ...prev, upload: filesUrl?.length ? '' : 'Document file is required' }));\n    // }, [filesUrl]);\n\n    useEffect(() => {\n        console.log({ toggle })\n        if (!toggle) {\n            closeToggle('isRecall');\n            setReactSelect((prev: any) => ({ ...prev, label: '', value: '' }));\n            setJobDesciption(\"\");\n            setFilesUrl([]);\n            setErrorData((prev: any) => ({ ...prev, name: '', detail: '', upload: '' }))\n        } else {\n            prefetch();\n        }\n    }, [toggle])\n\n    const prefetch = async () => {\n        if (props?.id) {\n            let res_jobs: any = await fetchVouchesJobs({ page: 1, tradieId: props.id });\n            if (res_jobs?.success) {\n                let list_data: any = res_jobs.data;\n                if (list_data?.length) {\n                    // let item = list_data[0];\n                    // item?.jobId \n                    setReactSelect({ label: 'Please select  a job', value: '' })\n                }\n                setJobsList(list_data)\n            }\n        }\n    }\n\n    const setItemToggle = (index: any) => {\n        setToggler((prev: boolean) => !prev);\n        setSelectSlide(index + 1);\n    }\n\n\n    const removeFromItem = (index: any) => {\n        filesUrl.splice(index, 1);\n        setFilesUrl(filesUrl);\n        Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n    }\n\n    const onFileChange = async (e: any) => {\n        const formData = new FormData();\n        const newFile = e.target.files[0];\n\n        var fileType = (newFile?.type?.split('/')[1])?.toLowerCase();\n        var selectedFileSize = newFile?.size / 1024 / 1024; // size in mib\n\n        if (docformats.indexOf(fileType) < 0 || (selectedFileSize > 10)) {\n            setShowToast(true, \"The file must be in proper format or size\")\n            return;\n        }\n\n        if (docformats.includes(fileType) && selectedFileSize > 10) { // image validations\n            setShowToast(true, \"The image file size must be below 10 mb\")\n            return;\n        }\n\n        formData.append('file', newFile);\n        const res = await onFileUpload(formData)\n        if (res.success) {\n            let link: string = res.imgUrl;\n\n            setFilesUrl((prev: Array<any>) => [...prev, {\n                \"mediaType\": [\"doc\", \"docx\", \"msword\"].includes(fileType) ? 3 : 4,\n                \"link\": link\n            }]);\n            setLocalFiles((prev: any) => ({ ...prev, [filesUrl?.length]: URL.createObjectURL(newFile) }));\n        }\n    }\n\n    const renderbyFileFormat = (item: any, index: any) => {\n        let split_item_format = item.split('.');\n        let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n        let split_item_name = item.split('/');\n        let get_split_name = split_item_name[split_item_name.length - 1];\n        let image_render: any = null;\n        if (get_split_fromat) {\n            if (docformats.includes(get_split_fromat)) {\n                image_render = <img onClick={() => { setItemToggle(index) }} title={get_split_name} src={docThumbnail} alt=\"media\" />\n            }\n            return (\n                <figure className=\"img_video\">\n                    {image_render}\n                    <img\n                        onClick={() => { removeFromItem(index) }}\n                        src={close} alt=\"remove\" className=\"remove\" />\n                    {/* <span style={{ fontSize: '10px' }}>{get_split_name}</span> */}\n                </figure>\n            )\n        }\n    }\n\n\n    const handleSubmit = async () => {\n        let data = {\n            \"jobId\": reactSelect?.value,\n            \"jobName\": reactSelect?.label,\n            \"tradieId\": props.id,\n            \"photos\": [filesUrl[0].link],\n            \"vouchDescription\": jobDescription,\n            \"recommendation\": filesUrl[0].link\n        }\n        let response = await AddVoucher(data);\n        if (response?.success) {\n            moengage.moE_SendEvent(MoEConstants.LEFT_VOUCHER, { timeStamp: moengage.getCurrentTimeStamp() });\n            mixPanel.mixP_SendEvent(MoEConstants.LEFT_VOUCHER, { timeStamp: moengage.getCurrentTimeStamp() });\n            setToggle((prev: any) => !prev);\n            await prefetch();\n        }\n    }\n\n    let JobSelectOptions: any = [];\n    if (jobsList?.length) {\n        JobSelectOptions = jobsList.map((item: any) => ({ label: item?.jobName, value: item?.jobId }));\n        JobSelectOptions.unshift({ label: 'Please select a job', value: '' });\n    }\n\n    const NoOptionsMessage = (props: any) => {\n        return (\n            <components.NoOptionsMessage {...props}>\n                <span className=\"custom-css-class\">\n                    {'No completed jobs with this tradesperson'}\n                </span>\n            </components.NoOptionsMessage>\n        );\n    };\n\n    return (\n        <Modal\n            className=\"custom_modal\"\n            open={toggle}\n            onClose={() => {\n                closeToggle('isRecall');\n                setToggle((prev: any) => !prev)\n            }}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div className=\"custom_wh profile_modal vouch_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                <div className=\"heading\">\n                    <span className=\"sub_title\">\n                        {'Leave a Vouch'}\n                    </span>\n                    <span className=\"info_note\">\n                        {'Upload the vouch and write the description.'}\n                    </span>\n                    <button\n                        onClick={() => {\n                            closeToggle('isRecall');\n                            setToggle((prev: any) => !prev)\n                        }}\n                        className=\"close_btn\">\n                        <img src={cancel} alt=\"cancel\" />\n                    </button>\n                </div>\n                <div className=\"inner_wrap\">\n                    <div className=\"inner_wrappr\">\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">Job</label>\n                            <div className=\"text_field\">\n                                <Select\n                                    className=\"select_menu\"\n                                    value={reactSelect}\n                                    options={JobSelectOptions}\n                                    components={{ NoOptionsMessage }}\n                                    // options={jobsList.map((item: any) => ({ label: item?.jobName, value: item?.jobId }))}\n                                    onChange={(item: any) => {\n                                        setReactSelect(item);\n                                        setErrorData((prev: any) => ({ ...prev, name: '' }));\n                                    }}\n                                />\n                            </div>\n                            <span className=\"error_msg\">\n                                {errorData?.name}\n                            </span>\n                        </div>\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">\n                                {'Job Description'}\n                            </label>\n                            <div className=\"text_field\">\n                                <textarea\n                                    onChange={(e) => { setJobDesciption((e.target.value).trimLeft()) }}\n                                    value={jobDescription}\n                                    placeholder=\"Enter Description...\">\n                                </textarea>\n                                {jobDescription.length ?\n                                    <span className=\"char_count\">\n                                        {`character length : ${jobDescription.length} / 250`}\n                                    </span>\n                                    : ''}\n                            </div>\n                            <span className=\"error_msg\">\n                                {errorData?.detail}\n                            </span>\n\n                        </div>\n                        <div className=\"upload_img_video\">\n                            {filesUrl?.length ?\n                                filesUrl.map((item: any, index: number) => (renderbyFileFormat(item.link, index)))\n                                : null}\n\n                            {filesUrl?.length < 1 ? (\n                                <React.Fragment>\n                                    <label className=\"upload_media\" htmlFor=\"upload_img_video\">\n                                        <img src={addMedia} alt=\"\" />\n                                    </label>\n                                    <input\n                                        onChange={onFileChange}\n                                        type=\"file\"\n                                        accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                                        style={{ display: \"none\" }}\n                                        id=\"upload_img_video\"\n                                    />\n                                </React.Fragment>\n                            ) : null}\n                        </div>\n                        <span className=\"error_msg\">\n                            {errorData?.upload}\n                        </span>\n                    </div>\n                </div>\n                <div className=\"bottom_btn custom_btn\">\n                    <button\n                        onClick={() => {\n                            if (!filesUrl?.length || !jobDescription?.length) {\n                                if (!filesUrl?.length) {\n                                    setErrorData((prev: any) => ({ ...prev, upload: 'Document file is required.' }));\n                                }\n\n                                if (!jobDescription?.length) {\n                                    setErrorData((prev: any) => ({ ...prev, detail: 'Job Description is required' }));\n                                }\n\n                                if (!reactSelect?.value?.length) {\n                                    setErrorData((prev: any) => ({ ...prev, name: 'Job Name is required' }));\n                                }\n\n                            } else {\n                                handleSubmit();\n                            }\n                        }}\n                        className={`fill_btn full_btn btn-effect`}>\n                        {'Save changes'}\n                    </button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddVoucherComponent;"]},"metadata":{},"sourceType":"module"}