{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/suceess.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport templateImage from '../../../../assets/images/job-complete-bg.png';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { setLoading } from '../../../../redux/common/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Success = props => {\n  _s();\n\n  var _history$location;\n\n  const history = useHistory();\n  const [isLoad, setImageLoad] = useState(true);\n  const params = new URLSearchParams(history === null || history === void 0 ? void 0 : (_history$location = history.location) === null || _history$location === void 0 ? void 0 : _history$location.search);\n  const payMode = params.get('payMode') === 'bank';\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n  useEffect(() => {\n    if (!isLoad) {\n      setLoading(false);\n    }\n  }, [isLoad]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_text_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"full_image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: templateImage,\n        alt: \"template-item\",\n        loading: \"eager\",\n        onLoad: () => {\n          setImageLoad(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short_info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: `Payment ${payMode ? 'in progress' : 'sent'}!`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: `We’ll notify the tradesperson that payment has been ${payMode ? 'initiated' : 'received'} for completing this milestone.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn_wrapr\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    props.history.push('/');\n                  },\n                  className: \"fill_btn btn-effect\",\n                  children: 'OK'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"btn_wrapr\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    history.push('/payment-history');\n                  },\n                  style: {\n                    backgroundColor: '#fff'\n                  },\n                  className: \"fill_btn btn-effect\",\n                  children: 'See your transactions'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Success, \"hF5MWqnksjUI1kRSM6PktmZ5tN8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Success;\nexport default _c2 = withRouter(Success);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Success\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/suceess.tsx"],"names":["React","useState","useEffect","templateImage","useHistory","withRouter","setLoading","Success","props","history","isLoad","setImageLoad","params","URLSearchParams","location","search","payMode","get","push","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport templateImage from '../../../../assets/images/job-complete-bg.png';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { setLoading } from '../../../../redux/common/actions';\n\n\nconst Success = (props: any) => {\n    const history = useHistory();\n    const [isLoad, setImageLoad] = useState(true);\n\n    const params = new URLSearchParams(history?.location?.search);\n    const payMode: any = params.get('payMode') === 'bank';\n\n    useEffect(() => { setLoading(true) }, [])\n\n    useEffect(() => {\n        if (!isLoad) { setLoading(false) }\n    }, [isLoad])\n\n    return (\n        <div className=\"img_text_wrap\">\n            <figure className=\"full_image\">\n                <img\n                    src={templateImage}\n                    alt=\"template-item\"\n                    loading=\"eager\"\n                    onLoad={() => {\n                        setImageLoad(false)\n                    }}\n                />\n                <div className=\"short_info\">\n                    <div className=\"content\">\n                        <h1 className=\"title\">\n                            {`Payment ${payMode ? 'in progress' : 'sent'}!`}\n                        </h1>\n                        <span className=\"show_label\">\n                            {`We’ll notify the tradesperson that payment has been ${payMode ? 'initiated' : 'received'} for completing this milestone.`}\n                        </span>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_6\">\n                                <div className=\"btn_wrapr\">\n                                    <button\n                                        onClick={() => {\n                                            props.history.push('/');\n                                        }}\n                                        className=\"fill_btn btn-effect\">\n                                        {'OK'}\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"flex_col_sm_6\">\n                                <div className=\"btn_wrapr\">\n                                    <button\n                                        onClick={() => {\n                                            history.push('/payment-history');\n                                        }}\n                                        style={{ backgroundColor: '#fff' }}\n                                        className=\"fill_btn btn-effect\">\n                                        {'See your transactions'}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </figure>\n        </div>\n    )\n}\n\nexport default withRouter(Success);"]},"metadata":{},"sourceType":"module"}