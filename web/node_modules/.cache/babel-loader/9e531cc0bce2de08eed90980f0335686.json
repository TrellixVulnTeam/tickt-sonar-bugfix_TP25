{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\",\"authRoute\"];import{Route,Redirect}from\"react-router-dom\";import storageService from\"../utils/storageService\";import{jsx as _jsx}from\"react/jsx-runtime\";var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,authRoute=_ref.authRoute,rest=_objectWithoutProperties(_ref,_excluded);var token=storageService.getItem('jwtToken')?storageService.getItem('jwtToken'):storageService.getItem('guestToken');var routeScreen=authRoute?!token:token;return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){return routeScreen?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):/*#__PURE__*/_jsx(Redirect,{to:{pathname:authRoute?\"/\":\"/signup\",state:{from:props.location}}});}}));};export default PrivateRoute;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/routes/privateRoute.tsx"],"names":["Route","Redirect","storageService","PrivateRoute","Component","component","authRoute","rest","token","getItem","routeScreen","props","pathname","state","from","location"],"mappings":"mYAAA,OAASA,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,yBAA3B,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAuD,IAAzCC,CAAAA,SAAyC,MAApDC,SAAoD,CAA9BC,SAA8B,MAA9BA,SAA8B,CAAhBC,IAAgB,0CAC1E,GAAMC,CAAAA,KAAK,CAAGN,cAAc,CAACO,OAAf,CAAuB,UAAvB,EAAqCP,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAArC,CAA0EP,cAAc,CAACO,OAAf,CAAuB,YAAvB,CAAxF,CACA,GAAMC,CAAAA,WAAW,CAAGJ,SAAS,CAAG,CAACE,KAAJ,CAAYA,KAAzC,CACA,mBACE,KAAC,KAAD,gCACMD,IADN,MAEE,MAAM,CAAE,gBAAAI,KAAK,QACXD,CAAAA,WAAW,cACT,KAAC,SAAD,kBAAeC,KAAf,EADS,cAGT,KAAC,QAAD,EACE,EAAE,CAAE,CACFC,QAAQ,CAAEN,SAAS,CAAG,GAAH,CAAS,SAD1B,CAEFO,KAAK,CAAE,CAAEC,IAAI,CAAEH,KAAK,CAACI,QAAd,CAFL,CADN,EAJS,EAFf,GADF,CAiBD,CApBD,CAsBA,cAAeZ,CAAAA,YAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\nimport storageService from \"../utils/storageService\";\n\nconst PrivateRoute = ({ component: Component, authRoute, ...rest }: any) => {\n  const token = storageService.getItem('jwtToken') ? storageService.getItem('jwtToken') : storageService.getItem('guestToken');\n  const routeScreen = authRoute ? !token : token;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        routeScreen ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: authRoute ? \"/\" : \"/signup\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}