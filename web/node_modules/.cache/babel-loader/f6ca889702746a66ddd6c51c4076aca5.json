{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/needApproval.tsx\";\nimport React, { Component } from \"react\";\nimport approved from \"../../../assets/images/approved.png\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport waiting from \"../../../assets/images/exclamation.png\";\nimport MarkMilestones from \"./markMilestones\";\nimport { renderTime } from \"../../../utils/common\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NeedApproval extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.redirectToInfo = ({\n      jobId,\n      status\n    }) => {\n      let props = this.props;\n\n      if ((jobId === null || jobId === void 0 ? void 0 : jobId.length) && (status === null || status === void 0 ? void 0 : status.length)) {\n        // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType || 'approval'}`)\n        let urlEncode = `?jobId=${jobId}&status=${status}&activeType=${(props === null || props === void 0 ? void 0 : props.activeType) || \"approval\"}`;\n        this.props.history.push(`/job-detail?${urlEncode}`);\n      }\n    };\n\n    this.setToggle = () => this.setState({\n      isToggleApplicants: !this.state.isToggleApplicants\n    });\n\n    this.resetStateLocal = () => {\n      let activeType = this.props.activeType;\n      this.setState({\n        localState: false\n      }, () => {\n        this.props.setJobLabel(activeType);\n      });\n    };\n\n    this.state = {\n      isToggleApplicants: false,\n      selectedIndex: \"\",\n      localState: \"\",\n      isRender: false\n    };\n  }\n\n  componentDidUpdate() {\n    let nextProps = this.props;\n    let isRender = this.state.isRender;\n\n    if ((nextProps === null || nextProps === void 0 ? void 0 : nextProps.isLoading) === false) {\n      if (!isRender) {\n        this.setState({\n          isRender: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      setJobLabel,\n      dataItems,\n      applicantsList,\n      jobType,\n      isLoading\n    } = this.props;\n    let listData = dataItems;\n    let {\n      isToggleApplicants,\n      localState,\n      selectedIndex,\n      isRender\n    } = this.state;\n    console.log({\n      applicantsList,\n      isToggleApplicants\n    });\n\n    if (localState && selectedIndex !== null) {\n      return /*#__PURE__*/_jsxDEV(MarkMilestones, {\n        resetStateLocal: this.resetStateLocal,\n        selectedIndex: selectedIndex,\n        listData: listData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!isRender) {\n      return null;\n    }\n\n    let titleText = jobType.charAt(0).toUpperCase() + jobType.slice(1);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: titleText == \"Approval\" ? \"Need Approval\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row tradies_row\",\n        children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n          amount,\n          durations,\n          jobId,\n          jobName,\n          fromDate,\n          toDate,\n          milestoneNumber,\n          specializationId,\n          specializationName,\n          locationName,\n          status,\n          timeLeft,\n          total,\n          totalmem,\n          totalMilestones,\n          tradieListData,\n          tradeName,\n          tradieId,\n          location,\n          tradeSelectedUrl,\n          tradieImage\n        }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradie_card\",\n            \"data-aos\": \"fade-in\",\n            \"data-aos-delay\": \"250\",\n            \"data-aos-duration\": \"1000\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                this.setState({\n                  localState: true,\n                  selectedIndex: index\n                }); // this.redirectToInfo({ jobId, status })\n              },\n              className: \"more_detail circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"u_img icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tradeSelectedUrl || jobTypePlaceholder,\n                  alt: \"traide-img\",\n                  onError: e => {\n                    var _e$target, _e$target2;\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                      e.target.onerror = null;\n                    }\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                      e.target.src = jobTypePlaceholder;\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: tradeName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"commn_para\",\n                  children: jobName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_info\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon dollar\",\n                  children: amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon calendar\",\n                  children: renderTime(fromDate, toDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: timeLeft\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_progress_wrap\",\n              id: \"scroll-progress-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress_wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-digit\",\n                  id: \"digit-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: `Job Milestones ${milestoneNumber} `\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 29\n                  }, this), `of ${totalMilestones}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"approval_info\",\n                  children: [status === \"APPROVED\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: approved,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 31\n                  }, this), status === \"NEEDS APPROVAL\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: waiting,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 31\n                  }, this), status === \"NEED APPROVAL\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: waiting,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 31\n                  }, this), status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress_bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"done_progress\",\n                    id: \"progress-bar\",\n                    type: \"range\",\n                    min: \"0\",\n                    value: milestoneNumber / totalMilestones * 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this), (status === \"NEED APPROVAL\" || status === \"NEEDS APPROVAL\") && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.setState({\n                    localState: true,\n                    selectedIndex: index\n                  });\n                },\n                className: \"fill_grey_btn full_btn btn-effect\",\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_record  m-t-vh\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"no_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: noDataFound,\n              alt: \"data not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this) // <div className=\"no_record  m-t-vh\">\n        //   <figure className=\"no_img\">\n        //     <img src={newApprovals} alt=\"data not found\" />\n        //   </figure>\n        //   <span className=\"empty_screen_text\">\n        //     You don't have any approval requests yet\n        //   </span>\n        //   <span className=\"empty_screen_subtext\">\n        //     As soon as someone will request your approval you will be\n        //     notified\n        //   </span>\n        // </div>\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NeedApproval;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/needApproval.tsx"],"names":["React","Component","approved","jobTypePlaceholder","noDataFound","waiting","MarkMilestones","renderTime","NeedApproval","constructor","props","redirectToInfo","jobId","status","length","urlEncode","activeType","history","push","setToggle","setState","isToggleApplicants","state","resetStateLocal","localState","setJobLabel","selectedIndex","isRender","componentDidUpdate","nextProps","isLoading","render","dataItems","applicantsList","jobType","listData","console","log","titleText","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","locationName","timeLeft","total","totalmem","totalMilestones","tradieListData","tradeName","tradieId","location","tradeSelectedUrl","tradieImage","index","e","target","onerror","src"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport approved from \"../../../assets/images/approved.png\";\nimport ApplicantsList from \"./applicantsList\";\nimport { withRouter } from \"react-router-dom\";\nimport newApprovals from \"../../../assets/images/newApprovals.png\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport waiting from \"../../../assets/images/exclamation.png\";\nimport moment from \"moment\";\nimport MarkMilestones from \"./markMilestones\";\n\nimport { renderTime } from \"../../../utils/common\";\n\ninterface Active {\n  amount: any;\n  durations: any;\n  jobId: any;\n  jobName: any;\n  fromDate: any;\n  toDate: any;\n  milestoneNumber: any;\n  specializationId: any;\n  specializationName: any;\n  status: any;\n  timeLeft: any;\n  total: any;\n  totalmem: any;\n  location: any;\n  locationName: any;\n  totalMilestones: any;\n  tradieListData: any;\n  tradeName: any;\n  tradieId: any;\n  tradeSelectedUrl: any;\n  tradieImage: any;\n}\ninterface State {\n  isToggleApplicants: boolean;\n  selectedIndex: any;\n  localState: any;\n  isRender: boolean;\n}\n\ninterface Props {\n  setJobLabel: any;\n  dataItems: any;\n  applicantsList?: any;\n  jobType: any;\n  history?: any;\n  isLoading: any;\n  activeType: any;\n}\n\nclass NeedApproval extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isToggleApplicants: false,\n      selectedIndex: \"\",\n      localState: \"\",\n      isRender: false,\n    };\n  }\n\n  componentDidUpdate() {\n    let nextProps = this.props;\n    let isRender = this.state.isRender;\n    if (nextProps?.isLoading === false) {\n      if (!isRender) {\n        this.setState({ isRender: true });\n      }\n    }\n  }\n\n  redirectToInfo = ({ jobId, status }: any) => {\n    let props: any = this.props;\n    if (jobId?.length && status?.length) {\n      // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType || 'approval'}`)\n      let urlEncode: any = `?jobId=${jobId}&status=${status}&activeType=${\n        props?.activeType || \"approval\"\n      }`;\n      this.props.history.push(`/job-detail?${urlEncode}`);\n    }\n  };\n\n  setToggle = () =>\n    this.setState({ isToggleApplicants: !this.state.isToggleApplicants });\n\n  resetStateLocal = () => {\n    let activeType = this.props.activeType;\n    this.setState(\n      {\n        localState: false,\n      },\n      () => {\n        this.props.setJobLabel(activeType);\n      }\n    );\n  };\n\n  render() {\n    const { setJobLabel, dataItems, applicantsList, jobType, isLoading } =\n      this.props;\n    let listData: any = dataItems;\n    let { isToggleApplicants, localState, selectedIndex, isRender } =\n      this.state;\n    console.log({ applicantsList, isToggleApplicants });\n\n    if (localState && selectedIndex !== null) {\n      return (\n        <MarkMilestones\n          resetStateLocal={this.resetStateLocal}\n          selectedIndex={selectedIndex}\n          listData={listData}\n        />\n      );\n    }\n\n    if (!isRender) {\n      return null;\n    }\n\n    let titleText = jobType.charAt(0).toUpperCase() + jobType.slice(1);\n    return (\n      <React.Fragment>\n        <span className=\"sub_title\">\n          {titleText == \"Approval\" ? \"Need Approval\" : \"\"}\n        </span>\n        {/* {'Jobs'} */}\n        <div className=\"flex_row tradies_row\">\n          {listData?.length\n            ? listData.map(\n                (\n                  {\n                    amount,\n                    durations,\n                    jobId,\n                    jobName,\n                    fromDate,\n                    toDate,\n                    milestoneNumber,\n                    specializationId,\n                    specializationName,\n                    locationName,\n                    status,\n                    timeLeft,\n                    total,\n                    totalmem,\n                    totalMilestones,\n                    tradieListData,\n                    tradeName,\n                    tradieId,\n                    location,\n                    tradeSelectedUrl,\n                    tradieImage,\n                  }: Active,\n                  index: number\n                ) => (\n                  <div className=\"flex_col_sm_6\">\n                    <div\n                      className=\"tradie_card\"\n                      data-aos=\"fade-in\"\n                      data-aos-delay=\"250\"\n                      data-aos-duration=\"1000\"\n                    >\n                      <span\n                        onClick={() => {\n                          this.setState({\n                            localState: true,\n                            selectedIndex: index,\n                          });\n                          // this.redirectToInfo({ jobId, status })\n                        }}\n                        className=\"more_detail circle\"\n                      ></span>\n                      <div className=\"user_wrap\">\n                        <figure className=\"u_img icon\">\n                          <img\n                            src={tradeSelectedUrl || jobTypePlaceholder}\n                            alt=\"traide-img\"\n                            onError={(e: any) => {\n                              if (e?.target?.onerror) {\n                                e.target.onerror = null;\n                              }\n                              if (e?.target?.src) {\n                                e.target.src = jobTypePlaceholder;\n                              }\n                            }}\n                          />\n                        </figure>\n                        <div className=\"details\">\n                          <span className=\"name\">{tradeName}</span>\n                          <p className=\"commn_para\">{jobName}</p>\n                        </div>\n                      </div>\n                      <div className=\"job_info\">\n                        <ul>\n                          <li className=\"icon dollar\">{amount}</li>\n                          <li className=\"\">\n                            <span>{total}</span>\n                          </li>\n                          <li className=\"icon calendar\">\n                            {renderTime(fromDate, toDate)}\n                          </li>\n                          <li className=\"\">\n                            <span>{timeLeft}</span>\n                          </li>\n                        </ul>\n                      </div>\n                      <div\n                        className=\"job_progress_wrap\"\n                        id=\"scroll-progress-bar\"\n                      >\n                        <div className=\"progress_wrapper\">\n                          <span className=\"completed-digit\" id=\"digit-progress\">\n                            <b>{`Job Milestones ${milestoneNumber} `}</b>\n                            {`of ${totalMilestones}`}\n                          </span>\n                          <span className=\"approval_info\">\n                            {status === \"APPROVED\" && (\n                              <img src={approved} alt=\"icon\" />\n                            )}\n                            {status === \"NEEDS APPROVAL\" && (\n                              <img src={waiting} alt=\"icon\" />\n                            )}\n                            {status === \"NEED APPROVAL\" && (\n                              <img src={waiting} alt=\"icon\" />\n                            )}\n                            {status}\n                          </span>\n                          <span className=\"progress_bar\">\n                            <input\n                              className=\"done_progress\"\n                              id=\"progress-bar\"\n                              type=\"range\"\n                              min=\"0\"\n                              value={(milestoneNumber / totalMilestones) * 100}\n                            />\n                          </span>\n                        </div>\n                        {(status === \"NEED APPROVAL\" ||\n                          status === \"NEEDS APPROVAL\") && (\n                          <button\n                            onClick={() => {\n                              this.setState({\n                                localState: true,\n                                selectedIndex: index,\n                              });\n                            }}\n                            className=\"fill_grey_btn full_btn btn-effect\"\n                          >\n                            {\"Approve\"}\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )\n              )\n            : !isLoading && (\n                <div className=\"no_record  m-t-vh\">\n                  <figure className=\"no_img\">\n                    <img src={noDataFound} alt=\"data not found\" />\n                  </figure>\n                  <span>{\"No Data Found\"}</span>\n                </div>\n                // <div className=\"no_record  m-t-vh\">\n                //   <figure className=\"no_img\">\n                //     <img src={newApprovals} alt=\"data not found\" />\n                //   </figure>\n\n                //   <span className=\"empty_screen_text\">\n                //     You don't have any approval requests yet\n                //   </span>\n                //   <span className=\"empty_screen_subtext\">\n                //     As soon as someone will request your approval you will be\n                //     notified\n                //   </span>\n                // </div>\n              )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NeedApproval;\n"]},"metadata":{},"sourceType":"module"}