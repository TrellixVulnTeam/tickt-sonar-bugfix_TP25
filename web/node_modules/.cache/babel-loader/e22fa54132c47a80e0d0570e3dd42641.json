{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import\"firebase/messaging\";import'firebase/auth';import'firebase/database';import storageService from\"../utils/storageService\";import Constants from\"../utils/constants\";import moment from'moment';if(!firebase.apps.length){firebase.initializeApp(Constants.qaStgFirebaseConfig);}var checkIfSupport=function checkIfSupport(){if(firebase.messaging.isSupported()){return firebase.messaging();}return false;};export var auth=firebase.auth();export var messaging=checkIfSupport();//firebase.messaging();\nexport var db=firebase.database();var CHAT_TYPE='single';var FIREBASE_COLLECTION={ROOM_INFO:\"room_info\",JOBS:\"jobs\",INBOX:\"inbox\",MESSAGES:\"messages\",LAST_MESSAGES:\"lastMessage\",USERS:\"users\"};var loggedInuserId=\"\";var msgListnerObj;// let totalPendingCounter = 0;\nvar inboxListner;var getRegisterToken=function getRegisterToken(){return new Promise(function(resolve,reject){messaging.getToken({vapidKey:Constants.FirebasePushServiceKey}).then(function(currentToken){if(currentToken){console.log(\"firebase token fetched successsfully\",currentToken);resolve({success:true,deviceToken:currentToken});}else{console.log('No registration token available.');setTokenSentToServer(false);resolve({success:false});}}).catch(function(err){console.log('An error occurred while retrieving  from firebase. ',err);setTokenSentToServer(false);reject({success:false});});});};var setTokenSentToServer=function setTokenSentToServer(sent){storageService.setItem('sentToServer',sent?'1':'0');storageService.setItem('fcmToken','');};var isTokenSentToServer=function isTokenSentToServer(){return storageService.getItem('sentToServer')==='1';};export var requestPermission=function requestPermission(){if(checkIfSupport()){return new Promise(function(resolve,reject){Notification.requestPermission().then(function(permission){var data=getRegisterToken();resolve(data);})// if (permission === 'granted' && isTokenSentToServer()) {\n//     const data = getRegisterToken();\n//     console.log('Token Already sent');\n//     resolve(data);\n// }\n.catch(function(err){console.log('Unable to get permission to show notification browser : ',err);reject({success:false});});});}};export var deleteToken=function deleteToken(){if(checkIfSupport()){messaging.deleteToken().then(function(){console.log('firebase Token deleted.');}).catch(function(err){console.log('Unable to delete firebase token. ',err);});}};export var signOut=function signOut(){auth.signOut().then(function(){console.log('Firebase signout successful.');}).catch(function(err){console.log('Firebase sign out error.',err);});};export var firebaseSignUpWithEmailPassword=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var email,password,id,fullName,user_type,ref;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:email=_ref.email,password=_ref.password,id=_ref.id,fullName=_ref.fullName,user_type=_ref.user_type;_context.prev=1;_context.next=4;return auth.createUserWithEmailAndPassword(email,password);case 4:ref=_context.sent;if(!ref){_context.next=11;break;}_context.next=8;return ref.user.updateProfile({displayName:fullName// photoURL: '',\n// roleId: user_type,\n});case 8:_context.next=10;return db.ref(\"\".concat(FIREBASE_COLLECTION.USERS,\"/\").concat(id)).set({email:email,image:'',name:fullName,// uid: ref.user[\"$\"][\"W\"],\nuserId:id,onlineStatus:true,userType:user_type});case 10:console.log(\"firebase authentication success\");case 11:_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.log(\"firebase authentication failure: \",{err:_context.t0});case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function firebaseSignUpWithEmailPassword(_x){return _ref2.apply(this,arguments);};}();export var firebaseLogInWithEmailPassword=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(authData,loginRes,isSignup){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('authData: ',authData);_context2.prev=1;_context2.next=4;return auth.signInWithEmailAndPassword(authData.email,authData.password);case 4:response=_context2.sent;if(!response){_context2.next=11;break;}console.log('firebase auth login success: ');if(!isSignup){_context2.next=9;break;}return _context2.abrupt(\"return\");case 9:_context2.next=11;return db.ref(\"\".concat(FIREBASE_COLLECTION.USERS,\"/\").concat(loginRes===null||loginRes===void 0?void 0:loginRes._id)).set({email:loginRes===null||loginRes===void 0?void 0:loginRes.email,image:loginRes===null||loginRes===void 0?void 0:loginRes.user_image,name:loginRes===null||loginRes===void 0?void 0:loginRes.userName,userId:loginRes===null||loginRes===void 0?void 0:loginRes._id,onlineStatus:true,userType:loginRes===null||loginRes===void 0?void 0:loginRes.user_type});case 11:_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](1);console.log('firebase auth login failure: ');case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[1,13]]);}));return function firebaseLogInWithEmailPassword(_x2,_x3,_x4){return _ref3.apply(this,arguments);};}();////////////////////////  firebase chat\nexport var loginAnonymously=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var userInfo,response,errorCode;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:userInfo=storageService.getItem(\"userInfo\");_context3.prev=1;_context3.next=4;return auth.signInAnonymously();case 4:response=_context3.sent;if(!response){_context3.next=9;break;}console.log('firebase anonymous auth login success: ');_context3.next=9;return db.ref(\"\".concat(FIREBASE_COLLECTION.USERS,\"/\").concat(userInfo===null||userInfo===void 0?void 0:userInfo._id)).update({email:userInfo===null||userInfo===void 0?void 0:userInfo.email,image:userInfo===null||userInfo===void 0?void 0:userInfo.user_image,name:userInfo===null||userInfo===void 0?void 0:userInfo.userName,userId:userInfo===null||userInfo===void 0?void 0:userInfo._id,onlineStatus:true,userType:userInfo===null||userInfo===void 0?void 0:userInfo.user_type,deviceType:1});case 9:_context3.next=16;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log('firebase anonymous auth login failure: ');errorCode=_context3.t0.code;if(errorCode==='auth/operation-not-allowed'){alert('You must enable Anonymous auth in the Firebase Console.');}else{console.error(_context3.t0);}case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function loginAnonymously(){return _ref4.apply(this,arguments);};}();export var getLoggedInuserId=function getLoggedInuserId(){var _storageService$getIt;return(_storageService$getIt=storageService.getItem(\"userInfo\"))===null||_storageService$getIt===void 0?void 0:_storageService$getIt._id;};export var updateChatUserDetails=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(updateType,value){var loggedInuserId;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:loggedInuserId=getLoggedInuserId();_context4.prev=1;_context4.next=4;return db.ref(\"\".concat(FIREBASE_COLLECTION.USERS,\"/\").concat(loggedInuserId)).update(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},updateType==='userImage'&&{image:value}),updateType==='userName'&&{name:value}),updateType==='deviceToken'&&{deviceToken:value}),updateType==='isNotification'&&{isNotification:value}));case 4:console.log(\"firebase \".concat(updateType,\" update success\"));_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](1);console.log(\"firebase \".concat(updateType,\" update failure: \"),{err:_context4.t0});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[1,7]]);}));return function updateChatUserDetails(_x5,_x6){return _ref5.apply(this,arguments);};}();export var createRoom=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(jobId,tradieId,builderId,jobName){var loggedInuserId,roomID,roomInfoObj,chatLastUpdates,chatRoomMembers;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:loggedInuserId=getLoggedInuserId();roomID=\"\".concat(jobId,\"_\").concat(tradieId,\"_\").concat(builderId);_context5.next=4;return checkRoomExist(roomID);case 4:if(!_context5.sent){_context5.next=6;break;}return _context5.abrupt(\"return\");case 6:roomInfoObj={id:roomID,chatRoomType:CHAT_TYPE,chatLastUpdate:firebase.database.ServerValue.TIMESTAMP};chatLastUpdates={};chatLastUpdates[tradieId]=tradieId===loggedInuserId?firebase.database.ServerValue.TIMESTAMP:0;chatLastUpdates[loggedInuserId]=firebase.database.ServerValue.TIMESTAMP;chatRoomMembers={};chatRoomMembers[tradieId]={memberDelete:firebase.database.ServerValue.TIMESTAMP,memberJoin:firebase.database.ServerValue.TIMESTAMP,memberLeave:0};chatRoomMembers[builderId]={memberDelete:firebase.database.ServerValue.TIMESTAMP,memberJoin:firebase.database.ServerValue.TIMESTAMP,memberLeave:0};roomInfoObj.chatRoomMembers=chatRoomMembers;roomInfoObj.chatLastUpdates=chatLastUpdates;_context5.next=17;return db.ref(\"\".concat(FIREBASE_COLLECTION.ROOM_INFO,\"/\").concat(roomID,\"/\")).set(roomInfoObj);case 17:_context5.next=19;return createInbox(tradieId,roomID,jobId,builderId,jobName);case 19:_context5.next=21;return createInbox(builderId,roomID,jobId,tradieId,jobName);case 21:return _context5.abrupt(\"return\",roomInfoObj);case 22:case\"end\":return _context5.stop();}}},_callee5);}));return function createRoom(_x7,_x8,_x9,_x10){return _ref6.apply(this,arguments);};}();export var checkRoomExist=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(roomID){var room;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return db.ref(\"\".concat(FIREBASE_COLLECTION.ROOM_INFO,\"/\").concat(roomID,\"/\")).once('value');case 2:room=_context6.sent;return _context6.abrupt(\"return\",room.exists());case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function checkRoomExist(_x11){return _ref7.apply(this,arguments);};}();export var createJob=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(jobInfo){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return db.ref(\"\".concat(FIREBASE_COLLECTION.JOBS,\"/\").concat(jobInfo.jobId,\"/\")).set(jobInfo);case 2:case\"end\":return _context7.stop();}}},_callee7);}));return function createJob(_x12){return _ref8.apply(this,arguments);};}();export var createInbox=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(userid,roomId,jobId,oppuserid,jobName){var inboxKey;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:inboxKey=\"\".concat(oppuserid,\"_\").concat(jobId);_context8.next=3;return db.ref(\"\".concat(FIREBASE_COLLECTION.INBOX,\"/\").concat(userid,\"/\").concat(inboxKey)).set({jobId:jobId,jobName:jobName,roomId:roomId,unreadMessages:0});case 3:case\"end\":return _context8.stop();}}},_callee8);}));return function createInbox(_x13,_x14,_x15,_x16,_x17){return _ref9.apply(this,arguments);};}();export var getFirebaseInboxData=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(listner){var userId,dbRef;return _regeneratorRuntime.wrap(function _callee10$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:// debugger;\nuserId=getLoggedInuserId();if(userId){_context11.next=4;break;}listner([]);return _context11.abrupt(\"return\");case 4:dbRef=\"\".concat(FIREBASE_COLLECTION.INBOX,\"/\").concat(userId);console.log(\"getFirebaseIndexData\",dbRef);if(inboxListner){db.ref(dbRef).off();db.ref(dbRef).off('value',msgListnerObj);}inboxListner=db.ref(dbRef).on(\"value\",/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(snapshot){var indexlist,items,users,_loop,i;return _regeneratorRuntime.wrap(function _callee9$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:indexlist=[];snapshot.forEach(function(snap){indexlist.push(snap.val());});items=[];users=[];_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(i){var lastMsg,oppUserId,userIndex,oppUserInfo;return _regeneratorRuntime.wrap(function _loop$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return db.ref(\"\".concat(FIREBASE_COLLECTION.LAST_MESSAGES,\"/\").concat(indexlist[i].roomId,\"/chatLastMessage\")).once('value');case 2:lastMsg=_context9.sent;if(lastMsg.exists()){indexlist[i].lastMsg=lastMsg.val();}oppUserId='';if(storageService.getItem('userType')===1){oppUserId=indexlist[i].roomId.split('_')[2];}else{oppUserId=indexlist[i].roomId.split('_')[1];}userIndex=users.findIndex(function(item){return item.userId===oppUserId;});if(!(userIndex==-1)){_context9.next=14;break;}_context9.next=10;return db.ref(\"\".concat(FIREBASE_COLLECTION.USERS,\"/\").concat(oppUserId)).once('value');case 10:oppUserInfo=_context9.sent;if(oppUserInfo.exists()){indexlist[i].oppUserInfo=oppUserInfo.val();users.push(oppUserInfo.val());}_context9.next=15;break;case 14:indexlist[i].oppUserInfo=users[userIndex];case 15:case\"end\":return _context9.stop();}}},_loop);});i=0;case 6:if(!(i<indexlist.length)){_context10.next=11;break;}return _context10.delegateYield(_loop(i),\"t0\",8);case 8:i++;_context10.next=6;break;case 11:setPendingCounter(indexlist);_context10.next=14;return listner(indexlist);case 14:case\"end\":return _context10.stop();}}},_callee9);}));return function(_x19){return _ref11.apply(this,arguments);};}());case 8:case\"end\":return _context11.stop();}}},_callee10);}));return function getFirebaseInboxData(_x18){return _ref10.apply(this,arguments);};}();export var setPendingCounter=function setPendingCounter(indexlist){var count=0;var unreadMsg=indexlist.filter(function(d){return d.unreadMessages>0;});unreadMsg.length===0?count=0:count=unreadMsg.length;// store.dispatch({\n//     type: INBOX_COUNTER_SET,\n//     payLoad: count\n// });\n};// export const getFirebaseItemsData = async () => {\n//     let itemlist = [];\n//     db.ref(`${FIREBASE_COLLECTION.JOBS}`).on(\"value\", (snapshot) => {\n//         snapshot.forEach((snap) => {\n//             itemlist.push(snap.val());\n//         });\n//     });\n//     return itemlist;\n// }\n// export const getFirebaseRoomInfoData = async () => {\n//     let roomlist = [];\n//     db.ref(`${FIREBASE_COLLECTION.ROOM_INFO}`).on(\"value\", (snapshot) => {\n//         snapshot.forEach((snap) => {\n//             roomlist.push(snap.val());\n//         });\n//     });\n//     return roomlist\n// }\nexport var getMessagesOfRoom=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(roomId,listner){return _regeneratorRuntime.wrap(function _callee11$(_context12){while(1){switch(_context12.prev=_context12.next){case 0://getPreviousMessages check KT file\n//.limitToLast(10)\n// if (msgListnerObj) {\n//     await db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`).off('value', msgListnerObj);\n// }\nmsgListnerObj=db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId)).orderByChild('messageTimestamp').limitToLast(500).on(\"value\",function(snapshot){var itemlist=[];snapshot.forEach(function(snap){itemlist.push(snap.val());});listner(itemlist);});case 1:case\"end\":return _context12.stop();}}},_callee11);}));return function getMessagesOfRoom(_x20,_x21){return _ref12.apply(this,arguments);};}();export var stopListeningOfRoom=/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(roomId){return _regeneratorRuntime.wrap(function _callee12$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:if(msgListnerObj){db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId)).off('value',msgListnerObj);db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId)).off();}console.log(\"Stop listening Of Room\");case 2:case\"end\":return _context13.stop();}}},_callee12);}));return function stopListeningOfRoom(_x22){return _ref13.apply(this,arguments);};}();export var sendTextMessage=/*#__PURE__*/function(){var _ref14=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(roomId,message){var senderId,roomids,jobId,receiverId,dbRef,newMsgRef,messageID,msgData,inboxId;return _regeneratorRuntime.wrap(function _callee13$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:senderId=getLoggedInuserId();roomids=roomId.split(\"_\");jobId=\"\";receiverId=\"\";if(roomids.length==3){if(roomids[1]==senderId){receiverId=roomids[2];}else{receiverId=roomids[1];}jobId=roomids[0];}dbRef=db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId));newMsgRef=dbRef.push();// Get the unique key generated by push()\nmessageID=newMsgRef.key;msgData={\"isBlock\":false,\"isDeleted\":false,\"mediaDuration\":\"\",\"mediaUrl\":\"\",\"messageCaption\":\"\",\"messageId\":messageID,\"messageRoomId\":roomId,\"messageStatus\":\"send\",\"messageText\":message,\"messageTimestamp\":firebase.database.ServerValue.TIMESTAMP,\"messageType\":\"text\",\"progress\":0,\"receiverId\":receiverId,\"senderId\":senderId,\"thumbnail\":\"\"};_context14.next=11;return db.ref(\"\".concat(FIREBASE_COLLECTION.LAST_MESSAGES,\"/\").concat(roomId,\"/chatLastMessage\")).set(msgData);case 11:_context14.next=13;return db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId,\"/\").concat(messageID)).set(msgData);case 13:msgData.messageTimestamp=moment().toDate().getTime();//TODO Implement Update Message Counter\n//https://stackoverflow.com/questions/42276881/increment-firebase-value-from-javascript-subject-to-constraint\ninboxId=\"\".concat(senderId,\"_\").concat(jobId);_context14.next=17;return db.ref(\"\".concat(FIREBASE_COLLECTION.INBOX,\"/\").concat(receiverId,\"/\").concat(inboxId)).child('unreadMessages').set(firebase.database.ServerValue.increment(1));case 17:return _context14.abrupt(\"return\",msgData);case 18:case\"end\":return _context14.stop();}}},_callee13);}));return function sendTextMessage(_x23,_x24){return _ref14.apply(this,arguments);};}();export var sendImageVideoMessage=/*#__PURE__*/function(){var _ref15=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(roomId,url,type){var senderId,roomids,jobId,receiverId,dbRef,newMsgRef,messageID,msgData,inboxId;return _regeneratorRuntime.wrap(function _callee14$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:senderId=getLoggedInuserId();roomids=roomId.split(\"_\");jobId=\"\";receiverId=\"\";if(roomids.length==3){if(roomids[1]==senderId){receiverId=roomids[2];}else{receiverId=roomids[1];}jobId=roomids[0];}dbRef=db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId));newMsgRef=dbRef.push();// Get the unique key generated by push()\nmessageID=newMsgRef.key;msgData={\"isBlock\":false,\"isDeleted\":false,\"mediaDuration\":\"\",\"mediaUrl\":url,\"messageCaption\":\"\",\"messageId\":messageID,\"messageRoomId\":roomId,\"messageStatus\":\"send\",\"messageText\":\"\",\"messageTimestamp\":firebase.database.ServerValue.TIMESTAMP,\"messageType\":type===\"image\"?\"image\":\"video\",\"progress\":0,\"receiverId\":receiverId,\"senderId\":senderId,\"thumbnail\":url};_context15.next=11;return db.ref(\"\".concat(FIREBASE_COLLECTION.LAST_MESSAGES,\"/\").concat(roomId,\"/chatLastMessage\")).set(msgData);case 11:_context15.next=13;return db.ref(\"\".concat(FIREBASE_COLLECTION.MESSAGES,\"/\").concat(roomId,\"/\").concat(messageID)).set(msgData);case 13:msgData.messageTimestamp=moment().toDate().getTime();//Implement Update Message Counter\n//https://stackoverflow.com/questions/42276881/increment-firebase-value-from-javascript-subject-to-constraint\ninboxId=\"\".concat(senderId,\"_\").concat(jobId);_context15.next=17;return db.ref(\"\".concat(FIREBASE_COLLECTION.INBOX,\"/\").concat(receiverId,\"/\").concat(inboxId)).child('unreadMessages').set(firebase.database.ServerValue.increment(1));case 17:return _context15.abrupt(\"return\",msgData);case 18:case\"end\":return _context15.stop();}}},_callee14);}));return function sendImageVideoMessage(_x25,_x26,_x27){return _ref15.apply(this,arguments);};}();export var resetUnreadCounter=/*#__PURE__*/function(){var _ref16=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee15(roomId){var senderId,roomids,jobId,receiverId,inboxId;return _regeneratorRuntime.wrap(function _callee15$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:senderId=getLoggedInuserId();roomids=roomId.split(\"_\");jobId=\"\";receiverId=\"\";if(roomids.length===3){if(roomids[1]==senderId){receiverId=roomids[2];}else{receiverId=roomids[1];}jobId=roomids[0];}inboxId=\"\".concat(receiverId,\"_\").concat(jobId);_context16.next=8;return db.ref(\"\".concat(FIREBASE_COLLECTION.INBOX,\"/\").concat(senderId,\"/\").concat(inboxId)).child('unreadMessages').set(0);case 8:case\"end\":return _context16.stop();}}},_callee15);}));return function resetUnreadCounter(_x28){return _ref16.apply(this,arguments);};}();export default firebase;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/services/firebase.js"],"names":["firebase","storageService","Constants","moment","apps","length","initializeApp","qaStgFirebaseConfig","checkIfSupport","messaging","isSupported","auth","db","database","CHAT_TYPE","FIREBASE_COLLECTION","ROOM_INFO","JOBS","INBOX","MESSAGES","LAST_MESSAGES","USERS","loggedInuserId","msgListnerObj","inboxListner","getRegisterToken","Promise","resolve","reject","getToken","vapidKey","FirebasePushServiceKey","then","currentToken","console","log","success","deviceToken","setTokenSentToServer","catch","err","sent","setItem","isTokenSentToServer","getItem","requestPermission","Notification","permission","data","deleteToken","signOut","firebaseSignUpWithEmailPassword","email","password","id","fullName","user_type","createUserWithEmailAndPassword","ref","user","updateProfile","displayName","set","image","name","userId","onlineStatus","userType","firebaseLogInWithEmailPassword","authData","loginRes","isSignup","signInWithEmailAndPassword","response","_id","user_image","userName","loginAnonymously","userInfo","signInAnonymously","update","deviceType","errorCode","code","alert","error","getLoggedInuserId","updateChatUserDetails","updateType","value","isNotification","createRoom","jobId","tradieId","builderId","jobName","roomID","checkRoomExist","roomInfoObj","chatRoomType","chatLastUpdate","ServerValue","TIMESTAMP","chatLastUpdates","chatRoomMembers","memberDelete","memberJoin","memberLeave","createInbox","once","room","exists","createJob","jobInfo","userid","roomId","oppuserid","inboxKey","unreadMessages","getFirebaseInboxData","listner","dbRef","off","on","snapshot","indexlist","forEach","snap","push","val","items","users","i","lastMsg","oppUserId","split","userIndex","findIndex","item","oppUserInfo","setPendingCounter","count","unreadMsg","filter","d","getMessagesOfRoom","orderByChild","limitToLast","itemlist","stopListeningOfRoom","sendTextMessage","message","senderId","roomids","receiverId","newMsgRef","messageID","key","msgData","messageTimestamp","toDate","getTime","inboxId","child","increment","sendImageVideoMessage","url","type","resetUnreadCounter"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport 'firebase/auth';\nimport 'firebase/database';\nimport storageService from \"../utils/storageService\";\nimport Constants from \"../utils/constants\";\nimport moment from 'moment';\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(Constants.qaStgFirebaseConfig);\n}\n\nconst checkIfSupport = () => {\n    if (firebase.messaging.isSupported()) {\n        return firebase.messaging();\n    }\n    return false;\n}\n\nexport const auth = firebase.auth();\nexport const messaging = checkIfSupport(); //firebase.messaging();\nexport const db = firebase.database();\n\nconst CHAT_TYPE = 'single';\nconst FIREBASE_COLLECTION = {\n    ROOM_INFO: \"room_info\",\n    JOBS: \"jobs\",\n    INBOX: \"inbox\",\n    MESSAGES: \"messages\",\n    LAST_MESSAGES: \"lastMessage\",\n    USERS: \"users\",\n}\nlet loggedInuserId = \"\";\nlet msgListnerObj;\n// let totalPendingCounter = 0;\nlet inboxListner;\n\n\nconst getRegisterToken = () => {\n    return new Promise((resolve, reject) => {\n        messaging.getToken({\n            vapidKey: Constants.FirebasePushServiceKey\n        }).then((currentToken) => {\n            if (currentToken) {\n                console.log(\"firebase token fetched successsfully\", currentToken);\n                resolve({ success: true, deviceToken: currentToken });\n            } else {\n                console.log('No registration token available.');\n                setTokenSentToServer(false);\n                resolve({ success: false });\n            }\n        }).catch((err) => {\n            console.log('An error occurred while retrieving  from firebase. ', err);\n            setTokenSentToServer(false);\n            reject({ success: false });\n        });\n    })\n}\n\nconst setTokenSentToServer = (sent) => {\n    storageService.setItem('sentToServer', sent ? '1' : '0');\n    storageService.setItem('fcmToken', '');\n}\n\nconst isTokenSentToServer = () => {\n    return storageService.getItem('sentToServer') === '1';\n}\n\nexport const requestPermission = () => {\n    if (checkIfSupport()) {\n        return new Promise((resolve, reject) => {\n            Notification.requestPermission().then((permission) => {\n                const data = getRegisterToken();\n                resolve(data);\n            })\n                // if (permission === 'granted' && isTokenSentToServer()) {\n                //     const data = getRegisterToken();\n                //     console.log('Token Already sent');\n                //     resolve(data);\n                // }\n                .catch((err) => {\n                    console.log('Unable to get permission to show notification browser : ', err);\n                    reject({ success: false });\n                });\n        })\n    }\n}\n\nexport const deleteToken = () => {\n    if (checkIfSupport()) {\n        messaging.deleteToken().then(() => {\n            console.log('firebase Token deleted.');\n        }).catch((err) => {\n            console.log('Unable to delete firebase token. ', err);\n        });\n    }\n}\n\nexport const signOut = () => {\n    auth.signOut().then(() => {\n        console.log('Firebase signout successful.');\n    }).catch((err) => {\n        console.log('Firebase sign out error.', err);\n    });\n}\n\nexport const firebaseSignUpWithEmailPassword = async ({ email, password, id, fullName, user_type }) => {\n    try {\n        let ref = await auth.createUserWithEmailAndPassword(email, password);\n        if (ref) {\n            await ref.user.updateProfile({\n                displayName: fullName,\n                // photoURL: '',\n                // roleId: user_type,\n            });\n\n            await db.ref(`${FIREBASE_COLLECTION.USERS}/${id}`).set({\n                email: email,\n                image: '',\n                name: fullName,\n                // uid: ref.user[\"$\"][\"W\"],\n                userId: id,\n                onlineStatus: true,\n                userType: user_type,\n            });\n            console.log(\"firebase authentication success\")\n        }\n    } catch (err) {\n        console.log(\"firebase authentication failure: \", { err });\n    }\n};\n\nexport const firebaseLogInWithEmailPassword = async (authData, loginRes, isSignup) => {\n    console.log('authData: ', authData);\n    try {\n        let response = await auth.signInWithEmailAndPassword(authData.email, authData.password);\n        if (response) {\n            console.log('firebase auth login success: ');\n            if (isSignup) return;\n            await db.ref(`${FIREBASE_COLLECTION.USERS}/${loginRes?._id}`).set({\n                email: loginRes?.email,\n                image: loginRes?.user_image,\n                name: loginRes?.userName,\n                userId: loginRes?._id,\n                onlineStatus: true,\n                userType: loginRes?.user_type,\n            });\n        }\n    } catch (err) {\n        console.log('firebase auth login failure: ');\n    }\n}\n\n////////////////////////  firebase chat\n\nexport const loginAnonymously = async () => {\n    let userInfo = storageService.getItem(\"userInfo\");\n    try {\n        let response = await auth.signInAnonymously();\n        if (response) {\n            console.log('firebase anonymous auth login success: ');\n            await db.ref(`${FIREBASE_COLLECTION.USERS}/${userInfo?._id}`).update({\n                email: userInfo?.email,\n                image: userInfo?.user_image,\n                name: userInfo?.userName,\n                userId: userInfo?._id,\n                onlineStatus: true,\n                userType: userInfo?.user_type,\n                deviceType: 1\n            });\n        }\n    } catch (error) {\n        console.log('firebase anonymous auth login failure: ');\n        var errorCode = error.code;\n        if (errorCode === 'auth/operation-not-allowed') {\n            alert('You must enable Anonymous auth in the Firebase Console.');\n        } else {\n            console.error(error);\n        }\n    }\n}\n\nexport const getLoggedInuserId = () => {\n    return storageService.getItem(\"userInfo\")?._id;\n}\n\nexport const updateChatUserDetails = async (updateType, value) => {\n    let loggedInuserId = getLoggedInuserId();\n    try {\n        await db.ref(`${FIREBASE_COLLECTION.USERS}/${loggedInuserId}`).update({\n            ...(updateType === 'userImage' && { image: value }),\n            ...(updateType === 'userName' && { name: value }),\n            ...(updateType === 'deviceToken' && { deviceToken: value }),\n            ...(updateType === 'isNotification' && { isNotification: value }),\n        });\n        console.log(`firebase ${updateType} update success`);\n    } catch (err) {\n        console.log(`firebase ${updateType} update failure: `, { err });\n    }\n}\n\nexport const createRoom = async (jobId, tradieId, builderId, jobName) => {\n    let loggedInuserId = getLoggedInuserId();\n\n    const roomID = `${jobId}_${tradieId}_${builderId}`;\n\n    if (await checkRoomExist(roomID)) {\n        return;\n    }\n\n    let roomInfoObj = {\n        id: roomID,\n        chatRoomType: CHAT_TYPE,\n        chatLastUpdate: firebase.database.ServerValue.TIMESTAMP,\n    };\n    let chatLastUpdates = {};\n    chatLastUpdates[tradieId] = tradieId === loggedInuserId ? firebase.database.ServerValue.TIMESTAMP : 0;\n    chatLastUpdates[loggedInuserId] = firebase.database.ServerValue.TIMESTAMP;\n\n    let chatRoomMembers = {};\n    chatRoomMembers[tradieId] = {\n        memberDelete: firebase.database.ServerValue.TIMESTAMP,\n        memberJoin: firebase.database.ServerValue.TIMESTAMP,\n        memberLeave: 0\n    }\n\n    chatRoomMembers[builderId] = {\n        memberDelete: firebase.database.ServerValue.TIMESTAMP,\n        memberJoin: firebase.database.ServerValue.TIMESTAMP,\n        memberLeave: 0\n    }\n    roomInfoObj.chatRoomMembers = chatRoomMembers;\n    roomInfoObj.chatLastUpdates = chatLastUpdates;\n\n    await db.ref(`${FIREBASE_COLLECTION.ROOM_INFO}/${roomID}/`).set(roomInfoObj);\n    // debugger;\n    // await createItem(itemInfo);\n    //loggedin user inbox\n    await createInbox(tradieId, roomID, jobId, builderId, jobName);\n    // opposite user inbox\n    await createInbox(builderId, roomID, jobId, tradieId, jobName);\n    return roomInfoObj;\n}\n\nexport const checkRoomExist = async (roomID) => {\n    let room = await db.ref(`${FIREBASE_COLLECTION.ROOM_INFO}/${roomID}/`).once('value');\n    return room.exists();\n}\n\nexport const createJob = async (jobInfo) => {\n    await db.ref(`${FIREBASE_COLLECTION.JOBS}/${jobInfo.jobId}/`).set(jobInfo);\n}\n\nexport const createInbox = async (userid, roomId, jobId, oppuserid, jobName) => {\n    const inboxKey = `${oppuserid}_${jobId}`;\n    await db.ref(`${FIREBASE_COLLECTION.INBOX}/${userid}/${inboxKey}`).set({\n        jobId: jobId,\n        jobName: jobName,\n        roomId: roomId,\n        unreadMessages: 0\n    });\n}\n\nexport const getFirebaseInboxData = async (listner) => {\n    // debugger;\n    let userId = getLoggedInuserId();\n    if (!userId) {\n        listner([]);\n        return;\n    }\n    let dbRef = `${FIREBASE_COLLECTION.INBOX}/${userId}`;\n    console.log(\"getFirebaseIndexData\", dbRef);\n    if (inboxListner) {\n        db.ref(dbRef).off();\n        db.ref(dbRef).off('value', msgListnerObj);\n    }\n    inboxListner = db.ref(dbRef).on(\"value\", async (snapshot) => {\n        let indexlist = [];\n        snapshot.forEach((snap) => {\n            indexlist.push(snap.val());\n        });\n        let items = [];\n        let users = [];\n        for (let i = 0; i < indexlist.length; i++) {\n            // let itemIndex = items.findIndex((item) => item.jobId === indexlist[i].jobId);\n            // if (itemIndex == -1) {\n            //     let room = await db.ref(`${FIREBASE_COLLECTION.JOBS}/${indexlist[i].jobId}`).once('value');\n            //     if (room.exists()) {\n            //         let lastMsg = await db.ref(`${FIREBASE_COLLECTION.LAST_MESSAGES}/${indexlist[i].roomId}/chatLastMessage`).once('value');\n            //         indexlist[i].item = room.val();\n            //         if (lastMsg.exists())\n            //             indexlist[i].lastMsg = lastMsg.val();\n            //         items.push(room.val());\n            //     }\n            // } else {\n            //     indexlist[i].item = items[itemIndex];\n            // }\n            let lastMsg = await db.ref(`${FIREBASE_COLLECTION.LAST_MESSAGES}/${indexlist[i].roomId}/chatLastMessage`).once('value');\n            if (lastMsg.exists()) {\n                indexlist[i].lastMsg = lastMsg.val();\n            }\n            let oppUserId = '';\n            if (storageService.getItem('userType') === 1) {\n                oppUserId = indexlist[i].roomId.split('_')[2];\n            } else {\n                oppUserId = indexlist[i].roomId.split('_')[1];\n            }\n            let userIndex = users.findIndex((item) => item.userId === oppUserId);\n            if (userIndex == -1) {\n                let oppUserInfo = await db.ref(`${FIREBASE_COLLECTION.USERS}/${oppUserId}`).once('value');\n                if (oppUserInfo.exists()) {\n                    indexlist[i].oppUserInfo = oppUserInfo.val();\n                    users.push(oppUserInfo.val());\n                }\n            } else {\n                indexlist[i].oppUserInfo = users[userIndex];\n            }\n        }\n        setPendingCounter(indexlist);\n        await listner(indexlist);\n    });\n}\n\nexport const setPendingCounter = (indexlist) => {\n    let count = 0;\n    let unreadMsg = indexlist.filter((d) => d.unreadMessages > 0)\n    unreadMsg.length === 0 ? count = 0 : count = unreadMsg.length\n    // store.dispatch({\n    //     type: INBOX_COUNTER_SET,\n    //     payLoad: count\n    // });\n}\n\n// export const getFirebaseItemsData = async () => {\n//     let itemlist = [];\n//     db.ref(`${FIREBASE_COLLECTION.JOBS}`).on(\"value\", (snapshot) => {\n//         snapshot.forEach((snap) => {\n//             itemlist.push(snap.val());\n//         });\n//     });\n//     return itemlist;\n// }\n\n// export const getFirebaseRoomInfoData = async () => {\n//     let roomlist = [];\n//     db.ref(`${FIREBASE_COLLECTION.ROOM_INFO}`).on(\"value\", (snapshot) => {\n//         snapshot.forEach((snap) => {\n//             roomlist.push(snap.val());\n//         });\n//     });\n//     return roomlist\n// }\n\nexport const getMessagesOfRoom = async (roomId, listner) => {\n    //getPreviousMessages check KT file\n    //.limitToLast(10)\n\n    // if (msgListnerObj) {\n    //     await db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`).off('value', msgListnerObj);\n    // }\n\n    msgListnerObj = db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`).orderByChild('messageTimestamp').limitToLast(500).on(\"value\", (snapshot) => {\n        let itemlist = [];\n        snapshot.forEach((snap) => {\n            itemlist.push(snap.val());\n        });\n        listner(itemlist);\n    });\n}\n\nexport const stopListeningOfRoom = async (roomId) => {\n\n    if (msgListnerObj) {\n        db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`).off('value', msgListnerObj);\n        db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`).off();\n    }\n    console.log(\"Stop listening Of Room\");\n}\n\nexport const sendTextMessage = async (roomId, message) => {\n    let senderId = getLoggedInuserId();\n    let roomids = roomId.split(\"_\");\n    let jobId = \"\";\n    let receiverId = \"\";\n    if (roomids.length == 3) {\n        if (roomids[1] == senderId) {\n            receiverId = roomids[2];\n        } else {\n            receiverId = roomids[1];\n        }\n        jobId = roomids[0];\n    }\n\n    let dbRef = db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`);\n    const newMsgRef = dbRef.push();\n    // Get the unique key generated by push()\n    const messageID = newMsgRef.key;\n\n    let msgData = {\n        \"isBlock\": false,\n        \"isDeleted\": false,\n        \"mediaDuration\": \"\",\n        \"mediaUrl\": \"\",\n        \"messageCaption\": \"\",\n        \"messageId\": messageID,\n        \"messageRoomId\": roomId,\n        \"messageStatus\": \"send\",\n        \"messageText\": message,\n        \"messageTimestamp\": firebase.database.ServerValue.TIMESTAMP,\n        \"messageType\": \"text\",\n        \"progress\": 0,\n        \"receiverId\": receiverId,\n        \"senderId\": senderId,\n        \"thumbnail\": \"\"\n    };\n    await db.ref(`${FIREBASE_COLLECTION.LAST_MESSAGES}/${roomId}/chatLastMessage`).set(msgData);\n    await db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}/${messageID}`).set(msgData);\n    msgData.messageTimestamp = moment().toDate().getTime();\n\n    //TODO Implement Update Message Counter\n    //https://stackoverflow.com/questions/42276881/increment-firebase-value-from-javascript-subject-to-constraint\n    let inboxId = `${senderId}_${jobId}`;\n    await db.ref(`${FIREBASE_COLLECTION.INBOX}/${receiverId}/${inboxId}`).child('unreadMessages').set(firebase.database.ServerValue.increment(1));\n    return msgData;\n}\n\nexport const sendImageVideoMessage = async (roomId, url, type) => {\n    let senderId = getLoggedInuserId();\n    let roomids = roomId.split(\"_\");\n    let jobId = \"\";\n    let receiverId = \"\";\n    if (roomids.length == 3) {\n        if (roomids[1] == senderId) {\n            receiverId = roomids[2];\n        } else {\n            receiverId = roomids[1];\n        }\n        jobId = roomids[0];\n    }\n\n    let dbRef = db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}`);\n    const newMsgRef = dbRef.push();\n    // Get the unique key generated by push()\n    const messageID = newMsgRef.key;\n\n    let msgData = {\n        \"isBlock\": false,\n        \"isDeleted\": false,\n        \"mediaDuration\": \"\",\n        \"mediaUrl\": url,\n        \"messageCaption\": \"\",\n        \"messageId\": messageID,\n        \"messageRoomId\": roomId,\n        \"messageStatus\": \"send\",\n        \"messageText\": \"\",\n        \"messageTimestamp\": firebase.database.ServerValue.TIMESTAMP,\n        \"messageType\": type === \"image\" ? \"image\" : \"video\",\n        \"progress\": 0,\n        \"receiverId\": receiverId,\n        \"senderId\": senderId,\n        \"thumbnail\": url\n    };\n    await db.ref(`${FIREBASE_COLLECTION.LAST_MESSAGES}/${roomId}/chatLastMessage`).set(msgData);\n    await db.ref(`${FIREBASE_COLLECTION.MESSAGES}/${roomId}/${messageID}`).set(msgData);\n    msgData.messageTimestamp = moment().toDate().getTime();\n\n    //Implement Update Message Counter\n    //https://stackoverflow.com/questions/42276881/increment-firebase-value-from-javascript-subject-to-constraint\n    let inboxId = `${senderId}_${jobId}`;\n    await db.ref(`${FIREBASE_COLLECTION.INBOX}/${receiverId}/${inboxId}`).child('unreadMessages').set(firebase.database.ServerValue.increment(1));\n    return msgData;\n}\n\nexport const resetUnreadCounter = async (roomId) => {\n    let senderId = getLoggedInuserId();\n    let roomids = roomId.split(\"_\");\n    let jobId = \"\";\n    let receiverId = \"\";\n    if (roomids.length === 3) {\n        if (roomids[1] == senderId) {\n            receiverId = roomids[2];\n        } else {\n            receiverId = roomids[1];\n        }\n        jobId = roomids[0];\n    }\n    let inboxId = `${receiverId}_${jobId}`;\n    await db.ref(`${FIREBASE_COLLECTION.INBOX}/${senderId}/${inboxId}`).child('unreadMessages').set(0);\n}\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}