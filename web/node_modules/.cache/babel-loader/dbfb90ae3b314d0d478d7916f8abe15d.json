{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(postSignup),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(callTradeList),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(authWatcher);import{put,takeLatest}from'redux-saga/effects';import*as actionTypes from'./constants';import NetworkOps from'../../network/NetworkOps';import Urls from'../../network/Urls';// import * as commonActions from '../common/actions';\nfunction postSignup(_ref){var data,response;return _regeneratorRuntime.wrap(function postSignup$(_context){while(1){switch(_context.prev=_context.next){case 0:data=_ref.data;_context.next=3;return NetworkOps.postToJson(Urls.signup,data);case 3:response=_context.sent;if(!(response.status===200)){_context.next=6;break;}return _context.abrupt(\"return\",{success:true});case 6:return _context.abrupt(\"return\",{success:false});case 7:case\"end\":return _context.stop();}}},_marked);}function callTradeList(){var response;return _regeneratorRuntime.wrap(function callTradeList$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return NetworkOps.get(Urls.tradeList);case 2:response=_context2.sent;if(!(response.status_code===200)){_context2.next=6;break;}_context2.next=6;return put({type:actionTypes.CALL_TRADE_LIST_SUCCESSED,payload:response.result.trade});case 6:case\"end\":return _context2.stop();}}},_marked2);}function authWatcher(){return _regeneratorRuntime.wrap(function authWatcher$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeLatest(actionTypes.POST_SIGNUP_API,postSignup);case 2:_context3.next=4;return takeLatest(actionTypes.CALL_TRADE_LIST,callTradeList);case 4:case\"end\":return _context3.stop();}}},_marked3);}export default authWatcher;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/redux/auth/sagas.ts"],"names":["postSignup","callTradeList","authWatcher","put","takeLatest","actionTypes","NetworkOps","Urls","data","postToJson","signup","response","status","success","get","tradeList","status_code","type","CALL_TRADE_LIST_SUCCESSED","payload","result","trade","POST_SIGNUP_API","CALL_TRADE_LIST"],"mappings":"6MAMUA,U,iDAUAC,a,iDAUAC,W,EA1BV,OAAUC,GAAV,CAAeC,UAAf,KAAiC,oBAAjC,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,aAA7B,CACA,MAAOC,CAAAA,UAAP,KAA0C,0BAA1C,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA;AAEA,QAAUP,CAAAA,UAAV,4IAAuBQ,IAAvB,MAAuBA,IAAvB,iBACkC,MAAMF,CAAAA,UAAU,CAACG,UAAX,CAAsBF,IAAI,CAACG,MAA3B,CAAmCF,IAAnC,CAAN,CADlC,OACQG,QADR,oBAEMA,QAAQ,CAACC,MAAT,GAAoB,GAF1B,0DAIW,CAAEC,OAAO,CAAE,IAAX,CAJX,yCAMS,CAAEA,OAAO,CAAE,KAAX,CANT,wDAUA,QAAUZ,CAAAA,aAAV,0JAEkC,MAAMK,CAAAA,UAAU,CAACQ,GAAX,CAAeP,IAAI,CAACQ,SAApB,CAAN,CAFlC,OAEQJ,QAFR,qBAIMA,QAAQ,CAACK,WAAT,GAAyB,GAJ/B,4CAKI,MAAMb,CAAAA,GAAG,CAAC,CAAEc,IAAI,CAAEZ,WAAW,CAACa,yBAApB,CAA+CC,OAAO,CAAER,QAAQ,CAACS,MAAT,CAAgBC,KAAxE,CAAD,CAAT,CALJ,wDAUA,QAAUnB,CAAAA,WAAV,2IACE,MAAME,CAAAA,UAAU,CAACC,WAAW,CAACiB,eAAb,CAA8BtB,UAA9B,CAAhB,CADF,wBAEE,MAAMI,CAAAA,UAAU,CAACC,WAAW,CAACkB,eAAb,CAA8BtB,aAA9B,CAAhB,CAFF,wDAKA,cAAeC,CAAAA,WAAf","sourcesContent":["import {  put, takeLatest } from 'redux-saga/effects'\nimport * as actionTypes from './constants'\nimport NetworkOps, { FetchResponse } from '../../network/NetworkOps';\nimport Urls from '../../network/Urls';\n// import * as commonActions from '../common/actions';\n\nfunction* postSignup({ data }: any) {\n  const response: FetchResponse = yield NetworkOps.postToJson(Urls.signup, data);\n  if (response.status === 200) {\n    //yield put({type: actionTypes.FIRST_API_SUCCESSED, user: user});\n    return { success: true };\n  }\n  return { success: false };\n\n}\n\nfunction* callTradeList() {\n  // commonActions.setLoading(true);\n  const response: FetchResponse = yield NetworkOps.get(Urls.tradeList);\n  // commonActions.setLoading(false);\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.CALL_TRADE_LIST_SUCCESSED, payload: response.result.trade });\n  }\n}\n\n\nfunction* authWatcher() {\n  yield takeLatest(actionTypes.POST_SIGNUP_API, postSignup);\n  yield takeLatest(actionTypes.CALL_TRADE_LIST, callTradeList);\n}\n\nexport default authWatcher;"]},"metadata":{},"sourceType":"module"}