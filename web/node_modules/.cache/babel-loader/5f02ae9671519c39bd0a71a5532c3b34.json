{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport dummy from \"../../assets/images/u_placeholder.jpg\";\nimport chatSearch from \"../../assets/images/search-chat.png\";\nimport menu from \"../../assets/images/menu-line-blue.png\";\nimport close from \"../../assets/images/ic-cancel-blue.png\";\nimport { setLoading, unReadMessageCount } from \"../../redux/common/actions\";\nimport { formatDateTime } from \"../../utils/common\";\nimport noData from \"../../assets/images/no-search-data.png\";\nimport emptyChat from \"../../assets/images/emptyChat.png\";\nimport { auth, createRoom, checkRoomExist, getFirebaseInboxData, stopListeningOfRoom, resetUnreadCounter } from \"../../services/firebase\";\nimport UserMessages from \"./userMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet selectedRoomID = \"\";\nlet isFreshChatRoute = false;\n\nconst Chat = props => {\n  _s();\n\n  var _props$history, _props$history$locati, _props$history2, _props$history2$locat;\n\n  const [initializing, setInitializing] = useState(true); // firebase authenticated user details\n\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [inBoxData, setInBoxData] = useState([]);\n  const [filterInBoxData, setFilterInBoxData] = useState([]);\n  const [isNoRecords, setIsNoRecords] = useState(false);\n  const [roomData, setRoomData] = useState({});\n  const [roomId, setRoomId] = useState(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchActive, setSearchActive] = useState(false);\n  const [isInitialLoader, setIsInitialLoader] = useState(true);\n  const [isMobInbox, setIsMobInbox] = useState(false);\n  const [unreadMessages, setUnreadMessages] = useState();\n  const {\n    tradieId,\n    builderId,\n    jobName,\n    jobId\n  } = ((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.state) ? (_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : (_props$history2$locat = _props$history2.location) === null || _props$history2$locat === void 0 ? void 0 : _props$history2$locat.state : {\n    tradieId: \"\",\n    builderId: \"\",\n    jobName: \"\",\n    jobId: \"\"\n  }; // console.log('tradieId, builderId, jobName, jobId: ', tradieId, builderId, jobName, jobId);\n\n  useEffect(() => {\n    //  console.log(\"roomId:: from didmout\", selectedRoomID);\n    (async () => {\n      setLoading(true);\n\n      if (tradieId && builderId && jobName && jobId) {\n        await setInitialItems();\n      } else {\n        isFreshChatRoute = true;\n      }\n\n      await getFirebaseInboxData(onUpdateofInbox); // debugger;\n    })();\n\n    return () => {\n      // debugger;\n      stopListeningOfRoom(selectedRoomID);\n      selectedRoomID = \"\";\n    };\n  }, []);\n  useEffect(() => {\n    unReadMessageCount(unreadMessages || 0);\n  }, [unreadMessages]);\n\n  const setInitialItems = async () => {\n    const roomID = `${jobId}_${tradieId}_${builderId}`;\n    selectedRoomID = roomID;\n\n    if (await checkRoomExist(roomID)) {\n      //console.log('RoomAlreadyExist: =================>');\n      return;\n    } else {\n      await createRoom(jobId, tradieId, builderId, jobName); // console.log('NewRoomCreated: ============>');\n    }\n  };\n\n  const onUpdateofInbox = async res => {\n    //  console.log(\"roomId::\", selectedRoomID);\n    let selectedRoomInfo = \"\";\n    const sortedRes = res.filter((item, index) => {\n      if (item.hasOwnProperty(\"lastMsg\") || item.roomId === selectedRoomID) {\n        if (item.roomId === selectedRoomID && !isFreshChatRoute) {\n          selectedRoomInfo = item;\n        } else {\n          return item;\n        }\n      }\n    });\n    sortedRes === null || sortedRes === void 0 ? void 0 : sortedRes.sort(function (x, y) {\n      var _y$lastMsg, _x$lastMsg;\n\n      return ((_y$lastMsg = y.lastMsg) === null || _y$lastMsg === void 0 ? void 0 : _y$lastMsg.messageTimestamp) - ((_x$lastMsg = x.lastMsg) === null || _x$lastMsg === void 0 ? void 0 : _x$lastMsg.messageTimestamp);\n    });\n\n    if (sortedRes.length === 0 && !selectedRoomInfo) {\n      setIsNoRecords(true);\n\n      if (isInitialLoader) {\n        setIsInitialLoader(false);\n        setLoading(false);\n      }\n\n      return;\n    }\n\n    setIsNoRecords(false);\n    let ress;\n\n    if (selectedRoomInfo) {\n      ress = [...sortedRes];\n      ress.unshift(selectedRoomInfo);\n    } // console.log('ress: ', ress, \"sortedRes\", sortedRes, \"res\", res, \"selectedRoomInfo\", selectedRoomInfo);\n\n\n    const newRes = Array.isArray(ress) && selectedRoomInfo ? ress : sortedRes;\n    setInBoxData(newRes.length === 0 ? [{\n      firstKey: \"emptyRes\"\n    }] : newRes);\n\n    if (newRes.length > 0 && selectedRoomID === \"\") {\n      var _newRes$;\n\n      selectedRoomID = newRes[0].roomId;\n      setRoomId(newRes[0].roomId);\n\n      if (newRes[0] && ((_newRes$ = newRes[0]) === null || _newRes$ === void 0 ? void 0 : _newRes$.unreadMessages) > 0) {\n        newRes[0].unreadMessages = 0;\n        resetUnreadCounter(newRes[0].roomId);\n      }\n\n      setRoomData(newRes[0]);\n      return; // fetchJobDetail(res[0].item?.jobId);\n    }\n\n    if (newRes.length > 0) {\n      let itemObj = newRes.find(x => x.roomId == selectedRoomID);\n\n      if (itemObj && (itemObj === null || itemObj === void 0 ? void 0 : itemObj.unreadMessages) > 0) {\n        itemObj.unreadMessages = 0;\n        resetUnreadCounter(itemObj.roomId);\n      }\n\n      setRoomData(itemObj);\n    }\n  }; //  console.log('user: ', user);\n\n\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n        setIsMobInbox(false);\n      } else {\n        setUser(false);\n        setIsMobInbox(true);\n        setLoading(false);\n        setIsInitialLoader(false);\n      }\n\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n    return unsubscribe;\n  }, [initializing]); // console.log(props.history, \"history\", roomId, \"roomId\", roomData, \"roomData\", selectedRoomID, \"selectedRoomID\", inBoxData, 'inBoxData');\n\n  const getRoomDetails = async item => {\n    stopListeningOfRoom(selectedRoomID);\n    selectedRoomID = item.roomId;\n    setRoomId(item.roomId);\n    setRoomData(item);\n    resetUnreadCounter(item.roomId); // fetchEquipmentDetail(item.itemId);\n  };\n\n  useEffect(() => {\n    var _inBoxData$;\n\n    if (searchQuery) {\n      let filteredVal = inBoxData.filter(item => {\n        var _item$oppUserInfo, _item$oppUserInfo$nam, _item$oppUserInfo$nam2;\n\n        return (_item$oppUserInfo = item.oppUserInfo) === null || _item$oppUserInfo === void 0 ? void 0 : (_item$oppUserInfo$nam = _item$oppUserInfo.name) === null || _item$oppUserInfo$nam === void 0 ? void 0 : (_item$oppUserInfo$nam2 = _item$oppUserInfo$nam.toLowerCase()) === null || _item$oppUserInfo$nam2 === void 0 ? void 0 : _item$oppUserInfo$nam2.includes(searchQuery.toLowerCase());\n      });\n      setFilterInBoxData(filteredVal);\n    }\n\n    if ((inBoxData.length || ((_inBoxData$ = inBoxData[0]) === null || _inBoxData$ === void 0 ? void 0 : _inBoxData$[\"firstKey\"]) === \"emptyRes\") && isInitialLoader) {\n      var _inBoxData$2;\n\n      if (((_inBoxData$2 = inBoxData[0]) === null || _inBoxData$2 === void 0 ? void 0 : _inBoxData$2[\"firstKey\"]) === \"emptyRes\") setInBoxData([]);\n      setLoading(false);\n      setIsInitialLoader(false);\n    }\n  }, [searchQuery, inBoxData]);\n  useEffect(() => {\n    inBoxData.map(item => {\n      let unreadMessagesCount = 0; //   if (item.unreadMessages !== 0) {\n\n      unreadMessagesCount = unreadMessagesCount + item.unreadMessages;\n      console.log(\"\");\n      setUnreadMessages(unreadMessagesCount); //   }\n    });\n  }, [inBoxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mob_side_nav\",\n        onClick: () => setIsMobInbox(true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: menu,\n          alt: \"mob-side-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f_row chat_wrapr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `side_nav_col ${isMobInbox ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close_nav\",\n            onClick: () => setIsMobInbox(false),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: close,\n              alt: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stick\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `search_bar ${searchActive ? \"active\" : \"\"}`,\n              onClick: () => {\n                setSearchActive(true);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search\",\n                value: searchQuery,\n                onChange: e => setSearchQuery(e.target.value.trimLeft())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon_ltr\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: chatSearch,\n                  alt: \"search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat_list\",\n              children: searchQuery ? filterInBoxData.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"javascript:void(0)\",\n                  className: \"chat\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inner_title line-1\",\n                      children: \"No Record Found\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this) : filterInBoxData.map(item => {\n                var _item$oppUserInfo2, _item$oppUserInfo3, _item$lastMsg, _item$lastMsg2, _item$lastMsg3;\n\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    getRoomDetails(item);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"javascript:void(0)\",\n                    className: `chat ${selectedRoomID === item.roomId ? \"active\" : \"\"}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"u_img\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: ((_item$oppUserInfo2 = item.oppUserInfo) === null || _item$oppUserInfo2 === void 0 ? void 0 : _item$oppUserInfo2.image) || dummy,\n                        alt: \"img\",\n                        onError: e => {\n                          var _e$target, _e$target2;\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                            e.target.onerror = null;\n                          }\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                            e.target.src = dummy;\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detail\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title line-1\",\n                        children: (_item$oppUserInfo3 = item.oppUserInfo) === null || _item$oppUserInfo3 === void 0 ? void 0 : _item$oppUserInfo3.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title job line-1\",\n                        children: item.jobName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-1\",\n                        children: (_item$lastMsg = item.lastMsg) === null || _item$lastMsg === void 0 ? void 0 : _item$lastMsg.messageText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 288,\n                        columnNumber: 31\n                      }, this), ((_item$lastMsg2 = item.lastMsg) === null || _item$lastMsg2 === void 0 ? void 0 : _item$lastMsg2.messageTimestamp) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"date_time\",\n                        children: formatDateTime((_item$lastMsg3 = item.lastMsg) === null || _item$lastMsg3 === void 0 ? void 0 : _item$lastMsg3.messageTimestamp, \"inboxTime\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 33\n                      }, this), selectedRoomID === item.roomId ? null : item.unreadMessages === 0 ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"count\",\n                        children: item.unreadMessages\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this);\n              }) : (inBoxData === null || inBoxData === void 0 ? void 0 : inBoxData.length) > 0 ? inBoxData.map(item => {\n                var _item$oppUserInfo4, _item$oppUserInfo5, _item$lastMsg4, _item$lastMsg5, _item$lastMsg6, _item$lastMsg7, _item$lastMsg8, _item$lastMsg9;\n\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    getRoomDetails(item);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"javascript:void(0)\",\n                    className: `chat ${selectedRoomID === item.roomId ? \"active\" : \"\"}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"u_img\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: ((_item$oppUserInfo4 = item.oppUserInfo) === null || _item$oppUserInfo4 === void 0 ? void 0 : _item$oppUserInfo4.image) || dummy,\n                        alt: \"img\",\n                        onError: e => {\n                          var _e$target3, _e$target4;\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.onerror) {\n                            e.target.onerror = null;\n                          }\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.src) {\n                            e.target.src = dummy;\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detail\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title line-1\",\n                        children: (_item$oppUserInfo5 = item.oppUserInfo) === null || _item$oppUserInfo5 === void 0 ? void 0 : _item$oppUserInfo5.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title job line-1\",\n                        children: item.jobName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 344,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-1\",\n                        children: ((_item$lastMsg4 = item.lastMsg) === null || _item$lastMsg4 === void 0 ? void 0 : _item$lastMsg4.messageType) === \"text\" ? (_item$lastMsg5 = item.lastMsg) === null || _item$lastMsg5 === void 0 ? void 0 : _item$lastMsg5.messageText : ((_item$lastMsg6 = item.lastMsg) === null || _item$lastMsg6 === void 0 ? void 0 : _item$lastMsg6.messageType) === \"image\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          style: {\n                            color: \"#929292\"\n                          },\n                          children: \"Photo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 33\n                        }, this) : ((_item$lastMsg7 = item.lastMsg) === null || _item$lastMsg7 === void 0 ? void 0 : _item$lastMsg7.messageType) === \"video\" ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          style: {\n                            color: \"#929292\"\n                          },\n                          children: \"Video\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 33\n                        }, this) : \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 29\n                      }, this), ((_item$lastMsg8 = item.lastMsg) === null || _item$lastMsg8 === void 0 ? void 0 : _item$lastMsg8.messageTimestamp) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"date_time\",\n                        children: formatDateTime((_item$lastMsg9 = item.lastMsg) === null || _item$lastMsg9 === void 0 ? void 0 : _item$lastMsg9.messageTimestamp, \"inboxTime\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 31\n                      }, this), selectedRoomID === item.roomId ? null : item.unreadMessages === 0 ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"count\",\n                        children: item.unreadMessages\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this);\n              }) : props.isLoading ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"javascript:void(0)\",\n                  className: \"chat\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"no_record\",\n                      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                          className: \"no_img\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: emptyChat,\n                            alt: \"data not found\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 385,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 384,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"empty_screen_text\",\n                        children: \"You don't have any chat messages yet.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 389,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"empty_screen_subtext\",\n                        children: \"Connect to your local network\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"empty_screen_button\",\n                        onClick: () => props.history.push(\"/\"),\n                        children: \"View Recommended tradespeople\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), isInitialLoader ? null : !isInitialLoader && (inBoxData === null || inBoxData === void 0 ? void 0 : inBoxData.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail_col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row tradies_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_record\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"no_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: noData,\n                  alt: \"data not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UserMessages, {\n          roomId: selectedRoomID,\n          roomData: roomData,\n          isNoRecords: isNoRecords,\n          history: props.history,\n          isLoading: props.isLoading,\n          inBoxData: inBoxData,\n          setInBoxData: setInBoxData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"h9UoYTuodVT8PgXv5mzgFwfdJlw=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/chat.tsx"],"names":["React","useState","useEffect","dummy","chatSearch","menu","close","setLoading","unReadMessageCount","formatDateTime","noData","emptyChat","auth","createRoom","checkRoomExist","getFirebaseInboxData","stopListeningOfRoom","resetUnreadCounter","UserMessages","selectedRoomID","isFreshChatRoute","Chat","props","initializing","setInitializing","user","setUser","currentUser","inBoxData","setInBoxData","filterInBoxData","setFilterInBoxData","isNoRecords","setIsNoRecords","roomData","setRoomData","roomId","setRoomId","searchQuery","setSearchQuery","searchActive","setSearchActive","isInitialLoader","setIsInitialLoader","isMobInbox","setIsMobInbox","unreadMessages","setUnreadMessages","tradieId","builderId","jobName","jobId","history","location","state","setInitialItems","onUpdateofInbox","roomID","res","selectedRoomInfo","sortedRes","filter","item","index","hasOwnProperty","sort","x","y","lastMsg","messageTimestamp","length","ress","unshift","newRes","Array","isArray","firstKey","itemObj","find","unsubscribe","onAuthStateChanged","getRoomDetails","filteredVal","oppUserInfo","name","toLowerCase","includes","map","unreadMessagesCount","console","log","e","target","value","trimLeft","image","onerror","src","messageText","messageType","color","isLoading","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport dummy from \"../../assets/images/u_placeholder.jpg\";\nimport chatSearch from \"../../assets/images/search-chat.png\";\nimport menu from \"../../assets/images/menu-line-blue.png\";\nimport close from \"../../assets/images/ic-cancel-blue.png\";\n\nimport { setLoading, unReadMessageCount } from \"../../redux/common/actions\";\nimport { formatDateTime } from \"../../utils/common\";\nimport noData from \"../../assets/images/no-search-data.png\";\nimport emptyChat from \"../../assets/images/emptyChat.png\";\n\nimport {\n  auth,\n  createRoom,\n  checkRoomExist,\n  getFirebaseInboxData,\n  stopListeningOfRoom,\n  resetUnreadCounter,\n} from \"../../services/firebase\";\n\nimport UserMessages from \"./userMessages\";\n\ninterface PropTypes {\n  builderProfile: any;\n  tradieProfileData: any;\n  isLoading: boolean;\n  history: any;\n}\n\nlet selectedRoomID = \"\";\nlet isFreshChatRoute: boolean = false;\n\nconst Chat = (props: PropTypes) => {\n  const [initializing, setInitializing] = useState<boolean>(true);\n  // firebase authenticated user details\n  const [user, setUser] = useState<any>(() => auth.currentUser);\n  const [inBoxData, setInBoxData] = useState<any>([]);\n  const [filterInBoxData, setFilterInBoxData] = useState<any>([]);\n  const [isNoRecords, setIsNoRecords] = useState<boolean>(false);\n  const [roomData, setRoomData] = useState<any>({});\n  const [roomId, setRoomId] = useState<string>(\"\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchActive, setSearchActive] = useState(false);\n  const [isInitialLoader, setIsInitialLoader] = useState(true);\n  const [isMobInbox, setIsMobInbox] = useState<boolean>(false);\n  const [unreadMessages, setUnreadMessages] = useState<number>();\n\n  const { tradieId, builderId, jobName, jobId } = props.history?.location?.state\n    ? props.history?.location?.state\n    : { tradieId: \"\", builderId: \"\", jobName: \"\", jobId: \"\" };\n  // console.log('tradieId, builderId, jobName, jobId: ', tradieId, builderId, jobName, jobId);\n\n  useEffect(() => {\n    //  console.log(\"roomId:: from didmout\", selectedRoomID);\n    (async () => {\n      setLoading(true);\n      if (tradieId && builderId && jobName && jobId) {\n        await setInitialItems();\n      } else {\n        isFreshChatRoute = true;\n      }\n      await getFirebaseInboxData(onUpdateofInbox);\n      // debugger;\n    })();\n\n    return () => {\n      // debugger;\n      stopListeningOfRoom(selectedRoomID);\n      selectedRoomID = \"\";\n    };\n  }, []);\n  useEffect(() => {\n    unReadMessageCount(unreadMessages || 0);\n  }, [unreadMessages]);\n\n  const setInitialItems = async () => {\n    const roomID: string = `${jobId}_${tradieId}_${builderId}`;\n    selectedRoomID = roomID;\n    if (await checkRoomExist(roomID)) {\n      //console.log('RoomAlreadyExist: =================>');\n      return;\n    } else {\n      await createRoom(jobId, tradieId, builderId, jobName);\n      // console.log('NewRoomCreated: ============>');\n    }\n  };\n\n  const onUpdateofInbox = async (res: any) => {\n    //  console.log(\"roomId::\", selectedRoomID);\n    let selectedRoomInfo: any = \"\";\n    const sortedRes = res.filter((item: any, index: number) => {\n      if (item.hasOwnProperty(\"lastMsg\") || item.roomId === selectedRoomID) {\n        if (item.roomId === selectedRoomID && !isFreshChatRoute) {\n          selectedRoomInfo = item;\n        } else {\n          return item;\n        }\n      }\n    });\n\n    sortedRes?.sort(function (x: any, y: any) {\n      return y.lastMsg?.messageTimestamp - x.lastMsg?.messageTimestamp;\n    });\n\n    if (sortedRes.length === 0 && !selectedRoomInfo) {\n      setIsNoRecords(true);\n      if (isInitialLoader) {\n        setIsInitialLoader(false);\n        setLoading(false);\n      }\n      return;\n    }\n    setIsNoRecords(false);\n\n    let ress: any;\n    if (selectedRoomInfo) {\n      ress = [...sortedRes];\n      ress.unshift(selectedRoomInfo);\n    }\n    // console.log('ress: ', ress, \"sortedRes\", sortedRes, \"res\", res, \"selectedRoomInfo\", selectedRoomInfo);\n    const newRes = Array.isArray(ress) && selectedRoomInfo ? ress : sortedRes;\n    setInBoxData(newRes.length === 0 ? [{ firstKey: \"emptyRes\" }] : newRes);\n    if (newRes.length > 0 && selectedRoomID === \"\") {\n      selectedRoomID = newRes[0].roomId;\n      setRoomId(newRes[0].roomId);\n      if (newRes[0] && newRes[0]?.unreadMessages > 0) {\n        newRes[0].unreadMessages = 0;\n        resetUnreadCounter(newRes[0].roomId);\n      }\n      setRoomData(newRes[0]);\n      return;\n      // fetchJobDetail(res[0].item?.jobId);\n    }\n\n    if (newRes.length > 0) {\n      let itemObj = newRes.find((x: any) => x.roomId == selectedRoomID);\n\n      if (itemObj && itemObj?.unreadMessages > 0) {\n        itemObj.unreadMessages = 0;\n        resetUnreadCounter(itemObj.roomId);\n      }\n      setRoomData(itemObj);\n    }\n  };\n\n  //  console.log('user: ', user);\n\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n        setIsMobInbox(false);\n      } else {\n        setUser(false);\n        setIsMobInbox(true);\n        setLoading(false);\n        setIsInitialLoader(false);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n\n    return unsubscribe;\n  }, [initializing]);\n\n  // console.log(props.history, \"history\", roomId, \"roomId\", roomData, \"roomData\", selectedRoomID, \"selectedRoomID\", inBoxData, 'inBoxData');\n\n  const getRoomDetails = async (item: any) => {\n    stopListeningOfRoom(selectedRoomID);\n    selectedRoomID = item.roomId;\n    setRoomId(item.roomId);\n    setRoomData(item);\n    resetUnreadCounter(item.roomId);\n    // fetchEquipmentDetail(item.itemId);\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      let filteredVal = inBoxData.filter((item: any) =>\n        item.oppUserInfo?.name\n          ?.toLowerCase()\n          ?.includes(searchQuery.toLowerCase())\n      );\n      setFilterInBoxData(filteredVal);\n    }\n    if (\n      (inBoxData.length || inBoxData[0]?.[\"firstKey\"] === \"emptyRes\") &&\n      isInitialLoader\n    ) {\n      if (inBoxData[0]?.[\"firstKey\"] === \"emptyRes\") setInBoxData([]);\n      setLoading(false);\n      setIsInitialLoader(false);\n    }\n  }, [searchQuery, inBoxData]);\n\n  useEffect(() => {\n    inBoxData.map((item: any) => {\n      let unreadMessagesCount: any = 0;\n    //   if (item.unreadMessages !== 0) {\n          unreadMessagesCount = unreadMessagesCount + item.unreadMessages;\n          console.log(\"\")\n        setUnreadMessages(unreadMessagesCount);\n    //   }\n    });\n  }, [inBoxData]);\n\n  return (\n    <div className=\"app_wrapper\">\n      <div className=\"custom_container\">\n        <span className=\"mob_side_nav\" onClick={() => setIsMobInbox(true)}>\n          <img src={menu} alt=\"mob-side-nav\" />\n        </span>\n        <div className=\"f_row chat_wrapr\">\n          <div className={`side_nav_col ${isMobInbox ? \"active\" : \"\"}`}>\n            <button className=\"close_nav\" onClick={() => setIsMobInbox(false)}>\n              <img src={close} alt=\"close\" />\n            </button>\n            <div className=\"stick\">\n              <span className=\"title\">Chat</span>\n\n              <div\n                className={`search_bar ${searchActive ? \"active\" : \"\"}`}\n                onClick={() => {\n                  setSearchActive(true);\n                }}\n              >\n                <input\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  value={searchQuery}\n                  onChange={(e: any) =>\n                    setSearchQuery(e.target.value.trimLeft())\n                  }\n                />\n                <span className=\"detect_icon_ltr\">\n                  <img src={chatSearch} alt=\"search\" />\n                </span>\n              </div>\n              <ul className=\"chat_list\">\n                {searchQuery ? (\n                  filterInBoxData.length === 0 ? (\n                    <li>\n                      <a href=\"javascript:void(0)\" className=\"chat\">\n                        <div className=\"detail\">\n                          <span className=\"inner_title line-1\">\n                            No Record Found\n                          </span>\n                        </div>\n                      </a>\n                    </li>\n                  ) : (\n                    filterInBoxData.map((item: any) => {\n                      return (\n                        <li\n                          onClick={() => {\n                            getRoomDetails(item);\n                          }}\n                        >\n                          <a\n                            href=\"javascript:void(0)\"\n                            className={`chat ${\n                              selectedRoomID === item.roomId ? \"active\" : \"\"\n                            }`}\n                          >\n                            <figure className=\"u_img\">\n                              <img\n                                src={item.oppUserInfo?.image || dummy}\n                                alt=\"img\"\n                                onError={(e: any) => {\n                                  if (e?.target?.onerror) {\n                                    e.target.onerror = null;\n                                  }\n                                  if (e?.target?.src) {\n                                    e.target.src = dummy;\n                                  }\n                                }}\n                              />\n                            </figure>\n                            <div className=\"detail\">\n                              <span className=\"inner_title line-1\">\n                                {item.oppUserInfo?.name}\n                              </span>\n                              <span className=\"inner_title job line-1\">\n                                {item.jobName}\n                              </span>\n                              <p className=\"commn_para line-1\">\n                                {item.lastMsg?.messageText}\n                              </p>\n                              {item.lastMsg?.messageTimestamp && (\n                                <span className=\"date_time\">\n                                  {formatDateTime(\n                                    item.lastMsg?.messageTimestamp,\n                                    \"inboxTime\"\n                                  )}\n                                </span>\n                              )}\n                              {selectedRoomID ===\n                              item.roomId ? null : item.unreadMessages ===\n                                0 ? null : (\n                                <span className=\"count\">\n                                  {item.unreadMessages}\n                                </span>\n                              )}\n                            </div>\n                          </a>\n                        </li>\n                      );\n                    })\n                  )\n                ) : inBoxData?.length > 0 ? (\n                  inBoxData.map((item: any) => {\n                    return (\n                      <li\n                        onClick={() => {\n                          getRoomDetails(item);\n                        }}\n                      >\n                        <a\n                          href=\"javascript:void(0)\"\n                          className={`chat ${\n                            selectedRoomID === item.roomId ? \"active\" : \"\"\n                          }`}\n                        >\n                          <figure className=\"u_img\">\n                            <img\n                              src={item.oppUserInfo?.image || dummy}\n                              alt=\"img\"\n                              onError={(e: any) => {\n                                if (e?.target?.onerror) {\n                                  e.target.onerror = null;\n                                }\n                                if (e?.target?.src) {\n                                  e.target.src = dummy;\n                                }\n                              }}\n                            />\n                          </figure>\n                          <div className=\"detail\">\n                            <span className=\"inner_title line-1\">\n                              {item.oppUserInfo?.name}\n                            </span>\n                            <span className=\"inner_title job line-1\">\n                              {item.jobName}\n                            </span>\n                            <p className=\"commn_para line-1\">\n                              {item.lastMsg?.messageType === \"text\" ? (\n                                item.lastMsg?.messageText\n                              ) : item.lastMsg?.messageType === \"image\" ? (\n                                <i style={{ color: \"#929292\" }}>Photo</i>\n                              ) : item.lastMsg?.messageType === \"video\" ? (\n                                <i style={{ color: \"#929292\" }}>Video</i>\n                              ) : (\n                                \"\"\n                              )}\n                            </p>\n                            {item.lastMsg?.messageTimestamp && (\n                              <span className=\"date_time\">\n                                {formatDateTime(\n                                  item.lastMsg?.messageTimestamp,\n                                  \"inboxTime\"\n                                )}\n                              </span>\n                            )}\n                            {selectedRoomID ===\n                            item.roomId ? null : item.unreadMessages ===\n                              0 ? null : (\n                              <span className=\"count\">\n                                {item.unreadMessages}\n                              </span>\n                            )}\n                          </div>\n                        </a>\n                      </li>\n                    );\n                  })\n                ) : props.isLoading ? null : (\n                  <li>\n                    <a href=\"javascript:void(0)\" className=\"chat\">\n                      <div className=\"detail\">\n                        <span className=\"no_record\">\n                          <figure>\n                            <figure className=\"no_img\">\n                              <img src={emptyChat} alt=\"data not found\" />\n                            </figure>\n                          </figure>\n\n                          <span className=\"empty_screen_text\">\n                            You don't have any chat messages yet.\n                          </span>\n                          <span className=\"empty_screen_subtext\">\n                            Connect to your local network\n                          </span>\n                          <button\n                            className=\"empty_screen_button\"\n                            onClick={() => props.history.push(\"/\")}\n                          >\n                            View Recommended tradespeople\n                          </button>\n                        </span>\n                      </div>\n                    </a>\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n          {/* {(isInitialLoader || inBoxData?.length === 0) ? null : */}\n          {isInitialLoader ? null : !isInitialLoader &&\n            inBoxData?.length === 0 ? (\n            <div className=\"detail_col\">\n              <div className=\"flex_row tradies_row\">\n                <div className=\"no_record\">\n                  <figure className=\"no_img\">\n                    <img src={noData} alt=\"data not found\" />\n                  </figure>\n                  <span>No Data Found</span>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <UserMessages\n              roomId={selectedRoomID}\n              roomData={roomData}\n              isNoRecords={isNoRecords}\n              history={props.history}\n              isLoading={props.isLoading}\n              inBoxData={inBoxData}\n              setInBoxData={setInBoxData}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}