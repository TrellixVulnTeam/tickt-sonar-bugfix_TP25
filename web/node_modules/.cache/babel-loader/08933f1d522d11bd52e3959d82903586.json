{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{connect}from'react-redux';import{setShowToast}from'../redux/common/actions';import noInternet from'../assets/images/internet-connection-graphic.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TYPES={success:'success',error:'failed',warning:'warning',info:'info'};// handles the auto hiding of toast\nvar TOAST_TIMEOUT=3000;var checkConnection=window.navigator.onLine;var Toast=function Toast(props){var _useState=useState(checkConnection),_useState2=_slicedToArray(_useState,2),isOnline=_useState2[0],setNetwork=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),restrictNoInternetToast=_useState4[0],setRestrictNoInternetToast=_useState4[1];useEffect(function(){window.addEventListener(\"offline\",handleConnectionChange);window.addEventListener(\"online\",handleConnectionChange);return function(){window.removeEventListener(\"offline\",handleConnectionChange);window.removeEventListener(\"online\",handleConnectionChange);};},[]);useEffect(function(){setTimeout(function(){return hideToast();},TOAST_TIMEOUT);},[props.showToast]);useEffect(function(){if(isOnline){// setRestrictNoInternetToast(1);\naddRemoveClass(false);}},[isOnline]);var handleConnectionChange=function handleConnectionChange(){var condition=navigator.onLine?'online':'offline';if(condition==='online'){var webPing=setInterval(function(){fetch('//google.com',{mode:'no-cors'}).then(function(){setNetwork(true);(function(){return clearInterval(webPing);})();}).catch(function(){return setNetwork(false);});},2000);return;}return setNetwork(false);};var hideToast=function hideToast(){setShowToast(false);};var addRemoveClass=function addRemoveClass(if_add){var element=document.getElementsByTagName(\"BODY\")[0];if(if_add){element.classList.add(\"hide_scroll\");}else{element.classList.remove(\"hide_scroll\");}};var renderToast=function renderToast(){// if (!isOnline) {\n//     setTimeout(() => {\n//         setRestrictNoInternetToast((prevValue: any) => prevValue.restrictNoInternetToast + 1);\n//     }, 3000);\n//     return \"Please check your internet connection\";\n// }\nreturn props.toastMessage;};console.log({isOnline:isOnline});return!!props.showToast?/*#__PURE__*/_jsx(\"div\",{className:\"body-message active \".concat(props.toastType),children:/*#__PURE__*/_jsx(\"div\",{className:\"wrapppr\",children:/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:renderToast()})})}):!isOnline?/*#__PURE__*/ // ) : (!isOnline && restrictNoInternetToast === 1) ? (\n// <div className={`body-message active ${props.toastType}`}>\n//     <div className=\"wrapppr\">\n//         <p className=\"commn_para\">{renderToast()}</p>\n//     </div>\n// </div>\n_jsxs(\"div\",{className:\"offline_mode\",children:[addRemoveClass(true),/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noInternet,alt:\"no-internet\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"content\",children:/*#__PURE__*/_jsx(\"h1\",{children:'No Internet Connection'})})]}):null;};Toast.defaultProps={toastType:TYPES.error,toastMessage:'Something Went Wrong'};var mapStateToProps=function mapStateToProps(state){return{showToast:state.common.showToast,toastType:state.common.toastType,toastMessage:state.common.toastMessage};};export default connect(mapStateToProps)(Toast);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/toast.tsx"],"names":["useState","useEffect","connect","setShowToast","noInternet","TYPES","success","error","warning","info","TOAST_TIMEOUT","checkConnection","window","navigator","onLine","Toast","props","isOnline","setNetwork","restrictNoInternetToast","setRestrictNoInternetToast","addEventListener","handleConnectionChange","removeEventListener","setTimeout","hideToast","showToast","addRemoveClass","condition","webPing","setInterval","fetch","mode","then","clearInterval","catch","if_add","element","document","getElementsByTagName","classList","add","remove","renderToast","toastMessage","console","log","toastType","defaultProps","mapStateToProps","state","common"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport close from '../assets/images/cancel.png';\nimport { setShowToast } from '../redux/common/actions';\nimport noInternet from '../assets/images/internet-connection-graphic.png';\nimport { isOnline } from '../utils/common';\n\nexport const TYPES = {\n    success: 'success',\n    error: 'failed',\n    warning: 'warning',\n    info: 'info'\n}\n\n// handles the auto hiding of toast\nconst TOAST_TIMEOUT = 3000;\nconst checkConnection = window.navigator.onLine;\nconst Toast = (props: any) => {\n    const [isOnline, setNetwork] = useState(checkConnection);\n    const [restrictNoInternetToast, setRestrictNoInternetToast] = useState(1);\n\n    useEffect(() => {\n        window.addEventListener(\"offline\", handleConnectionChange);\n        window.addEventListener(\"online\", handleConnectionChange);\n        return () => {\n            window.removeEventListener(\"offline\", handleConnectionChange);\n            window.removeEventListener(\"online\", handleConnectionChange);\n        };\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => hideToast(), TOAST_TIMEOUT);\n    }, [props.showToast]);\n\n    useEffect(() => {\n        if (isOnline) {\n            // setRestrictNoInternetToast(1);\n            addRemoveClass(false);\n        }\n    }, [isOnline]);\n\n    const handleConnectionChange = () => {\n        const condition = navigator.onLine ? 'online' : 'offline';\n        if (condition === 'online') {\n            const webPing = setInterval(\n                () => {\n                    fetch('//google.com', {\n                        mode: 'no-cors',\n                    })\n                        .then(() => {\n                            setNetwork(true);\n                            (() => {\n                                return clearInterval(webPing)\n                            })();\n                        }).catch(() => setNetwork(false))\n                }, 2000);\n            return;\n        }\n        return setNetwork(false);\n    }\n\n    const hideToast = () => {\n        setShowToast(false);\n    }\n\n    const addRemoveClass = (if_add: boolean) => {\n        var element = document.getElementsByTagName(\"BODY\")[0];\n        if (if_add) {\n            element.classList.add(\"hide_scroll\");\n        } else {\n            element.classList.remove(\"hide_scroll\");\n        }\n    }\n\n    const renderToast = () => {\n        // if (!isOnline) {\n        //     setTimeout(() => {\n        //         setRestrictNoInternetToast((prevValue: any) => prevValue.restrictNoInternetToast + 1);\n        //     }, 3000);\n        //     return \"Please check your internet connection\";\n        // }\n        return props.toastMessage;\n    }\n    console.log({ isOnline });\n    return !!props.showToast ? (\n        <div className={`body-message active ${props.toastType}`}>\n            <div className=\"wrapppr\">\n                <p className=\"commn_para\">{renderToast()}</p>\n            </div>\n        </div>\n    ) : !isOnline ? (\n        // ) : (!isOnline && restrictNoInternetToast === 1) ? (\n        // <div className={`body-message active ${props.toastType}`}>\n        //     <div className=\"wrapppr\">\n        //         <p className=\"commn_para\">{renderToast()}</p>\n        //     </div>\n        // </div>\n        <div className=\"offline_mode\">\n            {addRemoveClass(true)}\n            <figure className=\"no_img\">\n                <img src={noInternet} alt=\"no-internet\" />\n            </figure>\n            <div className=\"content\">\n                <h1>{'No Internet Connection'}</h1>\n            </div>\n        </div>\n    ) : null;\n}\n\nToast.defaultProps = {\n    toastType: TYPES.error,\n    toastMessage: 'Something Went Wrong'\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        showToast: state.common.showToast,\n        toastType: state.common.toastType,\n        toastMessage: state.common.toastMessage,\n    }\n}\n\nexport default connect(mapStateToProps)(Toast);"]},"metadata":{},"sourceType":"module"}