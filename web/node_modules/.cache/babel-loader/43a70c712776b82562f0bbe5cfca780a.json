{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/successPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport colorLogo from '../../../assets/images/ic-logo-yellow.png';\nimport templateImage from '../../../assets/images/thanks-bg.jpg';\nimport { setLoading } from '../../../redux/common/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuccessPage = props => {\n  _s();\n\n  const [isLoad, setImageLoad] = useState(true);\n\n  const goToLogin = () => {\n    if (props.showModal) {\n      props.modalUpdateSteps(0);\n      return;\n    }\n\n    props.history.push('/login');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n  useEffect(() => {\n    if (!isLoad) {\n      setLoading(false);\n    }\n  }, [isLoad]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_text_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"full_image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: templateImage,\n        alt: \"template\",\n        loading: \"eager\",\n        onLoad: () => {\n          setImageLoad(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"logo_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: colorLogo,\n            alt: \"Tickt-logo\",\n            loading: \"eager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Thanks!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label msg\",\n            children: \"You have created new password for your account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn full_btn btn-effect\",\n            onClick: goToLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SuccessPage, \"Z9yh2OBGcp6FpxCN0NmniztoVWs=\");\n\n_c = SuccessPage;\nexport default SuccessPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/successPage.tsx"],"names":["React","useState","useEffect","colorLogo","templateImage","setLoading","SuccessPage","props","isLoad","setImageLoad","goToLogin","showModal","modalUpdateSteps","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,SAASC,UAAT,QAA2B,+BAA3B;;;AASA,MAAMC,WAAW,GAAIC,KAAD,IAAsB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBR,QAAQ,CAAC,IAAD,CAAvC;;AACA,QAAMS,SAAS,GAAG,MAAM;AACpB,QAAIH,KAAK,CAACI,SAAV,EAAqB;AACjBJ,MAAAA,KAAK,CAACK,gBAAN,CAAuB,CAAvB;AACA;AACH;;AACDL,IAAAA,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,GAND;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AAAEG,IAAAA,UAAU,CAAC,IAAD,CAAV;AAAkB,GAA3B,EAA6B,EAA7B,CAAT;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACM,MAAL,EAAa;AAAEH,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB;AACrC,GAFQ,EAEN,CAACG,MAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI;AACI,QAAA,GAAG,EAAEJ,aADT;AAEI,QAAA,GAAG,EAAC,UAFR;AAGI,QAAA,OAAO,EAAC,OAHZ;AAII,QAAA,MAAM,EAAE,MAAM;AACVK,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AANL;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEN,SAAV;AAAqB,YAAA,GAAG,EAAC,YAAzB;AAAsC,YAAA,OAAO,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,SAAS,EAAC,8BAAlB;AAAiD,YAAA,OAAO,EAAEO,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA1CD;;GAAMJ,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport colorLogo from '../../../assets/images/ic-logo-yellow.png';\nimport templateImage from '../../../assets/images/thanks-bg.jpg';\nimport { setLoading } from '../../../redux/common/actions';\n\ninterface Propstype {\n    history: any,\n    showModal?: boolean,\n    setShowModal: (data: any) => void,\n    modalUpdateSteps: (data: any) => void,\n}\n\nconst SuccessPage = (props: Propstype) => {\n    const [isLoad, setImageLoad] = useState(true);\n    const goToLogin = () => {\n        if (props.showModal) {\n            props.modalUpdateSteps(0)\n            return;\n        }\n        props.history.push('/login')\n    }\n\n\n    useEffect(() => { setLoading(true) }, [])\n\n    useEffect(() => {\n        if (!isLoad) { setLoading(false) }\n    }, [isLoad])\n\n    return (\n        <div className=\"img_text_wrap\">\n            <figure className=\"full_image\">\n                <img\n                    src={templateImage}\n                    alt=\"template\"\n                    loading=\"eager\"\n                    onLoad={() => {\n                        setImageLoad(false)\n                    }}\n                />\n\n                <div className=\"short_info\">\n                    <figure className=\"logo_img\">\n                        <img src={colorLogo} alt=\"Tickt-logo\" loading=\"eager\" />\n                    </figure>\n                    <div className=\"content\">\n                        <h1 className=\"title\">Thanks!</h1>\n                        <span className=\"show_label msg\">You have created new password for your account.</span>\n                        <button className=\"fill_btn full_btn btn-effect\" onClick={goToLogin}>Login</button>\n                    </div>\n                </div>\n            </figure>\n        </div>\n    )\n}\n\nexport default SuccessPage\n"]},"metadata":{},"sourceType":"module"}