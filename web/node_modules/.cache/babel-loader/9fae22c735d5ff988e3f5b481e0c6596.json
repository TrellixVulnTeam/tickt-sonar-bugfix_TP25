{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/utils/common.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const validateABN = abn => {\n  const ABN = abn.toString();\n  var weightedSum = 0;\n  var weight = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\n\n  for (var i = 0; i < weight.length; i++) {\n    weightedSum += (parseInt(ABN[i]) - (i === 0 ? 1 : 0)) * weight[i];\n  }\n\n  return weightedSum % 89 === 0 ? true : false;\n};\nexport const renderTime = (fromDate, toDate, format) => {\n  if (!toDate) {\n    toDate = '';\n  }\n\n  if (moment(fromDate).isValid() && !moment(toDate).isValid()) {\n    return `${moment(fromDate).format('DD MMM')}`;\n  }\n\n  if (moment(fromDate).isValid() && moment(toDate).isValid()) {\n    let yearEnd = moment().endOf(\"year\").toISOString();\n    let monthEnd = moment(fromDate).endOf(\"month\").toISOString();\n    let item = moment(toDate).diff(moment(fromDate), 'months', true);\n    let item_year = moment(toDate).diff(moment(fromDate), 'years', true);\n    let monthDiff = parseInt(item.toString());\n    let yearDiff = parseInt(item_year.toString());\n\n    if (yearDiff > 0 || moment(toDate).isAfter(yearEnd) || moment(toDate).isAfter(yearEnd)) {\n      return `${moment(fromDate).format('DD MMM YY')} - ${moment(toDate).format('DD MMM YY')}`;\n    }\n\n    if (monthDiff > 0 || moment(toDate).isAfter(monthEnd)) {\n      return `${moment(fromDate).format('DD MMM')} - ${moment(toDate).format('DD MMM')}`;\n    }\n\n    return `${moment(fromDate).format('DD MMM')} - ${moment(toDate).format('DD MMM')}`;\n  }\n};\nexport const renderTimeWithFormat = (fromDate, toDate, format) => {\n  if (!toDate) {\n    toDate = '';\n  }\n\n  if (moment(fromDate, format).isValid() && !moment(toDate, format).isValid()) {\n    return `${moment(fromDate, format).format('DD MMM')}`;\n  }\n\n  if (moment(fromDate, format).isValid() && moment(toDate, format).isValid()) {\n    let yearEnd = moment().endOf(\"year\").toISOString();\n    let monthEnd = moment(fromDate, format).endOf(\"month\").toISOString();\n    let item = moment(toDate, format).diff(moment(fromDate, format), 'months', true);\n    let item_year = moment(toDate, format).diff(moment(fromDate, format), 'years', true);\n    let monthDiff = parseInt(item.toString());\n    let yearDiff = parseInt(item_year.toString());\n\n    if (yearDiff > 0 || moment(toDate, format).isAfter(yearEnd) || moment(toDate, format).isAfter(yearEnd)) {\n      return `${moment(fromDate, format).format('DD MMM YY')} - ${moment(toDate, format).format('DD MMM YY')}`;\n    }\n\n    if (monthDiff > 0 || moment(toDate, format).isAfter(monthEnd)) {\n      return `${moment(fromDate, format).format('DD MMM')} - ${moment(toDate, format).format('DD MMM')}`;\n    }\n\n    return `${moment(fromDate, format).format('DD MMM')} - ${moment(toDate, format).format('DD MMM')}`;\n  }\n};\nexport const renderTimeWithCustomFormat = (fromDate, toDate, format, formatSet, text) => {\n  if (!toDate) {\n    toDate = '';\n  }\n\n  if (moment(fromDate, format).isValid() && !moment(toDate, format).isValid()) {\n    return `${moment(fromDate, format).format(formatSet[0])}`;\n  }\n\n  if (moment(fromDate, format).isValid() && moment(toDate, format).isValid()) {\n    let yearEnd = moment().endOf(\"year\").toISOString();\n    let monthEnd = moment(fromDate, format).endOf(\"month\").toISOString();\n    let item = moment(toDate, format).diff(moment(fromDate, format), 'months', true);\n    let item_year = moment(toDate, format).diff(moment(fromDate, format), 'years', true);\n    let monthDiff = parseInt(item.toString());\n    let yearDiff = parseInt(item_year.toString());\n\n    if (yearDiff > 0 || moment(toDate, format).isAfter(yearEnd) || moment(toDate, format).isAfter(yearEnd)) {\n      if (formatSet[2]) {\n        if (moment(fromDate, format).isSame(moment(toDate, format))) {\n          return moment(fromDate, format).format(formatSet[1]);\n        }\n      }\n\n      return `${moment(fromDate, format).format(formatSet[1])} - ${moment(toDate, format).format(formatSet[1])}`;\n    }\n\n    if (monthDiff > 0 || moment(toDate, format).isAfter(monthEnd)) {\n      if (formatSet[2]) {\n        if (moment(fromDate, format).isSame(moment(toDate, format))) {\n          return moment(fromDate, format).format(formatSet[0]);\n        }\n      }\n\n      return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`;\n    }\n\n    if (formatSet[2]) {\n      if (moment(fromDate, format).isSame(moment(toDate, format))) {\n        return moment(fromDate, format).format(formatSet[0]);\n      }\n    }\n\n    return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`;\n  }\n\n  return text || 'Choose';\n};\nexport const getSearchParamsData = location => {\n  var _params$get;\n\n  const params = new URLSearchParams(location === null || location === void 0 ? void 0 : location.search);\n  const specializationString = params.get('specializationId');\n  const specializationArray = specializationString === null || specializationString === void 0 ? void 0 : specializationString.split(',');\n  const tradeIdArray = params.get('tradeId') ? [params.get('tradeId')] : null;\n  const jobTypesArray = params.get('jobTypes') ? [params.get('jobTypes')] : null;\n  const queryParamsData = {\n    page: Number(params.get('page')),\n    isFiltered: params.get('isFiltered') === \"true\",\n    isFilterOn: params.get('isFilterOn'),\n    tradeId: tradeIdArray,\n    specializationId: specializationArray,\n    lat: Number(params.get('lat')),\n    long: Number(params.get('long')),\n    defaultLat: Number(params.get('defaultLat')),\n    defaultLong: Number(params.get('defaultLong')),\n    addres: params.get('addres'),\n    address: params.get('address'),\n    from_date: params.get('from_date'),\n    to_date: params.get('to_date'),\n    jobResults: params.get('jobResults'),\n    heading: params.get('heading'),\n    jobTypes: jobTypesArray,\n    searchJob: (_params$get = params.get('searchJob')) === null || _params$get === void 0 ? void 0 : _params$get.replaceAll(\"xxx\", \"&\"),\n    min_budget: Number(params.get('min_budget')),\n    max_budget: Number(params.get('max_budget')),\n    pay_type: params.get('pay_type'),\n    sortBy: Number(params.get('sortBy'))\n  };\n  return queryParamsData;\n};\nexport const updateQueryStringParameter = ({\n  uri,\n  key,\n  value\n}) => {\n  var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n\n  if (uri.match(re)) {\n    return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\nexport const randomColors = () => {\n  var colors = [];\n\n  while (colors.length < 100) {\n    do {\n      var color = Math.floor(Math.random() * 1000000 + 1);\n    } while (colors.indexOf(color) >= 0);\n\n    colors.push(\"#\" + (\"000000\" + color.toString(16)).slice(-6));\n  }\n\n  return colors;\n};\nexport const formatDateTime = (seconds, type) => {\n  let formattedDate = '';\n  const date = new Date(seconds);\n\n  if (type === 'day') {\n    let date2 = new Date(seconds);\n    let currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    date2.setHours(0, 0, 0, 0);\n\n    if (JSON.stringify(currentDate) == JSON.stringify(date2)) {\n      formattedDate = \"Today\";\n    } else {\n      formattedDate = moment(date).format('DD MMM YYYY'); // formattedDate = format(date, 'd MMM yyyy');\n    }\n  } else if (type === 'time') {\n    // formattedDate = lightFormat(date, 'HH:mm');\n    formattedDate = moment(date).format('HH:mm');\n  } else if (type === 'date') {\n    // formattedDate = lightFormat(date, 'M/d/yyyy');\n    formattedDate = moment(date).format('M/D/YYYY');\n  } else if (type === 'inboxTime') {\n    let date2 = new Date(seconds);\n    let currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    date2.setHours(0, 0, 0, 0);\n\n    if (JSON.stringify(currentDate) == JSON.stringify(date2)) {\n      formattedDate = moment(date).format('HH:mm');\n    } else {\n      formattedDate = moment(date).format('M/D/YY');\n    }\n  }\n\n  return formattedDate;\n};\nexport const formatNotificationTime = (updatedAt, type) => {\n  let formattedDate = '';\n  const date = new Date(updatedAt);\n\n  if (type === 'day') {\n    let currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    date.setHours(0, 0, 0, 0);\n\n    if (JSON.stringify(currentDate) == JSON.stringify(date)) {\n      formattedDate = moment(updatedAt).format('HH:mm');\n    } else if (updatedAt) {\n      formattedDate = moment(updatedAt).format('M/D/YYYY HH:mm');\n    } else {\n      formattedDate = moment(updatedAt).format('HH:mm');\n    }\n  } // console.log('formattedDate: ', formattedDate);\n\n\n  return formattedDate;\n};\nexport const AsyncImage = props => {\n  _s();\n\n  const [loadedSrc, setLoadedSrc] = React.useState(null);\n  React.useEffect(() => {\n    setLoadedSrc(null);\n\n    if (props.src) {\n      const handleLoad = () => {\n        setLoadedSrc(props.src);\n      };\n\n      const image = new Image();\n      image.addEventListener('load', handleLoad);\n      image.src = props.src;\n      return () => {\n        image.removeEventListener('load', handleLoad);\n      };\n    }\n  }, [props.src]);\n\n  if (loadedSrc === props.src) {\n    return /*#__PURE__*/_jsxDEV(\"img\", { ...props,\n      alt: \"set-load-images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}; // const JOB_STATUS = {\n//     OPEN: 1,\n//     ACTIVE: 2,\n//     CANCELLED: 3,\n//     EXPIRED: 4, \n//     COMPLETED: 5, \n//     NEED_APPROVAL: 6, \n//     APPROVED: 7,\n//     PENDING_CANCELATION: 9,\n//     PENDING_DISPUTE: 10,\n//     PENDIND_CHANGE_REQUEST: 11,\n//     CHANGE_REQUEST_ACCEPTED: 12,\n//     CHANGED_REQUEST_DENIED:13,\n//     APPROVED_CANCELLATION: 14,\n//     APPROVED_CHANGE_REQUEST: 15, \n//     DISPUTE_RESOLVED: 16\n// }\n// const NOTIFICATION_TYPE = {\n//     TRADIE: 1,\n//     BUILDER: 2,\n//     JOB: 3,\n//     PAYMENT: 4,\n//     DISPUTES: 5,\n//     REVIEW_TRADIE: 7,\n//     REVIEW_BUILDER: 8,\n//     QUESTION: 9,\n//     OPEN_OPPOSITE_USER_REVIEW_LIST: 10,\n//     TERM_AND_CONDITION: 11,\n//     JOB_DASHBOARD: 12, //With status key\n//     BLOCK_ACCOUNT: 13,\n//     MARK_MILESTONE: 14,\n//     JOB_HOMEPAGE: 15, //tradeid and specialization id\n//     SELF_REVIEW_LIST_OPEN: 16\n//     TRADIE_RECEIVE_VOUCH: 17\n//     ADMIN_NOTIFICATION: 18\n//     PRIVACY_POLICY: 19\n// }\n//      extra_data => JOB_SATUS=INACTIVE: \n\n_s(AsyncImage, \"2TsRBBe9EUlHl0gR1ic2oR5LSww=\");\n\n_c = AsyncImage;\n\nconst isJson = data => {\n  try {\n    return JSON.parse(data);\n  } catch (e) {\n    return data;\n  }\n};\n\nexport const onNotificationClick = notification => {\n  console.log();\n  const {\n    notificationType,\n    user_type,\n    receiverId,\n    senderId,\n    jobId\n  } = notification;\n  let extra_data = isJson(notification === null || notification === void 0 ? void 0 : notification.extra_data);\n  console.log('extra_data: ', extra_data);\n\n  switch (Number(notificationType)) {\n    case 1:\n      //TRADIE\n      if (user_type == 1) {\n        return `/tradie-info?tradeId=${receiverId}`;\n      } else {\n        return `/tradie-info?jobId=${jobId}&tradeId=${senderId}&hideInvite=false`;\n      }\n\n    case 2:\n      //BUILDER\n      if (user_type == 1) {\n        return `/builder-info?builderId=${senderId}`;\n      } else {\n        return `/builder-info?builderId=${receiverId}`;\n      }\n\n    case 3:\n      //JOB\n      if (user_type == 1) {\n        return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n      } else {\n        let urlEncode = `?jobId=${jobId}&status=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.jobStatusText}&tradieId=${senderId}&edit=true`; // &activeType=active\n\n        return `/job-detail?${urlEncode}`;\n      }\n\n    case 4:\n      //PAYMENT\n      return '/payment-history';\n\n    case 5:\n      //DISPUTES\n      if (user_type == 1) {\n        return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n      } else {\n        let urlEncode = `?jobId=${jobId}&status=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.jobStatusText}&tradieId=${senderId}&edit=true&activeType=active`;\n        return `/job-detail?${urlEncode}`;\n      }\n\n    case 7:\n      //REVIEW_TRADIE\n      return `/jobs?active=past&jobId=${jobId}`;\n\n    case 8:\n      //REVIEW_BUILDER\n      return `/review-builder?jobId=${jobId}`;\n\n    case 9:\n      //QUESTION\n      if (user_type == 1) {\n        return `/job-details-page?jobId=${jobId}&tradeId=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.tradeId}&specializationId=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.specializationId}&openQList=true`;\n      } else {\n        let urlEncode = `?jobId=${jobId}&status=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.jobStatusText}&openQList=true`;\n        return `/job-detail?${urlEncode}`;\n      }\n\n    case 10:\n      //OPEN OPPOSITE USER REVIEW LIST\n      if (user_type == 1) {\n        //tradieId builderId in extra_data\n        return `/builder-info?builderId=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.builderId}`;\n      } else {\n        return `/tradie-info?tradeId=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.tradieId}`;\n      }\n\n    case 11:\n      //TERM_AND_CONDITION\n      return `/update-user-info?menu=tnc`;\n\n    case 12:\n      //JOB_DASHBOARD\n      if (user_type == 1) {\n        const type = +(extra_data === null || extra_data === void 0 ? void 0 : extra_data.redirect_status);\n        return type === 1 ? `/past-jobs` : type === 2 ? `/active-jobs` : type === 3 ? '/new-jobs' : '/active-jobs';\n      } else {\n        const type = +(extra_data === null || extra_data === void 0 ? void 0 : extra_data.redirect_status);\n        return `/jobs?active=${type === 1 ? `past` : type === 2 ? `active` : type === 3 ? 'applicant' : 'active'}`;\n      }\n\n    case 13:\n      //BLOCK_ACCOUNT\n      return '/';\n\n    case 14:\n      //MARK_MILESTONE\n      if (user_type == 1) {\n        if ((extra_data === null || extra_data === void 0 ? void 0 : extra_data.jobStatusText) === 'COMPLETED') {\n          return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n        } else {\n          return `/mark-milestone?jobId=${jobId}&redirect_from=jobs`;\n        }\n      } else {\n        if ((extra_data === null || extra_data === void 0 ? void 0 : extra_data.jobStatusText) === 'COMPLETED') {\n          let urlEncode = `?jobId=${jobId}&status=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.jobStatusText}&tradieId=${senderId}&edit=true&activeType=past`;\n          return `/job-detail?${urlEncode}`;\n        } else {\n          return `/jobs?active=active&jobId=${jobId}&markMilestone=true&force=true`;\n        }\n      }\n\n    case 15:\n      //JOB_HOMEPAGE\n      if (user_type == 1) {\n        return `/job-details-page?jobId=${jobId}&tradeId=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.tradeId}&specializationId=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.specializationId}`;\n      } else {\n        return '/';\n      }\n\n    case 16:\n      //SELF_REVIEW_LIST_OPEN\n      if (user_type == 1) {\n        return `/tradie-info?tradeId=${receiverId}`;\n      } else {\n        return `/builder-info?builderId=${receiverId}`;\n      }\n\n    case 17:\n      //TRADIE_RECEIVE_VOUCH\n      if (user_type == 1) {\n        return `/tradie-vouchers?tradieId=${receiverId}`;\n      } else {\n        return '/';\n      }\n\n    case 18:\n      //ADMIN_NOTIFICATION_ANNOUNCEMENT\n      return `/admin-announcement-page?admin_notification_id=${extra_data === null || extra_data === void 0 ? void 0 : extra_data.admin_notification_id}`;\n\n    case 19:\n      //PRIVACY_POLICY\n      return `/update-user-info?menu=pp`;\n\n    case 20:\n      // VIEW_QUOTE_JOB\n      return `/jobs?active=active&viewQuotes=true&jobId=${jobId}&tradieId=${senderId}`;\n\n    case 21:\n      // BUILDER_QUOTE_CANCEL\n      if (user_type == 1) {\n        return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n      } else {\n        return `/quote-job-cancel?jobId=${jobId}&tradieId=${senderId}`;\n      }\n\n    case 25:\n      //CHAT_NOTIFICATION\n      return `/chat`;\n\n    default:\n      return '/';\n  }\n};\nexport const JobCancelReasons = type => {\n  switch (type) {\n    case 1:\n      return 'Experiencing delays on other projects.';\n\n    case 2:\n      return 'Current project has taken longer than expected.';\n\n    case 3:\n      return 'Staff shortages.';\n\n    case 4:\n      return 'Injury or unwell.';\n\n    case 5:\n      return 'No longer available.';\n\n    default:\n      return '';\n  }\n};\n_c2 = JobCancelReasons;\nexport const JobLodgeReasons = (type, isBuilder) => {\n  switch (type) {\n    case 1:\n      return 'Site has not been prepared for works to be carried out.';\n\n    case 2:\n      return 'Inadequate access.';\n\n    case 3:\n      return 'No access equipment on site as indicated in JD.';\n\n    case 4:\n      if (isBuilder) {\n        return 'Materials had not been delivered and supplied by the builder as part of the JD.';\n      } else {\n        return `Builder's work does not be regulations or comply with the VBA.`;\n      }\n\n    case 5:\n      if (isBuilder) {\n        return `Tradesperson's work does not be regulations or comply with the VBA.`;\n      } else {\n        return `Builder has not supplied a Certificate of Currency for their work.`;\n      }\n\n    case 6:\n      if (isBuilder) {\n        return `Tradesperson has not supplied a Certificate of Currency for their work.`;\n      } else {\n        return `Builder's work is not at an acceptable standard.`;\n      }\n\n    case 7:\n      if (isBuilder) {\n        return `Tradesperson's work is not at an acceptable standard.`;\n      } else {\n        return '';\n      }\n\n    default:\n      return '';\n  }\n};\n_c3 = JobLodgeReasons;\nexport const isOnline = () => {\n  var xhr = XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHttp');\n\n  xhr.onload = function () {\n    return true;\n  };\n\n  xhr.onerror = function () {\n    return false;\n  };\n\n  xhr.open(\"GET\", \"anypage.php\", true);\n  xhr.send();\n}; // CANCELLATION Reasons:\n// 1.Experiencing delays on other projects.\n// 2. Current project has taken longer than expected.\n// 3. Staff shortages.\n// 4. Injury or unwell.\n// 5. No longer available.\n// LODGE Dispute\n// 1. Site has not been prepared for works to be carried out.\n// 2. Inadequate access.\n// 3. No access equipment on site as indicated in JD\n// 4. Materials had not been delivered and supplied by the builder as part of the JD.\n// 5. Tradesperson's work does not be regulations or comply with the VBA.\n// 6. Tradesperson has not supplied a Certificate of Currency for their work.\n// 7. Tradesperson's work is not at an acceptable standard\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AsyncImage\");\n$RefreshReg$(_c2, \"JobCancelReasons\");\n$RefreshReg$(_c3, \"JobLodgeReasons\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/utils/common.tsx"],"names":["React","moment","validateABN","abn","ABN","toString","weightedSum","weight","i","length","parseInt","renderTime","fromDate","toDate","format","isValid","yearEnd","endOf","toISOString","monthEnd","item","diff","item_year","monthDiff","yearDiff","isAfter","renderTimeWithFormat","renderTimeWithCustomFormat","formatSet","text","isSame","getSearchParamsData","location","params","URLSearchParams","search","specializationString","get","specializationArray","split","tradeIdArray","jobTypesArray","queryParamsData","page","Number","isFiltered","isFilterOn","tradeId","specializationId","lat","long","defaultLat","defaultLong","addres","address","from_date","to_date","jobResults","heading","jobTypes","searchJob","replaceAll","min_budget","max_budget","pay_type","sortBy","updateQueryStringParameter","uri","key","value","re","RegExp","separator","indexOf","match","replace","randomColors","colors","color","Math","floor","random","push","slice","formatDateTime","seconds","type","formattedDate","date","Date","date2","currentDate","setHours","JSON","stringify","formatNotificationTime","updatedAt","AsyncImage","props","loadedSrc","setLoadedSrc","useState","useEffect","src","handleLoad","image","Image","addEventListener","removeEventListener","isJson","data","parse","e","onNotificationClick","notification","console","log","notificationType","user_type","receiverId","senderId","jobId","extra_data","urlEncode","jobStatusText","builderId","tradieId","redirect_status","admin_notification_id","JobCancelReasons","JobLodgeReasons","isBuilder","isOnline","xhr","XMLHttpRequest","ActiveXObject","onload","onerror","open","send"],"mappings":"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","sourcesContent":["import React from 'react';\nimport moment from 'moment';\n\n\nexport const validateABN = (abn: number) => {\n    const ABN = abn.toString()\n    var weightedSum = 0;\n    var weight = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\n\n    for (var i = 0; i < weight.length; i++) {\n        weightedSum += (parseInt(ABN[i]) - ((i === 0) ? 1 : 0)) * weight[i];\n    }\n    return ((weightedSum % 89) === 0) ? true : false\n}\n\nexport const renderTime = (fromDate: any, toDate: any, format?: any) => {\n    if (!toDate) {\n        toDate = '';\n    }\n\n    if (moment(fromDate).isValid() && !moment(toDate).isValid()) {\n        return `${moment(fromDate).format('DD MMM')}`\n    }\n\n    if (moment(fromDate).isValid() && moment(toDate).isValid()) {\n        let yearEnd = moment().endOf(\"year\").toISOString();\n        let monthEnd = moment(fromDate).endOf(\"month\").toISOString();\n\n        let item: any = moment(toDate).diff(moment(fromDate), 'months', true);\n        let item_year: any = moment(toDate).diff(moment(fromDate), 'years', true);\n\n        let monthDiff = parseInt(item.toString());\n        let yearDiff = parseInt(item_year.toString());\n\n        if (yearDiff > 0 || moment(toDate).isAfter(yearEnd) || moment(toDate).isAfter(yearEnd)) {\n            return `${moment(fromDate).format('DD MMM YY')} - ${moment(toDate).format('DD MMM YY')}`\n        }\n        if (monthDiff > 0 || moment(toDate).isAfter(monthEnd)) {\n            return `${moment(fromDate).format('DD MMM')} - ${moment(toDate).format('DD MMM')}`\n        }\n        return `${moment(fromDate).format('DD MMM')} - ${moment(toDate).format('DD MMM')}`\n    }\n}\n\nexport const renderTimeWithFormat = (fromDate: any, toDate: any, format: any) => {\n    if (!toDate) {\n        toDate = '';\n    }\n\n    if (moment(fromDate, format).isValid() && !moment(toDate, format).isValid()) {\n        return `${moment(fromDate, format).format('DD MMM')}`\n    }\n\n    if (moment(fromDate, format).isValid() && moment(toDate, format).isValid()) {\n        let yearEnd = moment().endOf(\"year\").toISOString();\n        let monthEnd = moment(fromDate, format).endOf(\"month\").toISOString();\n\n        let item: any = moment(toDate, format).diff(moment(fromDate, format), 'months', true);\n        let item_year: any = moment(toDate, format).diff(moment(fromDate, format), 'years', true);\n\n        let monthDiff = parseInt(item.toString());\n        let yearDiff = parseInt(item_year.toString());\n\n        if (yearDiff > 0 || moment(toDate, format).isAfter(yearEnd) || moment(toDate, format).isAfter(yearEnd)) {\n            return `${moment(fromDate, format).format('DD MMM YY')} - ${moment(toDate, format).format('DD MMM YY')}`\n        }\n        if (monthDiff > 0 || moment(toDate, format).isAfter(monthEnd)) {\n            return `${moment(fromDate, format).format('DD MMM')} - ${moment(toDate, format).format('DD MMM')}`\n        }\n        return `${moment(fromDate, format).format('DD MMM')} - ${moment(toDate, format).format('DD MMM')}`\n    }\n}\n\n\nexport const renderTimeWithCustomFormat = (fromDate: any, toDate: any, format: any, formatSet?: any, text?: string) => {\n\n    if (!toDate) {\n        toDate = '';\n    }\n\n    if (moment(fromDate, format).isValid() && !moment(toDate, format).isValid()) {\n        return `${moment(fromDate, format).format(formatSet[0])}`\n    }\n\n    if (moment(fromDate, format).isValid() && moment(toDate, format).isValid()) {\n        let yearEnd = moment().endOf(\"year\").toISOString();\n        let monthEnd = moment(fromDate, format).endOf(\"month\").toISOString();\n\n        let item: any = moment(toDate, format).diff(moment(fromDate, format), 'months', true);\n        let item_year: any = moment(toDate, format).diff(moment(fromDate, format), 'years', true);\n\n        let monthDiff = parseInt(item.toString());\n        let yearDiff = parseInt(item_year.toString());\n\n        if (yearDiff > 0 || moment(toDate, format).isAfter(yearEnd) || moment(toDate, format).isAfter(yearEnd)) {\n            if (formatSet[2]) {\n                if (moment(fromDate, format).isSame(moment(toDate, format))) {\n                    return moment(fromDate, format).format(formatSet[1])\n                }\n            }\n            return `${moment(fromDate, format).format(formatSet[1])} - ${moment(toDate, format).format(formatSet[1])}`\n        }\n        if (monthDiff > 0 || moment(toDate, format).isAfter(monthEnd)) {\n            if (formatSet[2]) {\n                if (moment(fromDate, format).isSame(moment(toDate, format))) {\n                    return moment(fromDate, format).format(formatSet[0])\n                }\n            }\n            return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`\n        }\n        if (formatSet[2]) {\n            if (moment(fromDate, format).isSame(moment(toDate, format))) {\n                return moment(fromDate, format).format(formatSet[0])\n            }\n        }\n        return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`\n    }\n\n    return text || 'Choose';\n}\n\n\nexport const getSearchParamsData = (location?: any) => {\n    const params = new URLSearchParams(location?.search);\n    const specializationString = params.get('specializationId')\n    const specializationArray = specializationString?.split(',');\n    const tradeIdArray = params.get('tradeId') ? [params.get('tradeId')] : null;\n    const jobTypesArray = params.get('jobTypes') ? [params.get('jobTypes')] : null;\n    const queryParamsData: any = {\n        page: Number(params.get('page')),\n        isFiltered: params.get('isFiltered') === \"true\",\n        isFilterOn: params.get('isFilterOn'),\n        tradeId: tradeIdArray,\n        specializationId: specializationArray,\n        lat: Number(params.get('lat')),\n        long: Number(params.get('long')),\n        defaultLat: Number(params.get('defaultLat')),\n        defaultLong: Number(params.get('defaultLong')),\n        addres: params.get('addres'),\n        address: params.get('address'),\n        from_date: params.get('from_date'),\n        to_date: params.get('to_date'),\n        jobResults: params.get('jobResults'),\n        heading: params.get('heading'),\n        jobTypes: jobTypesArray,\n        searchJob: params.get('searchJob')?.replaceAll(\"xxx\", \"&\"),\n        min_budget: Number(params.get('min_budget')),\n        max_budget: Number(params.get('max_budget')),\n        pay_type: params.get('pay_type'),\n        sortBy: Number(params.get('sortBy'))\n    }\n    return queryParamsData;\n}\n\n\nexport const updateQueryStringParameter = ({ uri, key, value }: any) => {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n    if (uri.match(re)) {\n        return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    }\n    else {\n        return uri + separator + key + \"=\" + value;\n    }\n}\n\nexport const randomColors = () => {\n    var colors: any = [];\n    while (colors.length < 100) {\n        do {\n            var color = Math.floor((Math.random() * 1000000) + 1);\n        } while (colors.indexOf(color) >= 0);\n        colors.push(\"#\" + (\"000000\" + color.toString(16)).slice(-6));\n    }\n    return colors;\n}\n\nexport const formatDateTime = (seconds: any, type: string) => {\n    let formattedDate: any = '';\n    const date = new Date(seconds);\n    if (type === 'day') {\n        let date2 = new Date(seconds);\n        let currentDate = new Date();\n        currentDate.setHours(0, 0, 0, 0);\n        date2.setHours(0, 0, 0, 0);\n        if (JSON.stringify(currentDate) == JSON.stringify(date2)) {\n            formattedDate = \"Today\";\n        } else {\n            formattedDate = moment(date).format('DD MMM YYYY');\n            // formattedDate = format(date, 'd MMM yyyy');\n        }\n    } else if (type === 'time') {\n        // formattedDate = lightFormat(date, 'HH:mm');\n        formattedDate = moment(date).format('HH:mm');\n    } else if (type === 'date') {\n        // formattedDate = lightFormat(date, 'M/d/yyyy');\n        formattedDate = moment(date).format('M/D/YYYY');\n    } else if (type === 'inboxTime') {\n        let date2 = new Date(seconds);\n        let currentDate = new Date();\n        currentDate.setHours(0, 0, 0, 0);\n        date2.setHours(0, 0, 0, 0);\n        if (JSON.stringify(currentDate) == JSON.stringify(date2)) {\n            formattedDate = moment(date).format('HH:mm');\n        } else {\n            formattedDate = moment(date).format('M/D/YY');\n        }\n    }\n    return formattedDate;\n}\n\nexport const formatNotificationTime = (updatedAt: any, type: string) => {\n    let formattedDate: any = '';\n    const date = new Date(updatedAt);\n    if (type === 'day') {\n        let currentDate = new Date();\n        currentDate.setHours(0, 0, 0, 0);\n        date.setHours(0, 0, 0, 0);\n        if (JSON.stringify(currentDate) == JSON.stringify(date)) {\n            formattedDate = moment(updatedAt).format('HH:mm');\n        } else if (updatedAt) {\n            formattedDate = moment(updatedAt).format('M/D/YYYY HH:mm');\n        } else {\n            formattedDate = moment(updatedAt).format('HH:mm');\n        }\n    }\n    // console.log('formattedDate: ', formattedDate);\n    return formattedDate;\n}\n\nexport const AsyncImage = (props: any) => {\n    const [loadedSrc, setLoadedSrc] = React.useState(null);\n    React.useEffect(() => {\n        setLoadedSrc(null);\n        if (props.src) {\n            const handleLoad = () => {\n                setLoadedSrc(props.src);\n            };\n            const image = new Image();\n            image.addEventListener('load', handleLoad);\n            image.src = props.src;\n            return () => {\n                image.removeEventListener('load', handleLoad);\n            };\n        }\n    }, [props.src]);\n    if (loadedSrc === props.src) {\n        return (\n            <img {...props} alt='set-load-images' />\n        );\n    }\n    return null;\n};\n\n// const JOB_STATUS = {\n//     OPEN: 1,\n//     ACTIVE: 2,\n//     CANCELLED: 3,\n//     EXPIRED: 4, \n//     COMPLETED: 5, \n//     NEED_APPROVAL: 6, \n//     APPROVED: 7,\n//     PENDING_CANCELATION: 9,\n//     PENDING_DISPUTE: 10,\n//     PENDIND_CHANGE_REQUEST: 11,\n//     CHANGE_REQUEST_ACCEPTED: 12,\n//     CHANGED_REQUEST_DENIED:13,\n//     APPROVED_CANCELLATION: 14,\n//     APPROVED_CHANGE_REQUEST: 15, \n//     DISPUTE_RESOLVED: 16\n// }\n\n// const NOTIFICATION_TYPE = {\n//     TRADIE: 1,\n//     BUILDER: 2,\n//     JOB: 3,\n//     PAYMENT: 4,\n//     DISPUTES: 5,\n//     REVIEW_TRADIE: 7,\n//     REVIEW_BUILDER: 8,\n//     QUESTION: 9,\n//     OPEN_OPPOSITE_USER_REVIEW_LIST: 10,\n//     TERM_AND_CONDITION: 11,\n//     JOB_DASHBOARD: 12, //With status key\n//     BLOCK_ACCOUNT: 13,\n//     MARK_MILESTONE: 14,\n//     JOB_HOMEPAGE: 15, //tradeid and specialization id\n//     SELF_REVIEW_LIST_OPEN: 16\n//     TRADIE_RECEIVE_VOUCH: 17\n//     ADMIN_NOTIFICATION: 18\n//     PRIVACY_POLICY: 19\n// }\n//      extra_data => JOB_SATUS=INACTIVE: \n\nconst isJson = (data: any) => {\n    try {\n        return JSON.parse(data);\n    } catch (e) {\n        return data;\n    }\n}\n\nexport const onNotificationClick = (notification: any) => {console.log()\n\n    const { notificationType, user_type, receiverId, senderId, jobId } = notification;\n    let extra_data = isJson(notification?.extra_data);\n    console.log('extra_data: ', extra_data);\n\n    switch (Number(notificationType)) {\n        case 1: //TRADIE\n            if (user_type == 1) {\n                return `/tradie-info?tradeId=${receiverId}`;\n            } else {\n                return `/tradie-info?jobId=${jobId}&tradeId=${senderId}&hideInvite=false`;\n            }\n        case 2: //BUILDER\n            if (user_type == 1) {\n                return `/builder-info?builderId=${senderId}`;\n            } else {\n                return `/builder-info?builderId=${receiverId}`;\n            }\n        case 3: //JOB\n            if (user_type == 1) {\n                return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n            } else {\n                let urlEncode: any = `?jobId=${jobId}&status=${extra_data?.jobStatusText}&tradieId=${senderId}&edit=true` // &activeType=active\n                return `/job-detail?${urlEncode}`;\n            }\n        case 4: //PAYMENT\n            return '/payment-history';\n        case 5: //DISPUTES\n            if (user_type == 1) {\n                return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n            } else {\n                let urlEncode: any = `?jobId=${jobId}&status=${extra_data?.jobStatusText}&tradieId=${senderId}&edit=true&activeType=active`\n                return `/job-detail?${urlEncode}`;\n            }\n        case 7: //REVIEW_TRADIE\n            return `/jobs?active=past&jobId=${jobId}`;\n        case 8: //REVIEW_BUILDER\n            return `/review-builder?jobId=${jobId}`;\n        case 9: //QUESTION\n            if (user_type == 1) {\n                return `/job-details-page?jobId=${jobId}&tradeId=${extra_data?.tradeId}&specializationId=${extra_data?.specializationId}&openQList=true`;\n            } else {\n                let urlEncode: any = `?jobId=${jobId}&status=${extra_data?.jobStatusText}&openQList=true`\n                return `/job-detail?${urlEncode}`;\n            }\n        case 10: //OPEN OPPOSITE USER REVIEW LIST\n            if (user_type == 1) {//tradieId builderId in extra_data\n                return `/builder-info?builderId=${extra_data?.builderId}`;\n            } else {\n                return `/tradie-info?tradeId=${extra_data?.tradieId}`;\n            }\n        case 11: //TERM_AND_CONDITION\n            return `/update-user-info?menu=tnc`;\n        case 12: //JOB_DASHBOARD\n            if (user_type == 1) {\n                const type = +extra_data?.redirect_status;\n                return type === 1 ? `/past-jobs` : type === 2 ? `/active-jobs` : type === 3 ? '/new-jobs' : '/active-jobs';\n            } else {\n                const type = +extra_data?.redirect_status;\n                return `/jobs?active=${type === 1 ? `past` : type === 2 ? `active` : type === 3 ? 'applicant' : 'active'}`;\n            }\n        case 13: //BLOCK_ACCOUNT\n            return '/';\n        case 14: //MARK_MILESTONE\n            if (user_type == 1) {\n                if (extra_data?.jobStatusText === 'COMPLETED') {\n                    return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n                } else {\n                    return `/mark-milestone?jobId=${jobId}&redirect_from=jobs`;\n                }\n            } else {\n                if (extra_data?.jobStatusText === 'COMPLETED') {\n                    let urlEncode = `?jobId=${jobId}&status=${extra_data?.jobStatusText}&tradieId=${senderId}&edit=true&activeType=past`\n                    return `/job-detail?${urlEncode}`;\n                } else {\n                    return `/jobs?active=active&jobId=${jobId}&markMilestone=true&force=true`;\n                }\n            }\n        case 15: //JOB_HOMEPAGE\n            if (user_type == 1) {\n                return `/job-details-page?jobId=${jobId}&tradeId=${extra_data?.tradeId}&specializationId=${extra_data?.specializationId}`;\n            } else {\n                return '/';\n            }\n        case 16: //SELF_REVIEW_LIST_OPEN\n            if (user_type == 1) {\n                return `/tradie-info?tradeId=${receiverId}`;\n            } else {\n                return `/builder-info?builderId=${receiverId}`;\n            }\n        case 17: //TRADIE_RECEIVE_VOUCH\n            if (user_type == 1) {\n                return `/tradie-vouchers?tradieId=${receiverId}`;\n            } else {\n                return '/'\n            }\n        case 18: //ADMIN_NOTIFICATION_ANNOUNCEMENT\n            return `/admin-announcement-page?admin_notification_id=${extra_data?.admin_notification_id}`;\n        case 19: //PRIVACY_POLICY\n            return `/update-user-info?menu=pp`;\n        case 20: // VIEW_QUOTE_JOB\n            return `/jobs?active=active&viewQuotes=true&jobId=${jobId}&tradieId=${senderId}`;\n        case 21: // BUILDER_QUOTE_CANCEL\n            if (user_type == 1) {\n                return `/job-details-page?jobId=${jobId}&redirect_from=jobs`;\n            } else {\n                return `/quote-job-cancel?jobId=${jobId}&tradieId=${senderId}`;\n            }\n        case 25: //CHAT_NOTIFICATION\n            return `/chat`;\n        default:\n            return '/';\n    }\n}\n\n\nexport const JobCancelReasons = (type: number) => {\n    switch (type) {\n        case 1:\n            return 'Experiencing delays on other projects.';\n\n        case 2:\n            return 'Current project has taken longer than expected.';\n\n        case 3:\n            return 'Staff shortages.';\n\n        case 4:\n            return 'Injury or unwell.';\n\n        case 5:\n            return 'No longer available.';\n\n        default:\n            return ''\n    }\n}\n\n\nexport const JobLodgeReasons = (type: number, isBuilder?: boolean) => {\n    switch (type) {\n        case 1:\n            return 'Site has not been prepared for works to be carried out.';\n\n        case 2:\n            return 'Inadequate access.';\n\n        case 3:\n            return 'No access equipment on site as indicated in JD.';\n\n        case 4:\n            if (isBuilder) {\n                return 'Materials had not been delivered and supplied by the builder as part of the JD.';\n            } else {\n                return `Builder's work does not be regulations or comply with the VBA.`;\n            }\n        case 5:\n            if (isBuilder) {\n                return `Tradesperson's work does not be regulations or comply with the VBA.`;\n            } else {\n                return `Builder has not supplied a Certificate of Currency for their work.`;\n            }\n        case 6:\n            if (isBuilder) {\n                return `Tradesperson has not supplied a Certificate of Currency for their work.`;\n            } else {\n                return `Builder's work is not at an acceptable standard.`;\n            }\n        case 7:\n            if (isBuilder) {\n                return `Tradesperson's work is not at an acceptable standard.`;\n            } else {\n                return '';\n            }\n        default:\n            return '';\n    }\n}\n\n\nexport const isOnline = () => {\n    var xhr = XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHttp');\n    xhr.onload = function () {\n        return true;\n    }\n    xhr.onerror = function () {\n        return false;\n    }\n    xhr.open(\"GET\", \"anypage.php\", true);\n    xhr.send();\n}\n\n// CANCELLATION Reasons:\n// 1.Experiencing delays on other projects.\n// 2. Current project has taken longer than expected.\n// 3. Staff shortages.\n// 4. Injury or unwell.\n// 5. No longer available.\n\n// LODGE Dispute\n// 1. Site has not been prepared for works to be carried out.\n// 2. Inadequate access.\n// 3. No access equipment on site as indicated in JD\n// 4. Materials had not been delivered and supplied by the builder as part of the JD.\n// 5. Tradesperson's work does not be regulations or comply with the VBA.\n// 6. Tradesperson has not supplied a Certificate of Currency for their work.\n// 7. Tradesperson's work is not at an acceptable standard"]},"metadata":{},"sourceType":"module"}