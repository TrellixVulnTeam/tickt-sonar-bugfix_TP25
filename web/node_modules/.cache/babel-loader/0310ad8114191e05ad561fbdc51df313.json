{"ast":null,"code":"import _defineProperty from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import Constants from\"../../../utils/constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var JobType=function JobType(_ref){var categoriesData=_ref.categories,jobTypes=_ref.jobTypes,data=_ref.data,stepCompleted=_ref.stepCompleted,editDetailPage=_ref.editDetailPage,handleStepForward=_ref.handleStepForward,handleStepJustUpdate=_ref.handleStepJustUpdate,handleStepComplete=_ref.handleStepComplete,handleStepBack=_ref.handleStepBack;var errorStrings=Constants.errorStrings;var _useState=useState({categories:[],job_type:[],specialization:[]}),_useState2=_slicedToArray(_useState,2),jobTypeDetails=_useState2[0],setJobTypeDetails=_useState2[1];var _useState3=useState({job_type:\"\",categories:\"\",specialization:\"\"}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),continueClicked=_useState6[0],setContinueClicked=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),selectedAll=_useState8[0],setSelectedAll=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isCategoryChecked=_useState10[0],setIsCategoryChecked=_useState10[1];console.log(\"isCategoryChecked - > \",isCategoryChecked);var specializations=[];var categoriesHTML=[];var job_type=jobTypeDetails.job_type,categories=jobTypeDetails.categories,specialization=jobTypeDetails.specialization;categoriesData.forEach(function(_ref2){var _id=_ref2._id,trade_name=_ref2.trade_name,selected_url=_ref2.selected_url,specialisations=_ref2.specialisations;if(categories.includes(_id)){specializations.push.apply(specializations,_toConsumableArray(specialisations));}categoriesHTML.push(/*#__PURE__*/_jsxs(\"li\",{className:categories.includes(_id)?\"active\":undefined,onClick:function onClick(){handleChange(_id,\"categories\");setIsCategoryChecked(true);// setSelectedAll(true);\n},children:[/*#__PURE__*/_jsx(\"figure\",{children:/*#__PURE__*/_jsx(\"img\",{src:selected_url,alt:\"cat-icon\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:trade_name})]},_id));});useEffect(function(){if(stepCompleted){var checkSelected=false;if(categoriesData===null||categoriesData===void 0?void 0:categoriesData.length){var _preSelectedSpec,_data$specialization,_preSelectedSpec2,_data$specialization2;var preSelectedSpec=[];preSelectedSpec=categoriesData.find(function(item){return item._id===data.categories[0];}).specialisations;if(((_preSelectedSpec=preSelectedSpec)===null||_preSelectedSpec===void 0?void 0:_preSelectedSpec.length)===((_data$specialization=data.specialization)===null||_data$specialization===void 0?void 0:_data$specialization.length)){checkSelected=true;}if(((_preSelectedSpec2=preSelectedSpec)===null||_preSelectedSpec2===void 0?void 0:_preSelectedSpec2.length)&&!((_data$specialization2=data.specialization)===null||_data$specialization2===void 0?void 0:_data$specialization2.length)){checkSelected=true;}}setJobTypeDetails({categories:data.categories,job_type:data.job_type,specialization:checkSelected?[]:data.specialization});console.log({checkSelected:checkSelected});setSelectedAll(checkSelected);}},[stepCompleted,data]);// for error messages\nvar label={job_type:\"Job Type\",categories:\"Categories\",specialization:\"Specialization\"};var isEmpty=function isEmpty(name,value){return!value.length?\"\".concat(label[name],\" is required.\"):\"\";};var isInvalid=function isInvalid(name,value){switch(name){case\"job_type\":return isEmpty(name,value);case\"categories\":return isEmpty(name,value);case\"specialization\":return isEmpty(name,value);}};// update errors and jobDetails\nvar updateDetails=function updateDetails(value,name){if(stepCompleted||continueClicked){setErrors(function(prevErrors){return _objectSpread(_objectSpread({},prevErrors),{},_defineProperty({},name,isInvalid(name,value)));});}setJobTypeDetails(function(prevDetails){return _objectSpread(_objectSpread({},prevDetails),{},_defineProperty({},name,value));});};// function callable on handle change\nvar handleChange=function handleChange(value,name){if(jobTypeDetails[name].includes(value)){updateDetails(jobTypeDetails[name].filter(function(val){return val!==value;}),name);// when category is deselected, remove it's specialization\nif(name===\"categories\"){var _categoriesData$find$;var specializationsToBeRemoved=((_categoriesData$find$=categoriesData.find(function(_ref3){var _id=_ref3._id;return _id===value;}).specialisations)===null||_categoriesData$find$===void 0?void 0:_categoriesData$find$.map(function(_ref4){var _id=_ref4._id;return _id;}))||[];var itemsSpec=jobTypeDetails.specialization.filter(function(value){return!specializationsToBeRemoved.includes(value);});updateDetails(itemsSpec,\"specialization\");updateDetails([],\"categories\");}}else{if(name!==\"specialization\"){jobTypeDetails[name]=[value];updateDetails(jobTypeDetails[name],name);// updateDetails([], 'specialization');\n}else{updateDetails(jobTypeDetails[name].concat([value]),name);}}};var handleContinue=function handleContinue(){var hasErrors;if(selectedAll){setJobTypeDetails(function(prev){return _objectSpread(_objectSpread({},prev),{},{specialization:specializations.map(function(item){return item._id;})});});}console.log({jobTypeDetails:jobTypeDetails},\"-->\");if(!continueClicked){setContinueClicked(true);hasErrors=Object.keys(jobTypeDetails).reduce(function(prevError,name){var hasError=!!isInvalid(name,jobTypeDetails[name]);if(name===\"specialization\"&&hasError){hasError=false;}setErrors(function(prevErrors){return _objectSpread(_objectSpread({},prevErrors),{},_defineProperty({},name,isInvalid(name,jobTypeDetails[name])));});return hasError||prevError;},false);}if(!hasErrors){var _jobTypeDetails$speci;var dataItems=jobTypeDetails;if((jobTypeDetails===null||jobTypeDetails===void 0?void 0:(_jobTypeDetails$speci=jobTypeDetails.specialization)===null||_jobTypeDetails$speci===void 0?void 0:_jobTypeDetails$speci.length)===0){if(selectedAll){dataItems[\"specialization\"]=specializations.map(function(item){return item._id;});}}if(editDetailPage===null||editDetailPage===void 0?void 0:editDetailPage.currentScreen){handleStepJustUpdate(dataItems,true);}else{handleStepComplete(dataItems);}}else{setContinueClicked(false);}};var checkErrors=function checkErrors(){console.log(\"229\");var error_1=isInvalid(\"categories\",jobTypeDetails[\"categories\"]);var error_2=isInvalid(\"job_type\",jobTypeDetails[\"job_type\"]);var error_3=isInvalid(\"specialization\",jobTypeDetails[\"specialization\"]);console.log(error_3,\"error_3\");if(!(error_1===null||error_1===void 0?void 0:error_1.length)&&!(error_2===null||error_2===void 0?void 0:error_2.length)&&(selectedAll||(specializations===null||specializations===void 0?void 0:specializations.length)&&!(error_3===null||error_3===void 0?void 0:error_3.length))){return false;}return true;};return/*#__PURE__*/_jsx(\"div\",{className:\"app_wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"section_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex_row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex_col_sm_5\",children:[(editDetailPage===null||editDetailPage===void 0?void 0:editDetailPage.currentScreen)?/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:function onClick(){handleStepForward(14);}}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Job type\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:handleStepBack}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Job type\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:\"Select the category and the specialisations required\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"xs_sub_title\",children:\"Categories\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"select_sphere\",children:[/*#__PURE__*/_jsx(\"ul\",{children:categoriesHTML}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.categories})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"xs_sub_title\",children:\"Job Types\"})}),/*#__PURE__*/_jsx(\"ul\",{className:\"job_categories\",children:jobTypes&&Array.isArray(jobTypes)?jobTypes.map(function(_ref5){var _id=_ref5._id,name=_ref5.name,image=_ref5.image;return/*#__PURE__*/_jsxs(\"li\",{className:\"\".concat(job_type.includes(_id)?\" active\":\"\"),onClick:function onClick(){return handleChange(_id,\"job_type\");},children:[/*#__PURE__*/_jsx(\"figure\",{className:\"type_icon\",children:/*#__PURE__*/_jsx(\"img\",{src:image,alt:\"icon\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:name})]},_id);}):null}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.job_type}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"xs_sub_title\",children:\"Specialisation\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tags_wrap\",children:[/*#__PURE__*/_jsxs(\"ul\",{children:[console.log(specializations===null||specializations===void 0?void 0:specializations.length,\"specializations?.length\",specializations),console.log(\"specializations => \",specializations),isCategoryChecked&&(specializations===null||specializations===void 0?void 0:specializations.length)>=0&&/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){if(!selectedAll){setSelectedAll(true);}updateDetails([],\"specialization\");},className:selectedAll?\"selected\":\"\",children:\"All\"}),specializations.map(function(_ref6){var _id=_ref6._id,name=_ref6.name;return/*#__PURE__*/_jsx(\"li\",{className:specialization.includes(_id)&&!selectedAll?\"selected\":undefined,onClick:function onClick(){handleChange(_id,\"specialization\");if(selectedAll){setSelectedAll(false);}},children:name},_id);})]}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:!selectedAll?errors.specialization:\"\"})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect \".concat(checkErrors()?\"disable_btn\":\"\"),onClick:function onClick(){if(selectedAll){// setJobTypeDetails((prev: any) => ({ ...prev, 'specialization': specializations.map((item: any) => item._id) }))\nupdateDetails(specializations.map(function(item){return item._id;}),\"specialization\");}handleContinue();},children:\"Continue\"})})]})})});};export default JobType;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/jobType.tsx"],"names":["useEffect","useState","Constants","JobType","categoriesData","categories","jobTypes","data","stepCompleted","editDetailPage","handleStepForward","handleStepJustUpdate","handleStepComplete","handleStepBack","errorStrings","job_type","specialization","jobTypeDetails","setJobTypeDetails","errors","setErrors","continueClicked","setContinueClicked","selectedAll","setSelectedAll","isCategoryChecked","setIsCategoryChecked","console","log","specializations","categoriesHTML","forEach","_id","trade_name","selected_url","specialisations","includes","push","undefined","handleChange","checkSelected","length","preSelectedSpec","find","item","label","isEmpty","name","value","isInvalid","updateDetails","prevErrors","prevDetails","filter","val","specializationsToBeRemoved","map","itemsSpec","concat","handleContinue","hasErrors","prev","Object","keys","reduce","prevError","hasError","dataItems","currentScreen","checkErrors","error_1","error_2","error_3","Array","isArray","image"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Constants from \"../../../utils/constants\";\n\ninterface Proptypes {\n  categories: any;\n  jobTypes: any;\n  data: any;\n  editDetailPage: any;\n  stepCompleted: Boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepBack: () => void;\n  handleStepForward: (data: any) => void;\n  handleStepJustUpdate: (data: any, goto: any) => void;\n}\n\nconst JobType = ({\n  categories: categoriesData,\n  jobTypes,\n  data,\n  stepCompleted,\n  editDetailPage,\n  handleStepForward,\n  handleStepJustUpdate,\n  handleStepComplete,\n  handleStepBack,\n}: Proptypes) => {\n  const { errorStrings } = Constants;\n\n  const [jobTypeDetails, setJobTypeDetails] = useState<{\n    [index: string]: string[];\n  }>({ categories: [], job_type: [], specialization: [] });\n  const [errors, setErrors] = useState({\n    job_type: \"\",\n    categories: \"\",\n    specialization: \"\",\n  });\n  const [continueClicked, setContinueClicked] = useState(false);\n  const [selectedAll, setSelectedAll] = useState(false);\n  const [isCategoryChecked, setIsCategoryChecked] = useState(false);\n  console.log(\"isCategoryChecked - > \", isCategoryChecked);\n  const specializations: Array<{ _id: string; name: string }> = [];\n  const categoriesHTML: JSX.Element[] = [];\n\n  const { job_type, categories, specialization } = jobTypeDetails;\n\n  categoriesData.forEach(\n    ({\n      _id,\n      trade_name,\n      selected_url,\n      specialisations,\n    }: {\n      _id: string;\n      trade_name: string;\n      selected_url: string;\n      specialisations: [];\n    }) => {\n      if (categories.includes(_id)) {\n        specializations.push(...specialisations);\n      }\n\n      categoriesHTML.push(\n        <li\n          key={_id}\n          className={categories.includes(_id) ? \"active\" : undefined}\n          onClick={() => {\n            handleChange(_id, \"categories\");\n            setIsCategoryChecked(true);\n            // setSelectedAll(true);\n          }}\n        >\n          <figure>\n            <img src={selected_url} alt=\"cat-icon\" />\n          </figure>\n          <span className=\"name\">{trade_name}</span>\n        </li>\n      );\n    }\n  );\n\n  useEffect(() => {\n    if (stepCompleted) {\n      let checkSelected = false;\n\n      if (categoriesData?.length) {\n        let preSelectedSpec = [];\n        preSelectedSpec = categoriesData.find(\n          (item: any) => item._id === data.categories[0]\n        ).specialisations;\n\n        if (preSelectedSpec?.length === data.specialization?.length) {\n          checkSelected = true;\n        }\n\n        if (preSelectedSpec?.length && !data.specialization?.length) {\n          checkSelected = true;\n        }\n      }\n\n      setJobTypeDetails({\n        categories: data.categories,\n        job_type: data.job_type,\n        specialization: checkSelected ? [] : data.specialization,\n      });\n\n      console.log({ checkSelected });\n      setSelectedAll(checkSelected);\n    }\n  }, [stepCompleted, data]);\n\n  // for error messages\n  const label: { [index: string]: string } = {\n    job_type: \"Job Type\",\n    categories: \"Categories\",\n    specialization: \"Specialization\",\n  };\n\n  const isEmpty = (name: string, value: string[]) =>\n    !value.length ? `${label[name]} is required.` : \"\";\n\n  const isInvalid = (name: string, value: string[]) => {\n    switch (name) {\n      case \"job_type\":\n        return isEmpty(name, value);\n      case \"categories\":\n        return isEmpty(name, value);\n      case \"specialization\":\n        return isEmpty(name, value);\n    }\n  };\n\n  // update errors and jobDetails\n  const updateDetails = (value: string[], name: string) => {\n    if (stepCompleted || continueClicked) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: isInvalid(name, value),\n      }));\n    }\n\n    setJobTypeDetails((prevDetails) => ({\n      ...prevDetails,\n      [name]: value,\n    }));\n  };\n\n  // function callable on handle change\n  const handleChange = (value: string, name: string) => {\n    if (jobTypeDetails[name].includes(value)) {\n      updateDetails(\n        jobTypeDetails[name].filter((val) => val !== value),\n        name\n      );\n\n      // when category is deselected, remove it's specialization\n      if (name === \"categories\") {\n        const specializationsToBeRemoved =\n          categoriesData\n            .find(({ _id }: { _id: string }) => _id === value)\n            .specialisations?.map(({ _id }: { _id: string }) => _id) || [];\n        let itemsSpec = jobTypeDetails.specialization.filter(\n          (value) => !specializationsToBeRemoved.includes(value)\n        );\n        updateDetails(itemsSpec, \"specialization\");\n        updateDetails([], \"categories\");\n      }\n    } else {\n      if (name !== \"specialization\") {\n        jobTypeDetails[name] = [value];\n        updateDetails(jobTypeDetails[name], name);\n        // updateDetails([], 'specialization');\n      } else {\n        updateDetails(jobTypeDetails[name].concat([value]), name);\n      }\n    }\n  };\n\n  const handleContinue = () => {\n    let hasErrors;\n\n    if (selectedAll) {\n      setJobTypeDetails((prev: any) => ({\n        ...prev,\n        specialization: specializations.map((item: any) => item._id),\n      }));\n    }\n    console.log({ jobTypeDetails }, \"-->\");\n    if (!continueClicked) {\n      setContinueClicked(true);\n\n      hasErrors = Object.keys(jobTypeDetails).reduce((prevError, name) => {\n        let hasError = !!isInvalid(name, jobTypeDetails[name]);\n\n        if (name === \"specialization\" && hasError) {\n          hasError = false;\n        }\n\n        setErrors((prevErrors) => ({\n          ...prevErrors,\n          [name]: isInvalid(name, jobTypeDetails[name]),\n        }));\n\n        return hasError || prevError;\n      }, false);\n    }\n\n    if (!hasErrors) {\n      let dataItems = jobTypeDetails;\n\n      if (jobTypeDetails?.specialization?.length === 0) {\n        if (selectedAll) {\n          dataItems[\"specialization\"] = specializations.map(\n            (item: any) => item._id\n          );\n        }\n      }\n\n      if (editDetailPage?.currentScreen) {\n        handleStepJustUpdate(dataItems, true);\n      } else {\n        handleStepComplete(dataItems);\n      }\n    } else {\n      setContinueClicked(false);\n    }\n  };\n\n  const checkErrors = () => {\n    console.log(\"229\");\n    let error_1 = isInvalid(\"categories\", jobTypeDetails[\"categories\"]);\n    let error_2 = isInvalid(\"job_type\", jobTypeDetails[\"job_type\"]);\n    let error_3 = isInvalid(\"specialization\", jobTypeDetails[\"specialization\"]);\n    console.log(error_3, \"error_3\");\n    if (\n      !error_1?.length &&\n      !error_2?.length &&\n      (selectedAll || (specializations?.length && !error_3?.length))\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"app_wrapper\">\n      <div className=\"section_wrapper\">\n        <div className=\"custom_container\">\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_5\">\n                {editDetailPage?.currentScreen ? (\n                  <div className=\"relate\">\n                    <button\n                      className=\"back\"\n                      onClick={() => {\n                        handleStepForward(14);\n                      }}\n                    ></button>\n                    <span className=\"title\">Job type</span>\n                  </div>\n                ) : (\n                  <div className=\"relate\">\n                    <button className=\"back\" onClick={handleStepBack}></button>\n                    <span className=\"title\">Job type</span>\n                  </div>\n                )}\n\n                <p className=\"commn_para\">\n                  Select the category and the specialisations required\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"form_field\">\n            <span className=\"xs_sub_title\">Categories</span>\n          </div>\n          <div className=\"select_sphere\">\n            <ul>{categoriesHTML}</ul>\n            <span className=\"error_msg\">{errors.categories}</span>\n          </div>\n          <div className=\"form_field\">\n            <span className=\"xs_sub_title\">Job Types</span>\n          </div>\n          <ul className=\"job_categories\">\n            {jobTypes && Array.isArray(jobTypes)\n              ? jobTypes.map(\n                  ({\n                    _id,\n                    name,\n                    image,\n                  }: {\n                    _id: string;\n                    name: string;\n                    image: string;\n                  }) => (\n                    <li\n                      key={_id}\n                      className={`${job_type.includes(_id) ? \" active\" : \"\"}`}\n                      onClick={() => handleChange(_id, \"job_type\")}\n                    >\n                      <figure className=\"type_icon\">\n                        <img src={image} alt=\"icon\" />\n                      </figure>\n                      <span className=\"name\">{name}</span>\n                    </li>\n                  )\n                )\n              : null}\n          </ul>\n          <span className=\"error_msg\">{errors.job_type}</span>\n          <div className=\"form_field\">\n            <span className=\"xs_sub_title\">{\"Specialisation\"}</span>\n          </div>\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_6\">\n              <div className=\"tags_wrap\">\n                <ul>\n                  {console.log(\n                    specializations?.length,\n                    \"specializations?.length\",\n                    specializations\n                  )}\n                  {console.log(\"specializations => \", specializations)}\n                  {isCategoryChecked && specializations?.length >= 0 && (\n                    <li\n                      onClick={() => {\n                        if (!selectedAll) {\n                          setSelectedAll(true);\n                        }\n                        updateDetails([], \"specialization\");\n                      }}\n                      className={selectedAll ? \"selected\" : \"\"}\n                    >\n                      {\"All\"}\n                    </li>\n                  )}\n                  {specializations.map(\n                    ({ _id, name }: { _id: string; name: string }) => {\n                      return (\n                        <li\n                          key={_id}\n                          className={\n                            specialization.includes(_id) && !selectedAll\n                              ? \"selected\"\n                              : undefined\n                          }\n                          onClick={() => {\n                            handleChange(_id, \"specialization\");\n                            if (selectedAll) {\n                              setSelectedAll(false);\n                            }\n                          }}\n                        >\n                          {name}\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n                <span className=\"error_msg\">\n                  {!selectedAll ? errors.specialization : \"\"}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"form_field\">\n            <button\n              className={`fill_btn full_btn btn-effect ${\n                checkErrors() ? \"disable_btn\" : \"\"\n              }`}\n              onClick={() => {\n                if (selectedAll) {\n                  // setJobTypeDetails((prev: any) => ({ ...prev, 'specialization': specializations.map((item: any) => item._id) }))\n                  updateDetails(\n                    specializations.map((item: any) => item._id),\n                    \"specialization\"\n                  );\n                }\n\n                handleContinue();\n              }}\n            >\n              Continue\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobType;\n"]},"metadata":{},"sourceType":"module"}