{"ast":null,"code":"import{useEffect}from'react';import{connect}from'react-redux';import{setShowNotification}from'../redux/common/actions';import{onNotificationClick}from'../utils/common';import{markNotifAsRead}from'../redux/auth/actions';import{useHistory}from'react-router-dom';import dummy from'../assets/images/u_placeholder.jpg';import close from'../assets/images/icon-close-1.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NOTIFICATION_TIMEOUT=3750;var CustomNotification=function CustomNotification(props){var _props$notificationDa;var history=useHistory();var notification=(_props$notificationDa=props.notificationData)===null||_props$notificationDa===void 0?void 0:_props$notificationDa.data;console.log('notification: ',notification,history);useEffect(function(){if(props===null||props===void 0?void 0:props.showNotification){setTimeout(function(){return setShowNotification(false);},NOTIFICATION_TIMEOUT);}return function(){return clearTimeout();};},[props.showNotification]);var displayNotifText=function displayNotifText(){if((notification===null||notification===void 0?void 0:notification.notificationType)==25){if((notification===null||notification===void 0?void 0:notification.messageType)==='text'){return notification===null||notification===void 0?void 0:notification.messageText;}else if((notification===null||notification===void 0?void 0:notification.messageType)==='image'){return\"Send you a Photo\";}else if((notification===null||notification===void 0?void 0:notification.messageType)==='video'){return\"Send you a Video\";}}else{return notification===null||notification===void 0?void 0:notification.notificationText;}};return!!props.showNotification&&!((notification===null||notification===void 0?void 0:notification.notificationType)==25&&window.location.pathname==='/chat')?/*#__PURE__*/_jsxs(\"div\",{className:\"body-message active\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"cross-icon\",onClick:function onClick(){return setShowNotification(false);},children:/*#__PURE__*/_jsx(\"img\",{src:close,alt:\"img\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"wrapppr\",onClick:function onClick(){var _history$location,_history$location2;markNotifAsRead({notificationId:notification===null||notification===void 0?void 0:notification._id});var url1=onNotificationClick(notification);var url2=((_history$location=history.location)===null||_history$location===void 0?void 0:_history$location.pathname)+((_history$location2=history.location)===null||_history$location2===void 0?void 0:_history$location2.search);setShowNotification(false);if(url1===url2){var _window$location;(_window$location=window.location)===null||_window$location===void 0?void 0:_window$location.reload();return;}history.push(url1);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"notif\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"not_img\",children:/*#__PURE__*/_jsx(\"img\",{src:(notification===null||notification===void 0?void 0:notification.image)||dummy,alt:\"img\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"who line-1\",children:(notification===null||notification===void 0?void 0:notification.notificationType)==25?notification===null||notification===void 0?void 0:notification.senderName:notification===null||notification===void 0?void 0:notification.title}),/*#__PURE__*/_jsx(\"span\",{className:\"line-1\",children:displayNotifText()})]}),/*#__PURE__*/_jsx(\"span\",{className:\"time\",children:'just now'})]})})]}):null;};var mapStateToProps=function mapStateToProps(state){return{showNotification:state.common.showNotification,notificationData:state.common.notificationData};};export default connect(mapStateToProps)(CustomNotification);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/customNotification.tsx"],"names":["useEffect","connect","setShowNotification","onNotificationClick","markNotifAsRead","useHistory","dummy","close","NOTIFICATION_TIMEOUT","CustomNotification","props","history","notification","notificationData","data","console","log","showNotification","setTimeout","clearTimeout","displayNotifText","notificationType","messageType","messageText","notificationText","window","location","pathname","notificationId","_id","url1","url2","search","reload","push","image","senderName","title","mapStateToProps","state","common"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setShowNotification } from '../redux/common/actions';\nimport { formatNotificationTime } from '../utils/common';\nimport { onNotificationClick } from '../utils/common';\nimport { markNotifAsRead } from '../redux/auth/actions';\nimport { useHistory } from 'react-router-dom';\nimport dummy from '../assets/images/u_placeholder.jpg';\nimport close from '../assets/images/icon-close-1.png';\n\nconst NOTIFICATION_TIMEOUT = 3750;\n\nconst CustomNotification = (props: any) => {\n    const history: any = useHistory();\n    const notification = props.notificationData?.data;\n    console.log('notification: ', notification, history);\n\n    useEffect(() => {\n        if (props?.showNotification) {\n            setTimeout(() => setShowNotification(false), NOTIFICATION_TIMEOUT);\n        }\n\n        return () => clearTimeout();\n    }, [props.showNotification]);\n\n    const displayNotifText = () => {\n        if (notification?.notificationType == 25) {\n            if (notification?.messageType === 'text') {\n                return notification?.messageText;\n            } else if (notification?.messageType === 'image') {\n                return `Send you a Photo`;\n            } else if (notification?.messageType === 'video') {\n                return `Send you a Video`;\n            }\n        } else {\n            return notification?.notificationText;\n        }\n    }\n\n    return !!props.showNotification && !(notification?.notificationType == 25 && window.location.pathname === '/chat') ? (\n        <div className=\"body-message active\">\n            <span className=\"cross-icon\" onClick={() => setShowNotification(false)}>\n                <img src={close} alt=\"img\" />\n            </span>\n            <div className=\"wrapppr\" onClick={() => {\n                markNotifAsRead({ notificationId: notification?._id });\n                const url1: string = onNotificationClick(notification);\n                const url2: string = history.location?.pathname + history.location?.search;\n                setShowNotification(false);\n                if (url1 === url2) {\n                    window.location?.reload();\n                    return;\n                }\n                history.push(url1);\n            }}>\n                <div className=\"notif\">\n                    <figure className=\"not_img\">\n                        <img src={notification?.image || dummy} alt=\"img\" />\n                    </figure>\n                    <div className=\"info\">\n                        <span className=\"who line-1\">{notification?.notificationType == 25 ? notification?.senderName : notification?.title}</span>\n                        <span className=\"line-1\">{displayNotifText()}</span>\n                    </div>\n                    {/* <span className=\"time\">{formatNotificationTime(notification?.updatedAt, 'day')}</span> */}\n                    <span className=\"time\">{'just now'}</span>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        showNotification: state.common.showNotification,\n        notificationData: state.common.notificationData,\n    }\n}\n\nexport default connect(mapStateToProps)(CustomNotification);\n"]},"metadata":{},"sourceType":"module"}