{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as actionTypes from'./constants';var initialState={isLoading:false,isSkeletonLoading:false,showToast:false,toastType:undefined,toastMessage:undefined,showNotification:false,notificationData:null};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case actionTypes.SET_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:action.payload});case actionTypes.SET_SKELETON_LOADING:return _objectSpread(_objectSpread({},state),{},{isSkeletonLoading:action.payload});case actionTypes.SHOW_HIDE_TOAST:return _objectSpread(_objectSpread({},state),{},{showToast:action.showToast,toastType:action.toastType,toastMessage:action.toastMessage});case actionTypes.SHOW_HIDE_NOTIFICATION:return _objectSpread(_objectSpread({},state),{},{showNotification:action.showNotification,notificationData:action.data});default:return state;}};export default reducer;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/redux/common/reducers.ts"],"names":["actionTypes","initialState","isLoading","isSkeletonLoading","showToast","toastType","undefined","toastMessage","showNotification","notificationData","reducer","state","action","type","SET_LOADING","payload","SET_SKELETON_LOADING","SHOW_HIDE_TOAST","SHOW_HIDE_NOTIFICATION","data"],"mappings":"mKAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,aAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,SAAS,CAAE,KADM,CAEjBC,iBAAiB,CAAE,KAFF,CAGjBC,SAAS,CAAE,KAHM,CAIjBC,SAAS,CAAEC,SAJM,CAKjBC,YAAY,CAAED,SALG,CAMjBE,gBAAgB,CAAE,KAND,CAOjBC,gBAAgB,CAAE,IAPD,CAArB,CAUA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAuC,IAAtCC,CAAAA,KAAsC,2DAA9BV,YAA8B,IAAhBW,CAAAA,MAAgB,2CACnD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKb,CAAAA,WAAW,CAACc,WAAjB,CACI,sCACOH,KADP,MAEIT,SAAS,CAAEU,MAAM,CAACG,OAFtB,GAIJ,IAAKf,CAAAA,WAAW,CAACgB,oBAAjB,CACI,sCACOL,KADP,MAEIR,iBAAiB,CAAES,MAAM,CAACG,OAF9B,GAIJ,IAAKf,CAAAA,WAAW,CAACiB,eAAjB,CACI,sCACON,KADP,MAEIP,SAAS,CAAEQ,MAAM,CAACR,SAFtB,CAGIC,SAAS,CAAEO,MAAM,CAACP,SAHtB,CAIIE,YAAY,CAAEK,MAAM,CAACL,YAJzB,GAMJ,IAAKP,CAAAA,WAAW,CAACkB,sBAAjB,CACI,sCACOP,KADP,MAEIH,gBAAgB,CAAEI,MAAM,CAACJ,gBAF7B,CAGIC,gBAAgB,CAAEG,MAAM,CAACO,IAH7B,GAKJ,QAAS,MAAOR,CAAAA,KAAP,CAxBb,CA0BH,CA3BD,CA6BA,cAAeD,CAAAA,OAAf","sourcesContent":["import * as actionTypes from './constants';\n\nconst initialState = {\n    isLoading: false,\n    isSkeletonLoading: false,\n    showToast: false,\n    toastType: undefined,\n    toastMessage: undefined,\n    showNotification: false,\n    notificationData: null,\n}\n\nconst reducer = (state = initialState, action: any) => {\n    switch (action.type) {\n        case actionTypes.SET_LOADING:\n            return {\n                ...state,\n                isLoading: action.payload,\n            }\n        case actionTypes.SET_SKELETON_LOADING:\n            return {\n                ...state,\n                isSkeletonLoading: action.payload,\n            }\n        case actionTypes.SHOW_HIDE_TOAST:\n            return {\n                ...state,\n                showToast: action.showToast,\n                toastType: action.toastType,\n                toastMessage: action.toastMessage,\n            }\n        case actionTypes.SHOW_HIDE_NOTIFICATION:\n            return {\n                ...state,\n                showNotification: action.showNotification,\n                notificationData: action.data,\n            }\n        default: return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}