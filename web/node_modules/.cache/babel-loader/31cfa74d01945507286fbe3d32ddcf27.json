{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/chooseTiming.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; // @ts-ignore\n\nimport { DateRangePicker } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\n\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport moment from \"moment\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport { useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst default_format = \"YYYY-MM-DD\";\n\nconst ChooseTiming = ({\n  data,\n  milestones,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  let location = useLocation();\n  let jobId = null;\n\n  if (location.search) {\n    let urlParams = new URLSearchParams(location.search);\n    jobId = urlParams.get(\"jobId\");\n  }\n\n  const setCurrentDateWithoutTime = () => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    return date;\n  };\n\n  const [range, setRange] = useState({\n    startDate: setCurrentDateWithoutTime(),\n    // ''\n    endDate: setCurrentDateWithoutTime(),\n    key: \"selection\"\n  });\n  const [singleDayRange, setSingleDayRange] = useState(data.isSingleDayJob ? 2 : 1);\n  const [singleDayModal, setSingleDayModal] = useState(false);\n  const [formattedDates, setFormattedDates] = useState({});\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (stepCompleted) {\n      if (jobId) {\n        let startDt = moment(data.from_date, \"YYYY-MM-DD\").isSameOrAfter(moment().format(\"YYYY-MM-DD\")) ? moment(data.from_date).toDate() : \"\";\n        let endDt = moment(data.to_date, \"YYYY-MM-DD\").isSameOrAfter(moment().format(\"YYYY-MM-DD\")) ? moment(data.to_date).toDate() : \"\";\n\n        if (data.isJobRepublish) {\n          if (!startDt) {\n            startDt = new Date();\n          }\n\n          if (!endDt) {\n            endDt = new Date();\n          }\n        }\n\n        setRange({\n          startDate: startDt,\n          endDate: endDt,\n          key: \"selection\"\n        });\n        handleCheck({\n          startDate: startDt,\n          endDate: endDt\n        });\n      } else {\n        setRange({\n          startDate: data.from_date ? moment(data.from_date).toDate() : new Date(),\n          endDate: data.to_date ? moment(data.to_date).toDate() : \"\",\n          key: \"selection\"\n        });\n      }\n    }\n  }, [data, stepCompleted]);\n  useEffect(() => {\n    if (singleDayRange === 2) {\n      if (!data.isSingleDayJob) {\n        setSingleDayModal(true);\n      }\n    } else if (singleDayRange === 1) {\n      handleCheck(range);\n    }\n  }, [singleDayRange, range]);\n\n  const handleChange = item => {\n    let mile = milestones;\n\n    if (mile === null || mile === void 0 ? void 0 : mile.length) {\n      let start_selection = moment(item.selection.startDate).format(\"MM-DD-YYYY\");\n      let end_selection = moment(item.selection.endDate).isValid() ? moment(item.selection.endDate).format(\"MM-DD-YYYY\") : null;\n      let item_find = false;\n      mile.forEach(item_date => {\n        let start = item_date.from_date;\n        let end = moment(item_date.to_date).isValid() ? item_date.to_date : null;\n\n        if (start && end) {\n          if (moment(start_selection).isAfter(start) || moment(end_selection).isBefore(end)) {\n            item_find = true;\n          }\n        }\n\n        if (start && !end) {\n          if (moment(start_selection).isAfter(start)) {\n            item_find = true; // true;\n          }\n        }\n\n        if (start_selection && end_selection && !end) {\n          if (moment(start).isSameOrAfter(start_selection) && moment(start).isSameOrBefore(end_selection)) {\n            item_find = false;\n          } else {\n            item_find = true;\n          }\n        }\n      });\n\n      if (item_find && !jobId) {\n        setShowToast(true, \"Please check the milestone dates\");\n        return;\n      }\n    }\n\n    setRange(item.selection);\n    handleCheck(item.selection);\n    console.log(_.isEqual(item.selection.startDate, item.selection.endDate), \"val\", _.isEqual(item.selection, range), singleDayRange);\n\n    if (_.isEqual(item.selection.startDate, item.selection.endDate) && singleDayRange === null || !_.isEqual(item.selection, range)) {\n      setSingleDayRange(1);\n      return;\n    }\n\n    if (_.isEqual(item.selection.startDate, item.selection.endDate) && _.isEqual(item.selection, range) && singleDayRange === 1) {\n      setSingleDayRange(2);\n      return;\n    }\n\n    if (_.isEqual(item.selection.startDate, item.selection.endDate) && _.isEqual(item.selection, range) && singleDayRange === 2) return;\n    if (singleDayRange === 1 || singleDayRange === 2) setSingleDayRange(null);\n  };\n\n  const handleCheck = item => {\n    let from_date = moment(item.startDate).format(default_format);\n    let to_date = moment(item.endDate).format(default_format);\n    setFormattedDates({\n      from_date,\n      to_date\n    });\n\n    if (moment(from_date, default_format).isAfter(moment(to_date, default_format))) {\n      // isAfter\n      setError(\"finish date is greater then the start date.\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  const handleContinue = () => {\n    handleStepComplete({ ...formattedDates,\n      ...(singleDayRange === 2 ? {\n        isSingleDayJob: true\n      } : {\n        isSingleDayJob: false\n      })\n    });\n  };\n\n  const checkDisable = () => {\n    if ((range === null || range === void 0 ? void 0 : range.startDate) && (range === null || range === void 0 ? void 0 : range.startDate) !== \"Invalid date\") {\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(Dialog, {\n          open: singleDayModal // onClose={handleClose}\n          ,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"alert-dialog-title\",\n            children: \"Are you sure you want to create single day job?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setSingleDayModal(false);\n              },\n              color: \"primary\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setSingleDayModal(false);\n                setSingleDayRange(1);\n              },\n              color: \"primary\",\n              autoFocus: true,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: handleStepBack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \"Timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: \"Choose the start and finish day of your job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n                ranges: [range],\n                onChange: handleChange,\n                months: 2,\n                direction: \"horizontal\",\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: moment().add(2, \"years\").toDate(),\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg mtb-15\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `fill_btn full_btn btn-effect ${checkDisable() ? \"disable_btn\" : \"\"}`,\n                onClick: handleContinue,\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChooseTiming, \"CWX4YZH1/MGiLhEXopN4Pw09J6c=\", false, function () {\n  return [useLocation];\n});\n\n_c = ChooseTiming;\nexport default ChooseTiming;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseTiming\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/chooseTiming.tsx"],"names":["useState","useEffect","DateRangePicker","moment","setShowToast","useLocation","_","Button","Dialog","DialogActions","DialogTitle","default_format","ChooseTiming","data","milestones","stepCompleted","handleStepComplete","handleStepBack","location","jobId","search","urlParams","URLSearchParams","get","setCurrentDateWithoutTime","date","Date","setHours","range","setRange","startDate","endDate","key","singleDayRange","setSingleDayRange","isSingleDayJob","singleDayModal","setSingleDayModal","formattedDates","setFormattedDates","error","setError","startDt","from_date","isSameOrAfter","format","toDate","endDt","to_date","isJobRepublish","handleCheck","handleChange","item","mile","length","start_selection","selection","end_selection","isValid","item_find","forEach","item_date","start","end","isAfter","isBefore","isSameOrBefore","console","log","isEqual","handleContinue","checkDisable","add"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n// @ts-ignore\nimport { DateRangePicker } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\nimport moment from \"moment\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport { useLocation } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\ninterface Proptypes {\n  data: any;\n  milestones: any;\n  stepCompleted: boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepBack: () => void;\n}\n\nconst default_format = \"YYYY-MM-DD\";\nconst ChooseTiming = ({\n  data,\n  milestones,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack,\n}: Proptypes) => {\n  let location = useLocation();\n  let jobId: any = null;\n\n  if (location.search) {\n    let urlParams = new URLSearchParams(location.search);\n    jobId = urlParams.get(\"jobId\");\n  }\n\n  const setCurrentDateWithoutTime = () => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    return date;\n  };\n  const [range, setRange] = useState<{ [index: string]: any }>({\n    startDate: setCurrentDateWithoutTime(), // ''\n    endDate: setCurrentDateWithoutTime(),\n    key: \"selection\",\n  });\n  const [singleDayRange, setSingleDayRange] = useState<number | null>(\n    data.isSingleDayJob ? 2 : 1\n  );\n  const [singleDayModal, setSingleDayModal] = useState<boolean>(false);\n  const [formattedDates, setFormattedDates] = useState({});\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (stepCompleted) {\n      if (jobId) {\n        let startDt = moment(data.from_date, \"YYYY-MM-DD\").isSameOrAfter(\n          moment().format(\"YYYY-MM-DD\")\n        )\n          ? moment(data.from_date).toDate()\n          : \"\";\n        let endDt = moment(data.to_date, \"YYYY-MM-DD\").isSameOrAfter(\n          moment().format(\"YYYY-MM-DD\")\n        )\n          ? moment(data.to_date).toDate()\n          : \"\";\n        if (data.isJobRepublish) {\n          if (!startDt) {\n            startDt = new Date();\n          }\n          if (!endDt) {\n            endDt = new Date();\n          }\n        }\n        setRange({\n          startDate: startDt,\n          endDate: endDt,\n          key: \"selection\",\n        });\n        handleCheck({ startDate: startDt, endDate: endDt });\n      } else {\n        setRange({\n          startDate: data.from_date\n            ? moment(data.from_date).toDate()\n            : new Date(),\n          endDate: data.to_date ? moment(data.to_date).toDate() : \"\",\n          key: \"selection\",\n        });\n      }\n    }\n  }, [data, stepCompleted]);\n\n  useEffect(() => {\n    if (singleDayRange === 2) {\n      if (!data.isSingleDayJob) {\n        setSingleDayModal(true);\n      }\n    } else if (singleDayRange === 1) {\n      handleCheck(range);\n    }\n  }, [singleDayRange, range]);\n\n  const handleChange = (item: any) => {\n    let mile: any = milestones;\n    if (mile?.length) {\n      let start_selection: any = moment(item.selection.startDate).format(\n        \"MM-DD-YYYY\"\n      );\n      let end_selection: any = moment(item.selection.endDate).isValid()\n        ? moment(item.selection.endDate).format(\"MM-DD-YYYY\")\n        : null;\n      let item_find: any = false;\n\n      mile.forEach((item_date: any) => {\n        let start: any = item_date.from_date;\n        let end: any = moment(item_date.to_date).isValid()\n          ? item_date.to_date\n          : null;\n\n        if (start && end) {\n          if (\n            moment(start_selection).isAfter(start) ||\n            moment(end_selection).isBefore(end)\n          ) {\n            item_find = true;\n          }\n        }\n\n        if (start && !end) {\n          if (moment(start_selection).isAfter(start)) {\n            item_find = true; // true;\n          }\n        }\n\n        if (start_selection && end_selection && !end) {\n          if (\n            moment(start).isSameOrAfter(start_selection) &&\n            moment(start).isSameOrBefore(end_selection)\n          ) {\n            item_find = false;\n          } else {\n            item_find = true;\n          }\n        }\n      });\n\n      if (item_find && !jobId) {\n        setShowToast(true, \"Please check the milestone dates\");\n        return;\n      }\n    }\n    setRange(item.selection);\n    handleCheck(item.selection);\n    console.log(\n      _.isEqual(item.selection.startDate, item.selection.endDate),\n      \"val\",\n      _.isEqual(item.selection, range),\n      singleDayRange\n    );\n    if (\n      (_.isEqual(item.selection.startDate, item.selection.endDate) &&\n        singleDayRange === null) ||\n      !_.isEqual(item.selection, range)\n    ) {\n      setSingleDayRange(1);\n      return;\n    }\n    if (\n      _.isEqual(item.selection.startDate, item.selection.endDate) &&\n      _.isEqual(item.selection, range) &&\n      singleDayRange === 1\n    ) {\n      setSingleDayRange(2);\n      return;\n    }\n    if (\n      _.isEqual(item.selection.startDate, item.selection.endDate) &&\n      _.isEqual(item.selection, range) &&\n      singleDayRange === 2\n    )\n      return;\n    if (singleDayRange === 1 || singleDayRange === 2) setSingleDayRange(null);\n  };\n\n  const handleCheck = (item: any) => {\n    let from_date = moment(item.startDate).format(default_format);\n    let to_date = moment(item.endDate).format(default_format);\n    setFormattedDates({ from_date, to_date });\n    if (\n      moment(from_date, default_format).isAfter(moment(to_date, default_format))\n    ) {\n      // isAfter\n      setError(\"finish date is greater then the start date.\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  const handleContinue = () => {\n    handleStepComplete({\n      ...formattedDates,\n      ...(singleDayRange === 2\n        ? { isSingleDayJob: true }\n        : { isSingleDayJob: false }),\n    });\n  };\n\n  const checkDisable = () => {\n    if (range?.startDate && range?.startDate !== \"Invalid date\") {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"app_wrapper\">\n      <div className=\"section_wrapper\">\n        <div className=\"custom_container\">\n          <Dialog\n            open={singleDayModal}\n            // onClose={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              {\"Are you sure you want to create single day job?\"}\n            </DialogTitle>\n            <DialogActions>\n              <Button\n                onClick={() => {\n                  setSingleDayModal(false);\n                }}\n                color=\"primary\"\n              >\n                {\"Yes\"}\n              </Button>\n              <Button\n                onClick={() => {\n                  setSingleDayModal(false);\n                  setSingleDayRange(1);\n                }}\n                color=\"primary\"\n                autoFocus\n              >\n                {\"No\"}\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_5\">\n                <div className=\"relate\">\n                  <button className=\"back\" onClick={handleStepBack}></button>\n                  <span className=\"title\">Timing</span>\n                </div>\n                <p className=\"commn_para\">\n                  {\"Choose the start and finish day of your job\"}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n              <div className=\"form_field\">\n                <DateRangePicker\n                  ranges={[range]}\n                  onChange={handleChange}\n                  months={2}\n                  direction=\"horizontal\"\n                  moveRangeOnFirstSelection={false}\n                  rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                  showDateDisplay={false}\n                  showSelectionPreview={true}\n                  showPreview={true}\n                  minDate={new Date()}\n                  maxDate={moment().add(2, \"years\").toDate()}\n                  fixedHeight={true}\n                />\n              </div>\n              <span className=\"error_msg mtb-15\">{error}</span>\n              <div className=\"form_field\">\n                <button\n                  className={`fill_btn full_btn btn-effect ${\n                    checkDisable() ? \"disable_btn\" : \"\"\n                  }`}\n                  onClick={handleContinue}\n                >\n                  {\"Continue\"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseTiming;\n"]},"metadata":{},"sourceType":"module"}