{"ast":null,"code":"import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport JobDashboard from './jobDashboard';\nimport { getActiveJobList, getAppliedJobList, getPastJobList, getNewJobList, getApprovedMilestoneList, getMilestoneList, markMilestoneComplete, resetActiveJobList, resetAppliedJobList, resetPastJobList, resetNewJobList, resetApprovedMilestoneList } from '../../redux/jobs/actions';\nimport { getBankDetails, addBankDetails, updateBankDetails, removeBankDetails } from '../../redux/profile/actions';\n\nconst mapStateToProps = state => {\n  const {\n    jobs: {\n      activeJobList,\n      appliedJobList,\n      pastJobList,\n      newJobList,\n      approvedMilestoneList,\n      milestonesCount,\n      newJobsCount,\n      milestoneList\n    },\n    profile: {\n      bankDetails\n    },\n    common: {\n      isLoading: loading\n    }\n  } = state;\n  return {\n    activeJobList,\n    appliedJobList,\n    pastJobList,\n    newJobList,\n    approvedMilestoneList,\n    milestoneList,\n    milestonesCount,\n    newJobsCount,\n    bankDetails,\n    loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getActiveJobList,\n    getAppliedJobList,\n    getPastJobList,\n    getNewJobList,\n    getApprovedMilestoneList,\n    getMilestoneList,\n    getBankDetails,\n    addBankDetails,\n    updateBankDetails,\n    removeBankDetails,\n    markMilestoneComplete,\n    resetActiveJobList,\n    resetAppliedJobList,\n    resetPastJobList,\n    resetNewJobList,\n    resetApprovedMilestoneList\n  }, dispatch);\n};\n\nconst JobDashboardPage = connect(mapStateToProps, mapDispatchToProps)(JobDashboard);\nexport default JobDashboardPage;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/index.tsx"],"names":["connect","bindActionCreators","JobDashboard","getActiveJobList","getAppliedJobList","getPastJobList","getNewJobList","getApprovedMilestoneList","getMilestoneList","markMilestoneComplete","resetActiveJobList","resetAppliedJobList","resetPastJobList","resetNewJobList","resetApprovedMilestoneList","getBankDetails","addBankDetails","updateBankDetails","removeBankDetails","mapStateToProps","state","jobs","activeJobList","appliedJobList","pastJobList","newJobList","approvedMilestoneList","milestonesCount","newJobsCount","milestoneList","profile","bankDetails","common","isLoading","loading","mapDispatchToProps","dispatch","JobDashboardPage"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,wBALF,EAMEC,gBANF,EAOEC,qBAPF,EAQEC,kBARF,EASEC,mBATF,EAUEC,gBAVF,EAWEC,eAXF,EAYEC,0BAZF,QAaO,0BAbP;AAcA,SACEC,cADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,iBAJF,QAKO,6BALP;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AACtC,QAAM;AACJC,IAAAA,IAAI,EAAE;AACJC,MAAAA,aADI;AAEJC,MAAAA,cAFI;AAGJC,MAAAA,WAHI;AAIJC,MAAAA,UAJI;AAKJC,MAAAA,qBALI;AAMJC,MAAAA,eANI;AAOJC,MAAAA,YAPI;AAQJC,MAAAA;AARI,KADF;AAWJC,IAAAA,OAAO,EAAE;AACPC,MAAAA;AADO,KAXL;AAcJC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAEC;AADL;AAdJ,MAiBFd,KAjBJ;AAmBA,SAAO;AACLE,IAAAA,aADK;AAELC,IAAAA,cAFK;AAGLC,IAAAA,WAHK;AAILC,IAAAA,UAJK;AAKLC,IAAAA,qBALK;AAMLG,IAAAA,aANK;AAOLF,IAAAA,eAPK;AAQLC,IAAAA,YARK;AASLG,IAAAA,WATK;AAULG,IAAAA;AAVK,GAAP;AAYD,CAhCD;;AAkCA,MAAMC,kBAAkB,GAAIC,QAAD,IAAmB;AAC5C,SAAOnC,kBAAkB,CACvB;AACEE,IAAAA,gBADF;AAEEC,IAAAA,iBAFF;AAGEC,IAAAA,cAHF;AAIEC,IAAAA,aAJF;AAKEC,IAAAA,wBALF;AAMEC,IAAAA,gBANF;AAOEO,IAAAA,cAPF;AAQEC,IAAAA,cARF;AASEC,IAAAA,iBATF;AAUEC,IAAAA,iBAVF;AAWET,IAAAA,qBAXF;AAYEC,IAAAA,kBAZF;AAaEC,IAAAA,mBAbF;AAcEC,IAAAA,gBAdF;AAeEC,IAAAA,eAfF;AAgBEC,IAAAA;AAhBF,GADuB,EAmBvBsB,QAnBuB,CAAzB;AAqBD,CAtBD;;AAwBA,MAAMC,gBAAgB,GAAGrC,OAAO,CAC9BmB,eAD8B,EAE9BgB,kBAF8B,CAAP,CAGvBjC,YAHuB,CAAzB;AAKA,eAAemC,gBAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport JobDashboard from './jobDashboard';\nimport {\n  getActiveJobList,\n  getAppliedJobList,\n  getPastJobList,\n  getNewJobList,\n  getApprovedMilestoneList,\n  getMilestoneList,\n  markMilestoneComplete,\n  resetActiveJobList,\n  resetAppliedJobList,\n  resetPastJobList,\n  resetNewJobList,\n  resetApprovedMilestoneList,\n} from '../../redux/jobs/actions';\nimport {\n  getBankDetails,\n  addBankDetails,\n  updateBankDetails,\n  removeBankDetails,\n} from '../../redux/profile/actions';\n\nconst mapStateToProps = (state: any) => {\n  const {\n    jobs: {\n      activeJobList,\n      appliedJobList,\n      pastJobList,\n      newJobList,\n      approvedMilestoneList,\n      milestonesCount,\n      newJobsCount,\n      milestoneList,\n    },\n    profile: {\n      bankDetails,\n    },\n    common: {\n      isLoading: loading,\n    }\n  } = state;\n\n  return {\n    activeJobList,\n    appliedJobList,\n    pastJobList,\n    newJobList,\n    approvedMilestoneList,\n    milestoneList,\n    milestonesCount,\n    newJobsCount,\n    bankDetails,\n    loading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators(\n    {\n      getActiveJobList,\n      getAppliedJobList,\n      getPastJobList,\n      getNewJobList,\n      getApprovedMilestoneList,\n      getMilestoneList,\n      getBankDetails,\n      addBankDetails,\n      updateBankDetails,\n      removeBankDetails,\n      markMilestoneComplete,\n      resetActiveJobList,\n      resetAppliedJobList,\n      resetPastJobList,\n      resetNewJobList,\n      resetApprovedMilestoneList,\n    },\n    dispatch\n  );\n};\n\nconst JobDashboardPage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobDashboard);\n\nexport default JobDashboardPage;\n"]},"metadata":{},"sourceType":"module"}