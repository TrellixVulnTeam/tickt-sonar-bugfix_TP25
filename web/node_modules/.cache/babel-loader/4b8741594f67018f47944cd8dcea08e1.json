{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";//  ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\nvar JobPostedSuccess=function JobPostedSuccess(_ref){var history=_ref.history,data=_ref.data,stepCompleted=_ref.stepCompleted,handleStepForward=_ref.handleStepForward,templateImage=_ref.templateImage,handleStepComplete=_ref.handleStepComplete,handleStepBack=_ref.handleStepBack;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoad=_useState2[0],setImageLoad=_useState2[1];var redirectToSuccess=function redirectToSuccess(){history.push('/post-job-success');};return/*#__PURE__*/_jsx(_Fragment,{children:redirectToSuccess()});};export default JobPostedSuccess;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/jobPostedSuccess.tsx"],"names":["React","useState","JobPostedSuccess","history","data","stepCompleted","handleStepForward","templateImage","handleStepComplete","handleStepBack","isLoad","setImageLoad","redirectToSuccess","push"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,gGAYA;AAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAuH,IAApHC,CAAAA,OAAoH,MAApHA,OAAoH,CAA3GC,IAA2G,MAA3GA,IAA2G,CAArGC,aAAqG,MAArGA,aAAqG,CAAtFC,iBAAsF,MAAtFA,iBAAsF,CAAnEC,aAAmE,MAAnEA,aAAmE,CAApDC,kBAAoD,MAApDA,kBAAoD,CAAhCC,cAAgC,MAAhCA,cAAgC,CAC5I,cAA+BR,QAAQ,CAAC,KAAD,CAAvC,wCAAOS,MAAP,eAAeC,YAAf,eAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5BT,OAAO,CAACU,IAAR,CAAa,mBAAb,EACH,CAFD,CAIA,mBACI,yBACKD,iBAAiB,EADtB,EADJ,CAKH,CAZD,CAcA,cAAeV,CAAAA,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\ninterface Proptypes {\n    data: any;\n    history: any\n    editDetailPage: any;\n    templateImage: any;\n    stepCompleted: Boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepForward: (data: any) => void;\n    handleStepBack: () => void;\n}\n//  ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n\nconst JobPostedSuccess = ({ history, data, stepCompleted, handleStepForward, templateImage, handleStepComplete, handleStepBack }: Proptypes) => {\n    const [isLoad, setImageLoad] = useState(false);\n\n    const redirectToSuccess = () => {\n        history.push('/post-job-success');\n    }\n\n    return (\n        <>\n            {redirectToSuccess()}\n        </>\n    )\n}\n\nexport default JobPostedSuccess;\n"]},"metadata":{},"sourceType":"module"}