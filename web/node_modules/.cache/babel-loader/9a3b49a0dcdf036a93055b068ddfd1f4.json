{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{NavLink,Route,Switch,useHistory,useLocation}from'react-router-dom';import ActiveJobsPage from'./components/activeJobs';import AppliedJobsPage from'./components/appliedJobs';import PastJobsPage from'./components/pastJobs';import NewJobsPage from'./components/newJobs';import ApprovedMilestonesPage from'./components/approvedMilestones';import MarkMilestonePage from'./components/markMilestone';import ReviewBuilder from'./components/reviewBuilder/reviewBuilder';import QuoteOuter from'./components/quoteJobs/quoteOuter';import ActiveQuoteOuter from'./components/activeQuoteJob/activeQuoteOuter';import menu from'../../assets/images/menu-line-blue.png';import close from'../../assets/images/ic-cancel-blue.png';import templateImage from'../../assets/images/job-complete-bg.png';import tickIcon from\"../../assets/images/tick.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var JobDashboard=function JobDashboard(_ref){var _history$location;var loading=_ref.loading,getActiveJobList=_ref.getActiveJobList,activeJobList=_ref.activeJobList,getAppliedJobList=_ref.getAppliedJobList,appliedJobList=_ref.appliedJobList,getPastJobList=_ref.getPastJobList,pastJobList=_ref.pastJobList,getNewJobList=_ref.getNewJobList,newJobList=_ref.newJobList,getApprovedMilestoneList=_ref.getApprovedMilestoneList,approvedMilestoneList=_ref.approvedMilestoneList,getMilestoneList=_ref.getMilestoneList,milestoneList=_ref.milestoneList,milestonesCount=_ref.milestonesCount,newJobsCount=_ref.newJobsCount,addBankDetails=_ref.addBankDetails,updateBankDetails=_ref.updateBankDetails,getBankDetails=_ref.getBankDetails,removeBankDetails=_ref.removeBankDetails,markMilestoneComplete=_ref.markMilestoneComplete,bankDetails=_ref.bankDetails,resetActiveJobList=_ref.resetActiveJobList,resetAppliedJobList=_ref.resetAppliedJobList,resetPastJobList=_ref.resetPastJobList,resetNewJobList=_ref.resetNewJobList,resetApprovedMilestoneList=_ref.resetApprovedMilestoneList;var history=useHistory();var _useLocation=useLocation(),pathname=_useLocation.pathname;var params=new URLSearchParams((_history$location=history.location)===null||_history$location===void 0?void 0:_history$location.search);params={jobId:params.get('jobId'),tradeId:params.get('tradeId'),specializationId:params.get('specializationId')};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openSidebar=_useState2[0],setOpenSidebar=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),milestoneComplete=_useState4[0],setMilestoneComplete=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),jobComplete=_useState6[0],setJobComplete=_useState6[1];var jobCompleteCount=jobComplete&&\"\".concat(jobComplete).concat(\"\".concat(jobComplete).endsWith('1')?'st':\"\".concat(jobComplete).endsWith('2')?'nd':\"\".concat(jobComplete).endsWith('3')?'rd':'th');return milestoneComplete?/*#__PURE__*/_jsx(\"div\",{className:\"img_text_wrap\",children:/*#__PURE__*/_jsxs(\"figure\",{className:\"full_image\",children:[/*#__PURE__*/_jsx(\"img\",{src:templateImage,alt:\"template-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"short_info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Milestone is completed!\"}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label\",children:\"Nice one! The builder will review any required photos and approve your milestone shortly.\"}),/*#__PURE__*/_jsx(\"img\",{className:\"tick_img\",src:tickIcon}),/*#__PURE__*/_jsx(\"div\",{className:\"btn_wrapr\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn btn-effect\",onClick:function onClick(){history.push(\"/mark-milestone?jobId=\".concat(params.jobId,\"&redirect_from=jobs\"));setMilestoneComplete(false);},children:\"OK\"})})]})})]})}):!!jobComplete?/*#__PURE__*/_jsx(\"div\",{className:\"img_text_wrap\",children:/*#__PURE__*/_jsxs(\"figure\",{className:\"full_image\",children:[/*#__PURE__*/_jsx(\"img\",{src:templateImage,alt:\"template-image\"}),/*#__PURE__*/_jsx(\"div\",{className:\"short_info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"title\",children:[\"Your \",jobCompleteCount,\" job is completed!\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"show_label\",children:[\"You have completed your \",jobCompleteCount,\" Job using Tickt! Click here to view your completed jobs or leave a review. You will be paid as soon as the builder signs off.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn_wrapr\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn btn-effect\",onClick:function onClick(){history.push(\"/mark-milestone?jobId=\".concat(params.jobId,\"&redirect_from=jobs\"));setJobComplete(false);},children:\"OK\"}),/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn white_btn\",onClick:function onClick(){history.push(\"/past-jobs\");setJobComplete(false);},children:\"See completed jobs\"})]})]})})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"app_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mob_side_nav\",onClick:function onClick(){return setOpenSidebar(!openSidebar);},children:/*#__PURE__*/_jsx(\"img\",{src:menu,alt:\"mob-side-nav\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"f_row h-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"side_nav_col\".concat(openSidebar?\" active\":\"\"),children:[/*#__PURE__*/_jsx(\"button\",{className:\"close_nav\",onClick:function onClick(){return setOpenSidebar(false);},children:/*#__PURE__*/_jsx(\"img\",{src:close,alt:\"close\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stick\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Job Dashboard\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"dashboard_menu\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{className:\"icon star\",to:\"/active-jobs\",isActive:function isActive(){return[\"/active-jobs\",\"/mark-milestone\",\"/active-quote-job\"].includes(pathname);},children:/*#__PURE__*/_jsx(\"span\",{className:\"menu_txt\",children:\"Active\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{className:\"icon applied\",to:\"/applied-jobs\",isActive:function isActive(){return[\"/applied-jobs\",\"/quote-job\"].includes(pathname);},children:/*#__PURE__*/_jsx(\"span\",{className:\"menu_txt\",children:\"Applied\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{className:\"icon past\",to:\"/past-jobs\",children:/*#__PURE__*/_jsx(\"span\",{className:\"menu_txt\",children:\"Past\"})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{className:\"icon new\",to:\"/new-jobs\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"menu_txt\",children:[\"New\",!!newJobsCount&&/*#__PURE__*/_jsx(\"span\",{className:\"badge_count\",children:newJobsCount>9?\"9+\":newJobsCount})]})})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{className:\"icon approved\",to:\"/approved-milestones\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"menu_txt\",children:[\"Approved Milestones\",!!milestonesCount&&/*#__PURE__*/_jsx(\"span\",{className:\"badge_count\",children:milestonesCount>9?\"9+\":milestonesCount})]})})})]})]})]}),/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/active-jobs\",render:function render(props){return/*#__PURE__*/_createElement(ActiveJobsPage,_objectSpread(_objectSpread({},props),{},{key:props.location.key,loading:loading,newJobsCount:newJobsCount,getActiveJobList:getActiveJobList,resetActiveJobList:resetActiveJobList,activeJobList:activeJobList}));}}),/*#__PURE__*/_jsx(Route,{path:\"/applied-jobs\",render:function render(props){return/*#__PURE__*/_createElement(AppliedJobsPage,_objectSpread(_objectSpread({},props),{},{key:props.location.key,loading:loading,newJobsCount:newJobsCount,appliedJobList:appliedJobList,getAppliedJobList:getAppliedJobList,resetAppliedJobList:resetAppliedJobList}));}}),/*#__PURE__*/_jsx(Route,{path:\"/past-jobs\",render:function render(props){return/*#__PURE__*/_createElement(PastJobsPage,_objectSpread(_objectSpread({},props),{},{key:props.location.key,loading:loading,newJobsCount:newJobsCount,pastJobList:pastJobList,getPastJobList:getPastJobList,resetPastJobList:resetPastJobList}));}}),/*#__PURE__*/_jsx(Route,{path:\"/new-jobs\",render:function render(props){return/*#__PURE__*/_createElement(NewJobsPage,_objectSpread(_objectSpread({},props),{},{key:props.location.key,loading:loading,newJobsCount:newJobsCount,newJobList:newJobList,getNewJobList:getNewJobList,resetNewJobList:resetNewJobList}));}}),/*#__PURE__*/_jsx(Route,{path:\"/approved-milestones\",render:function render(props){return/*#__PURE__*/_createElement(ApprovedMilestonesPage,_objectSpread(_objectSpread({},props),{},{key:props.location.key,loading:loading,newJobsCount:newJobsCount,approvedMilestoneList:approvedMilestoneList,getApprovedMilestoneList:getApprovedMilestoneList,resetApprovedMilestoneList:resetApprovedMilestoneList}));}}),/*#__PURE__*/_jsx(Route,{path:\"/mark-milestone\",render:function render(props){return/*#__PURE__*/_jsx(MarkMilestonePage,_objectSpread({getMilestoneList:getMilestoneList,milestoneList:milestoneList,showMilestoneCompletePage:function showMilestoneCompletePage(){return setMilestoneComplete(true);},showJobCompletePage:function showJobCompletePage(jobCompletedCount){return setJobComplete(jobCompletedCount);},getBankDetails:getBankDetails,addBankDetails:addBankDetails,updateBankDetails:updateBankDetails,removeBankDetails:removeBankDetails,markMilestoneComplete:markMilestoneComplete,bankDetails:bankDetails},props));}}),/*#__PURE__*/_jsx(Route,{path:\"/quote-job\",render:function render(props){return/*#__PURE__*/_jsx(QuoteOuter,_objectSpread({},props));}}),/*#__PURE__*/_jsx(Route,{path:\"/active-quote-job\",render:function render(props){return/*#__PURE__*/_jsx(ActiveQuoteOuter,_objectSpread({},props));}}),/*#__PURE__*/_jsx(Route,{path:\"/review-builder\",render:function render(props){return/*#__PURE__*/_jsx(ReviewBuilder,_objectSpread(_objectSpread({},props),{},{history:history}));}})]})})]})]})});};export default JobDashboard;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/jobDashboard.tsx"],"names":["useState","NavLink","Route","Switch","useHistory","useLocation","ActiveJobsPage","AppliedJobsPage","PastJobsPage","NewJobsPage","ApprovedMilestonesPage","MarkMilestonePage","ReviewBuilder","QuoteOuter","ActiveQuoteOuter","menu","close","templateImage","JobDashboard","loading","getActiveJobList","activeJobList","getAppliedJobList","appliedJobList","getPastJobList","pastJobList","getNewJobList","newJobList","getApprovedMilestoneList","approvedMilestoneList","getMilestoneList","milestoneList","milestonesCount","newJobsCount","addBankDetails","updateBankDetails","getBankDetails","removeBankDetails","markMilestoneComplete","bankDetails","resetActiveJobList","resetAppliedJobList","resetPastJobList","resetNewJobList","resetApprovedMilestoneList","history","pathname","params","URLSearchParams","location","search","jobId","get","tradeId","specializationId","openSidebar","setOpenSidebar","milestoneComplete","setMilestoneComplete","jobComplete","setJobComplete","jobCompleteCount","endsWith","tickIcon","push","includes","props","key","jobCompletedCount"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { NavLink, Route, Switch, useHistory, useLocation } from 'react-router-dom';\n\nimport ActiveJobsPage from './components/activeJobs';\nimport AppliedJobsPage from './components/appliedJobs';\nimport PastJobsPage from './components/pastJobs';\nimport NewJobsPage from './components/newJobs';\nimport ApprovedMilestonesPage from './components/approvedMilestones';\nimport MarkMilestonePage from './components/markMilestone';\nimport ReviewBuilder from './components/reviewBuilder/reviewBuilder';\nimport QuoteOuter from './components/quoteJobs/quoteOuter';\nimport ActiveQuoteOuter from './components/activeQuoteJob/activeQuoteOuter';\n\nimport menu from '../../assets/images/menu-line-blue.png';\nimport close from '../../assets/images/ic-cancel-blue.png';\nimport templateImage from '../../assets/images/job-complete-bg.png';\nimport tickIcon from '../../assets/images/tick.svg';\ninterface Proptypes {\n  loading: boolean,\n  getActiveJobList: (page: number) => void;\n  activeJobList: Array<any>;\n  getAppliedJobList: (page: number) => void;\n  appliedJobList: Array<any>;\n  getPastJobList: (page: number) => void;\n  pastJobList: Array<any>;\n  getNewJobList: (page: number) => void;\n  newJobList: Array<any>;\n  getApprovedMilestoneList: (page: number) => void;\n  approvedMilestoneList: Array<any>;\n  getMilestoneList: (jobId: string) => void;\n  milestoneList: any;\n  milestonesCount: number;\n  newJobsCount: number;\n  addBankDetails: (data: any) => void;\n  updateBankDetails: (data: any) => void;\n  getBankDetails: () => void;\n  removeBankDetails: () => void;\n  markMilestoneComplete: (data: any, callback: (jobCompletedCount: number) => void) => void;\n  bankDetails: any;\n  resetActiveJobList: () => void;\n  resetAppliedJobList: () => void;\n  resetPastJobList: () => void;\n  resetNewJobList: () => void;\n  resetApprovedMilestoneList: () => void;\n}\n\nconst JobDashboard = ({\n  loading,\n  getActiveJobList,\n  activeJobList,\n  getAppliedJobList,\n  appliedJobList,\n  getPastJobList,\n  pastJobList,\n  getNewJobList,\n  newJobList,\n  getApprovedMilestoneList,\n  approvedMilestoneList,\n  getMilestoneList,\n  milestoneList,\n  milestonesCount,\n  newJobsCount,\n  addBankDetails,\n  updateBankDetails,\n  getBankDetails,\n  removeBankDetails,\n  markMilestoneComplete,\n  bankDetails,\n  resetActiveJobList,\n  resetAppliedJobList,\n  resetPastJobList,\n  resetNewJobList,\n  resetApprovedMilestoneList,\n}: Proptypes) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  let params: any = new URLSearchParams(history.location?.search);\n  params = {\n    jobId: params.get('jobId'),\n    tradeId: params.get('tradeId'),\n    specializationId: params.get('specializationId'),\n  };\n\n  const [openSidebar, setOpenSidebar] = useState(false);\n  const [milestoneComplete, setMilestoneComplete] = useState(false);\n  const [jobComplete, setJobComplete] = useState<boolean | number>(false);\n\n  const jobCompleteCount = jobComplete && `${jobComplete}${`${jobComplete}`.endsWith('1') ? 'st' : `${jobComplete}`.endsWith('2') ? 'nd' : `${jobComplete}`.endsWith('3') ? 'rd' : 'th'}`;\n\n  return milestoneComplete ? (\n    <div className=\"img_text_wrap\">\n      <figure className=\"full_image\">\n        <img src={templateImage} alt=\"template-image\" />\n        <div className=\"short_info\">\n          <div className=\"content\">\n            <h1 className=\"title\">Milestone is completed!</h1>\n            <span className=\"show_label\">\n              Nice one! The builder will review any required photos and approve\n              your milestone shortly.\n            </span>\n            <img className=\"tick_img\" src={tickIcon} />\n            <div className=\"btn_wrapr\">\n              <button\n                className=\"fill_btn btn-effect\"\n                onClick={() => {\n                  history.push(\n                    `/mark-milestone?jobId=${params.jobId}&redirect_from=jobs`\n                  );\n                  setMilestoneComplete(false);\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </div>\n      </figure>\n    </div>\n  ) : !!jobComplete ? (\n    <div className=\"img_text_wrap\">\n      <figure className=\"full_image\">\n        <img src={templateImage} alt=\"template-image\" />\n        <div className=\"short_info\">\n          <div className=\"content\">\n            <h1 className=\"title\">Your {jobCompleteCount} job is completed!</h1>\n            <span className=\"show_label\">\n              You have completed your {jobCompleteCount} Job using Tickt! Click\n              here to view your completed jobs or leave a review. You will be\n              paid as soon as the builder signs off.\n            </span>\n            {/* <img className=\"tick_img\" src={tickIcon} /> */}\n            <div className=\"btn_wrapr\">\n              <button\n                className=\"fill_btn btn-effect\"\n                onClick={() => {\n                  history.push(\n                    `/mark-milestone?jobId=${params.jobId}&redirect_from=jobs`\n                  );\n                  setJobComplete(false);\n                }}\n              >\n                OK\n              </button>\n              <button\n                className=\"fill_btn white_btn\"\n                onClick={() => {\n                  history.push(\"/past-jobs\");\n                  setJobComplete(false);\n                }}\n              >\n                See completed jobs\n              </button>\n            </div>\n          </div>\n        </div>\n      </figure>\n    </div>\n  ) : (\n    <div className=\"app_wrapper\">\n      <div className=\"custom_container\">\n        <span\n          className=\"mob_side_nav\"\n          onClick={() => setOpenSidebar(!openSidebar)}\n        >\n          <img src={menu} alt=\"mob-side-nav\" />\n        </span>\n        <div className=\"f_row h-100\">\n          <div className={`side_nav_col${openSidebar ? \" active\" : \"\"}`}>\n            <button className=\"close_nav\" onClick={() => setOpenSidebar(false)}>\n              <img src={close} alt=\"close\" />\n            </button>\n            <div className=\"stick\">\n              <span className=\"title\">Job Dashboard</span>\n              <ul className=\"dashboard_menu\">\n                <li>\n                  <NavLink\n                    className=\"icon star\"\n                    to=\"/active-jobs\"\n                    isActive={() =>\n                      [\n                        \"/active-jobs\",\n                        \"/mark-milestone\",\n                        \"/active-quote-job\",\n                      ].includes(pathname)\n                    }\n                  >\n                    <span className=\"menu_txt\">Active</span>\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    className=\"icon applied\"\n                    to=\"/applied-jobs\"\n                    isActive={() =>\n                      [\"/applied-jobs\", \"/quote-job\"].includes(pathname)\n                    }\n                  >\n                    <span className=\"menu_txt\">Applied</span>\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink className=\"icon past\" to=\"/past-jobs\">\n                    <span className=\"menu_txt\">Past</span>\n                  </NavLink>\n                </li>\n                {/* <hr></hr> */}\n                <li>\n                  <NavLink className=\"icon new\" to=\"/new-jobs\">\n                    <span className=\"menu_txt\">\n                      New\n                      {!!newJobsCount && (\n                        <span className=\"badge_count\">\n                          {newJobsCount > 9 ? \"9+\" : newJobsCount}\n                        </span>\n                      )}\n                    </span>\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink className=\"icon approved\" to=\"/approved-milestones\">\n                    <span className=\"menu_txt\">\n                      Approved Milestones\n                      {!!milestonesCount && (\n                        <span className=\"badge_count\">\n                          {milestonesCount > 9 ? \"9+\" : milestonesCount}\n                        </span>\n                      )}\n                    </span>\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n          {/* <div className=\"detail_col\"> */}\n          <>\n            <Switch>\n              <Route\n                path=\"/active-jobs\"\n                render={(props) => (\n                  <ActiveJobsPage\n                    {...props}\n                    key={props.location.key}\n                    loading={loading}\n                    newJobsCount={newJobsCount}\n                    getActiveJobList={getActiveJobList}\n                    resetActiveJobList={resetActiveJobList}\n                    activeJobList={activeJobList}\n                  />\n                )}\n              />\n              <Route\n                path=\"/applied-jobs\"\n                render={(props) => (\n                  <AppliedJobsPage\n                    {...props}\n                    key={props.location.key}\n                    loading={loading}\n                    newJobsCount={newJobsCount}\n                    appliedJobList={appliedJobList}\n                    getAppliedJobList={getAppliedJobList}\n                    resetAppliedJobList={resetAppliedJobList}\n                  />\n                )}\n              />\n              <Route\n                path=\"/past-jobs\"\n                render={(props) => (\n                  <PastJobsPage\n                    {...props}\n                    key={props.location.key}\n                    loading={loading}\n                    newJobsCount={newJobsCount}\n                    pastJobList={pastJobList}\n                    getPastJobList={getPastJobList}\n                    resetPastJobList={resetPastJobList}\n                  />\n                )}\n              />\n              <Route\n                path=\"/new-jobs\"\n                render={(props) => (\n                  <NewJobsPage\n                    {...props}\n                    key={props.location.key}\n                    loading={loading}\n                    newJobsCount={newJobsCount}\n                    newJobList={newJobList}\n                    getNewJobList={getNewJobList}\n                    resetNewJobList={resetNewJobList}\n                  />\n                )}\n              />\n              <Route\n                path=\"/approved-milestones\"\n                render={(props) => (\n                  <ApprovedMilestonesPage\n                    {...props}\n                    key={props.location.key}\n                    loading={loading}\n                    newJobsCount={newJobsCount}\n                    approvedMilestoneList={approvedMilestoneList}\n                    getApprovedMilestoneList={getApprovedMilestoneList}\n                    resetApprovedMilestoneList={resetApprovedMilestoneList}\n                  />\n                )}\n              />\n              <Route\n                path=\"/mark-milestone\"\n                render={(props) => (\n                  <MarkMilestonePage\n                    getMilestoneList={getMilestoneList}\n                    milestoneList={milestoneList}\n                    showMilestoneCompletePage={() => setMilestoneComplete(true)}\n                    showJobCompletePage={(jobCompletedCount) =>\n                      setJobComplete(jobCompletedCount)\n                    }\n                    getBankDetails={getBankDetails}\n                    addBankDetails={addBankDetails}\n                    updateBankDetails={updateBankDetails}\n                    removeBankDetails={removeBankDetails}\n                    markMilestoneComplete={markMilestoneComplete}\n                    bankDetails={bankDetails}\n                    {...props}\n                  />\n                )}\n              />\n              <Route\n                path=\"/quote-job\"\n                render={(props) => <QuoteOuter {...props} />}\n              />\n              <Route\n                path=\"/active-quote-job\"\n                render={(props) => <ActiveQuoteOuter {...props} />}\n              />\n              <Route\n                path=\"/review-builder\"\n                render={(props) => (\n                  <ReviewBuilder {...props} history={history} />\n                )}\n              />\n            </Switch>\n          </>\n          {/* </div> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JobDashboard;\n"]},"metadata":{},"sourceType":"module"}