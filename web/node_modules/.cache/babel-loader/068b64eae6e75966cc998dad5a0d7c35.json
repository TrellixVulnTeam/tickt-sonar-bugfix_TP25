{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/searchTradieResult/searchResultTradie.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport SearchFilters from \"./searchFilters\";\nimport noData from \"../../assets/images/no-search-data.png\";\nimport BannerSearchProps from \"../shared/bannerSearchProps\";\nimport TradieBox from \"../shared/tradieBox\";\nimport moment from \"moment\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SearchResultTradie = props => {\n  _s();\n\n  var _props$history, _props$history$locati, _props$history$locati2;\n\n  const location = useLocation();\n  const [stateData, setStateData] = useState(location.state);\n  const [specialiZationName, setSpecialiZationName] = useState([]);\n  const [isToggle, setToggleSearch] = useState(false);\n  const [localInfo, setLocalInfo] = useState({}); // localInfo\n\n  const [loading, setLoading] = useState(false);\n  const [localData, setLocalData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [sortByFilter, setSortByFilter] = useState({\n    sortByFilterClicked: false,\n    tradeId: [],\n    sortChanged: false,\n    specializationId: [],\n    specializationName: [],\n    allSpecializationClicked: false\n  });\n  const {\n    homeSearchJobData\n  } = props; // props here.\n\n  useEffect(() => {\n    var _props$location, _props$location$state, _stateData$calender, _stateData$calender3, _stateData$specializa, _data$address, _props$tradeListData$, _JSON$parse, _JSON$parse2;\n\n    props.getRecentSearchList();\n    let data = {\n      page: 1,\n      isFiltered: false\n    };\n\n    if (stateData === null || stateData === void 0 ? void 0 : stateData.tradeId) {\n      data[\"tradeId\"] = stateData === null || stateData === void 0 ? void 0 : stateData.tradeId;\n    }\n\n    if (stateData === null || stateData === void 0 ? void 0 : stateData.specializations) {\n      data[\"specializationId\"] = stateData === null || stateData === void 0 ? void 0 : stateData.specializations;\n      data[\"specializationId\"] = specialiZationName;\n    } // tradeId: stateData?.tradeId,\n    // specializationId: stateData?.specializations,\n\n\n    if (stateData === null || stateData === void 0 ? void 0 : stateData.location) {\n      data[\"location\"] = stateData === null || stateData === void 0 ? void 0 : stateData.location;\n    }\n\n    if (props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.suggestionSelected) {\n      var _props$location2, _props$location2$stat;\n\n      data[\"address\"] = JSON.stringify(props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : (_props$location2$stat = _props$location2.state) === null || _props$location2$stat === void 0 ? void 0 : _props$location2$stat.suggestionSelected);\n    }\n\n    if (stateData === null || stateData === void 0 ? void 0 : (_stateData$calender = stateData.calender) === null || _stateData$calender === void 0 ? void 0 : _stateData$calender.startDate) {\n      var _stateData$calender2;\n\n      data[\"from_date\"] = moment(stateData === null || stateData === void 0 ? void 0 : (_stateData$calender2 = stateData.calender) === null || _stateData$calender2 === void 0 ? void 0 : _stateData$calender2.startDate).format(\"YYYY-MM-DD\");\n    }\n\n    if (stateData === null || stateData === void 0 ? void 0 : (_stateData$calender3 = stateData.calender) === null || _stateData$calender3 === void 0 ? void 0 : _stateData$calender3.endDate) {\n      var _stateData$calender4;\n\n      data[\"to_date\"] = moment(stateData === null || stateData === void 0 ? void 0 : (_stateData$calender4 = stateData.calender) === null || _stateData$calender4 === void 0 ? void 0 : _stateData$calender4.endDate).format(\"YYYY-MM-DD\");\n    }\n\n    let spec_count = stateData === null || stateData === void 0 ? void 0 : (_stateData$specializa = stateData.specializations) === null || _stateData$specializa === void 0 ? void 0 : _stateData$specializa.length;\n\n    if (!(data === null || data === void 0 ? void 0 : data.address) || !(data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.length)) {\n      delete data.address;\n    }\n\n    setLocalInfo({\n      name: stateData === null || stateData === void 0 ? void 0 : stateData.name,\n      // count: spec_count === 1 ? 0 : spec_count,\n      count: 0,\n      tradeId: data.tradeId,\n      specializationId: data.specializationId,\n      specializationName: data.specialiZationName,\n      location: data.location,\n      doingLocalChanges: false,\n      suggestionSelected: stateData === null || stateData === void 0 ? void 0 : stateData.suggestionSelected\n    });\n\n    if (data === null || data === void 0 ? void 0 : data.address) {\n      return;\n    } // if (!stateData?.suggestionSelected || (data?.location?.coordinates && Array.isArray(data?.location?.coordinates) && data?.location?.coordinates?.length)) {\n\n\n    props.postHomeSearchData(data);\n    const mData = {\n      timeStamp: moengage.getCurrentTimeStamp(),\n      category: props === null || props === void 0 ? void 0 : (_props$tradeListData$ = props.tradeListData.find(i => i._id === (data === null || data === void 0 ? void 0 : data.tradeId[0]))) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.trade_name,\n      ...(data.address && {\n        location: `${(_JSON$parse = JSON.parse(data.address)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.mainText} ${(_JSON$parse2 = JSON.parse(data.address)) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.secondaryText}`\n      }),\n      //'length of hire': '',\n      ...((data === null || data === void 0 ? void 0 : data.from_date) && {\n        \"start date\": data === null || data === void 0 ? void 0 : data.from_date\n      }),\n      ...((data === null || data === void 0 ? void 0 : data.to_date) && {\n        \"end date\": data === null || data === void 0 ? void 0 : data.to_date\n      })\n    };\n    moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n    mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData); // }\n  }, []);\n\n  const getTitleInfo = info => {\n    setLocalInfo(info);\n  };\n\n  const checkIfExist = data => {\n    if (data && Array.isArray(data) && (data === null || data === void 0 ? void 0 : data.length)) {\n      let element_id = data[0].tradieId;\n      let response = localData.find(item => item.tradieId === element_id);\n\n      if (response) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  };\n\n  const filterChangeHandler = (id, name, newName) => {\n    if (name === \"jobTypes\") {\n      if (sortByFilter.jobTypes[0] == id) {\n        setSortByFilter(prevData => ({ ...prevData,\n          jobTypes: []\n        }));\n      } else {\n        setSortByFilter(prevData => ({ ...prevData,\n          jobTypes: [id]\n        }));\n      }\n    } else if (name === \"specializationId\") {\n      setSortByFilter(prevData => {\n        var _prevData$specializat;\n\n        var newData = [];\n        var newNameData = [];\n\n        if (Array.isArray(prevData.specializationId) && (prevData === null || prevData === void 0 ? void 0 : (_prevData$specializat = prevData.specializationId) === null || _prevData$specializat === void 0 ? void 0 : _prevData$specializat.length)) {\n          newData = [...prevData.specializationId];\n          newNameData = [...prevData.specializationName];\n        } // if (\n        //   Array.isArray(prevData.specializationName) &&\n        //   prevData?.specializationName?.length\n        // ) {\n        //   newNameData = [...prevData.specializationName];\n        // }\n\n\n        if (sortByFilter.allSpecializationClicked) {\n          newData = [];\n          newNameData = [];\n        }\n\n        const itemIndex = newData.indexOf(id);\n        const itemnameIndex = newData.indexOf(newName);\n\n        if (newData.indexOf(id) < 0) {\n          newData.push(id);\n          newNameData.push(newName);\n        } else {\n          newData.splice(itemIndex, 1);\n          newNameData.splice(itemIndex, 1);\n        } // if (newData.indexOf(newName) < 0) {\n        //   newNameData.push(newName);\n        // } else {\n        //   newNameData.splice(itemnameIndex, 1);\n        // }\n\n\n        setSpecialiZationName(newNameData);\n        return { ...prevData,\n          specializationId: newData,\n          specializationName: newNameData,\n          allSpecializationClicked: false\n        };\n      });\n    } else if (name == \"categories\") {\n      if (sortByFilter.tradeId.length && sortByFilter.tradeId[0] == id) {\n        setSortByFilter(prevData => ({ ...prevData,\n          tradeId: [],\n          specializationId: [],\n          allSpecializationClicked: false\n        }));\n      } else {\n        setSortByFilter(prevData => ({ ...prevData,\n          tradeId: [id],\n          specializationId: [],\n          specializationName: [],\n          allSpecializationClicked: false\n        }));\n      }\n    } else if (name == \"All Clicked\") {\n      setSpecialiZationName([]);\n\n      if (sortByFilter.allSpecializationClicked) {\n        setSpecialiZationName([]);\n        setSortByFilter(prevData => ({ ...prevData,\n          allSpecializationClicked: false,\n          specializationId: [],\n          specializationName: []\n        }));\n      } else {\n        const newSpecialization = id.map(({\n          _id\n        }) => {\n          return _id;\n        });\n        setSortByFilter(prevData => ({ ...prevData,\n          allSpecializationClicked: true,\n          specializationId: newSpecialization\n        }));\n      }\n    } else if (name == \"Clear All\") {\n      setSortByFilter(prevData => ({ ...prevData,\n        allSpecializationClicked: false,\n        jobTypes: [],\n        specializationId: [],\n        specializationName: [],\n        tradeId: []\n      }));\n    }\n  };\n\n  useEffect(() => {\n    var _local_info$tradeId, _local_info_tradeId, _localTradeId;\n\n    let newProps = homeSearchJobData;\n    let propsPage = 1;\n    let propsTradeId = \"\";\n    let localTradeId = \"\";\n    let local_info = localInfo;\n    let local_info_tradeId = \"\";\n\n    if ((local_info === null || local_info === void 0 ? void 0 : local_info.tradeId) && Array.isArray(local_info === null || local_info === void 0 ? void 0 : local_info.tradeId) && (local_info === null || local_info === void 0 ? void 0 : (_local_info$tradeId = local_info.tradeId) === null || _local_info$tradeId === void 0 ? void 0 : _local_info$tradeId.length)) {\n      local_info_tradeId = local_info === null || local_info === void 0 ? void 0 : local_info.tradeId[0];\n    }\n\n    if (!hasMore) {\n      setHasMore(prev => !prev);\n    }\n\n    if (homeSearchJobData && Array.isArray(homeSearchJobData) && (homeSearchJobData === null || homeSearchJobData === void 0 ? void 0 : homeSearchJobData.length)) {\n      var _homeSearchJobData$, _homeSearchJobData$$t, _homeSearchJobData$2;\n\n      propsTradeId = (_homeSearchJobData$ = homeSearchJobData[0]) === null || _homeSearchJobData$ === void 0 ? void 0 : (_homeSearchJobData$$t = _homeSearchJobData$.tradeData[0]) === null || _homeSearchJobData$$t === void 0 ? void 0 : _homeSearchJobData$$t.tradeId;\n      propsPage = (_homeSearchJobData$2 = homeSearchJobData[0]) === null || _homeSearchJobData$2 === void 0 ? void 0 : _homeSearchJobData$2.page;\n    }\n\n    if (localData && Array.isArray(localData) && (localData === null || localData === void 0 ? void 0 : localData.length)) {\n      var _localData$, _localData$$tradeData;\n\n      localTradeId = (_localData$ = localData[0]) === null || _localData$ === void 0 ? void 0 : (_localData$$tradeData = _localData$.tradeData[0]) === null || _localData$$tradeData === void 0 ? void 0 : _localData$$tradeData.tradeId;\n    }\n\n    let cp = currentPage * 10;\n\n    if (!((_local_info_tradeId = local_info_tradeId) === null || _local_info_tradeId === void 0 ? void 0 : _local_info_tradeId.length) && ((_localTradeId = localTradeId) === null || _localTradeId === void 0 ? void 0 : _localTradeId.length)) {\n      getTitleInfo({\n        name: \"\",\n        count: 0,\n        tradeId: [],\n        specializationId: [],\n        location: null,\n        doingLocalChanges: false,\n        suggestionSelected: \"\"\n      });\n    }\n\n    if (propsPage) {\n      var _local_info_tradeId2, _localTradeId2;\n\n      if (((_local_info_tradeId2 = local_info_tradeId) === null || _local_info_tradeId2 === void 0 ? void 0 : _local_info_tradeId2.length) && ((_localTradeId2 = localTradeId) === null || _localTradeId2 === void 0 ? void 0 : _localTradeId2.length)) {\n        var _propsTradeId;\n\n        if (!((_propsTradeId = propsTradeId) === null || _propsTradeId === void 0 ? void 0 : _propsTradeId.length) && local_info_tradeId === localTradeId) {\n          return;\n        }\n      }\n\n      if (propsPage === 1 && currentPage === 1) {\n        setLocalData(newProps);\n        setCurrentPage(propsPage);\n      } else if (propsPage > 1 && currentPage > 1 && currentPage === propsPage) {\n        if (!checkIfExist(newProps)) {\n          setLocalData(prev => [...prev, ...newProps]);\n        }\n      } else if (propsPage === 1 && currentPage > 1) {\n        setLocalData(newProps);\n        setCurrentPage(propsPage);\n      } else {\n        var _local_info_tradeId3, _localTradeId3, _propsTradeId2;\n\n        if (!((_local_info_tradeId3 = local_info_tradeId) === null || _local_info_tradeId3 === void 0 ? void 0 : _local_info_tradeId3.length) && ((_localTradeId3 = localTradeId) === null || _localTradeId3 === void 0 ? void 0 : _localTradeId3.length) && ((_propsTradeId2 = propsTradeId) === null || _propsTradeId2 === void 0 ? void 0 : _propsTradeId2.length)) {\n          if (localTradeId === propsTradeId) {\n            setLocalData(newProps);\n            setCurrentPage(propsPage);\n          }\n        }\n      }\n    }\n  }, [homeSearchJobData]);\n\n  const handleChangeToggle = value => {\n    setToggleSearch(value);\n  }; // let homeSearchJobData: any = props.homeSearchJobData;\n\n\n  let local_info = localInfo;\n  let isLoading = props.isLoading;\n  console.log(specialiZationName, \"bchdbchjdbcjdcbjdbcjdcbjdc=========================================\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `top_search ${isToggle ? \"active\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(BannerSearchProps, { ...props,\n        tradeListData: props.tradeListData,\n        showOnlyTradeName: (_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : (_props$history$locati2 = _props$history$locati.state) === null || _props$history$locati2 === void 0 ? void 0 : _props$history$locati2.showOnlyTradeName,\n        getTitleInfo: getTitleInfo,\n        localInfo: localInfo,\n        handleChangeToggle: handleChangeToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_result\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row mob_srch_option\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setToggleSearch(true);\n                },\n                className: \"fill_grey_btn btn-effect\",\n                children: \"Modify Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result_heading\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_8\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: [console.log(specialiZationName.length, \"specialiZationName.length\"), specialiZationName.length ? `${specialiZationName[0]} ${(local_info === null || local_info === void 0 ? void 0 : local_info.count) > 1 ? `+${(local_info === null || local_info === void 0 ? void 0 : local_info.count) - 1}` : \"\"}` : (local_info === null || local_info === void 0 ? void 0 : local_info.name) || \"\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"count\",\n                    children: `${(localData === null || localData === void 0 ? void 0 : localData.length) || 0} result(s)`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(SearchFilters, { ...props,\n                  localInfo: localInfo,\n                  getTitleInfo: getTitleInfo,\n                  filterChangeHandler: filterChangeHandler,\n                  sortByFilter: sortByFilter,\n                  setSortByFilter: setSortByFilter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            dataLength: localData === null || localData === void 0 ? void 0 : localData.length,\n            next: () => {\n              if ((localData === null || localData === void 0 ? void 0 : localData.length) < currentPage * 10) {// setHasMore(false);\n              } else {\n                var _local_info$tradeId2, _local_info$specializ, _props$location3, _props$location3$stat, _props$location4, _props$location4$stat;\n\n                let cp = currentPage + 1;\n                setCurrentPage(prev => prev + 1);\n                let local_info = localInfo;\n                let data = {\n                  page: cp,\n                  isFiltered: false\n                };\n\n                if (local_info === null || local_info === void 0 ? void 0 : local_info.location) {\n                  data[\"location\"] = local_info === null || local_info === void 0 ? void 0 : local_info.location;\n                }\n\n                if (local_info === null || local_info === void 0 ? void 0 : (_local_info$tradeId2 = local_info.tradeId) === null || _local_info$tradeId2 === void 0 ? void 0 : _local_info$tradeId2.length) {\n                  data[\"tradeId\"] = local_info === null || local_info === void 0 ? void 0 : local_info.tradeId;\n                }\n\n                if (local_info === null || local_info === void 0 ? void 0 : (_local_info$specializ = local_info.specializationId) === null || _local_info$specializ === void 0 ? void 0 : _local_info$specializ.length) {\n                  data[\"specializationId\"] = local_info === null || local_info === void 0 ? void 0 : local_info.specializationId;\n                }\n\n                if ((props === null || props === void 0 ? void 0 : (_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : (_props$location3$stat = _props$location3.state) === null || _props$location3$stat === void 0 ? void 0 : _props$location3$stat.suggestionSelected) && (props === null || props === void 0 ? void 0 : (_props$location4 = props.location) === null || _props$location4 === void 0 ? void 0 : (_props$location4$stat = _props$location4.state) === null || _props$location4$stat === void 0 ? void 0 : _props$location4$stat.suggestionSelected) !== \"{}\") {\n                  var _props$location5, _props$location5$stat;\n\n                  data[\"address\"] = JSON.stringify(props === null || props === void 0 ? void 0 : (_props$location5 = props.location) === null || _props$location5 === void 0 ? void 0 : (_props$location5$stat = _props$location5.state) === null || _props$location5$stat === void 0 ? void 0 : _props$location5$stat.suggestionSelected);\n                }\n\n                if (local_info === null || local_info === void 0 ? void 0 : local_info.from_date) {\n                  data[\"from_date\"] = local_info === null || local_info === void 0 ? void 0 : local_info.from_date;\n                }\n\n                if (local_info === null || local_info === void 0 ? void 0 : local_info.to_date) {\n                  data[\"to_date\"] = local_info === null || local_info === void 0 ? void 0 : local_info.to_date;\n                }\n\n                if ((local_info === null || local_info === void 0 ? void 0 : local_info.sortBy) > 0) {\n                  data[\"sortBy\"] = local_info === null || local_info === void 0 ? void 0 : local_info.sortBy;\n                }\n\n                if (!(data === null || data === void 0 ? void 0 : data.hasOwnProperty(\"specializationId\"))) {\n                  data[\"isFiltered\"] = true;\n                }\n\n                props.postHomeSearchData(data);\n              }\n            },\n            hasMore: hasMore,\n            loader: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n            className: \"flex_row tradies_row\",\n            children: (localData === null || localData === void 0 ? void 0 : localData.length) ? localData.map((item, index) => /*#__PURE__*/_jsxDEV(TradieBox, {\n              item: item,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this)) : !isLoading && !(localData === null || localData === void 0 ? void 0 : localData.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_record\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"no_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: noData,\n                  alt: \"data not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchResultTradie, \"beT8iEY2+IFzuKXHYDiya60Q35U=\", false, function () {\n  return [useLocation];\n});\n\n_c = SearchResultTradie;\nexport default SearchResultTradie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResultTradie\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/searchTradieResult/searchResultTradie.tsx"],"names":["useState","useEffect","useLocation","SearchFilters","noData","BannerSearchProps","TradieBox","moment","InfiniteScroll","moengage","mixPanel","MoEConstants","SearchResultTradie","props","location","stateData","setStateData","state","specialiZationName","setSpecialiZationName","isToggle","setToggleSearch","localInfo","setLocalInfo","loading","setLoading","localData","setLocalData","currentPage","setCurrentPage","hasMore","setHasMore","sortByFilter","setSortByFilter","sortByFilterClicked","tradeId","sortChanged","specializationId","specializationName","allSpecializationClicked","homeSearchJobData","getRecentSearchList","data","page","isFiltered","specializations","suggestionSelected","JSON","stringify","calender","startDate","format","endDate","spec_count","length","address","name","count","doingLocalChanges","postHomeSearchData","mData","timeStamp","getCurrentTimeStamp","category","tradeListData","find","i","_id","trade_name","parse","mainText","secondaryText","from_date","to_date","moE_SendEvent","SEARCHED_FOR_TRADIES","mixP_SendEvent","getTitleInfo","info","checkIfExist","Array","isArray","element_id","tradieId","response","item","filterChangeHandler","id","newName","jobTypes","prevData","newData","newNameData","itemIndex","indexOf","itemnameIndex","push","splice","newSpecialization","map","newProps","propsPage","propsTradeId","localTradeId","local_info","local_info_tradeId","prev","tradeData","cp","handleChangeToggle","value","isLoading","console","log","history","showOnlyTradeName","sortBy","hasOwnProperty","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport SearchFilters from \"./searchFilters\";\nimport noData from \"../../assets/images/no-search-data.png\";\nimport BannerSearchProps from \"../shared/bannerSearchProps\";\nimport TradieBox from \"../shared/tradieBox\";\nimport moment from \"moment\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport JobTypeList from \"../home/tradieHome/components/jobTypeList\";\n\nconst SearchResultTradie = (props: any) => {\n  const location: any = useLocation();\n\n  const [stateData, setStateData] = useState(location.state);\n  const [specialiZationName, setSpecialiZationName] = useState<any>([]);\n  const [isToggle, setToggleSearch] = useState(false);\n  const [localInfo, setLocalInfo] = useState({}); // localInfo\n  const [loading, setLoading] = useState(false);\n  const [localData, setLocalData] = useState<any>([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [sortByFilter, setSortByFilter] = useState<any>({\n    sortByFilterClicked: false,\n    tradeId: [],\n    sortChanged: false,\n    specializationId: [],\n    specializationName: [],\n    allSpecializationClicked: false,\n  });\n\n  const { homeSearchJobData } = props; // props here.\n\n  useEffect(() => {\n    props.getRecentSearchList();\n\n    let data: any = {\n      page: 1,\n      isFiltered: false,\n    };\n\n    if (stateData?.tradeId) {\n      data[\"tradeId\"] = stateData?.tradeId;\n    }\n\n    if (stateData?.specializations) {\n      data[\"specializationId\"] = stateData?.specializations;\n      data[\"specializationId\"] = specialiZationName;\n    }\n    // tradeId: stateData?.tradeId,\n    // specializationId: stateData?.specializations,\n\n    if (stateData?.location) {\n      data[\"location\"] = stateData?.location;\n    }\n\n    if (props?.location?.state?.suggestionSelected) {\n      data[\"address\"] = JSON.stringify(\n        props?.location?.state?.suggestionSelected\n      );\n    }\n\n    if (stateData?.calender?.startDate) {\n      data[\"from_date\"] = moment(stateData?.calender?.startDate).format(\n        \"YYYY-MM-DD\"\n      );\n    }\n    if (stateData?.calender?.endDate) {\n      data[\"to_date\"] = moment(stateData?.calender?.endDate).format(\n        \"YYYY-MM-DD\"\n      );\n    }\n    let spec_count: any = stateData?.specializations?.length;\n\n    if (!data?.address || !data?.address?.length) {\n      delete data.address;\n    }\n\n    setLocalInfo({\n      name: stateData?.name,\n      // count: spec_count === 1 ? 0 : spec_count,\n      count: 0,\n      tradeId: data.tradeId,\n      specializationId: data.specializationId,\n      specializationName: data.specialiZationName,\n      location: data.location,\n      doingLocalChanges: false,\n      suggestionSelected: stateData?.suggestionSelected,\n    });\n\n    if (data?.address) {\n      return;\n    }\n\n    // if (!stateData?.suggestionSelected || (data?.location?.coordinates && Array.isArray(data?.location?.coordinates) && data?.location?.coordinates?.length)) {\n    props.postHomeSearchData(data);\n    const mData = {\n      timeStamp: moengage.getCurrentTimeStamp(),\n      category: props?.tradeListData.find(\n        (i: any) => i._id === data?.tradeId[0]\n      )?.trade_name,\n      ...(data.address && {\n        location: `${JSON.parse(data.address)?.mainText} ${\n          JSON.parse(data.address)?.secondaryText\n        }`,\n      }),\n      //'length of hire': '',\n      ...(data?.from_date && { \"start date\": data?.from_date }),\n      ...(data?.to_date && { \"end date\": data?.to_date }),\n    };\n    moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n    mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n    // }\n  }, []);\n\n  const getTitleInfo = (info: any) => {\n    setLocalInfo(info);\n  };\n\n  const checkIfExist = (data: any) => {\n    if (data && Array.isArray(data) && data?.length) {\n      let element_id = data[0].tradieId;\n      let response = localData.find(\n        (item: any) => item.tradieId === element_id\n      );\n      if (response) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  };\n  const filterChangeHandler = (id: any, name: string, newName?: string) => {\n    if (name === \"jobTypes\") {\n      if (sortByFilter.jobTypes[0] == id) {\n        setSortByFilter((prevData: any) => ({ ...prevData, jobTypes: [] }));\n      } else {\n        setSortByFilter((prevData: any) => ({ ...prevData, jobTypes: [id] }));\n      }\n    } else if (name === \"specializationId\") {\n      setSortByFilter((prevData: any) => {\n        var newData: any = [];\n        var newNameData: any = [];\n        if (\n          Array.isArray(prevData.specializationId) &&\n          prevData?.specializationId?.length\n        ) {\n          newData = [...prevData.specializationId];\n          newNameData = [...prevData.specializationName];\n        }\n\n        // if (\n        //   Array.isArray(prevData.specializationName) &&\n        //   prevData?.specializationName?.length\n        // ) {\n        //   newNameData = [...prevData.specializationName];\n        // }\n        if (sortByFilter.allSpecializationClicked) {\n          newData = [];\n          newNameData = [];\n        }\n        const itemIndex = newData.indexOf(id);\n        const itemnameIndex = newData.indexOf(newName);\n        if (newData.indexOf(id) < 0) {\n          newData.push(id);\n          newNameData.push(newName);\n        } else {\n          newData.splice(itemIndex, 1);\n          newNameData.splice(itemIndex, 1);\n        }\n        // if (newData.indexOf(newName) < 0) {\n        //   newNameData.push(newName);\n        // } else {\n        //   newNameData.splice(itemnameIndex, 1);\n        // }\n\n        setSpecialiZationName(newNameData);\n        return {\n          ...prevData,\n          specializationId: newData,\n          specializationName: newNameData,\n          allSpecializationClicked: false,\n        };\n      });\n    } else if (name == \"categories\") {\n      if (sortByFilter.tradeId.length && sortByFilter.tradeId[0] == id) {\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          tradeId: [],\n          specializationId: [],\n          allSpecializationClicked: false,\n        }));\n      } else {\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          tradeId: [id],\n          specializationId: [],\n          specializationName: [],\n          allSpecializationClicked: false,\n        }));\n      }\n    } else if (name == \"All Clicked\") {\n      setSpecialiZationName([]);\n      if (sortByFilter.allSpecializationClicked) {\n        setSpecialiZationName([]);\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          allSpecializationClicked: false,\n          specializationId: [],\n          specializationName: [],\n        }));\n      } else {\n        const newSpecialization = id.map(({ _id }: { _id: string }) => {\n          return _id;\n        });\n        setSortByFilter((prevData: any) => ({\n          ...prevData,\n          allSpecializationClicked: true,\n          specializationId: newSpecialization,\n        }));\n      }\n    } else if (name == \"Clear All\") {\n      setSortByFilter((prevData: any) => ({\n        ...prevData,\n        allSpecializationClicked: false,\n        jobTypes: [],\n        specializationId: [],\n        specializationName: [],\n        tradeId: [],\n      }));\n    }\n  };\n  useEffect(() => {\n    let newProps = homeSearchJobData;\n    let propsPage = 1;\n    let propsTradeId = \"\";\n    let localTradeId = \"\";\n    let local_info: any = localInfo;\n    let local_info_tradeId = \"\";\n    if (\n      local_info?.tradeId &&\n      Array.isArray(local_info?.tradeId) &&\n      local_info?.tradeId?.length\n    ) {\n      local_info_tradeId = local_info?.tradeId[0];\n    }\n\n    if (!hasMore) {\n      setHasMore((prev: any) => !prev);\n    }\n\n    if (\n      homeSearchJobData &&\n      Array.isArray(homeSearchJobData) &&\n      homeSearchJobData?.length\n    ) {\n      propsTradeId = homeSearchJobData[0]?.tradeData[0]?.tradeId;\n      propsPage = homeSearchJobData[0]?.page;\n    }\n\n    if (localData && Array.isArray(localData) && localData?.length) {\n      localTradeId = localData[0]?.tradeData[0]?.tradeId;\n    }\n\n    let cp = currentPage * 10;\n\n    if (!local_info_tradeId?.length && localTradeId?.length) {\n      getTitleInfo({\n        name: \"\",\n        count: 0,\n        tradeId: [],\n        specializationId: [],\n        location: null,\n        doingLocalChanges: false,\n        suggestionSelected: \"\",\n      });\n    }\n\n    if (propsPage) {\n      if (local_info_tradeId?.length && localTradeId?.length) {\n        if (!propsTradeId?.length && local_info_tradeId === localTradeId) {\n          return;\n        }\n      }\n\n      if (propsPage === 1 && currentPage === 1) {\n        setLocalData(newProps);\n        setCurrentPage(propsPage);\n      } else if (\n        propsPage > 1 &&\n        currentPage > 1 &&\n        currentPage === propsPage\n      ) {\n        if (!checkIfExist(newProps)) {\n          setLocalData((prev: any) => [...prev, ...newProps]);\n        }\n      } else if (propsPage === 1 && currentPage > 1) {\n        setLocalData(newProps);\n        setCurrentPage(propsPage);\n      } else {\n        if (\n          !local_info_tradeId?.length &&\n          localTradeId?.length &&\n          propsTradeId?.length\n        ) {\n          if (localTradeId === propsTradeId) {\n            setLocalData(newProps);\n            setCurrentPage(propsPage);\n          }\n        }\n      }\n    }\n  }, [homeSearchJobData]);\n\n  const handleChangeToggle = (value: any) => {\n    setToggleSearch(value);\n  };\n\n  // let homeSearchJobData: any = props.homeSearchJobData;\n  let local_info: any = localInfo;\n  let isLoading: any = props.isLoading;\n  console.log(\n    specialiZationName,\n    \"bchdbchjdbcjdcbjdbcjdcbjdc=========================================\"\n  );\n  return (\n    <div className=\"app_wrapper\">\n      <div className={`top_search ${isToggle ? \"active\" : \"\"}`}>\n        <BannerSearchProps\n          {...props}\n          tradeListData={props.tradeListData}\n          showOnlyTradeName={props.history?.location?.state?.showOnlyTradeName}\n          getTitleInfo={getTitleInfo}\n          localInfo={localInfo}\n          handleChangeToggle={handleChangeToggle}\n        />\n      </div>\n      <div className=\"search_result\">\n        <div className=\"section_wrapper\">\n          <div className=\"custom_container\">\n            <div className=\"flex_row mob_srch_option\">\n              <div className=\"flex_col_sm_6\"></div>\n              <div className=\"flex_col_sm_6 text-right\">\n                <button\n                  onClick={() => {\n                    setToggleSearch(true);\n                  }}\n                  className=\"fill_grey_btn btn-effect\"\n                >\n                  Modify Search\n                </button>\n              </div>\n            </div>\n\n            <div className=\"result_heading\">\n              <div className=\"flex_row\">\n                <div className=\"flex_col_sm_8\">\n                  <span className=\"title\">\n                    {console.log(\n                      specialiZationName.length,\n                      \"specialiZationName.length\"\n                    )}\n                    {specialiZationName.length\n                      ? `${specialiZationName[0]} ${\n                          local_info?.count > 1\n                            ? `+${local_info?.count - 1}`\n                            : \"\"\n                        }`\n                      : local_info?.name || \"\"}\n                    <span className=\"count\">\n                      {`${localData?.length || 0} result(s)`}\n                    </span>\n                  </span>\n                  <SearchFilters\n                    {...props}\n                    localInfo={localInfo}\n                    getTitleInfo={getTitleInfo}\n                    filterChangeHandler={filterChangeHandler}\n                    sortByFilter={sortByFilter}\n                    setSortByFilter={setSortByFilter}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <InfiniteScroll\n              dataLength={localData?.length}\n              next={() => {\n                if (localData?.length < currentPage * 10) {\n                  // setHasMore(false);\n                } else {\n                  let cp = currentPage + 1;\n                  setCurrentPage((prev: any) => prev + 1);\n                  let local_info: any = localInfo;\n\n                  let data: any = {\n                    page: cp,\n                    isFiltered: false,\n                  };\n\n                  if (local_info?.location) {\n                    data[\"location\"] = local_info?.location;\n                  }\n\n                  if (local_info?.tradeId?.length) {\n                    data[\"tradeId\"] = local_info?.tradeId;\n                  }\n\n                  if (local_info?.specializationId?.length) {\n                    data[\"specializationId\"] = local_info?.specializationId;\n                  }\n\n                  if (\n                    props?.location?.state?.suggestionSelected &&\n                    props?.location?.state?.suggestionSelected !== \"{}\"\n                  ) {\n                    data[\"address\"] = JSON.stringify(\n                      props?.location?.state?.suggestionSelected\n                    );\n                  }\n\n                  if (local_info?.from_date) {\n                    data[\"from_date\"] = local_info?.from_date;\n                  }\n\n                  if (local_info?.to_date) {\n                    data[\"to_date\"] = local_info?.to_date;\n                  }\n\n                  if (local_info?.sortBy > 0) {\n                    data[\"sortBy\"] = local_info?.sortBy;\n                  }\n\n                  if (!data?.hasOwnProperty(\"specializationId\")) {\n                    data[\"isFiltered\"] = true;\n                  }\n\n                  props.postHomeSearchData(data);\n                }\n              }}\n              hasMore={hasMore}\n              loader={<></>}\n              className=\"flex_row tradies_row\"\n            >\n              {localData?.length ? (\n                localData.map((item: any, index: number) => (\n                  <TradieBox item={item} index={index} />\n                ))\n              ) : !isLoading && !localData?.length ? (\n                <div className=\"no_record\">\n                  <figure className=\"no_img\">\n                    <img src={noData} alt=\"data not found\" />\n                  </figure>\n                  <span>{\"No Data Found\"}</span>\n                </div>\n              ) : null}\n            </InfiniteScroll>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResultTradie;\n"]},"metadata":{},"sourceType":"module"}