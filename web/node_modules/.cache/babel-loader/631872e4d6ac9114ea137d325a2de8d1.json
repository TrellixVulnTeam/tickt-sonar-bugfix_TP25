{"ast":null,"code":"import * as actionTypes from './constants';\nimport { store } from '../../App';\nexport const setLoading = isLoading => {\n  store.dispatch({\n    type: actionTypes.SET_LOADING,\n    payload: isLoading\n  });\n};\nexport const setSkeletonLoading = isSkeletonLoading => {\n  store.dispatch({\n    type: actionTypes.SET_SKELETON_LOADING,\n    payload: isSkeletonLoading\n  });\n}; // showToast - argument remove if not needed\n\nexport const setShowToast = (showToast, toastMessage = undefined, toastType = undefined) => {\n  store.dispatch({\n    type: actionTypes.SHOW_HIDE_TOAST,\n    showToast,\n    toastType,\n    toastMessage\n  });\n};\nexport const setShowNotification = (showNotification, data = undefined) => {\n  store.dispatch({\n    type: actionTypes.SHOW_HIDE_NOTIFICATION,\n    showNotification,\n    data\n  });\n};\nexport const unReadMessageCount = data => {\n  store.dispatch({\n    type: actionTypes.SHOW_HIDE_NOTIFICATION,\n    showNotification,\n    data\n  });\n};","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/redux/common/actions.ts"],"names":["actionTypes","store","setLoading","isLoading","dispatch","type","SET_LOADING","payload","setSkeletonLoading","isSkeletonLoading","SET_SKELETON_LOADING","setShowToast","showToast","toastMessage","undefined","toastType","SHOW_HIDE_TOAST","setShowNotification","showNotification","data","SHOW_HIDE_NOTIFICATION","unReadMessageCount"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,aAA7B;AACA,SAAQC,KAAR,QAAoB,WAApB;AAEA,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAwB;AAC9CF,EAAAA,KAAK,CAACG,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAEL,WAAW,CAACM,WAAnB;AAAgCC,IAAAA,OAAO,EAAEJ;AAAzC,GAAf;AACH,CAFM;AAIP,OAAO,MAAMK,kBAAkB,GAAIC,iBAAD,IAAgC;AAC9DR,EAAAA,KAAK,CAACG,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAEL,WAAW,CAACU,oBAAnB;AAAyCH,IAAAA,OAAO,EAAEE;AAAlD,GAAf;AACH,CAFM,C,CAIP;;AACA,OAAO,MAAME,YAAY,GAAG,CAACC,SAAD,EAAqBC,YAAgC,GAAGC,SAAxD,EAAmEC,SAA6B,GAAGD,SAAnG,KAAiH;AACzIb,EAAAA,KAAK,CAACG,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAEL,WAAW,CAACgB,eAAnB;AAAoCJ,IAAAA,SAApC;AAA+CG,IAAAA,SAA/C;AAA0DF,IAAAA;AAA1D,GAAf;AACH,CAFM;AAIP,OAAO,MAAMI,mBAAmB,GAAG,CAACC,gBAAD,EAA4BC,IAAS,GAAGL,SAAxC,KAAsD;AACrFb,EAAAA,KAAK,CAACG,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAEL,WAAW,CAACoB,sBAAnB;AAA2CF,IAAAA,gBAA3C;AAA6DC,IAAAA;AAA7D,GAAf;AACH,CAFM;AAIP,OAAO,MAAME,kBAAkB,GAAEF,IAAD,IAAY;AACxClB,EAAAA,KAAK,CAACG,QAAN,CAAe;AAACC,IAAAA,IAAI,EAAEL,WAAW,CAACoB,sBAAnB;AAA2CF,IAAAA,gBAA3C;AAA6DC,IAAAA;AAA7D,GAAf;AACH,CAFM","sourcesContent":["import * as actionTypes from './constants';\nimport {store} from '../../App';\n\nexport const setLoading = (isLoading: boolean) => {\n    store.dispatch({type: actionTypes.SET_LOADING, payload: isLoading})\n};\n\nexport const setSkeletonLoading = (isSkeletonLoading: boolean) => {\n    store.dispatch({type: actionTypes.SET_SKELETON_LOADING, payload: isSkeletonLoading})\n};\n\n// showToast - argument remove if not needed\nexport const setShowToast = (showToast: boolean, toastMessage: string | undefined = undefined, toastType: string | undefined = undefined) => {\n    store.dispatch({type: actionTypes.SHOW_HIDE_TOAST, showToast, toastType, toastMessage})\n};\n\nexport const setShowNotification = (showNotification: boolean, data: any = undefined) => {\n    store.dispatch({type: actionTypes.SHOW_HIDE_NOTIFICATION, showNotification, data})\n};\n\nexport const unReadMessageCount=(data:any)=>{\n    store.dispatch({type: actionTypes.SHOW_HIDE_NOTIFICATION, showNotification, data})\n}"]},"metadata":{},"sourceType":"module"}