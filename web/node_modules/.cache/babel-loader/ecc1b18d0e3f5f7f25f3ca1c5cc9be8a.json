{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/activeJobs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport approved from \"../../../assets/images/approved.png\";\nimport waiting from \"../../../assets/images/exclamation.png\";\nimport MarkMilestones from \"./markMilestones\";\nimport { withRouter } from \"react-router-dom\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport { renderTime } from \"../../../utils/common\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActiveJobs = ({\n  setJobLabel,\n  activeType,\n  history,\n  dataItems,\n  jobType,\n  isLoading,\n  enableEditMilestone,\n  enableLodgeDispute,\n  enableMakMilestone,\n  enableCancelJob,\n  globalJobId,\n  setToggleActiveToFalse,\n  toggleClearActiveChecks,\n  recallHeaderNotification\n}) => {\n  _s();\n\n  let listData = dataItems;\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [localState, setLocalState] = useState(false);\n\n  const resetStateLocal = isTrue => {\n    setJobLabel(activeType);\n    setLocalState(false);\n\n    if (isTrue) {\n      history.push(\"/decline-milestone-success\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"here!\");\n  }, [jobType]);\n  useEffect(() => {\n    if (toggleClearActiveChecks === true) {\n      setSelectedIndex(null);\n      setLocalState(false);\n      setToggleActiveToFalse();\n    }\n  }, [toggleClearActiveChecks]);\n  useEffect(() => {\n    var _Object$keys;\n\n    let filteredItem = {};\n    listData.forEach((item_, index) => {\n      if (item_.jobId === globalJobId) {\n        filteredItem = { ...item_,\n          index\n        };\n      }\n    });\n\n    if ((_Object$keys = Object.keys(filteredItem)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) {\n      var _filteredItem;\n\n      setSelectedIndex((_filteredItem = filteredItem) === null || _filteredItem === void 0 ? void 0 : _filteredItem.index);\n      setLocalState(true);\n    }\n  }, [enableEditMilestone, enableLodgeDispute, enableCancelJob, enableMakMilestone]);\n\n  if (localState && selectedIndex !== null) {\n    console.log({\n      localState,\n      selectedIndex,\n      listData\n    });\n    return /*#__PURE__*/_jsxDEV(MarkMilestones, {\n      resetStateLocal: resetStateLocal,\n      selectedIndex: selectedIndex,\n      listData: listData,\n      enableEditMilestone: enableEditMilestone,\n      enableLodgeDispute: enableLodgeDispute,\n      enableCancelJob: enableCancelJob,\n      recallHeaderNotification: recallHeaderNotification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (isLoading || listData == undefined) {\n    return null;\n  }\n\n  console.log({\n    listData,\n    isLoading\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sub_title\",\n      children: [jobType.charAt(0).toUpperCase() + jobType.slice(1), \" Jobs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row tradies_row\",\n      children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n        amount,\n        durations,\n        jobId,\n        jobName,\n        fromDate,\n        toDate,\n        milestoneNumber,\n        status,\n        timeLeft,\n        total,\n        quote,\n        totalMilestones,\n        tradeName,\n        tradieId,\n        tradeSelectedUrl,\n        tradieImage,\n        mathrandom\n      }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card\",\n          \"data-aos\": \"fade-in\",\n          \"data-aos-delay\": \"250\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"more_detail circle\",\n            onClick: () => {\n              setLocalState(true);\n              setSelectedIndex(index);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tradeSelectedUrl || jobTypePlaceholder,\n                onError: e => {\n                  var _e$target, _e$target2;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                    e.target.src = jobTypePlaceholder;\n                  }\n                },\n                alt: \"traide-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: tradeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"\",\n                children: total.toUpperCase() == \"VIEW QUOTE\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"view_quote\",\n                  onClick: () => {\n                    let quoteId = null;\n\n                    if (quote && quote[0] && quote[0]._id) {\n                      quoteId = quote[0]._id;\n                      history.push(`/jobs?active=active&viewQuotes=true&jobId=${jobId}&id=${quoteId}`);\n                      setJobLabel(\"quotes\");\n                    }\n                  },\n                  children: total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: renderTime(fromDate, toDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: timeLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_progress_wrap\",\n            id: \"scroll-progress-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completed-digit\",\n                id: \"digit-progress\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: `Job Milestones ${milestoneNumber} `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 27\n                }, this), `of ${totalMilestones}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"approval_info\",\n                children: [status.toUpperCase() === \"APPROVED\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: approved,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 29\n                }, this), [\"QUOTE REQUEST ACCEPTED\", \"QUOTE ACCEPTED\"].includes(status.toUpperCase()) && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: approved,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 29\n                }, this), (status.toUpperCase() === \"NEEDS APPROVAL\" || status.toUpperCase() === \"NEED APPROVAL\") && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: waiting,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 29\n                }, this), status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress_bar\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"done_progress\",\n                  id: \"progress-bar\",\n                  type: \"range\",\n                  min: \"0\",\n                  value: milestoneNumber / totalMilestones * 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 23\n            }, this), (status === \"NEEDS APPROVAL\" || status === \"NEED APPROVAL\" || status === \"need approval\") && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setLocalState(true);\n                setSelectedIndex(index);\n              },\n              className: \"fill_grey_btn full_btn btn-effect\",\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record  m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noDataFound,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No Data Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }, this) // <div className=\"no_record  m-t-vh\">\n      //   <figure>\n      //     <figure className=\"no_img\">\n      //       <img src={activeJobs} alt=\"data not found\" />\n      //     </figure>\n      //   </figure>\n      //   <span className=\"empty_screen_text\">\n      //     You don't have any active job yet\n      //   </span>\n      //   <button\n      //     className=\"empty_screen_button\"\n      //     onClick={() => history.push(\"/post-new-job\")}\n      //   >\n      //     Post a job\n      //   </button>\n      // </div>\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActiveJobs, \"BT8o9hxHkLwAgLmuAlbANCsNvjk=\");\n\n_c = ActiveJobs;\nexport default _c2 = withRouter(ActiveJobs);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActiveJobs\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/activeJobs.tsx"],"names":["React","useState","useEffect","approved","waiting","MarkMilestones","withRouter","jobTypePlaceholder","renderTime","noDataFound","ActiveJobs","setJobLabel","activeType","history","dataItems","jobType","isLoading","enableEditMilestone","enableLodgeDispute","enableMakMilestone","enableCancelJob","globalJobId","setToggleActiveToFalse","toggleClearActiveChecks","recallHeaderNotification","listData","selectedIndex","setSelectedIndex","localState","setLocalState","resetStateLocal","isTrue","push","console","log","filteredItem","forEach","item_","index","jobId","Object","keys","length","undefined","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","status","timeLeft","total","quote","totalMilestones","tradeName","tradieId","tradeSelectedUrl","tradieImage","mathrandom","e","target","onerror","src","quoteId","_id","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport approved from \"../../../assets/images/approved.png\";\nimport waiting from \"../../../assets/images/exclamation.png\";\nimport MarkMilestones from \"./markMilestones\";\nimport { withRouter } from \"react-router-dom\";\nimport activeJobs from \"../../../assets/images/activeJobs.png\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport { renderTime } from \"../../../utils/common\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\ninterface Active {\n  amount: any;\n  durations: any;\n  jobId: any;\n  jobName: any;\n  fromDate: any;\n  toDate: any;\n  milestoneNumber: any;\n  specializationId: any;\n  specializationName: any;\n  status: any;\n  timeLeft: any;\n  locationName: any;\n  total: any;\n  quote: any;\n  totalmem: any;\n  totalMilestones: any;\n  tradieListData: any;\n  tradeName: any;\n  location: any;\n  tradieId: any;\n  tradieImage: any;\n  tradeSelectedUrl: any;\n  activeType: any;\n  setJobLabel: (item: any) => void;\n  enableEditMilestone: boolean;\n  enableLodgeDispute: boolean;\n  enableCancelJob: boolean;\n  globalJobId: string;\n  mathrandom?: any;\n  setToggleActiveToFalse: any;\n  toggleClearActiveChecks: () => void;\n}\n\nconst ActiveJobs = ({\n  setJobLabel,\n  activeType,\n  history,\n  dataItems,\n  jobType,\n  isLoading,\n  enableEditMilestone,\n  enableLodgeDispute,\n  enableMakMilestone,\n  enableCancelJob,\n  globalJobId,\n  setToggleActiveToFalse,\n  toggleClearActiveChecks,\n  recallHeaderNotification,\n}: any) => {\n  let listData: any = dataItems;\n  const [selectedIndex, setSelectedIndex] = useState<any>(null);\n  const [localState, setLocalState] = useState(false);\n\n  const resetStateLocal = (isTrue: boolean) => {\n    setJobLabel(activeType);\n    setLocalState(false);\n    if (isTrue) {\n      history.push(\"/decline-milestone-success\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"here!\");\n  }, [jobType]);\n\n  useEffect(() => {\n    if (toggleClearActiveChecks === true) {\n      setSelectedIndex(null);\n      setLocalState(false);\n      setToggleActiveToFalse();\n    }\n  }, [toggleClearActiveChecks]);\n\n  useEffect(() => {\n    let filteredItem: any = {};\n    listData.forEach((item_: any, index: any) => {\n      if (item_.jobId === globalJobId) {\n        filteredItem = {\n          ...item_,\n          index,\n        };\n      }\n    });\n\n    if (Object.keys(filteredItem)?.length) {\n      setSelectedIndex(filteredItem?.index);\n      setLocalState(true);\n    }\n  }, [\n    enableEditMilestone,\n    enableLodgeDispute,\n    enableCancelJob,\n    enableMakMilestone,\n  ]);\n\n  if (localState && selectedIndex !== null) {\n    console.log({ localState, selectedIndex, listData });\n    return (\n      <MarkMilestones\n        resetStateLocal={resetStateLocal}\n        selectedIndex={selectedIndex}\n        listData={listData}\n        enableEditMilestone={enableEditMilestone}\n        enableLodgeDispute={enableLodgeDispute}\n        enableCancelJob={enableCancelJob}\n        recallHeaderNotification={recallHeaderNotification}\n      />\n    );\n  }\n\n  if (isLoading || listData == undefined) {\n    return null;\n  }\n\n  console.log({ listData, isLoading });\n  return (\n    <React.Fragment>\n      <span className=\"sub_title\">\n        {jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n      </span>\n      <div className=\"flex_row tradies_row\">\n        {listData?.length\n          ? listData.map(\n              (\n                {\n                  amount,\n                  durations,\n                  jobId,\n                  jobName,\n                  fromDate,\n                  toDate,\n                  milestoneNumber,\n                  status,\n                  timeLeft,\n                  total,\n                  quote,\n                  totalMilestones,\n                  tradeName,\n                  tradieId,\n                  tradeSelectedUrl,\n                  tradieImage,\n                  mathrandom,\n                }: Active,\n                index: number\n              ) => (\n                <div className=\"flex_col_sm_6\">\n                  <div\n                    className=\"tradie_card\"\n                    data-aos=\"fade-in\"\n                    data-aos-delay=\"250\"\n                    data-aos-duration=\"1000\"\n                  >\n                    <span\n                      className=\"more_detail circle\"\n                      onClick={() => {\n                        setLocalState(true);\n                        setSelectedIndex(index);\n                      }}\n                    ></span>\n                    <div className=\"user_wrap\">\n                      <figure className=\"u_img icon\">\n                        <img\n                          src={tradeSelectedUrl || jobTypePlaceholder}\n                          onError={(e: any) => {\n                            if (e?.target?.onerror) {\n                              e.target.onerror = null;\n                            }\n                            if (e?.target?.src) {\n                              e.target.src = jobTypePlaceholder;\n                            }\n                          }}\n                          alt=\"traide-img\"\n                        />\n                      </figure>\n                      <div className=\"details\">\n                        <span className=\"name\">{tradeName}</span>\n                        <p className=\"commn_para\">{jobName}</p>\n                      </div>\n                    </div>\n                    <div className=\"job_info\">\n                      <ul>\n                        <li className=\"icon dollar\">{amount}</li>\n                        <li className=\"\">\n                          {total.toUpperCase() == \"VIEW QUOTE\" ? (\n                            <span\n                              className=\"view_quote\"\n                              onClick={() => {\n                                let quoteId = null;\n                                if (quote && quote[0] && quote[0]._id) {\n                                  quoteId = quote[0]._id;\n                                  history.push(\n                                    `/jobs?active=active&viewQuotes=true&jobId=${jobId}&id=${quoteId}`\n                                  );\n                                  setJobLabel(\"quotes\");\n                                }\n                              }}\n                            >\n                              {total}\n                            </span>\n                          ) : (\n                            <span>{total}</span>\n                          )}\n                        </li>\n                        <li className=\"icon calendar\">\n                          {/* {durations} */}\n                          {renderTime(fromDate, toDate)}\n                        </li>\n                        <li className=\"\">\n                          <span>{timeLeft}</span>\n                        </li>\n                      </ul>\n                    </div>\n                    <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                      <div className=\"progress_wrapper\">\n                        <span className=\"completed-digit\" id=\"digit-progress\">\n                          <b>{`Job Milestones ${milestoneNumber} `}</b>\n                          {`of ${totalMilestones}`}\n                        </span>\n                        <span className=\"approval_info\">\n                          {status.toUpperCase() === \"APPROVED\" && (\n                            <img src={approved} alt=\"icon\" />\n                          )}\n                          {[\n                            \"QUOTE REQUEST ACCEPTED\",\n                            \"QUOTE ACCEPTED\",\n                          ].includes(status.toUpperCase()) && (\n                            <img src={approved} alt=\"icon\" />\n                          )}\n                          {(status.toUpperCase() === \"NEEDS APPROVAL\" ||\n                            status.toUpperCase() === \"NEED APPROVAL\") && (\n                            <img src={waiting} alt=\"icon\" />\n                          )}\n                          {status}\n                        </span>\n                        <span className=\"progress_bar\">\n                          <input\n                            className=\"done_progress\"\n                            id=\"progress-bar\"\n                            type=\"range\"\n                            min=\"0\"\n                            value={(milestoneNumber / totalMilestones) * 100}\n                          />\n                        </span>\n                      </div>\n                      {(status === \"NEEDS APPROVAL\" ||\n                        status === \"NEED APPROVAL\" ||\n                        status === \"need approval\") && (\n                        <button\n                          onClick={() => {\n                            setLocalState(true);\n                            setSelectedIndex(index);\n                          }}\n                          className=\"fill_grey_btn full_btn btn-effect\"\n                        >\n                          {\"Approve\"}\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )\n            )\n          : !isLoading && (\n              <div className=\"no_record  m-t-vh\">\n                <figure className=\"no_img\">\n                  <img src={noDataFound} alt=\"data not found\" />\n                </figure>\n                <span>{\"No Data Found\"}</span>\n              </div>\n\n              // <div className=\"no_record  m-t-vh\">\n              //   <figure>\n              //     <figure className=\"no_img\">\n              //       <img src={activeJobs} alt=\"data not found\" />\n              //     </figure>\n              //   </figure>\n\n              //   <span className=\"empty_screen_text\">\n              //     You don't have any active job yet\n              //   </span>\n              //   <button\n              //     className=\"empty_screen_button\"\n              //     onClick={() => history.push(\"/post-new-job\")}\n              //   >\n              //     Post a job\n              //   </button>\n              // </div>\n            )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(ActiveJobs);\n"]},"metadata":{},"sourceType":"module"}