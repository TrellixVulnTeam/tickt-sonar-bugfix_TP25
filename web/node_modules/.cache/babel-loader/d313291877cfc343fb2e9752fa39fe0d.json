{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/phoneNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { checkMobileNumber } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { setShowToast } from '../../../redux/common/actions';\nimport NumberFormat from \"react-number-format\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneNumber = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [mobileNumb, setMobileNumb] = useState(props.mobileNumber);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!mobileNumb) {\n      newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n    } else {\n      const phoneRegex = new RegExp(regex.mobile);\n\n      if (!phoneRegex.test(mobileNumb.replaceAll(' ', ''))) {\n        newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr;\n      }\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const res = await checkMobileNumber(mobileNumb.replaceAll(' ', ''));\n      (res === null || res === void 0 ? void 0 : res.isProfileCompleted) && setShowToast(true, res.message);\n\n      if (!res.isProfileCompleted && res.success) {\n        const mobileNumber = mobileNumb.replaceAll(' ', '');\n        props.updateSteps(props.step + 1, {\n          mobileNumber\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: [/*#__PURE__*/_jsxDEV(NumberFormat, {\n            type: \"text\",\n            className: \"detect_input_ltr\",\n            placeholder: \"400 123 456\",\n            value: mobileNumb,\n            onValueChange: ({\n              value\n            }) => {\n              setMobileNumb(value);\n            },\n            format: \"### ### ###\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"detect_icon_ltr\",\n            children: \"+61\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), !!errors.mobileNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhoneNumber, \"tr1LzJ2q3ytvW0mpZ2oSoLVO1HQ=\");\n\n_c = PhoneNumber;\nexport default PhoneNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneNumber\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/phoneNumber.tsx"],"names":["React","useState","checkMobileNumber","Constants","regex","setShowToast","NumberFormat","PhoneNumber","props","errors","setErrors","mobileNumb","setMobileNumb","mobileNumber","validateForm","newErrors","errorStrings","phoneNumberEmpty","phoneRegex","RegExp","mobile","test","replaceAll","phoneNumberErr","Object","keys","length","onSubmit","e","preventDefault","res","isProfileCompleted","message","success","updateSteps","step","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;AAQA,MAAMC,WAAW,GAAIC,KAAD,IAAsB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAM,EAAN,CAApC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAMO,KAAK,CAACK,YAAZ,CAA5C;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,SAAc,GAAG,EAAvB;;AACA,QAAI,CAACJ,UAAL,EAAiB;AACbI,MAAAA,SAAS,CAACF,YAAV,GAAyBV,SAAS,CAACa,YAAV,CAAuBC,gBAAhD;AACH,KAFD,MAEO;AACH,YAAMC,UAAU,GAAG,IAAIC,MAAJ,CAAWf,KAAK,CAACgB,MAAjB,CAAnB;;AACA,UAAI,CAACF,UAAU,CAACG,IAAX,CAAgBV,UAAU,CAACW,UAAX,CAAsB,GAAtB,EAA2B,EAA3B,CAAhB,CAAL,EAAsD;AAClDP,QAAAA,SAAS,CAACF,YAAV,GAAyBV,SAAS,CAACa,YAAV,CAAuBO,cAAhD;AACH;AACJ;;AACDb,IAAAA,SAAS,CAACK,SAAD,CAAT;AACA,WAAO,CAACS,MAAM,CAACC,IAAP,CAAYV,SAAZ,EAAuBW,MAA/B;AACH,GAZD;;AAcA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAkB;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIf,YAAY,EAAhB,EAAoB;AAChB,YAAMgB,GAAQ,GAAG,MAAM5B,iBAAiB,CAACS,UAAU,CAACW,UAAX,CAAsB,GAAtB,EAA2B,EAA3B,CAAD,CAAxC;AACA,OAAAQ,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,kBAAL,KAA2B1B,YAAY,CAAC,IAAD,EAAOyB,GAAG,CAACE,OAAX,CAAvC;;AACA,UAAI,CAACF,GAAG,CAACC,kBAAL,IAA2BD,GAAG,CAACG,OAAnC,EAA4C;AACxC,cAAMpB,YAAY,GAAGF,UAAU,CAACW,UAAX,CAAsB,GAAtB,EAA2B,EAA3B,CAArB;AACAd,QAAAA,KAAK,CAAC0B,WAAN,CAAkB1B,KAAK,CAAC2B,IAAN,GAAa,CAA/B,EAAkC;AAAEtB,UAAAA;AAAF,SAAlC;AACH;AACJ;AACJ,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEc,QAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCAEI,QAAC,YAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,SAAS,EAAC,kBAFd;AAGI,YAAA,WAAW,EAAC,aAHhB;AAII,YAAA,KAAK,EAAEhB,UAJX;AAKI,YAAA,aAAa,EAAE,CAAC;AAAEyB,cAAAA;AAAF,aAAD,KAAe;AAC1BxB,cAAAA,aAAa,CAACwB,KAAD,CAAb;AACH,aAPL;AAQI,YAAA,MAAM,EAAC;AARX;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAYI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAgBK,CAAC,CAAC3B,MAAM,CAACI,YAAT,iBAAyB;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBAA6BJ,MAAM,CAACI;AAApC;AAAA;AAAA;AAAA;AAAA,gBAhB9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAoBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA3DD;;GAAMN,W;;KAAAA,W;AA6DN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { checkMobileNumber } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { setShowToast } from '../../../redux/common/actions';\nimport NumberFormat from \"react-number-format\";\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void\n    step: number\n    history?: any\n    mobileNumber: any,\n}\n\nconst PhoneNumber = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [mobileNumb, setMobileNumb] = useState<any>(props.mobileNumber)\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!mobileNumb) {\n            newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n        } else {\n            const phoneRegex = new RegExp(regex.mobile);\n            if (!phoneRegex.test(mobileNumb.replaceAll(' ', ''))) {\n                newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const res: any = await checkMobileNumber(mobileNumb.replaceAll(' ', ''))\n            res?.isProfileCompleted && setShowToast(true, res.message);\n            if (!res.isProfileCompleted && res.success) {\n                const mobileNumber = mobileNumb.replaceAll(' ', '');\n                props.updateSteps(props.step + 1, { mobileNumber })\n            }\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Phone Number</label>\n                    <div className=\"text_field\">\n                        {/* <input type=\"text\" className=\"detect_input_ltr\" placeholder=\"400 123 456\" value={mobileNumb} onChange={changeHandler} maxLength={11} /> */}\n                        <NumberFormat\n                            type=\"text\"\n                            className=\"detect_input_ltr\"\n                            placeholder=\"400 123 456\"\n                            value={mobileNumb}\n                            onValueChange={({ value }) => {\n                                setMobileNumb(value);\n                            }}\n                            format=\"### ### ###\"\n                        />\n                        <span className=\"detect_icon_ltr\">+61</span>\n                    </div>\n                    {!!errors.mobileNumber && <span className=\"error_msg\">{errors.mobileNumber}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nexport default PhoneNumber\n\n"]},"metadata":{},"sourceType":"module"}