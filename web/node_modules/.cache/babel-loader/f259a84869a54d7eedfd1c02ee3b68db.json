{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/milestoneApprove.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DeclineMilestone from './declineMilestone';\nimport { milestoneAcceptOrDecline } from '../../../redux/homeSearch/actions';\nimport FixedRate from './confirmAndPay/fixedRate';\nimport { withRouter } from 'react-router-dom'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react'; //@ts-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MilestoneApprove = props => {\n  _s();\n\n  const {\n    backToScreen,\n    data,\n    resetStateLocal\n  } = props;\n  const [isToggle, setToggle] = useState(false);\n  const [IsToggleAccept, setToggleAccept] = useState(false);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [loadingTrue, setLoadingTrue] = useState(false);\n\n  if (data) {\n    var _data$selectedItem, _data$selectedItem2, _data$selectedMile, _data$selectedMile2, _data$selectedMile3, _data$itemDetails, _data$selectedMilesto;\n\n    let jobName = data === null || data === void 0 ? void 0 : (_data$selectedItem = data.selectedItem) === null || _data$selectedItem === void 0 ? void 0 : _data$selectedItem.jobName;\n    let jobId = data === null || data === void 0 ? void 0 : (_data$selectedItem2 = data.selectedItem) === null || _data$selectedItem2 === void 0 ? void 0 : _data$selectedItem2.jobId;\n    let description = data === null || data === void 0 ? void 0 : (_data$selectedMile = data.selectedMile) === null || _data$selectedMile === void 0 ? void 0 : _data$selectedMile.description;\n    let hoursWorked = data === null || data === void 0 ? void 0 : (_data$selectedMile2 = data.selectedMile) === null || _data$selectedMile2 === void 0 ? void 0 : _data$selectedMile2.hoursWorked;\n    let images = data === null || data === void 0 ? void 0 : (_data$selectedMile3 = data.selectedMile) === null || _data$selectedMile3 === void 0 ? void 0 : _data$selectedMile3.images;\n    let milestones = data === null || data === void 0 ? void 0 : (_data$itemDetails = data.itemDetails) === null || _data$itemDetails === void 0 ? void 0 : _data$itemDetails.milestones;\n    let index = data === null || data === void 0 ? void 0 : (_data$selectedMilesto = data.selectedMilestoneIndex) === null || _data$selectedMilesto === void 0 ? void 0 : _data$selectedMilesto.index; // let {\n    //     selectedMilestoneIndex: { index },\n    //     itemDetails: { milestones },\n    //     selectedMile: { description, hoursWorked, images },\n    //     selectedItem: { jobName, jobId }\n    // } = data;\n\n    let item = milestones[index];\n\n    const onSubmitAccept = async data => {\n      let total = data === null || data === void 0 ? void 0 : data.total;\n      let data_ = {\n        \"status\": 1,\n        \"jobId\": jobId,\n        \"milestoneId\": item === null || item === void 0 ? void 0 : item.milestoneId,\n        \"paymentMethodId\": data === null || data === void 0 ? void 0 : data.cardId,\n        \"milestoneAmount\": data === null || data === void 0 ? void 0 : data.milestoneAmount,\n        \"amount\": total.replace(\"$\", \"\")\n      };\n      console.log({\n        data,\n        data_\n      });\n      let response = await milestoneAcceptOrDecline(data_);\n\n      if (response === null || response === void 0 ? void 0 : response.success) {\n        resetStateLocal();\n        props.history.push('/need-approval-success');\n      }\n    };\n\n    const toggleBack = () => {\n      setToggle(false);\n      setToggleAccept(false);\n    };\n\n    if (IsToggleAccept) {\n      return /*#__PURE__*/_jsxDEV(FixedRate, {\n        jobName: jobName,\n        data: props.data,\n        toggleBack: toggleBack,\n        onSubmitAccept: onSubmitAccept\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (isToggle) {\n      return /*#__PURE__*/_jsxDEV(DeclineMilestone, {\n        milestoneAcceptOrDecline: milestoneAcceptOrDecline,\n        jobId: jobId,\n        jobName: jobName,\n        toggleBack: toggleBack,\n        resetStateLocal: resetStateLocal,\n        milestoneId: item === null || item === void 0 ? void 0 : item.milestoneId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    }\n\n    const renderFilteredItems = () => {\n      let sources = [];\n      let types = [];\n\n      if (images === null || images === void 0 ? void 0 : images.length) {\n        images.forEach(item => {\n          if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n            sources.push(item.link);\n            types.push('video');\n          } else if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n            sources.push(item.link);\n            types.push('image');\n          } else {\n            sources.push(item);\n            types.push('image');\n          }\n        });\n      }\n\n      return {\n        sources,\n        types\n      };\n    };\n\n    const {\n      sources,\n      types\n    } = renderFilteredItems();\n\n    const setItemToggle = index => {\n      setToggler(prev => !prev);\n      setSelectSlide(index + 1);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relate\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              backToScreen();\n            },\n            className: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: jobName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: \"Milestone details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: [item === null || item === void 0 ? void 0 : item.milestoneName, \" complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n          toggler: toggler,\n          slide: selectedSlide,\n          sources: sources,\n          types: types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), images && Array.isArray(images) && (images === null || images === void 0 ? void 0 : images.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_img_video\",\n          children: images.map((media_item, index) => /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"img_video\",\n            children: (media_item === null || media_item === void 0 ? void 0 : media_item.mediaType) == 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => {\n                setItemToggle(index);\n              },\n              \"async-src\": media_item === null || media_item === void 0 ? void 0 : media_item.link,\n              decoding: \"async\",\n              loading: \"lazy\",\n              src: media_item === null || media_item === void 0 ? void 0 : media_item.link,\n              alt: \"media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 41\n            }, this) : (media_item === null || media_item === void 0 ? void 0 : media_item.mediaType) == 2 ? /*#__PURE__*/_jsxDEV(\"video\", {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => {\n                setItemToggle(index);\n              },\n              src: media_item === null || media_item === void 0 ? void 0 : media_item.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => {\n                  setItemToggle(index);\n                },\n                onLoad: () => {\n                  setLoadingTrue(true);\n                },\n                src: media_item,\n                \"async-src\": media_item,\n                decoding: \"async\",\n                loading: \"lazy\",\n                alt: \"media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para\",\n            children: description || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: \"Hours worked in this milestone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: `${hoursWorked || 0} hours`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setToggleAccept(true);\n            },\n            className: \"fill_btn full_btn\",\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setToggle(true);\n            },\n            className: \"fill_grey_btn full_btn btn-effect mt-15\",\n            children: 'Decline'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_s(MilestoneApprove, \"VfWzldoi9E9sdSmo/Rob0hDkXDQ=\");\n\n_c = MilestoneApprove;\nexport default _c2 = withRouter(MilestoneApprove);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MilestoneApprove\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/milestoneApprove.tsx"],"names":["React","useState","DeclineMilestone","milestoneAcceptOrDecline","FixedRate","withRouter","FsLightbox","MilestoneApprove","props","backToScreen","data","resetStateLocal","isToggle","setToggle","IsToggleAccept","setToggleAccept","toggler","setToggler","selectedSlide","setSelectSlide","loadingTrue","setLoadingTrue","jobName","selectedItem","jobId","description","selectedMile","hoursWorked","images","milestones","itemDetails","index","selectedMilestoneIndex","item","onSubmitAccept","total","data_","milestoneId","cardId","milestoneAmount","replace","console","log","response","success","history","push","toggleBack","renderFilteredItems","sources","types","length","forEach","mediaType","link","setItemToggle","prev","milestoneName","Array","isArray","map","media_item","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport media from '../../../assets/images/portfolio-placeholder.jpg';\nimport DeclineMilestone from './declineMilestone';\nimport { milestoneAcceptOrDecline } from '../../../redux/homeSearch/actions'\n\nimport FixedRate from './confirmAndPay/fixedRate';\nimport { withRouter } from 'react-router-dom';\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\n//@ts-ignore\nimport Skeleton from 'react-loading-skeleton';\n\n\nconst MilestoneApprove = (props: any) => {\n    const { backToScreen, data, resetStateLocal } = props;\n    const [isToggle, setToggle] = useState(false);\n    const [IsToggleAccept, setToggleAccept] = useState(false);\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState(1);\n    const [loadingTrue, setLoadingTrue] = useState(false);\n\n    if (data) {\n        let jobName: any = data?.selectedItem?.jobName;\n        let jobId: any = data?.selectedItem?.jobId;\n        let description: any = data?.selectedMile?.description;\n        let hoursWorked: any = data?.selectedMile?.hoursWorked;\n        let images: any = data?.selectedMile?.images;\n        let milestones: any = data?.itemDetails?.milestones;\n        let index: any = data?.selectedMilestoneIndex?.index;\n\n        // let {\n        //     selectedMilestoneIndex: { index },\n        //     itemDetails: { milestones },\n        //     selectedMile: { description, hoursWorked, images },\n        //     selectedItem: { jobName, jobId }\n        // } = data;\n\n        let item: any = milestones[index];\n\n        const onSubmitAccept = async (data: any) => {\n            let total = data?.total;\n            let data_ = {\n                \"status\": 1,\n                \"jobId\": jobId,\n                \"milestoneId\": item?.milestoneId,\n                \"paymentMethodId\": data?.cardId,\n                \"milestoneAmount\": data?.milestoneAmount,\n                \"amount\": total.replace(\"$\", \"\")\n            }\n            console.log({\n                data,\n                data_\n            })\n\n            let response: any = await milestoneAcceptOrDecline(data_);\n            if (response?.success) {\n                resetStateLocal();\n                props.history.push('/need-approval-success');\n            }\n        }\n\n        const toggleBack = () => {\n            setToggle(false);\n            setToggleAccept(false);\n        }\n\n        if (IsToggleAccept) {\n            return (\n                <FixedRate\n                    jobName={jobName}\n                    data={props.data}\n                    toggleBack={toggleBack}\n                    onSubmitAccept={onSubmitAccept}\n                />\n            )\n        }\n\n\n        if (isToggle) {\n            return (\n                <DeclineMilestone\n                    milestoneAcceptOrDecline={milestoneAcceptOrDecline}\n                    jobId={jobId}\n                    jobName={jobName}\n                    toggleBack={toggleBack}\n                    resetStateLocal={resetStateLocal}\n                    milestoneId={item?.milestoneId}\n                />)\n        }\n\n\n        const renderFilteredItems = () => {\n            let sources: any = [];\n            let types: any = [];\n\n            if (images?.length) {\n                images.forEach((item: any) => {\n                    if (item?.mediaType === 2) {\n                        sources.push(item.link);\n                        types.push('video');\n                    } else if (item?.mediaType === 1) {\n                        sources.push(item.link);\n                        types.push('image');\n                    } else {\n                        sources.push(item);\n                        types.push('image');\n                    }\n                })\n            }\n\n            return { sources, types };\n        }\n\n        const { sources, types } = renderFilteredItems();\n\n        const setItemToggle = (index: any) => {\n            setToggler((prev: boolean) => !prev);\n            setSelectSlide(index + 1);\n        }\n\n        return (\n            <div className=\"flex_row\">\n                <div className=\"flex_col_sm_8\">\n                    <div className=\"relate\">\n                        <button onClick={() => { backToScreen() }} className=\"back\"></button>\n                        <span className=\"xs_sub_title\">\n                            {jobName}\n                        </span>\n                    </div>\n                    <span className=\"sub_title\">Milestone details</span>\n                    <span className=\"xs_sub_title\">{item?.milestoneName} complete</span>\n\n                    <FsLightbox\n                        toggler={toggler}\n                        slide={selectedSlide}\n                        sources={sources}\n                        types={types}\n                    />\n\n\n                    {images && Array.isArray(images) && images?.length ?\n                        <div className=\"upload_img_video\">\n                            {images.map((media_item: any, index: any) => (\n                                <figure className=\"img_video\">\n                                    {media_item?.mediaType == 1 ? (\n                                        <img\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => { setItemToggle(index) }}\n                                            async-src={media_item?.link}\n                                            decoding=\"async\"\n                                            loading=\"lazy\"\n                                            src={media_item?.link} alt=\"media\" />\n                                    ) : media_item?.mediaType == 2 ? (\n                                        <video\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => { setItemToggle(index) }}\n                                            src={media_item?.link} />\n                                    ) : (\n                                        <>\n                                            <img\n                                                style={{ cursor: 'pointer' }}\n                                                onClick={() => { setItemToggle(index) }}\n                                                onLoad={() => {\n                                                    setLoadingTrue(true)\n                                                }}\n                                                src={media_item}\n                                                async-src={media_item}\n                                                decoding=\"async\"\n                                                loading=\"lazy\"\n                                                alt=\"media\" />\n                                        </>\n                                    )}\n                                </figure>\n                            ))}\n                        </div>\n                        : null}\n\n                    <div className=\"form_field\">\n                        <span className=\"xs_sub_title\">Description</span>\n                        <p className=\"commn_para\">{description || ''}</p>\n                    </div>\n\n                    <div className=\"form_field\">\n                        <span className=\"xs_sub_title\">Hours worked in this milestone</span>\n                        <span className=\"show_label\">{`${hoursWorked || 0} hours`}</span>\n                    </div>\n                    <div className=\"form_field\">\n                        {/* onSubmitAccept */}\n                        <button\n                            onClick={() => {\n                                setToggleAccept(true)\n                            }}\n                            className=\"fill_btn full_btn\">Approve</button>\n                    </div>\n                    <div className=\"form_field\">\n                        <button\n                            onClick={() => { setToggle(true) }}\n                            className=\"fill_grey_btn full_btn btn-effect mt-15\">\n                            {'Decline'}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return null;\n}\n\nexport default withRouter(MilestoneApprove);\n"]},"metadata":{},"sourceType":"module"}