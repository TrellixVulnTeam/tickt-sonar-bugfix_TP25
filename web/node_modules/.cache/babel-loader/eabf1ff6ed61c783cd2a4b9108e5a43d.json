{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/addQualification.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { onFileUpload } from '../../../redux/auth/actions';\nimport removeFile from '../../../assets/images/icon-close-1.png';\nimport jpegFile from '../../../assets/images/jpeg.png';\nimport jpgFile from '../../../assets/images/jpg.png';\nimport pngFile from '../../../assets/images/png.png';\nimport pdfFile from '../../../assets/images/pdf.png';\nimport docFile from '../../../assets/images/doc.png';\nimport noData from '../../../assets/images/no-search-data.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddQualification = props => {\n  _s();\n\n  var _props$tradeListData$;\n\n  const [qualification, setQualification] = useState(props.qualification);\n\n  const changeHandler = id => {\n    setQualification(prevData => {\n      const newData = [...prevData];\n      const item = newData.find(i => i.qualification_id === id);\n      const itemIndex = newData.indexOf(item);\n\n      if (!item) {\n        newData.push({\n          qualification_id: id,\n          url: ''\n        });\n      } else {\n        newData.splice(itemIndex, 1);\n      }\n\n      return newData;\n    });\n  };\n\n  const onFileChange = async (e, id) => {\n    var _newFile$type;\n\n    const newData = [...qualification];\n    const item = newData.find(i => i.qualification_id === id);\n\n    if (!item) {\n      return;\n    }\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : _newFile$type.split('/')[1];\n    const docTypes = [\"jpeg\", \"jpg\", \"png\", \"pdf\", \"msword\", \"doc\", \"docx\"];\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024;\n\n    if (docTypes.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      alert('The file must be in proper format or size');\n      return;\n    }\n\n    formData.append('file', newFile);\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      const item = newData.find(i => i.qualification_id === id);\n      item.url = res.imgUrl;\n      console.log(newData, 'image upload done');\n      setQualification(newData);\n    }\n  };\n\n  const removeFileHandler = id => {\n    const newData = [...qualification];\n    const item = newData.find(i => i.qualification_id === id);\n    item.url = '';\n    setQualification(newData);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newData = [...qualification];\n    const item = newData.find(i => i.url === '');\n    const itemIndex = newData.indexOf(item);\n    console.log(qualification, item, itemIndex, 'okk');\n\n    if (!qualification.length) {\n      setShowToast(true, \"Please add atleast one qualification\");\n    } else if (itemIndex >= 0) {\n      setShowToast(true, \"Please upload all selected documents\");\n    } else {\n      props.updateSteps(props.step + 1, {\n        qualification\n      });\n    }\n  };\n\n  const onSkipQualification = e => {\n    e.preventDefault();\n    const qualification = [];\n    props.updateSteps(props.step + 1, {\n      qualification\n    });\n  };\n\n  const qualificationList = (_props$tradeListData$ = props.tradeListData.find(i => i._id === props.trade)) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.qualifications;\n\n  const fileDetails = item => {\n    var fileArray = item.url.replace(/^.*[\\\\\\/]/, '').split('.');\n    const type = fileArray[1].toLowerCase();\n\n    switch (type) {\n      case \"jpeg\":\n        return {\n          fileName: fileArray[0],\n          fileType: jpegFile\n        };\n\n      case \"jpg\":\n        return {\n          fileName: fileArray[0],\n          fileType: jpgFile\n        };\n\n      case \"png\":\n        return {\n          fileName: fileArray[0],\n          fileType: pngFile\n        };\n\n      case \"pdf\":\n        return {\n          fileName: fileArray[0],\n          fileType: pdfFile\n        };\n\n      case \"doc\":\n        return {\n          fileName: fileArray[0],\n          fileType: docFile\n        };\n\n      case \"docx\":\n        return {\n          fileName: fileArray[0],\n          fileType: docFile\n        };\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choose_qf\",\n        children: qualificationList ? qualificationList === null || qualificationList === void 0 ? void 0 : qualificationList.map(item => {\n          const isChecked = qualification.find(i => i.qualification_id === item._id);\n          const docDetails = (isChecked === null || isChecked === void 0 ? void 0 : isChecked.url) && fileDetails(isChecked);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"f_spacebw\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox_wrap agree_check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"filter-type filled-in\",\n                type: \"checkbox\",\n                checked: isChecked ? true : false,\n                name: item.name,\n                id: item.name,\n                onChange: () => changeHandler(item._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: item.name,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), (isChecked === null || isChecked === void 0 ? void 0 : isChecked.url) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file_upload_box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"close\",\n                onClick: () => removeFileHandler(item._id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: removeFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileType\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file_details\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload_doc\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: `upload_btn ${!isChecked ? \"disable\" : \"\"}`,\n                htmlFor: item.name + 'upload',\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"none\",\n                id: item.name + 'upload',\n                accept: \"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc\",\n                disabled: !!isChecked ? false : true,\n                onChange: e => onFileChange(e, item._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 38\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"no_data\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noData,\n            alt: \"no-data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"link\",\n          onClick: onSkipQualification,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddQualification, \"iRLpXOKsZFmnRybPT9UzBLxLzic=\");\n\n_c = AddQualification;\nexport default AddQualification;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQualification\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/addQualification.tsx"],"names":["useState","setShowToast","onFileUpload","removeFile","jpegFile","jpgFile","pngFile","pdfFile","docFile","noData","AddQualification","props","qualification","setQualification","changeHandler","id","prevData","newData","item","find","i","qualification_id","itemIndex","indexOf","push","url","splice","onFileChange","e","formData","FormData","newFile","target","files","fileType","type","split","docTypes","selectedFileSize","size","alert","append","res","success","imgUrl","console","log","removeFileHandler","onSubmit","preventDefault","length","updateSteps","step","onSkipQualification","qualificationList","tradeListData","_id","trade","qualifications","fileDetails","fileArray","replace","toLowerCase","fileName","map","isChecked","docDetails","name"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { onFileUpload } from '../../../redux/auth/actions';\n\nimport removeFile from '../../../assets/images/icon-close-1.png';\nimport jpegFile from '../../../assets/images/jpeg.png';\nimport jpgFile from '../../../assets/images/jpg.png';\nimport pngFile from '../../../assets/images/png.png';\nimport pdfFile from '../../../assets/images/pdf.png';\nimport docFile from '../../../assets/images/doc.png';\nimport noData from '../../../assets/images/no-search-data.png';\n\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void,\n    step: number,\n    tradeListData: Array<any>,\n    trade: string,\n    qualification: Array<any>\n}\n\nconst AddQualification = (props: Propstype) => {\n    const [qualification, setQualification] = useState(props.qualification);\n\n    const changeHandler = (id: string) => {\n        setQualification((prevData: Array<any>) => {\n            const newData = [...prevData];\n            const item = newData.find(i => i.qualification_id === id)\n            const itemIndex = newData.indexOf(item);\n            if (!item) {\n                newData.push({ qualification_id: id, url: '' });\n            } else {\n                newData.splice(itemIndex, 1);\n            }\n            return newData;\n        })\n    }\n\n    const onFileChange = async (e: any, id: string) => {\n        const newData = [...qualification];\n        const item = newData.find(i => i.qualification_id === id)\n        if (!item) {\n            return\n        }\n        const formData = new FormData();\n        const newFile = e.target.files[0]\n        var fileType = newFile?.type?.split('/')[1]\n        const docTypes: Array<any> = [\"jpeg\", \"jpg\", \"png\", \"pdf\", \"msword\", \"doc\", \"docx\"]\n        var selectedFileSize = newFile?.size / 1024 / 1024;\n        if (docTypes.indexOf(fileType) < 0 || (selectedFileSize > 10)) {\n            alert('The file must be in proper format or size')\n            return;\n        }\n        formData.append('file', newFile);\n        const res = await onFileUpload(formData)\n        if (res.success) {\n            const item = newData.find(i => i.qualification_id === id)\n            item.url = res.imgUrl\n            console.log(newData, 'image upload done')\n            setQualification(newData)\n        }\n    }\n\n    const removeFileHandler = (id: string) => {\n        const newData = [...qualification];\n        const item = newData.find(i => i.qualification_id === id)\n        item.url = ''\n        setQualification(newData)\n    }\n\n    const onSubmit = (e: any) => {\n        e.preventDefault();\n        const newData = [...qualification];\n        const item = newData.find(i => i.url === '')\n        const itemIndex = newData.indexOf(item);\n        console.log(qualification, item, itemIndex, 'okk');\n        if (!qualification.length) {\n            setShowToast(true, \"Please add atleast one qualification\");\n        } else if (itemIndex >= 0) {\n            setShowToast(true, \"Please upload all selected documents\");\n        } else {\n            props.updateSteps(props.step + 1, { qualification });\n        }\n    }\n\n    const onSkipQualification = (e: any) => {\n        e.preventDefault();\n        const qualification: Array<any> = []\n        props.updateSteps(props.step + 1, { qualification });\n    }\n\n    const qualificationList = props.tradeListData.find(i => i._id === props.trade)?.qualifications\n\n    const fileDetails = (item: any) => {\n        var fileArray = item.url.replace(/^.*[\\\\\\/]/, '').split('.');\n        const type = fileArray[1].toLowerCase();\n        switch (type) {\n            case \"jpeg\":\n                return { fileName: fileArray[0], fileType: jpegFile };\n            case \"jpg\":\n                return { fileName: fileArray[0], fileType: jpgFile };\n            case \"png\":\n                return { fileName: fileArray[0], fileType: pngFile };\n            case \"pdf\":\n                return { fileName: fileArray[0], fileType: pdfFile };\n            case \"doc\":\n                return { fileName: fileArray[0], fileType: docFile };\n            case \"docx\":\n                return { fileName: fileArray[0], fileType: docFile };\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"choose_qf\">\n                    {qualificationList ? qualificationList?.map((item: any) => {\n                        const isChecked = qualification.find((i: any) => i.qualification_id === item._id);\n                        const docDetails = isChecked?.url && fileDetails(isChecked);\n                        return (\n                            <div className=\"f_spacebw\" key={item._id}>\n                                <div className=\"checkbox_wrap agree_check\">\n                                    <input className=\"filter-type filled-in\" type=\"checkbox\"\n                                        checked={isChecked ? true : false} name={item.name} id={item.name}\n                                        onChange={() => changeHandler(item._id)} />\n                                    <label htmlFor={item.name}>{item.name}</label>\n                                </div>\n                                {isChecked?.url ?\n                                    (<div className=\"file_upload_box\">\n                                        <span className=\"close\" onClick={() => removeFileHandler(item._id)}>\n                                            <img src={removeFile} />\n                                        </span>\n                                        <span className=\"file_icon\">\n                                            <img src={docDetails?.fileType} />\n                                        </span>\n                                        <div className=\"file_details\">\n                                            <span className=\"name\">{docDetails?.fileName}</span>\n                                        </div>\n                                    </div>) :\n                                    (<div className=\"upload_doc\">\n                                        <label className={`upload_btn ${!isChecked ? \"disable\" : \"\"}`} htmlFor={item.name + 'upload'}>Upload</label>\n                                        <input type=\"file\" className=\"none\" id={item.name + 'upload'}\n                                            accept=\"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc\"\n                                            disabled={!!isChecked ? false : true} onChange={(e) => onFileChange(e, item._id)} />\n                                    </div>)}\n                            </div>\n                        )\n                    }) : <li className='no_data'>\n                        <img src={noData} alt=\"no-data\" />\n                    </li>}\n                </div>\n\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n                <div className=\"form_field text-center\">\n                    <a className=\"link\" onClick={onSkipQualification}>Skip</a>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddQualification\n"]},"metadata":{},"sourceType":"module"}