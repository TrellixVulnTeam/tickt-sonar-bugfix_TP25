{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieInfo/addVoucher.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport cancel from \"../../assets/images/ic-cancel.png\";\nimport addMedia from \"../../assets/images/add-image.png\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { onFileUpload } from \"../../redux/auth/actions\";\nimport { AddVoucher, fetchVouchesJobs } from \"../../redux/jobs/actions\";\nimport docThumbnail from \"../../assets/images/add-document.png\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport Select, { components } from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst docformats = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst AddVoucherComponent = props => {\n  _s();\n\n  const {\n    toggleProps,\n    closeToggle\n  } = props;\n  const [toggle, setToggle] = useState(false);\n  const [jobsList, setJobsList] = useState([]);\n  const [reactSelect, setReactSelect] = useState({\n    label: \"\",\n    value: \"\"\n  });\n  const [jobDescription, setJobDesciption] = useState(\"\");\n  const [errorData, setErrorData] = useState({\n    name: \"\",\n    detail: \"\",\n    upload: \"\"\n  });\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  useEffect(() => {\n    prefetch();\n  }, []);\n  useEffect(() => {\n    console.log({\n      toggleProps\n    });\n    setToggle(toggleProps);\n  }, [toggleProps]);\n  useEffect(() => {\n    setErrorData(prev => ({ ...prev,\n      detail: (jobDescription === null || jobDescription === void 0 ? void 0 : jobDescription.length) > 1000 ? \"Maximum 1000 characters are allowed\" : \"\"\n    }));\n  }, [jobDescription]); // useEffect(() => {\n  //     setErrorData((prev: any) => ({ ...prev, upload: filesUrl?.length ? '' : 'Document file is required' }));\n  // }, [filesUrl]);\n\n  useEffect(() => {\n    console.log({\n      toggle\n    });\n\n    if (!toggle) {\n      closeToggle(\"isRecall\");\n      setReactSelect(prev => ({ ...prev,\n        label: \"\",\n        value: \"\"\n      }));\n      setJobDesciption(\"\");\n      setFilesUrl([]);\n      setErrorData(prev => ({ ...prev,\n        name: \"\",\n        detail: \"\",\n        upload: \"\"\n      }));\n    } else {\n      prefetch();\n    }\n  }, [toggle]);\n\n  const prefetch = async () => {\n    if (props === null || props === void 0 ? void 0 : props.id) {\n      let res_jobs = await fetchVouchesJobs({\n        page: 1,\n        tradieId: props.id\n      });\n\n      if (res_jobs === null || res_jobs === void 0 ? void 0 : res_jobs.success) {\n        let list_data = res_jobs.data;\n\n        if (list_data === null || list_data === void 0 ? void 0 : list_data.length) {\n          // let item = list_data[0];\n          // item?.jobId\n          setReactSelect({\n            label: \"Please select  a job\",\n            value: \"\"\n          });\n        }\n\n        setJobsList(list_data);\n      }\n    }\n  };\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mib\n\n    if (docformats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (docformats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      let link = res.imgUrl;\n      setFilesUrl(prev => [...prev, {\n        mediaType: [\"doc\", \"docx\", \"msword\"].includes(fileType) ? 3 : 4,\n        link: link\n      }]);\n      setLocalFiles(prev => ({ ...prev,\n        [filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length]: URL.createObjectURL(newFile)\n      }));\n    }\n  };\n\n  const renderbyFileFormat = (item, index) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n\n    if (get_split_fromat) {\n      if (docformats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            setItemToggle(index);\n          },\n          title: get_split_name,\n          src: docThumbnail,\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            removeFromItem(index);\n          },\n          src: close,\n          alt: \"remove\",\n          className: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      jobId: reactSelect === null || reactSelect === void 0 ? void 0 : reactSelect.value,\n      jobName: reactSelect === null || reactSelect === void 0 ? void 0 : reactSelect.label,\n      tradieId: props.id,\n      photos: [filesUrl[0].link],\n      vouchDescription: jobDescription,\n      recommendation: filesUrl[0].link\n    };\n    let response = await AddVoucher(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      moengage.moE_SendEvent(MoEConstants.LEFT_VOUCHER, {\n        timeStamp: moengage.getCurrentTimeStamp()\n      });\n      mixPanel.mixP_SendEvent(MoEConstants.LEFT_VOUCHER, {\n        timeStamp: moengage.getCurrentTimeStamp()\n      });\n      setToggle(prev => !prev);\n      await prefetch();\n    }\n  };\n\n  let JobSelectOptions = [];\n\n  if (jobsList === null || jobsList === void 0 ? void 0 : jobsList.length) {\n    JobSelectOptions = jobsList.map(item => ({\n      label: item === null || item === void 0 ? void 0 : item.jobName,\n      value: item === null || item === void 0 ? void 0 : item.jobId\n    }));\n    JobSelectOptions.unshift({\n      label: \"Please select a job\",\n      value: \"\"\n    });\n  }\n\n  const NoOptionsMessage = props => {\n    return /*#__PURE__*/_jsxDEV(components.NoOptionsMessage, { ...props,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"custom-css-class\",\n        children: \"No completed jobs with this tradesperson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"custom_modal\",\n    open: toggle,\n    onClose: () => {\n      closeToggle(\"isRecall\");\n      setToggle(prev => !prev);\n    },\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_wh profile_modal vouch_modal\",\n      \"data-aos\": \"zoom-in\",\n      \"data-aos-delay\": \"30\",\n      \"data-aos-duration\": \"1000\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: \"Leave a Vouch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"info_note\",\n          children: \"Upload the vouch and write the description.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            closeToggle(\"isRecall\");\n            setToggle(prev => !prev);\n          },\n          className: \"close_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cancel,\n            alt: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner_wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner_wrappr\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                className: \"select_menu\",\n                value: reactSelect,\n                options: JobSelectOptions,\n                components: {\n                  NoOptionsMessage\n                } // options={jobsList.map((item: any) => ({ label: item?.jobName, value: item?.jobId }))}\n                ,\n                onChange: item => {\n                  setReactSelect(item);\n                  setErrorData(prev => ({ ...prev,\n                    name: \"\"\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errorData === null || errorData === void 0 ? void 0 : errorData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Job Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: e => {\n                  setJobDesciption(e.target.value.trimLeft());\n                },\n                value: jobDescription,\n                placeholder: \"Enter Description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), jobDescription.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char_count\",\n                children: `character length : ${jobDescription.length} / 1000`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errorData === null || errorData === void 0 ? void 0 : errorData.detail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload_img_video\",\n            children: [(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) ? filesUrl.map((item, index) => renderbyFileFormat(item.link, index)) : null, (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) < 1 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload_media\",\n                htmlFor: \"upload_img_video\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: addMedia,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: onFileChange,\n                type: \"file\",\n                accept: \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\",\n                style: {\n                  display: \"none\"\n                },\n                id: \"upload_img_video\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errorData === null || errorData === void 0 ? void 0 : errorData.upload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom_btn custom_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) || !(jobDescription === null || jobDescription === void 0 ? void 0 : jobDescription.length)) {\n              var _reactSelect$value;\n\n              if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length)) {\n                setErrorData(prev => ({ ...prev,\n                  upload: \"Document file is required.\"\n                }));\n              }\n\n              if (!(jobDescription === null || jobDescription === void 0 ? void 0 : jobDescription.length)) {\n                setErrorData(prev => ({ ...prev,\n                  detail: \"Job Description is required\"\n                }));\n              }\n\n              if (!(reactSelect === null || reactSelect === void 0 ? void 0 : (_reactSelect$value = reactSelect.value) === null || _reactSelect$value === void 0 ? void 0 : _reactSelect$value.length)) {\n                setErrorData(prev => ({ ...prev,\n                  name: \"Job Name is required\"\n                }));\n              }\n            } else {\n              handleSubmit();\n            }\n          },\n          className: `fill_btn full_btn btn-effect`,\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddVoucherComponent, \"w1TkdwvF+m8j6UqmZTusgDqiGK0=\");\n\n_c = AddVoucherComponent;\nexport default AddVoucherComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddVoucherComponent\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieInfo/addVoucher.tsx"],"names":["React","useState","useEffect","cancel","addMedia","Modal","setShowToast","close","onFileUpload","AddVoucher","fetchVouchesJobs","docThumbnail","moengage","mixPanel","MoEConstants","Select","components","docformats","AddVoucherComponent","props","toggleProps","closeToggle","toggle","setToggle","jobsList","setJobsList","reactSelect","setReactSelect","label","value","jobDescription","setJobDesciption","errorData","setErrorData","name","detail","upload","filesUrl","setFilesUrl","localFiles","setLocalFiles","update","forceUpdate","toggler","setToggler","selectedSlide","setSelectSlide","prefetch","console","log","prev","length","id","res_jobs","page","tradieId","success","list_data","data","setItemToggle","index","removeFromItem","splice","Array","isArray","onFileChange","e","formData","FormData","newFile","target","files","fileType","type","split","toLowerCase","selectedFileSize","size","indexOf","includes","append","res","link","imgUrl","mediaType","URL","createObjectURL","renderbyFileFormat","item","split_item_format","get_split_fromat","split_item_name","get_split_name","image_render","handleSubmit","jobId","jobName","photos","vouchDescription","recommendation","response","moE_SendEvent","LEFT_VOUCHER","timeStamp","getCurrentTimeStamp","mixP_SendEvent","JobSelectOptions","map","unshift","NoOptionsMessage","trimLeft","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cancel from \"../../assets/images/ic-cancel.png\";\nimport addMedia from \"../../assets/images/add-image.png\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { setShowToast } from \"../../redux/common/actions\";\n\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { onFileUpload } from \"../../redux/auth/actions\";\nimport { AddVoucher, fetchVouchesJobs } from \"../../redux/jobs/actions\";\nimport docThumbnail from \"../../assets/images/add-document.png\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport Select, { components } from \"react-select\";\nconst docformats: Array<any> = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst AddVoucherComponent = (props: any) => {\n  const { toggleProps, closeToggle } = props;\n  const [toggle, setToggle] = useState(false);\n  const [jobsList, setJobsList] = useState([]);\n  const [reactSelect, setReactSelect] = useState({ label: \"\", value: \"\" });\n  const [jobDescription, setJobDesciption] = useState(\"\");\n\n  const [errorData, setErrorData] = useState({\n    name: \"\",\n    detail: \"\",\n    upload: \"\",\n  });\n  const [filesUrl, setFilesUrl] = useState([] as any);\n  const [localFiles, setLocalFiles] = useState({});\n\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n\n  useEffect(() => {\n    prefetch();\n  }, []);\n\n  useEffect(() => {\n    console.log({\n      toggleProps,\n    });\n    setToggle(toggleProps);\n  }, [toggleProps]);\n\n  useEffect(() => {\n    setErrorData((prev: any) => ({\n      ...prev,\n      detail:\n        jobDescription?.length > 1000\n          ? \"Maximum 1000 characters are allowed\"\n          : \"\",\n    }));\n  }, [jobDescription]);\n\n  // useEffect(() => {\n  //     setErrorData((prev: any) => ({ ...prev, upload: filesUrl?.length ? '' : 'Document file is required' }));\n  // }, [filesUrl]);\n\n  useEffect(() => {\n    console.log({ toggle });\n    if (!toggle) {\n      closeToggle(\"isRecall\");\n      setReactSelect((prev: any) => ({ ...prev, label: \"\", value: \"\" }));\n      setJobDesciption(\"\");\n      setFilesUrl([]);\n      setErrorData((prev: any) => ({\n        ...prev,\n        name: \"\",\n        detail: \"\",\n        upload: \"\",\n      }));\n    } else {\n      prefetch();\n    }\n  }, [toggle]);\n\n  const prefetch = async () => {\n    if (props?.id) {\n      let res_jobs: any = await fetchVouchesJobs({\n        page: 1,\n        tradieId: props.id,\n      });\n      if (res_jobs?.success) {\n        let list_data: any = res_jobs.data;\n        if (list_data?.length) {\n          // let item = list_data[0];\n          // item?.jobId\n          setReactSelect({ label: \"Please select  a job\", value: \"\" });\n        }\n        setJobsList(list_data);\n      }\n    }\n  };\n\n  const setItemToggle = (index: any) => {\n    setToggler((prev: boolean) => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const removeFromItem = (index: any) => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async (e: any) => {\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    var fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n    var selectedFileSize = newFile?.size / 1024 / 1024; // size in mib\n\n    if (docformats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (docformats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    const res = await onFileUpload(formData);\n    if (res.success) {\n      let link: string = res.imgUrl;\n\n      setFilesUrl((prev: Array<any>) => [\n        ...prev,\n        {\n          mediaType: [\"doc\", \"docx\", \"msword\"].includes(fileType) ? 3 : 4,\n          link: link,\n        },\n      ]);\n      setLocalFiles((prev: any) => ({\n        ...prev,\n        [filesUrl?.length]: URL.createObjectURL(newFile),\n      }));\n    }\n  };\n\n  const renderbyFileFormat = (item: any, index: any) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render: any = null;\n    if (get_split_fromat) {\n      if (docformats.includes(get_split_fromat)) {\n        image_render = (\n          <img\n            onClick={() => {\n              setItemToggle(index);\n            }}\n            title={get_split_name}\n            src={docThumbnail}\n            alt=\"media\"\n          />\n        );\n      }\n      return (\n        <figure className=\"img_video\">\n          {image_render}\n          <img\n            onClick={() => {\n              removeFromItem(index);\n            }}\n            src={close}\n            alt=\"remove\"\n            className=\"remove\"\n          />\n          {/* <span style={{ fontSize: '10px' }}>{get_split_name}</span> */}\n        </figure>\n      );\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      jobId: reactSelect?.value,\n      jobName: reactSelect?.label,\n      tradieId: props.id,\n      photos: [filesUrl[0].link],\n      vouchDescription: jobDescription,\n      recommendation: filesUrl[0].link,\n    };\n    let response = await AddVoucher(data);\n    if (response?.success) {\n      moengage.moE_SendEvent(MoEConstants.LEFT_VOUCHER, {\n        timeStamp: moengage.getCurrentTimeStamp(),\n      });\n      mixPanel.mixP_SendEvent(MoEConstants.LEFT_VOUCHER, {\n        timeStamp: moengage.getCurrentTimeStamp(),\n      });\n      setToggle((prev: any) => !prev);\n      await prefetch();\n    }\n  };\n\n  let JobSelectOptions: any = [];\n  if (jobsList?.length) {\n    JobSelectOptions = jobsList.map((item: any) => ({\n      label: item?.jobName,\n      value: item?.jobId,\n    }));\n    JobSelectOptions.unshift({ label: \"Please select a job\", value: \"\" });\n  }\n\n  const NoOptionsMessage = (props: any) => {\n    return (\n      <components.NoOptionsMessage {...props}>\n        <span className=\"custom-css-class\">\n          {\"No completed jobs with this tradesperson\"}\n        </span>\n      </components.NoOptionsMessage>\n    );\n  };\n\n  return (\n    <Modal\n      className=\"custom_modal\"\n      open={toggle}\n      onClose={() => {\n        closeToggle(\"isRecall\");\n        setToggle((prev: any) => !prev);\n      }}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div\n        className=\"custom_wh profile_modal vouch_modal\"\n        data-aos=\"zoom-in\"\n        data-aos-delay=\"30\"\n        data-aos-duration=\"1000\"\n      >\n        <div className=\"heading\">\n          <span className=\"sub_title\">{\"Leave a Vouch\"}</span>\n          <span className=\"info_note\">\n            {\"Upload the vouch and write the description.\"}\n          </span>\n          <button\n            onClick={() => {\n              closeToggle(\"isRecall\");\n              setToggle((prev: any) => !prev);\n            }}\n            className=\"close_btn\"\n          >\n            <img src={cancel} alt=\"cancel\" />\n          </button>\n        </div>\n        <div className=\"inner_wrap\">\n          <div className=\"inner_wrappr\">\n            <div className=\"form_field\">\n              <label className=\"form_label\">Job</label>\n              <div className=\"text_field\">\n                <Select\n                  className=\"select_menu\"\n                  value={reactSelect}\n                  options={JobSelectOptions}\n                  components={{ NoOptionsMessage }}\n                  // options={jobsList.map((item: any) => ({ label: item?.jobName, value: item?.jobId }))}\n                  onChange={(item: any) => {\n                    setReactSelect(item);\n                    setErrorData((prev: any) => ({ ...prev, name: \"\" }));\n                  }}\n                />\n              </div>\n              <span className=\"error_msg\">{errorData?.name}</span>\n            </div>\n            <div className=\"form_field\">\n              <label className=\"form_label\">{\"Job Description\"}</label>\n              <div className=\"text_field\">\n                <textarea\n                  onChange={(e) => {\n                    setJobDesciption(e.target.value.trimLeft());\n                  }}\n                  value={jobDescription}\n                  placeholder=\"Enter Description...\"\n                ></textarea>\n                {jobDescription.length ? (\n                  <span className=\"char_count\">\n                    {`character length : ${jobDescription.length} / 1000`}\n                  </span>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <span className=\"error_msg\">{errorData?.detail}</span>\n            </div>\n            <div className=\"upload_img_video\">\n              {filesUrl?.length\n                ? filesUrl.map((item: any, index: number) =>\n                    renderbyFileFormat(item.link, index)\n                  )\n                : null}\n\n              {filesUrl?.length < 1 ? (\n                <React.Fragment>\n                  <label className=\"upload_media\" htmlFor=\"upload_img_video\">\n                    <img src={addMedia} alt=\"\" />\n                  </label>\n                  <input\n                    onChange={onFileChange}\n                    type=\"file\"\n                    accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                    style={{ display: \"none\" }}\n                    id=\"upload_img_video\"\n                  />\n                </React.Fragment>\n              ) : null}\n            </div>\n            <span className=\"error_msg\">{errorData?.upload}</span>\n          </div>\n        </div>\n        <div className=\"bottom_btn custom_btn\">\n          <button\n            onClick={() => {\n              if (!filesUrl?.length || !jobDescription?.length) {\n                if (!filesUrl?.length) {\n                  setErrorData((prev: any) => ({\n                    ...prev,\n                    upload: \"Document file is required.\",\n                  }));\n                }\n\n                if (!jobDescription?.length) {\n                  setErrorData((prev: any) => ({\n                    ...prev,\n                    detail: \"Job Description is required\",\n                  }));\n                }\n\n                if (!reactSelect?.value?.length) {\n                  setErrorData((prev: any) => ({\n                    ...prev,\n                    name: \"Job Name is required\",\n                  }));\n                }\n              } else {\n                handleSubmit();\n              }\n            }}\n            className={`fill_btn full_btn btn-effect`}\n          >\n            {\"Save changes\"}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AddVoucherComponent;\n"]},"metadata":{},"sourceType":"module"}