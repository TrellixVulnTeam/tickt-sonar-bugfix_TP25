{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/uploadMedia.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport remove from \"../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../assets/images/add-image.png\";\nimport docThumbnail from \"../../../assets/images/add-document.png\";\nimport { onFileUpload } from \"../../../redux/auth/actions\";\nimport { setLoading, setShowToast } from \"../../../redux/common/actions\"; //@ts-ignore\n\nimport { thumbnailExtract } from \"../../../common/thumbnail\"; //@ts-ignore\n\nimport DropboxChooser from \"react-dropbox-chooser\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\nconst videoFormats = [\"mp4\", \"wmv\", \"avi\"];\nconst docTypes = [\"jpeg\", \"jpg\", \"png\", \"mp4\", \"wmv\", \"avi\", \"pdf\", \"doc\", \"docx\", \"msword\"];\nconst docformats = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst UploadMedia = ({\n  jobName,\n  title,\n  para,\n  hasDescription,\n  data,\n  stepCompleted,\n  handleStepForward,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  var _Object$values;\n\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [description, setDescription] = useState(\"\");\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [isItemsLoad, setLoadItems] = useState({});\n  const [countMedia, setCountMedia] = useState({\n    photos: 0,\n    video: 0\n  });\n  const [renderAsyncLoad, setAsyncLoad] = useState(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const isFileChoser = Boolean(anchorEl);\n\n  const fileChoserClicked = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const fileChoserClosed = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (stepCompleted) {\n      setFilesUrl(data === null || data === void 0 ? void 0 : data.urls);\n      setSubmitClicked(true);\n    }\n  }, [stepCompleted, data]);\n  useEffect(() => {// filesUrl\n  }, []);\n\n  const randomDelay = (item, index) => new Promise(resolve => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n    let loadByIndex = {\n      [index]: true\n    };\n\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          id: `media_${index}`,\n          onClick: () => {\n            setItemToggle(index);\n          },\n          title: get_split_name,\n          src: item,\n          onLoad: () => {\n            loadByIndex[index] = false;\n            console.log(\"image_render\", \"--->\", {\n              loadByIndex\n            });\n          },\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this);\n      }\n    }\n\n    if (!loadByIndex[index]) {\n      console.log(\"Hered!!!\");\n      resolve(image_render);\n    }\n  });\n\n  const calc = async (item, index) => {\n    let result = await randomDelay(item, index);\n    console.log({\n      result\n    });\n    return result;\n  };\n\n  const asyncFunc = async () => {\n    const p = filesUrl.map((item, index) => calc(item.link, index));\n    const results = await Promise.all(p);\n    setAsyncLoad(results);\n  };\n\n  useEffect(() => {\n    asyncFunc();\n  }, [filesUrl]);\n\n  const checkErrors = () => {\n    if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length)) {\n      return true;\n    }\n\n    if (hasDescription && (!description.trim() || description.length > 1000)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const checkIfVideoExist = () => {\n    let videoItems = [];\n    let ImageItems = [];\n    let concatFormat = [...imageFormats, ...docformats];\n    filesUrl.forEach(element => {\n      let split_items = element.link.split(\".\");\n      let format_split_items = split_items[(split_items === null || split_items === void 0 ? void 0 : split_items.length) - 1];\n\n      if (videoFormats.includes(format_split_items)) {\n        videoItems.push(format_split_items);\n      }\n\n      if (concatFormat.includes(format_split_items)) {\n        ImageItems.push(format_split_items);\n      }\n    });\n    console.log({\n      concatFormat,\n      ImageItems,\n      videoItems\n    });\n\n    if ((ImageItems === null || ImageItems === void 0 ? void 0 : ImageItems.length) === 6) {\n      return \".mp4, .wmv, .avi\";\n    }\n\n    if ((videoItems === null || videoItems === void 0 ? void 0 : videoItems.length) == 2) {\n      return \".png,.jpg,.jpeg,.pdf,.doc\";\n    }\n\n    return \".png,.jpg,.jpeg,.pdf,.doc,.mp4,.wmv,.avi\";\n  };\n\n  const checkIfVideoExist_ = () => {\n    let videoItems = [];\n    let ImageItems = [];\n    filesUrl.forEach(element => {\n      let split_items = element.link.split(\".\");\n      let format_split_items = split_items[(split_items === null || split_items === void 0 ? void 0 : split_items.length) - 1];\n\n      if (videoFormats.includes(format_split_items)) {\n        videoItems.push(format_split_items);\n      }\n\n      if ([...imageFormats, ...docformats].includes(format_split_items)) {\n        ImageItems.push(format_split_items);\n      }\n    });\n    return {\n      videoCount: videoItems.length,\n      imageCount: ImageItems.length\n    };\n  };\n\n  const onDropBoxSuccess = files => {\n    onFileChange(\"\", true, files[0]);\n  };\n\n  const onDropBoxCancel = err => {\n    console.log(err, \"err --- Dropbox\");\n  };\n\n  const onFileChange = async (e, isDropbox, dropBoxFile) => {\n    console.log(onFileChange, \"onFileChange\");\n    const formData = new FormData();\n    var fileType;\n    const newFile = isDropbox ? dropBoxFile === null || dropBoxFile === void 0 ? void 0 : dropBoxFile.link : e.target.files[0];\n\n    if (isDropbox) {\n      var _dropBoxArr;\n\n      let dropBoxArr = newFile === null || newFile === void 0 ? void 0 : newFile.split(\".\");\n      fileType = (_dropBoxArr = dropBoxArr[dropBoxArr.length - 1]) === null || _dropBoxArr === void 0 ? void 0 : _dropBoxArr.toLowerCase();\n    } else {\n      var _newFile$type, _newFile$type$split$;\n\n      fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    }\n\n    fileChoserClosed();\n\n    if (hasDescription && !imageFormats.includes(fileType)) {\n      setShowToast(true, \"The file must be in proper format\");\n      return;\n    }\n\n    if ((filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) === 8) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    let checkCounts = checkIfVideoExist_();\n\n    if ((checkCounts === null || checkCounts === void 0 ? void 0 : checkCounts.videoCount) === 2) {\n      if (videoFormats.includes(fileType)) {\n        return;\n      }\n    }\n\n    if ((checkCounts === null || checkCounts === void 0 ? void 0 : checkCounts.imageCount) >= 6) {\n      let concatFormats = [...imageFormats, ...docformats];\n\n      if (concatFormats.includes(fileType)) {\n        return;\n      }\n    }\n\n    let filesUrlClone = filesUrl;\n    let countVideoFormats = filesUrlClone.map(item => {\n      let split_items = item.link.split(\".\");\n      let format_split_items = split_items[(split_items === null || split_items === void 0 ? void 0 : split_items.length) - 1];\n\n      if (videoFormats.includes(format_split_items)) {\n        return format_split_items;\n      }\n    }).filter(item => item !== undefined);\n    var selectedFileSize = isDropbox ? (dropBoxFile === null || dropBoxFile === void 0 ? void 0 : dropBoxFile.bytes) / 1024 / 1024 : (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mb\n\n    if (docTypes.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    if (videoFormats.includes(fileType)) {\n      // video validations\n      if (selectedFileSize > 10) {\n        setShowToast(true, \"The video file size must be below 20 mb\");\n        return;\n      }\n\n      if ((countVideoFormats === null || countVideoFormats === void 0 ? void 0 : countVideoFormats.length) > 1) {\n        setShowToast(true, \"Max video file upload limit is 2\");\n        return;\n      }\n    }\n\n    !isDropbox && formData.append(\"file\", newFile);\n    setLoadItems({});\n    const res = isDropbox ? {\n      success: true\n    } : await onFileUpload(formData);\n    setLoading(true);\n\n    if (res.success) {\n      let link = isDropbox ? dropBoxFile === null || dropBoxFile === void 0 ? void 0 : dropBoxFile.link : res === null || res === void 0 ? void 0 : res.imgUrl;\n      let check_type = imageFormats.includes(fileType) ? 1 : videoFormats.includes(fileType) ? 2 : [\"doc\", \"docx\", \"msword\"].includes(fileType) ? 3 : 4;\n      setFilesUrl(prev => [...prev, {\n        mediaType: check_type,\n        link: link\n      }]);\n      setLoadItems(prev => ({\n        [filesUrl.length - 1]: false\n      }));\n      setLocalFiles(prev => ({ ...prev,\n        [filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length]: isDropbox ? dropBoxFile === null || dropBoxFile === void 0 ? void 0 : dropBoxFile.link : URL.createObjectURL(newFile)\n      }));\n    }\n  };\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderbyFileFormat = (item, index, base64) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n    let loadByIndex = {\n      [index]: true\n    }; // setLoading(true);\n\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          id: `media_${index}` // onClick={() => { setItemToggle(index) }}\n          ,\n          title: get_split_name,\n          src: item,\n          \"async-src\": item,\n          decoding: \"async\",\n          loading: \"lazy\",\n          onLoad: () => {\n            console.log(\"Loaded!\");\n            loadByIndex[index] = false;\n            console.log(\"image_render\", \"--->\", {\n              loadByIndex\n            });\n            setLoadItems(prev => ({\n              [index]: true\n            }));\n          },\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this);\n      }\n\n      if (videoFormats.includes(get_split_fromat)) {\n        if (base64) {\n          image_render = /*#__PURE__*/_jsxDEV(\"video\", {\n            id: `media_${index}`,\n            title: get_split_name,\n            crossOrigin: \"anonymous\",\n            src: item,\n            poster: base64,\n            controls: false,\n            onLoadedData: () => {\n              console.log(\"Loaded!\");\n              setLoadItems(prev => ({\n                [index]: true\n              }));\n            } // onClick={() => { setItemToggle(index) }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this);\n        } else {\n          image_render = /*#__PURE__*/_jsxDEV(\"video\", {\n            id: `media_${index}`,\n            crossOrigin: \"anonymous\",\n            src: item,\n            controls: false,\n            title: get_split_name,\n            onLoadedData: () => {\n              console.log(\"Loaded!\");\n              setLoadItems(prev => ({\n                [index]: true\n              }));\n            } // onClick={() => { setItemToggle(index) }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this);\n        }\n      }\n\n      if (docformats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          id: `media_${index}`,\n          title: get_split_name,\n          src: docThumbnail,\n          \"async-src\": item,\n          decoding: \"async\",\n          loading: \"lazy\",\n          onLoad: () => {\n            loadByIndex[index] = false;\n            console.log(\"Loaded!\");\n            setLoadItems(prev => ({\n              [index]: true\n            }));\n          },\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: image_render && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => {\n                removeFromItem(index);\n              },\n              src: remove,\n              alt: \"remove\",\n              className: \"remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this); // }\n    }\n  }; // const { sources, types } = renderFilteredItems();\n\n\n  let IsRenderValues = null;\n\n  if ((_Object$values = Object.values(isItemsLoad)) === null || _Object$values === void 0 ? void 0 : _Object$values.length) {\n    IsRenderValues = Array.isArray(Object.values(isItemsLoad)) && Object.values(isItemsLoad)[0] === true ? Object.values(isItemsLoad)[0] : false;\n  }\n\n  if (IsRenderValues === false) {\n    setLoading(true);\n  }\n\n  if (IsRenderValues === true) {\n    setLoading(false);\n  }\n\n  let checkErrors_ = checkErrors();\n  console.log({\n    IsRenderValues,\n    isItemsLoad,\n    check: checkErrors_\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app_wrapper${jobName ? \" padding_0\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `section_wrapper${jobName ? \" padding_0\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"canvas-extractor\",\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex_col_sm_${jobName ? \"7\" : \"6\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    hasDescription ? handleStepBack() : handleStepForward(6);\n                  },\n                  className: \"back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: jobName ? \"xs_sub_title\" : \"title\",\n                  children: jobName || \"Photos and documents\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), title && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: para || \"Record a short video (up to 30 seconds) or add up to 6 photos and files to demonstrate your job and any unique requirements.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), !jobName && !(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) && !hasDescription ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5 text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => {\n                  handleStepForward(14);\n                },\n                className: \"link\",\n                children: \"Skip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload_img_video\",\n              children: [(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) ? filesUrl.map((item, index) => renderbyFileFormat(item === null || item === void 0 ? void 0 : item.link, index, item === null || item === void 0 ? void 0 : item.base64)) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"media_btn\",\n                id: \"fade-button\",\n                \"aria-controls\": isFileChoser ? \"fade-menu\" : undefined,\n                \"aria-haspopup\": \"true\",\n                \"aria-expanded\": isFileChoser ? \"true\" : undefined,\n                onClick: fileChoserClicked,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: addMedia,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Menu, {\n                className: \"fsp_modal range dropbox\",\n                id: \"fade-menu\",\n                MenuListProps: {\n                  \"aria-labelledby\": \"fade-button\"\n                },\n                anchorEl: anchorEl,\n                open: isFileChoser,\n                onClose: fileChoserClosed,\n                TransitionComponent: Fade,\n                anchorOrigin: {\n                  vertical: \"top\",\n                  horizontal: \"center\"\n                },\n                transformOrigin: {\n                  vertical: \"top\",\n                  horizontal: \"left\"\n                },\n                children: (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) < 8 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"upload_media\",\n                    htmlFor: \"upload_img_video\",\n                    children: \"Upload from files\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this), !hasDescription ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: onFileChange,\n                      type: \"file\",\n                      accept: checkIfVideoExist(),\n                      style: {\n                        display: \"none\"\n                      },\n                      id: \"upload_img_video\",\n                      multiple: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 585,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(DropboxChooser, {\n                      appKey: process.env.REACT_APP_DROPBOX_APP_KEY,\n                      success: files => onDropBoxSuccess(files),\n                      cancel: err => onDropBoxCancel(err),\n                      multiselect: false,\n                      linkType: \"direct\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"dropbox-button\",\n                        children: \"Upload from Dropbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      onChange: onFileChange,\n                      type: \"file\",\n                      accept: hasDescription ? \"image/png,image/jpg,image/jpeg\" : \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\",\n                      style: {\n                        display: \"none\"\n                      },\n                      id: \"upload_img_video\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(DropboxChooser, {\n                      appKey: process.env.REACT_APP_DROPBOX_APP_KEY,\n                      success: files => onDropBoxSuccess(files),\n                      cancel: err => onDropBoxCancel(err),\n                      multiselect: false,\n                      linkType: \"direct\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"dropbox-button\",\n                        children: \"Upload from Dropbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 625,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 618,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 21\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [hasDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Photo Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"The item has..\",\n                  value: description,\n                  onChange: ({\n                    target: {\n                      value\n                    }\n                  }) => setDescription(value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 21\n                }, this), description.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"char_count\",\n                  children: `character length : ${description.length} / 1000`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 23\n                }, this) : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: submitClicked && !description.trim() ? \"Photo Description is required.\" : description.length > 1000 ? \"Maximum 1000 characters are allowed.\" : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSubmitClicked(true);\n                  let filteredItems = [];\n                  let isRender = false;\n                  filesUrl.forEach((item, index) => {\n                    if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n                      if (!(item === null || item === void 0 ? void 0 : item.base64)) {\n                        let base64 = thumbnailExtract({\n                          canvasId: \"#canvas-extractor\",\n                          videoId: `#media_${index}`\n                        });\n                        item[\"base64\"] = base64;\n                      }\n                    }\n\n                    filteredItems.push(item);\n                  });\n\n                  if (!isRender) {\n                    setFilesUrl(filteredItems);\n                    handleStepComplete({\n                      urls: filteredItems,\n                      description: hasDescription ? description : undefined\n                    });\n                  }\n                },\n                className: `fill_btn full_btn btn-effect ${checkErrors_ && IsRenderValues == null ? \"disable_btn\" : !checkErrors_ && !IsRenderValues ? \"disable_btn\" : \"\"}`,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadMedia, \"qBZmVxAwwK8HHRFZ4GwU8fbyIXQ=\");\n\n_c = UploadMedia;\nexport default UploadMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadMedia\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/uploadMedia.tsx"],"names":["React","useEffect","useState","remove","addMedia","docThumbnail","onFileUpload","setLoading","setShowToast","thumbnailExtract","DropboxChooser","Menu","Fade","imageFormats","videoFormats","docTypes","docformats","UploadMedia","jobName","title","para","hasDescription","data","stepCompleted","handleStepForward","handleStepComplete","handleStepBack","localFiles","setLocalFiles","update","forceUpdate","filesUrl","setFilesUrl","description","setDescription","submitClicked","setSubmitClicked","toggler","setToggler","selectedSlide","setSelectSlide","isItemsLoad","setLoadItems","countMedia","setCountMedia","photos","video","renderAsyncLoad","setAsyncLoad","anchorEl","setAnchorEl","isFileChoser","Boolean","fileChoserClicked","event","currentTarget","fileChoserClosed","urls","randomDelay","item","index","Promise","resolve","split_item_format","split","get_split_fromat","length","split_item_name","get_split_name","image_render","loadByIndex","includes","setItemToggle","console","log","calc","result","asyncFunc","p","map","link","results","all","checkErrors","trim","removeFromItem","splice","Array","isArray","checkIfVideoExist","videoItems","ImageItems","concatFormat","forEach","element","split_items","format_split_items","push","checkIfVideoExist_","videoCount","imageCount","onDropBoxSuccess","files","onFileChange","onDropBoxCancel","err","e","isDropbox","dropBoxFile","formData","FormData","fileType","newFile","target","dropBoxArr","toLowerCase","type","checkCounts","concatFormats","filesUrlClone","countVideoFormats","filter","undefined","selectedFileSize","bytes","size","indexOf","append","res","success","imgUrl","check_type","prev","mediaType","URL","createObjectURL","renderbyFileFormat","base64","IsRenderValues","Object","values","checkErrors_","check","display","vertical","horizontal","process","env","REACT_APP_DROPBOX_APP_KEY","value","filteredItems","isRender","canvasId","videoId"],"mappings":"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","sourcesContent":["import React, { SyntheticEvent, useRef, useEffect, useState } from \"react\";\nimport colorLogo from \"../../../assets/images/ic-logo-yellow.png\";\nimport menu from \"../../../assets/images/menu-line-white.svg\";\nimport bell from \"../../../assets/images/ic-notification.png\";\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport remove from \"../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../assets/images/add-image.png\";\nimport videoThumbnail from \"../../../assets/images/add-video.png\";\nimport docThumbnail from \"../../../assets/images/add-document.png\";\nimport { onFileUpload } from \"../../../redux/auth/actions\";\nimport { setLoading, setShowToast } from \"../../../redux/common/actions\";\n//@ts-ignore\nimport FsLightbox from \"fslightbox-react\";\n//@ts-ignore\nimport Skeleton from \"react-loading-skeleton\";\nimport { thumbnailExtract } from \"../../../common/thumbnail\";\n//@ts-ignore\nimport DropboxChooser from \"react-dropbox-chooser\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Fade from \"@material-ui/core/Fade\";\n\ninterface Proptypes {\n  jobName?: string;\n  title?: string;\n  para?: string;\n  hasDescription?: boolean;\n  data: any;\n  stepCompleted: Boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepForward: (data: any) => void;\n  handleStepBack: () => void;\n}\n\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\nconst videoFormats: Array<any> = [\"mp4\", \"wmv\", \"avi\"];\nconst docTypes: Array<any> = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"mp4\",\n  \"wmv\",\n  \"avi\",\n  \"pdf\",\n  \"doc\",\n  \"docx\",\n  \"msword\",\n];\nconst docformats: Array<any> = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst UploadMedia = ({\n  jobName,\n  title,\n  para,\n  hasDescription,\n  data,\n  stepCompleted,\n  handleStepForward,\n  handleStepComplete,\n  handleStepBack,\n}: Proptypes) => {\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n  const [filesUrl, setFilesUrl] = useState([] as any);\n  const [description, setDescription] = useState(\"\");\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [isItemsLoad, setLoadItems] = useState({});\n  const [countMedia, setCountMedia] = useState({ photos: 0, video: 0 });\n  const [renderAsyncLoad, setAsyncLoad] = useState<any>(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const isFileChoser = Boolean(anchorEl);\n\n  const fileChoserClicked = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const fileChoserClosed = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    if (stepCompleted) {\n      setFilesUrl(data?.urls);\n      setSubmitClicked(true);\n    }\n  }, [stepCompleted, data]);\n\n  useEffect(() => {\n    // filesUrl\n  }, []);\n\n  const randomDelay = (item: any, index: any) =>\n    new Promise((resolve) => {\n      let split_item_format = item.split(\".\");\n      let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n      let split_item_name = item.split(\"/\");\n      let get_split_name = split_item_name[split_item_name.length - 1];\n      let image_render: any = null;\n      let loadByIndex = { [index]: true };\n\n      if (get_split_fromat) {\n        if (imageFormats.includes(get_split_fromat)) {\n          image_render = (\n            <img\n              id={`media_${index}`}\n              onClick={() => {\n                setItemToggle(index);\n              }}\n              title={get_split_name}\n              src={item}\n              onLoad={() => {\n                loadByIndex[index] = false;\n                console.log(\"image_render\", \"--->\", { loadByIndex });\n              }}\n              alt=\"media\"\n            />\n          );\n        }\n      }\n\n      if (!loadByIndex[index]) {\n        console.log(\"Hered!!!\");\n        resolve(image_render);\n      }\n    });\n\n  const calc = async (item: any, index: any) => {\n    let result = await randomDelay(item, index);\n    console.log({ result });\n    return result;\n  };\n\n  const asyncFunc = async () => {\n    const p = filesUrl.map((item: any, index: any) => calc(item.link, index));\n    const results = await Promise.all(p);\n    setAsyncLoad(results);\n  };\n\n  useEffect(() => {\n    asyncFunc();\n  }, [filesUrl]);\n\n  const checkErrors = () => {\n    if (!filesUrl?.length) {\n      return true;\n    }\n\n    if (hasDescription && (!description.trim() || description.length > 1000)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const removeFromItem = (index: any) => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const checkIfVideoExist = () => {\n    let videoItems: any = [];\n    let ImageItems: any = [];\n    let concatFormat = [...imageFormats, ...docformats];\n    filesUrl.forEach((element: any) => {\n      let split_items = element.link.split(\".\");\n      let format_split_items = split_items[split_items?.length - 1];\n      if (videoFormats.includes(format_split_items)) {\n        videoItems.push(format_split_items);\n      }\n\n      if (concatFormat.includes(format_split_items)) {\n        ImageItems.push(format_split_items);\n      }\n    });\n    console.log({\n      concatFormat,\n      ImageItems,\n      videoItems,\n    });\n    if (ImageItems?.length === 6) {\n      return \".mp4, .wmv, .avi\";\n    }\n\n    if (videoItems?.length == 2) {\n      return \".png,.jpg,.jpeg,.pdf,.doc\";\n    }\n\n    return \".png,.jpg,.jpeg,.pdf,.doc,.mp4,.wmv,.avi\";\n  };\n\n  const checkIfVideoExist_ = () => {\n    let videoItems = [];\n    let ImageItems = [];\n    filesUrl.forEach((element: any) => {\n      let split_items = element.link.split(\".\");\n      let format_split_items = split_items[split_items?.length - 1];\n      if (videoFormats.includes(format_split_items)) {\n        videoItems.push(format_split_items);\n      }\n\n      if ([...imageFormats, ...docformats].includes(format_split_items)) {\n        ImageItems.push(format_split_items);\n      }\n    });\n\n    return {\n      videoCount: videoItems.length,\n      imageCount: ImageItems.length,\n    };\n  };\n\n  const onDropBoxSuccess = (files: any) => {\n    onFileChange(\"\", true, files[0]);\n  };\n\n  const onDropBoxCancel = (err: any) => {\n    console.log(err, \"err --- Dropbox\");\n  };\n\n  const onFileChange = async (\n    e: any,\n    isDropbox?: boolean,\n    dropBoxFile?: any\n  ) => {\n    console.log(onFileChange, \"onFileChange\");\n    const formData = new FormData();\n    var fileType;\n    const newFile = isDropbox ? dropBoxFile?.link : e.target.files[0];\n    if (isDropbox) {\n      let dropBoxArr: any = newFile?.split(\".\");\n      fileType = dropBoxArr[dropBoxArr.length - 1]?.toLowerCase();\n    } else {\n      fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n    }\n\n    fileChoserClosed();\n\n    if (hasDescription && !imageFormats.includes(fileType)) {\n      setShowToast(true, \"The file must be in proper format\");\n      return;\n    }\n\n    if (filesUrl?.length === 8) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    let checkCounts: any = checkIfVideoExist_();\n\n    if (checkCounts?.videoCount === 2) {\n      if (videoFormats.includes(fileType)) {\n        return;\n      }\n    }\n\n    if (checkCounts?.imageCount >= 6) {\n      let concatFormats = [...imageFormats, ...docformats];\n      if (concatFormats.includes(fileType)) {\n        return;\n      }\n    }\n\n    let filesUrlClone: any = filesUrl;\n\n    let countVideoFormats = filesUrlClone\n      .map((item: any) => {\n        let split_items = item.link.split(\".\");\n\n        let format_split_items = split_items[split_items?.length - 1];\n\n        if (videoFormats.includes(format_split_items)) {\n          return format_split_items;\n        }\n      })\n      .filter((item: any) => item !== undefined);\n\n    var selectedFileSize = isDropbox\n      ? dropBoxFile?.bytes / 1024 / 1024\n      : newFile?.size / 1024 / 1024; // size in mb\n\n    if (docTypes.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    if (videoFormats.includes(fileType)) {\n      // video validations\n      if (selectedFileSize > 10) {\n        setShowToast(true, \"The video file size must be below 20 mb\");\n        return;\n      }\n      if (countVideoFormats?.length > 1) {\n        setShowToast(true, \"Max video file upload limit is 2\");\n        return;\n      }\n    }\n\n    !isDropbox && formData.append(\"file\", newFile);\n    setLoadItems({});\n    const res: any = isDropbox\n      ? { success: true }\n      : await onFileUpload(formData);\n    setLoading(true);\n    if (res.success) {\n      let link: string = isDropbox ? dropBoxFile?.link : res?.imgUrl;\n      let check_type: any = imageFormats.includes(fileType)\n        ? 1\n        : videoFormats.includes(fileType)\n        ? 2\n        : [\"doc\", \"docx\", \"msword\"].includes(fileType)\n        ? 3\n        : 4;\n      setFilesUrl((prev: Array<any>) => [\n        ...prev,\n        {\n          mediaType: check_type,\n          link: link,\n        },\n      ]);\n      setLoadItems((prev: any) => ({\n        [filesUrl.length - 1]: false,\n      }));\n      setLocalFiles((prev: any) => ({\n        ...prev,\n        [filesUrl?.length]: isDropbox\n          ? dropBoxFile?.link\n          : URL.createObjectURL(newFile),\n      }));\n    }\n  };\n\n  const setItemToggle = (index: any) => {\n    setToggler((prev: boolean) => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderbyFileFormat = (item: any, index: any, base64?: any) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render: any = null;\n    let loadByIndex = { [index]: true };\n    // setLoading(true);\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = (\n          <img\n            id={`media_${index}`}\n            // onClick={() => { setItemToggle(index) }}\n            title={get_split_name}\n            src={item}\n            async-src={item}\n            decoding=\"async\"\n            loading=\"lazy\"\n            onLoad={() => {\n              console.log(\"Loaded!\");\n              loadByIndex[index] = false;\n              console.log(\"image_render\", \"--->\", { loadByIndex });\n              setLoadItems((prev: any) => ({\n                [index]: true,\n              }));\n            }}\n            alt=\"media\"\n          />\n        );\n      }\n\n      if (videoFormats.includes(get_split_fromat)) {\n        if (base64) {\n          image_render = (\n            <video\n              id={`media_${index}`}\n              title={get_split_name}\n              crossOrigin=\"anonymous\"\n              src={item}\n              poster={base64}\n              controls={false}\n              onLoadedData={() => {\n                console.log(\"Loaded!\");\n                setLoadItems((prev: any) => ({\n                  [index]: true,\n                }));\n              }}\n              // onClick={() => { setItemToggle(index) }}\n            />\n          );\n        } else {\n          image_render = (\n            <video\n              id={`media_${index}`}\n              crossOrigin=\"anonymous\"\n              src={item}\n              controls={false}\n              title={get_split_name}\n              onLoadedData={() => {\n                console.log(\"Loaded!\");\n                setLoadItems((prev: any) => ({\n                  [index]: true,\n                }));\n              }}\n              // onClick={() => { setItemToggle(index) }}\n            />\n          );\n        }\n      }\n\n      if (docformats.includes(get_split_fromat)) {\n        image_render = (\n          <img\n            id={`media_${index}`}\n            title={get_split_name}\n            src={docThumbnail}\n            async-src={item}\n            decoding=\"async\"\n            loading=\"lazy\"\n            onLoad={() => {\n              loadByIndex[index] = false;\n              console.log(\"Loaded!\");\n              setLoadItems((prev: any) => ({\n                [index]: true,\n              }));\n            }}\n            alt=\"media\"\n          />\n        );\n      }\n      return (\n        <figure className=\"img_video\">\n          <React.Fragment>\n            {image_render && (\n              <React.Fragment>\n                {image_render}\n                <img\n                  onClick={() => {\n                    removeFromItem(index);\n                  }}\n                  src={remove}\n                  alt=\"remove\"\n                  className=\"remove\"\n                />\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </figure>\n      );\n      // }\n    }\n  };\n\n  // const { sources, types } = renderFilteredItems();\n  let IsRenderValues = null;\n  if (Object.values(isItemsLoad)?.length) {\n    IsRenderValues =\n      Array.isArray(Object.values(isItemsLoad)) &&\n      Object.values(isItemsLoad)[0] === true\n        ? Object.values(isItemsLoad)[0]\n        : false;\n  }\n\n  if (IsRenderValues === false) {\n    setLoading(true);\n  }\n\n  if (IsRenderValues === true) {\n    setLoading(false);\n  }\n\n  let checkErrors_: any = checkErrors();\n  console.log({ IsRenderValues, isItemsLoad, check: checkErrors_ });\n  return (\n    <div className={`app_wrapper${jobName ? \" padding_0\" : \"\"}`}>\n      <div className={`section_wrapper${jobName ? \" padding_0\" : \"\"}`}>\n        <div className=\"custom_container\">\n          {/* <FsLightbox\n                        toggler={toggler}\n                        slide={selectedSlide}\n                        sources={sources}\n                        types={types}\n                        key={sources?.length}\n                        onClose={() => {\n                            setSelectSlide(1)\n                        }}\n                    /> */}\n\n          <canvas id=\"canvas-extractor\" style={{ display: \"none\" }}></canvas>\n\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className={`flex_col_sm_${jobName ? \"7\" : \"6\"}`}>\n                <div className=\"relate\">\n                  <button\n                    onClick={() => {\n                      hasDescription ? handleStepBack() : handleStepForward(6);\n                    }}\n                    className=\"back\"\n                  ></button>\n                  <span className={jobName ? \"xs_sub_title\" : \"title\"}>\n                    {jobName || \"Photos and documents\"}\n                  </span>\n                </div>\n                {title && <span className=\"sub_title\">{title}</span>}\n                <p className=\"commn_para\">\n                  {/* {para || \"Record maximum 2 short videos or 6 doc files/images to demonstrate your job and any unique requirements.\"} */}\n                  {para ||\n                    \"Record a short video (up to 30 seconds) or add up to 6 photos and files to demonstrate your job and any unique requirements.\"}\n                </p>\n              </div>\n              {!jobName && !filesUrl?.length && !hasDescription ? (\n                <div className=\"flex_col_sm_5 text-right\">\n                  <span\n                    onClick={() => {\n                      handleStepForward(14);\n                    }}\n                    className=\"link\"\n                  >\n                    {\"Skip\"}\n                  </span>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_12\">\n              <div className=\"upload_img_video\">\n                {/* {renderAsyncLoad ? renderAsyncLoad : null} */}\n                {filesUrl?.length\n                  ? filesUrl.map((item: any, index: number) =>\n                      renderbyFileFormat(item?.link, index, item?.base64)\n                    )\n                  : null}\n\n                <button\n                  className=\"media_btn\"\n                  id=\"fade-button\"\n                  aria-controls={isFileChoser ? \"fade-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={isFileChoser ? \"true\" : undefined}\n                  onClick={fileChoserClicked}\n                >\n                  <img src={addMedia} alt=\"\" />\n                </button>\n\n                <Menu\n                  className=\"fsp_modal range dropbox\"\n                  id=\"fade-menu\"\n                  MenuListProps={{\n                    \"aria-labelledby\": \"fade-button\",\n                  }}\n                  anchorEl={anchorEl}\n                  open={isFileChoser}\n                  onClose={fileChoserClosed}\n                  TransitionComponent={Fade}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"left\",\n                  }}\n                >\n                  {filesUrl?.length < 8 ? (\n                    <React.Fragment>\n                      <label\n                        className=\"upload_media\"\n                        htmlFor=\"upload_img_video\"\n                      >\n                        {/* <img src={addMedia} alt=\"\" /> */}\n                        Upload from files\n                      </label>\n                      {!hasDescription ? (\n                        <>\n                          <input\n                            onChange={onFileChange}\n                            type=\"file\"\n                            accept={checkIfVideoExist()}\n                            style={{ display: \"none\" }}\n                                                      id=\"upload_img_video\"\n                                                      multiple\n                          />\n                          <DropboxChooser\n                            appKey={process.env.REACT_APP_DROPBOX_APP_KEY}\n                            success={(files: any) => onDropBoxSuccess(files)}\n                            cancel={(err: any) => onDropBoxCancel(err)}\n                            multiselect={false}\n                            linkType={\"direct\"}\n                          >\n                            <button className=\"dropbox-button\">\n                              Upload from Dropbox\n                            </button>\n                          </DropboxChooser>\n                        </>\n                      ) : (\n                        <>\n                          <input\n                            onChange={onFileChange}\n                            type=\"file\"\n                            accept={\n                              hasDescription\n                                ? \"image/png,image/jpg,image/jpeg\"\n                                : \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                            }\n                            style={{ display: \"none\" }}\n                            id=\"upload_img_video\"\n                          />\n                          <DropboxChooser\n                            appKey={process.env.REACT_APP_DROPBOX_APP_KEY}\n                            success={(files: any) => onDropBoxSuccess(files)}\n                            cancel={(err: any) => onDropBoxCancel(err)}\n                            multiselect={false}\n                            linkType={\"direct\"}\n                          >\n                            <button className=\"dropbox-button\">\n                              Upload from Dropbox\n                            </button>\n                          </DropboxChooser>\n                        </>\n                      )}\n                    </React.Fragment>\n                  ) : null}\n                </Menu>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n              {hasDescription && (\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Photo Description</label>\n                  <div className=\"text_field\">\n                    <textarea\n                      placeholder=\"The item has..\"\n                      value={description}\n                      onChange={({ target: { value } }: any) =>\n                        setDescription(value)\n                      }\n                    />\n                    {description.length ? (\n                      <span className=\"char_count\">\n                        {`character length : ${description.length} / 1000`}\n                      </span>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                  <span className=\"error_msg\">\n                    {submitClicked && !description.trim()\n                      ? \"Photo Description is required.\"\n                      : description.length > 1000\n                      ? \"Maximum 1000 characters are allowed.\"\n                      : \"\"}\n                  </span>\n                </div>\n              )}\n              <div className=\"form_field\">\n                <button\n                  onClick={() => {\n                    setSubmitClicked(true);\n                    let filteredItems: any = [];\n                    let isRender: boolean = false;\n                    filesUrl.forEach((item: any, index: any) => {\n                      if (item?.mediaType === 2) {\n                        if (!item?.base64) {\n                          let base64 = thumbnailExtract({\n                            canvasId: \"#canvas-extractor\",\n                            videoId: `#media_${index}`,\n                          });\n                          item[\"base64\"] = base64;\n                        }\n                      }\n                      filteredItems.push(item);\n                    });\n                    if (!isRender) {\n                      setFilesUrl(filteredItems);\n                      handleStepComplete({\n                        urls: filteredItems,\n                        description: hasDescription ? description : undefined,\n                      });\n                    }\n                  }}\n                  className={`fill_btn full_btn btn-effect ${\n                    checkErrors_ && IsRenderValues == null\n                      ? \"disable_btn\"\n                      : !checkErrors_ && !IsRenderValues\n                      ? \"disable_btn\"\n                      : \"\"\n                  }`}\n                >\n                  {\"Submit\"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadMedia;\n"]},"metadata":{},"sourceType":"module"}