{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/payment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Constants from '../../../utils/constants';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction valuetext(value) {\n  return `${value}Â°C`;\n}\n\n// \"Per hour\" and \"Fixed price\"\nconst Payment = ({\n  data,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  const {\n    errorStrings\n  } = Constants;\n  const [paymentDetails, setPaymentDetails] = useState({\n    pay_type: 'Per hour',\n    amount: ''\n  });\n  const [errors, setErrors] = useState({\n    pay_type: '',\n    amount: ''\n  });\n  const [continueClicked, setContinueClicked] = useState(false);\n  const [localChanges, setLocationChanges] = useState(false);\n  const [reactSelect, setReactSelect] = useState({\n    value: \"Per hour\",\n    label: \"Per Hour\"\n  });\n  const [checkType, setCheckType] = useState('1');\n  const [canDisable, setCanDisable] = useState('0');\n  useEffect(() => {\n    if (stepCompleted && !localChanges) {\n      setPaymentDetails({\n        pay_type: data.pay_type || 'Fixed price',\n        amount: data.amount\n      });\n\n      if (data.quoteJob == '0') {\n        if (data.pay_type === 'Per hour') {\n          setReactSelect({\n            value: 'Per hour',\n            label: 'Per Hour'\n          });\n        } else {\n          setReactSelect({\n            value: 'Fixed price',\n            label: 'Fixed Price'\n          });\n        }\n\n        setCheckType('1');\n      } else {\n        setCheckType('2'); // setCanDisable('1');\n      }\n\n      setLocationChanges(true);\n    }\n  }, [stepCompleted, data]); // for error messages\n\n  const label = {\n    pay_type: 'Pay Type',\n    amount: 'Price'\n  };\n\n  const checkDecimal = (name, value) => {\n    let split_values = value.split('.');\n    console.log({\n      split_values\n    });\n\n    if (split_values.length) {\n      let first = split_values[0];\n      let last = split_values[1];\n\n      if (last && (last === null || last === void 0 ? void 0 : last.length) > 2) {\n        return 'Price field must have maximum 2 digits after decimal';\n      }\n\n      if (first && (first === null || first === void 0 ? void 0 : first.length) > 6) {\n        return 'Price field must have 6 or less digits before decimal';\n      }\n\n      let value_ = +value;\n\n      if (value_ !== 0 && value_ < 10) {\n        return 'Minimum amount value is 10.';\n      }\n\n      return '';\n    } else {\n      return '';\n    }\n  };\n\n  const isInvalid = (name, value) => {\n    switch (name) {\n      case 'pay_type':\n        return !value.length ? `${label[name]} is required.` : '';\n\n      case 'amount':\n        return !value.length || +value < 1 ? `${label[name]} is required.` : checkDecimal(name, value);\n    }\n  };\n\n  const handleChange = (value, name) => {\n    setErrors(prevErrors => ({ ...prevErrors,\n      [name]: isInvalid(name, value)\n    }));\n    setPaymentDetails(prevDetails => {\n      // if (name === \"pay_type\" && prevDetails.pay_type !== value) {\n      //   prevDetails.amount = '';\n      // }\n      return { ...prevDetails,\n        [name]: value\n      };\n    });\n  };\n\n  const handleContinue = e => {\n    e.preventDefault();\n    let hasErrors;\n\n    if (!continueClicked) {\n      setContinueClicked(true);\n\n      if (checkType == '2') {\n        handleStepComplete({\n          quoteJob: '1'\n        });\n        return;\n      }\n\n      hasErrors = Object.keys(paymentDetails).reduce((prevError, name) => {\n        const hasError = !!isInvalid(name, paymentDetails[name]);\n        setErrors(prevErrors => ({ ...prevErrors,\n          [name]: isInvalid(name, paymentDetails[name])\n        }));\n        return hasError || prevError;\n      }, false);\n    }\n\n    if (!hasErrors) {\n      let paymentdt = { ...paymentDetails,\n        quoteJob: '0'\n      };\n      console.log({\n        paymentdt\n      });\n      handleStepComplete(paymentdt);\n    } else {\n      setContinueClicked(false);\n    }\n  };\n\n  const checkErrors = () => {\n    if (checkType == '2') {\n      return false;\n    }\n\n    let value_1 = paymentDetails['pay_type'];\n    let value_2 = paymentDetails['amount'];\n\n    if (value_1 && value_2) {\n      let error_1 = isInvalid('pay_type', paymentDetails['pay_type']);\n      let error_2 = isInvalid('amount', paymentDetails['amount']);\n\n      if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length) && !(error_2 === null || error_2 === void 0 ? void 0 : error_2.length)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const priceOptions = [{\n    value: 'Per hour',\n    label: 'Per Hour'\n  }, {\n    value: 'Fixed price',\n    label: 'Fixed Price'\n  }];\n  const {\n    pay_type,\n    amount\n  } = paymentDetails;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: handleStepBack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \"Job type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox_wrap agree_check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: () => {\n                // if (canDisable !== '1') {\n                checkType !== '1' ? setCheckType('1') : setCheckType('0'); // }\n              },\n              checked: checkType === '1' ? true : false,\n              className: \"filter-type filled-in\",\n              type: \"checkbox\",\n              id: \"milestone1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"milestone1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ft_bold\",\n                children: 'I have a budget'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-title\",\n                children: \"How would you like to pay for it?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          style: {\n            paddingLeft: '35px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_5\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Price\",\n                      name: \"Price\",\n                      className: \"detect_input_ltr\",\n                      min: \"10\" // min=\"1\"\n                      ,\n                      step: \".01\",\n                      required: true,\n                      value: Number(amount) ? amount : '',\n                      readOnly: checkType === '2' ? true : false,\n                      onChange: ({\n                        target: {\n                          value\n                        }\n                      }) => handleChange(value, 'amount')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"detect_icon_ltr dollar\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg mtb-15\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      className: \"select_menu\",\n                      value: reactSelect,\n                      options: priceOptions,\n                      isDisabled: checkType === '2' ? true : false,\n                      onChange: item => {\n                        setReactSelect(item);\n                        handleChange(item === null || item === void 0 ? void 0 : item.value, 'pay_type');\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox_wrap agree_check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: () => {\n                if (checkType !== '2') {\n                  setCheckType('2');\n                } else {\n                  setCheckType('0');\n                }\n\n                setPaymentDetails({\n                  pay_type: 'Per hour',\n                  amount: ''\n                });\n                setErrors({\n                  pay_type: '',\n                  amount: ''\n                });\n              },\n              checked: checkType === '2' ? true : false,\n              className: \"filter-type filled-in\",\n              type: \"checkbox\",\n              id: \"milestone2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"milestone2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ft_bold\",\n                children: 'I need a quote'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sub-title\",\n                children: \"Find a quote that suits your budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`,\n            onClick: handleContinue,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"xJLaeYZwAV+ul//yn+sFaZJERHA=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/payment.tsx"],"names":["React","useEffect","useState","Constants","Select","valuetext","value","Payment","data","stepCompleted","handleStepComplete","handleStepBack","errorStrings","paymentDetails","setPaymentDetails","pay_type","amount","errors","setErrors","continueClicked","setContinueClicked","localChanges","setLocationChanges","reactSelect","setReactSelect","label","checkType","setCheckType","canDisable","setCanDisable","quoteJob","checkDecimal","name","split_values","split","console","log","length","first","last","value_","isInvalid","handleChange","prevErrors","prevDetails","handleContinue","e","preventDefault","hasErrors","Object","keys","reduce","prevError","hasError","paymentdt","checkErrors","value_1","value_2","error_1","error_2","priceOptions","paddingLeft","Number","target","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Constants from '../../../utils/constants';\nimport Select from 'react-select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nfunction valuetext(value: number) {\n  return `${value}Â°C`;\n}\n\ninterface Proptypes {\n  data: any;\n  stepCompleted: Boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepBack: () => void;\n}\n// \"Per hour\" and \"Fixed price\"\nconst Payment = ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n  const { errorStrings } = Constants;\n\n  const [paymentDetails, setPaymentDetails] = useState<{ [index: string]: string }>({ pay_type: 'Per hour', amount: '' });\n  const [errors, setErrors] = useState({ pay_type: '', amount: '' });\n  const [continueClicked, setContinueClicked] = useState(false);\n  const [localChanges, setLocationChanges] = useState(false);\n  const [reactSelect, setReactSelect] = useState({ value: \"Per hour\", label: \"Per Hour\" });\n\n  const [checkType, setCheckType] = useState('1');\n  const [canDisable, setCanDisable] = useState('0');\n\n  useEffect(() => {\n    if (stepCompleted && !localChanges) {\n      setPaymentDetails({\n        pay_type: data.pay_type || 'Fixed price',\n        amount: data.amount\n      });\n\n      if (data.quoteJob == '0') {\n        if (data.pay_type === 'Per hour') {\n          setReactSelect({ value: 'Per hour', label: 'Per Hour' });\n        } else {\n          setReactSelect({ value: 'Fixed price', label: 'Fixed Price' });\n        }\n        setCheckType('1');\n      } else {\n        setCheckType('2');\n        // setCanDisable('1');\n      }\n\n      setLocationChanges(true);\n    }\n  }, [stepCompleted, data]);\n\n  // for error messages\n  const label: { [index: string]: string } = {\n    pay_type: 'Pay Type',\n    amount: 'Price',\n  }\n\n  const checkDecimal = (name: string, value: string) => {\n    let split_values = value.split('.');\n    console.log({\n      split_values\n    })\n    if (split_values.length) {\n      let first: any = split_values[0];\n      let last: any = split_values[1];\n\n      if (last && last?.length > 2) {\n        return 'Price field must have maximum 2 digits after decimal';\n      }\n\n      if (first && first?.length > 6) {\n        return 'Price field must have 6 or less digits before decimal';\n      }\n\n      let value_: number = +value;\n      if (value_ !== 0 && value_ < 10) {\n        return 'Minimum amount value is 10.'\n      }\n      return ''\n\n    } else {\n      return '';\n    }\n  }\n  const isInvalid = (name: string, value: string) => {\n    switch (name) {\n      case 'pay_type':\n        return !value.length ? `${label[name]} is required.` : '';\n      case 'amount':\n        return !value.length || +value < 1 ? `${label[name]} is required.` : checkDecimal(name, value);\n    }\n  }\n\n  const handleChange = (value: string, name: string) => {\n\n    setErrors((prevErrors: any) => ({\n      ...prevErrors,\n      [name]: isInvalid(name, value),\n    }));\n\n    setPaymentDetails((prevDetails) => {\n      // if (name === \"pay_type\" && prevDetails.pay_type !== value) {\n      //   prevDetails.amount = '';\n      // }\n      return ({\n        ...prevDetails,\n        [name]: value,\n      })\n    })\n  };\n\n  const handleContinue = (e: any) => {\n    e.preventDefault();\n    let hasErrors;\n\n    if (!continueClicked) {\n      setContinueClicked(true);\n\n\n      if (checkType == '2') {\n        handleStepComplete({\n          quoteJob: '1'\n        });\n        return\n      }\n\n      hasErrors = Object.keys(paymentDetails).reduce((prevError, name) => {\n        const hasError = !!isInvalid(name, paymentDetails[name]);\n        setErrors((prevErrors) => ({\n          ...prevErrors,\n          [name]: isInvalid(name, paymentDetails[name]),\n        }));\n        return hasError || prevError;\n      }, false);\n    }\n\n    if (!hasErrors) {\n      let paymentdt = {\n        ...paymentDetails,\n        quoteJob: '0'\n      };\n      console.log({ paymentdt })\n      handleStepComplete(paymentdt);\n\n    } else {\n      setContinueClicked(false);\n    }\n  };\n\n  const checkErrors = () => {\n\n    if (checkType == '2') {\n      return false;\n    }\n    let value_1 = paymentDetails['pay_type'];\n    let value_2 = paymentDetails['amount'];\n    if (value_1 && value_2) {\n      let error_1 = isInvalid('pay_type', paymentDetails['pay_type']);\n      let error_2 = isInvalid('amount', paymentDetails['amount']);\n      if (!error_1?.length && !error_2?.length) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const priceOptions = [\n    { value: 'Per hour', label: 'Per Hour' },\n    { value: 'Fixed price', label: 'Fixed Price' },\n  ];\n\n\n  const { pay_type, amount } = paymentDetails;\n  return (\n\n    <div className=\"app_wrapper\">\n      <div className=\"section_wrapper\">\n        <div className=\"custom_container\">\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_5\">\n                <div className=\"relate\">\n                  <button className=\"back\" onClick={handleStepBack}></button>\n                  <span className=\"title\">Job type</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* {'CR Change'} */}\n          <div className=\"form_field\">\n            <div className=\"checkbox_wrap agree_check\">\n              <input\n                onChange={() => {\n                  // if (canDisable !== '1') {\n                    checkType !== '1' ? setCheckType('1') : setCheckType('0')\n                  // }\n                }}\n                checked={checkType === '1' ? true : false}\n                className=\"filter-type filled-in\"\n                type=\"checkbox\"\n                id=\"milestone1\" />\n              <label htmlFor=\"milestone1\">\n              <span className=\"ft_bold\">\n                  {'I have a budget'}\n                  </span>\n                <div className=\"sub-title\">\n                  How would you like to pay for it?\n                </div>\n              </label>\n            </div>\n          </div>\n\n          <div className=\"flex_row\" style={{ paddingLeft: '35px' }}>\n            <div className=\"flex_col_sm_5\">\n              <div className=\"flex_row\">\n                <div className=\"flex_col_sm_5\">\n                  <div className=\"form_field\">\n                    <div className=\"text_field\">\n                      <input\n                        type=\"number\"\n                        placeholder=\"Price\"\n                        name=\"Price\"\n                        className=\"detect_input_ltr\"\n                        min=\"10\"\n                        // min=\"1\"\n                        step=\".01\"\n                        required\n                        value={Number(amount) ? amount : ''}\n                        readOnly={checkType === '2' ? true : false}\n                        onChange={({ target: { value } }) => handleChange(value, 'amount')}\n                      />\n                      <span className=\"detect_icon_ltr dollar\">$</span>\n                    </div>\n                    <span className=\"error_msg mtb-15\">{errors?.amount}</span>\n                  </div>\n                </div>\n                <div className=\"flex_col_sm_5\">\n                  <div className=\"form_field\">\n                    <div className=\"text_field\">\n                      <Select\n                        className=\"select_menu\"\n                        value={reactSelect}\n                        options={priceOptions}\n                        isDisabled={checkType === '2' ? true : false}\n                        onChange={(item: any) => {\n                          setReactSelect(item);\n                          handleChange(item?.value, 'pay_type')\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n            <div className=\"form_field\">\n              <div className=\"checkbox_wrap agree_check\">\n                <input\n                  onChange={() => {\n                    if (checkType !== '2') {\n                      setCheckType('2')\n                    } else {\n                      setCheckType('0')\n                    }\n                    setPaymentDetails({ pay_type: 'Per hour', amount: '' })\n                    setErrors({ pay_type: '', amount: '' });\n                  }}\n                  checked={checkType === '2' ? true : false}\n                  className=\"filter-type filled-in\"\n                  type=\"checkbox\"\n                  id=\"milestone2\" />\n                <label htmlFor=\"milestone2\">\n                  <span className=\"ft_bold\">\n                  {'I need a quote'}\n                  </span>\n                  <div className=\"sub-title\">\n                    Find a quote that suits your budget\n                  </div>\n                </label>\n              </div>\n            </div>\n          \n\n          <div className=\"form_field\">\n            <button\n              className={`fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`}\n              onClick={handleContinue}>Continue</button>\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}