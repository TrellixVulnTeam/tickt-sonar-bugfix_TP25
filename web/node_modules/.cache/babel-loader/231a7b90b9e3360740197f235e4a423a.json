{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/common/DocViewer.js\";\nimport React from 'react';\nimport DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DocViewerComponent = ({\n  src,\n  width,\n  height,\n  isHeader\n}) => {\n  // https://docs.google.com/viewer?url=\n  let checkFormat = src;\n  let splitElements = checkFormat.split('.');\n  let extension = splitElements[(splitElements === null || splitElements === void 0 ? void 0 : splitElements.length) - 1];\n  let screenWidth = window.screen.width; // console.log({ src, width, height, screenWidth })\n\n  return /*#__PURE__*/_jsxDEV(DocViewer, {\n    pluginRenderers: DocViewerRenderers,\n    documents: [{\n      uri: src,\n      fileType: extension\n    }],\n    style: {\n      height: height ? height : window.screen.height,\n      width: '100%',\n      paddingTop: width !== '100%' ? 80 : 0\n    },\n    theme: {\n      disableThemeScrollbar: true\n    },\n    config: {\n      header: {\n        disableHeader: isHeader ? false : true,\n        disableFileName: false,\n        retainURLParams: true\n      }\n    },\n    className: `${isHeader ? '' : 'doc-viewer-download-disabled'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this); // return (\n  //     <div>\n  //         <iframe\n  //             src={'https://docs.google.com/gview?url=' + src + '&embedded=true'}\n  //             sandbox='allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-top-navigation'\n  //             allow=\"fullscreen\"\n  //             allowFullScreen=\"allow\"\n  //             title=\"file\"\n  //             width={width || '100%'}\n  //             style={{ minHeight: height || '800px', maxHeight: '2000px' }}\n  //         // style={{ Height: '450px', maxHeight: '450px', overflowY: 'scroll' }}\n  //         ></iframe>\n  //     </div>\n  // )\n};\n\n_c = DocViewerComponent;\nexport default DocViewerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocViewerComponent\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/DocViewer.js"],"names":["React","DocViewer","DocViewerRenderers","DocViewerComponent","src","width","height","isHeader","checkFormat","splitElements","split","extension","length","screenWidth","window","screen","uri","fileType","paddingTop","disableThemeScrollbar","header","disableHeader","disableFileName","retainURLParams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,kBAApB,QAA8C,kBAA9C;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,KAAP;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA;AAAtB,CAAD,KAAsC;AAC7D;AACA,MAAIC,WAAW,GAAGJ,GAAlB;AACA,MAAIK,aAAa,GAAGD,WAAW,CAACE,KAAZ,CAAkB,GAAlB,CAApB;AACA,MAAIC,SAAS,GAAGF,aAAa,CAAC,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEG,MAAf,IAAwB,CAAzB,CAA7B;AACA,MAAIC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcV,KAAhC,CAL6D,CAM7D;;AACA,sBACI,QAAC,SAAD;AACI,IAAA,eAAe,EAAEH,kBADrB;AAEI,IAAA,SAAS,EAAE,CAAC;AAAEc,MAAAA,GAAG,EAAEZ,GAAP;AAAYa,MAAAA,QAAQ,EAAEN;AAAtB,KAAD,CAFf;AAGI,IAAA,KAAK,EAAE;AACHL,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAH,GAAYQ,MAAM,CAACC,MAAP,CAAcT,MADrC;AAEHD,MAAAA,KAAK,EAAE,MAFJ;AAGHa,MAAAA,UAAU,EAAEb,KAAK,KAAK,MAAV,GAAmB,EAAnB,GAAwB;AAHjC,KAHX;AAQI,IAAA,KAAK,EAAE;AACHc,MAAAA,qBAAqB,EAAE;AADpB,KARX;AAWI,IAAA,MAAM,EAAE;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,aAAa,EAAEd,QAAQ,GAAG,KAAH,GAAW,IAD9B;AAEJe,QAAAA,eAAe,EAAE,KAFb;AAGJC,QAAAA,eAAe,EAAE;AAHb;AADJ,KAXZ;AAkBI,IAAA,SAAS,EAAG,GAAEhB,QAAQ,GAAG,EAAH,GAAQ,8BAA+B;AAlBjE;AAAA;AAAA;AAAA;AAAA,UADJ,CAP6D,CA8B7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA5CD;;KAAMJ,kB;AA8CN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\nimport DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\n\nconst DocViewerComponent = ({ src, width, height, isHeader }) => {\n    // https://docs.google.com/viewer?url=\n    let checkFormat = src;\n    let splitElements = checkFormat.split('.');\n    let extension = splitElements[splitElements?.length - 1];\n    let screenWidth = window.screen.width;\n    // console.log({ src, width, height, screenWidth })\n    return (\n        <DocViewer\n            pluginRenderers={DocViewerRenderers}\n            documents={[{ uri: src, fileType: extension }]}\n            style={{\n                height: height ? height : window.screen.height,\n                width: '100%',\n                paddingTop: width !== '100%' ? 80 : 0\n            }}\n            theme={{\n                disableThemeScrollbar: true,\n            }}\n            config={{\n                header: {\n                    disableHeader: isHeader ? false : true,\n                    disableFileName: false,\n                    retainURLParams: true,\n                }\n            }}\n            className={`${isHeader ? '' : 'doc-viewer-download-disabled'}`}\n        />\n    )\n\n    // return (\n    //     <div>\n    //         <iframe\n    //             src={'https://docs.google.com/gview?url=' + src + '&embedded=true'}\n    //             sandbox='allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-top-navigation'\n    //             allow=\"fullscreen\"\n    //             allowFullScreen=\"allow\"\n    //             title=\"file\"\n    //             width={width || '100%'}\n    //             style={{ minHeight: height || '800px', maxHeight: '2000px' }}\n    //         // style={{ Height: '450px', maxHeight: '450px', overflowY: 'scroll' }}\n    //         ></iframe>\n    //     </div>\n    // )\n}\n\nexport default DocViewerComponent;\n"]},"metadata":{},"sourceType":"module"}