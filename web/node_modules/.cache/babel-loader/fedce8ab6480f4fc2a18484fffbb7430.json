{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{getStripeClientSecretkey,saveStripeTransaction}from'../../../../redux/auth/actions';import{milestoneAcceptOrDecline}from'../../../../redux/homeSearch/actions';import{setShowToast}from'../../../../redux/common/actions';import{useStripe,useElements,AuBankAccountElement}from'@stripe/react-stripe-js';import BecsForm from'./becsForm';import{useHistory}from'react-router-dom';import{moengage,mixPanel}from'../../../../services/analyticsTools';import{MoEConstants}from'../../../../utils/constants';import{jsx as _jsx}from\"react/jsx-runtime\";export default function PaymentSetupForm(props){var stripe=useStripe();var elements=useElements();var history=useHistory();//   const stripe = useStripe('stripePublishableKey', {\n//     stripeAccount: 'stripeAccountId',\n//   });\nvar handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e,accountName,accountEmail){var _props$milestoneTotal;var auBankAccount,res,result,_props$milestoneTotal2,paymentIntent,data,_res,_props$milestoneAmoun,data_,mData1,response,mData2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(!stripe||!elements)){_context.next=4;break;}console.log('Stripe.js has not yet loaded');return _context.abrupt(\"return\");case 4:auBankAccount=elements.getElement(AuBankAccountElement);_context.next=7;return getStripeClientSecretkey({amount:(_props$milestoneTotal=props.milestoneTotalAmount)===null||_props$milestoneTotal===void 0?void 0:_props$milestoneTotal.slice(1),tradieId:props.tradieId,builderId:props.builderId,jobId:props.jobId,milestoneId:props.milestoneId});case 7:res=_context.sent;if(!res.success){_context.next=32;break;}_context.next=11;return stripe.confirmAuBecsDebitPayment(res.stripeClientSecretkey,{payment_method:{au_becs_debit:props.isAddnewAccount?auBankAccount:null,// au_becs_debit: { bsb_number: '000000', account_number: '000123456' },\nbilling_details:{name:accountName,email:accountEmail}}});case 11:result=_context.sent;if(!result.error){_context.next=17;break;}setShowToast(true,'Milestone payment failed. Please try after some time');console.log('STRIPE payment error: ',result.error.message);_context.next=32;break;case 17:setShowToast(true,'Milestone payment initiated, will take upto 3 business days to settle.');paymentIntent=result.paymentIntent;data={amount:\"\".concat((_props$milestoneTotal2=props.milestoneTotalAmount)===null||_props$milestoneTotal2===void 0?void 0:_props$milestoneTotal2.slice(1)),builderId:props.builderId,tradieId:props.tradieId,transactionId:paymentIntent===null||paymentIntent===void 0?void 0:paymentIntent.id,jobId:props.jobId,milestoneId:props.milestoneId,status:paymentIntent===null||paymentIntent===void 0?void 0:paymentIntent.status};_context.next=22;return saveStripeTransaction(data);case 22:_res=_context.sent;if(!_res.success){_context.next=32;break;}data_={\"status\":1,\"jobId\":props.jobId,\"milestoneId\":props.milestoneId,\"paymentMethodId\":'Bank Account',\"milestoneAmount\":\"\".concat((_props$milestoneAmoun=props.milestoneAmount)===null||_props$milestoneAmoun===void 0?void 0:_props$milestoneAmoun.slice(1)),\"amount\":\"\".concat(paymentIntent===null||paymentIntent===void 0?void 0:paymentIntent.amount)};mData1={Category:props===null||props===void 0?void 0:props.category,timeStamp:moengage.getCurrentTimeStamp()};moengage.moE_SendEvent(MoEConstants.MADE_PAYMENT,mData1);mixPanel.mixP_SendEvent(MoEConstants.MADE_PAYMENT,mData1);_context.next=30;return milestoneAcceptOrDecline(data_);case 30:response=_context.sent;if(response===null||response===void 0?void 0:response.success){mData2=_objectSpread(_objectSpread({},mData1),{},{'Milestone number':(props===null||props===void 0?void 0:props.milestoneNumber)+1});moengage.moE_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED,mData2);mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED,mData2);history.push('/need-approval-success?payMode=bank');}case 32:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x,_x2,_x3){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(BecsForm,{onSubmit:handleSubmit,disabled:!stripe,jobName:props.jobName,milestoneTotalAmount:props.milestoneTotalAmount,backToScreen:props.backToScreen});}","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/addBankDetails/paymentSetupForm.jsx"],"names":["getStripeClientSecretkey","saveStripeTransaction","milestoneAcceptOrDecline","setShowToast","useStripe","useElements","AuBankAccountElement","BecsForm","useHistory","moengage","mixPanel","MoEConstants","PaymentSetupForm","props","stripe","elements","history","handleSubmit","e","accountName","accountEmail","preventDefault","console","log","auBankAccount","getElement","amount","milestoneTotalAmount","slice","tradieId","builderId","jobId","milestoneId","res","success","confirmAuBecsDebitPayment","stripeClientSecretkey","payment_method","au_becs_debit","isAddnewAccount","billing_details","name","email","result","error","message","paymentIntent","data","transactionId","id","status","data_","milestoneAmount","mData1","Category","category","timeStamp","getCurrentTimeStamp","moE_SendEvent","MADE_PAYMENT","mixP_SendEvent","response","mData2","milestoneNumber","MILESTONE_CHECKED_AND_APPROVED","push","jobName","backToScreen"],"mappings":"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","sourcesContent":["import { getStripeClientSecretkey, saveStripeTransaction } from '../../../../redux/auth/actions';\nimport { milestoneAcceptOrDecline } from '../../../../redux/homeSearch/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport { useStripe, useElements, AuBankAccountElement } from '@stripe/react-stripe-js';\nimport BecsForm from './becsForm';\nimport { useHistory } from 'react-router-dom';\nimport { moengage, mixPanel } from '../../../../services/analyticsTools';\nimport { MoEConstants } from '../../../../utils/constants';\n\nexport default function PaymentSetupForm(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  //   const stripe = useStripe('stripePublishableKey', {\n  //     stripeAccount: 'stripeAccountId',\n  //   });\n\n  const handleSubmit = async (e, accountName, accountEmail) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      console.log('Stripe.js has not yet loaded');\n      return;\n    }\n\n    const auBankAccount = elements.getElement(AuBankAccountElement);\n\n    const res = await getStripeClientSecretkey({\n      amount: props.milestoneTotalAmount?.slice(1),\n      tradieId: props.tradieId,\n      builderId: props.builderId,\n      jobId: props.jobId,\n      milestoneId: props.milestoneId,\n    });\n    if (res.success) {\n      const result = await stripe.confirmAuBecsDebitPayment(res.stripeClientSecretkey, {\n        payment_method: {\n          au_becs_debit: props.isAddnewAccount ? auBankAccount : null,\n          // au_becs_debit: { bsb_number: '000000', account_number: '000123456' },\n          billing_details: {\n            name: accountName,\n            email: accountEmail,\n          },\n        }\n      });\n\n      if (result.error) {\n        setShowToast(true, 'Milestone payment failed. Please try after some time')\n        console.log('STRIPE payment error: ', result.error.message);\n      } else {\n        setShowToast(true, 'Milestone payment initiated, will take upto 3 business days to settle.');\n        const { paymentIntent } = result;\n        const data = {\n          amount: `${props.milestoneTotalAmount?.slice(1)}`,\n          builderId: props.builderId,\n          tradieId: props.tradieId,\n          transactionId: paymentIntent?.id,\n          jobId: props.jobId,\n          milestoneId: props.milestoneId,\n          status: paymentIntent?.status,\n        };\n        const res = await saveStripeTransaction(data);\n        if (res.success) {\n          let data_ = {\n            \"status\": 1,\n            \"jobId\": props.jobId,\n            \"milestoneId\": props.milestoneId,\n            \"paymentMethodId\": 'Bank Account',\n            \"milestoneAmount\": `${props.milestoneAmount?.slice(1)}`,\n            \"amount\": `${paymentIntent?.amount}`,\n          }\n          const mData1 = {\n            Category: props?.category,\n            timeStamp: moengage.getCurrentTimeStamp(),\n          }\n          moengage.moE_SendEvent(MoEConstants.MADE_PAYMENT, mData1);\n          mixPanel.mixP_SendEvent(MoEConstants.MADE_PAYMENT, mData1);\n          let response = await milestoneAcceptOrDecline(data_);\n          if (response?.success) {\n            const mData2 = {\n              ...mData1,\n              'Milestone number': props?.milestoneNumber + 1,\n          }\n            moengage.moE_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED, mData2);\n            mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED, mData2);\n            history.push('/need-approval-success?payMode=bank');\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <BecsForm\n      onSubmit={handleSubmit}\n      disabled={!stripe}\n      jobName={props.jobName}\n      milestoneTotalAmount={props.milestoneTotalAmount}\n      backToScreen={props.backToScreen}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}