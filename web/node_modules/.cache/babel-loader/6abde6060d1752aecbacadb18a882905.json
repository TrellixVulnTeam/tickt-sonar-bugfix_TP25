{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/payment.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Constants from '../../../utils/constants';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction valuetext(value) {\n  return `${value}Â°C`;\n}\n\n// \"Per hour\" and \"Fixed price\"\nconst Payment = ({\n  data,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  const {\n    errorStrings\n  } = Constants;\n  const [paymentDetails, setPaymentDetails] = useState({\n    pay_type: 'Per hour',\n    amount: ''\n  });\n  const [errors, setErrors] = useState({\n    pay_type: '',\n    amount: ''\n  });\n  const [continueClicked, setContinueClicked] = useState(false);\n  const [localChanges, setLocationChanges] = useState(false);\n  const [reactSelect, setReactSelect] = useState({\n    value: \"Per hour\",\n    label: \"Per Hour\"\n  });\n  useEffect(() => {\n    if (stepCompleted && !localChanges) {\n      setPaymentDetails({\n        pay_type: data.pay_type || 'Fixed price',\n        amount: data.amount\n      });\n\n      if (data.pay_type === 'Per hour') {\n        setReactSelect({\n          value: 'Per hour',\n          label: 'Per Hour'\n        });\n      } else {\n        setReactSelect({\n          value: 'Fixed price',\n          label: 'Fixed Price'\n        });\n      }\n\n      setLocationChanges(true);\n    }\n  }, [stepCompleted, data]); // for error messages\n\n  const label = {\n    pay_type: 'Pay Type',\n    amount: 'Price'\n  };\n\n  const checkDecimal = (name, value) => {\n    let split_values = value.split('.');\n\n    if (split_values.length) {\n      let first = split_values[0];\n      let last = split_values[1];\n\n      if (last && (last === null || last === void 0 ? void 0 : last.length) > 2) {\n        return 'Price field must have maximum 2 digits after decimal';\n      }\n\n      if (first && (first === null || first === void 0 ? void 0 : first.length) > 6) {\n        return 'Price field must have 6 or less digits before decimal';\n      }\n\n      return '';\n    } else {\n      return '';\n    }\n  };\n\n  const isInvalid = (name, value) => {\n    switch (name) {\n      case 'pay_type':\n        return !value.length ? `${label[name]} is required.` : '';\n\n      case 'amount':\n        return !value.length || +value < 1 ? `${label[name]} is required.` : checkDecimal(name, value);\n    }\n  };\n\n  const handleChange = (value, name) => {\n    setErrors(prevErrors => ({ ...prevErrors,\n      [name]: isInvalid(name, value)\n    }));\n    setPaymentDetails(prevDetails => {\n      // if (name === \"pay_type\" && prevDetails.pay_type !== value) {\n      //   prevDetails.amount = '';\n      // }\n      return { ...prevDetails,\n        [name]: value\n      };\n    });\n  };\n\n  const handleContinue = e => {\n    e.preventDefault();\n    let hasErrors;\n\n    if (!continueClicked) {\n      setContinueClicked(true);\n      hasErrors = Object.keys(paymentDetails).reduce((prevError, name) => {\n        const hasError = !!isInvalid(name, paymentDetails[name]);\n        setErrors(prevErrors => ({ ...prevErrors,\n          [name]: isInvalid(name, paymentDetails[name])\n        }));\n        return hasError || prevError;\n      }, false);\n    }\n\n    if (!hasErrors) {\n      handleStepComplete(paymentDetails);\n    } else {\n      setContinueClicked(false);\n    }\n  };\n\n  const checkErrors = () => {\n    let value_1 = paymentDetails['pay_type'];\n    let value_2 = paymentDetails['amount'];\n\n    if (value_1 && value_2) {\n      let error_1 = isInvalid('pay_type', paymentDetails['pay_type']);\n      let error_2 = isInvalid('amount', paymentDetails['amount']);\n\n      if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length) && !(error_2 === null || error_2 === void 0 ? void 0 : error_2.length)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const priceOptions = [{\n    value: 'Per hour',\n    label: 'Per Hour'\n  }, {\n    value: 'Fixed price',\n    label: 'Fixed Price'\n  }];\n  const {\n    pay_type,\n    amount\n  } = paymentDetails;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: handleStepBack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \"Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: \"How much will you pay for a job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_7\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Price\",\n                      name: \"Price\",\n                      className: \"detect_input_ltr\",\n                      min: \"1\",\n                      step: \".01\",\n                      required: true,\n                      value: amount,\n                      onChange: ({\n                        target: {\n                          value\n                        }\n                      }) => handleChange(value, 'amount')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"detect_icon_ltr dollar\",\n                      children: \"$\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg mtb-15\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(Select, {\n                      className: \"select_menu\",\n                      value: reactSelect,\n                      options: priceOptions,\n                      onChange: item => {\n                        setReactSelect(item);\n                        handleChange(item === null || item === void 0 ? void 0 : item.value, 'pay_type');\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`,\n            onClick: handleContinue,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Payment, \"JozLAw6AaO77AoKSCnw8Dv018Mo=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/payment.tsx"],"names":["React","useEffect","useState","Constants","Select","valuetext","value","Payment","data","stepCompleted","handleStepComplete","handleStepBack","errorStrings","paymentDetails","setPaymentDetails","pay_type","amount","errors","setErrors","continueClicked","setContinueClicked","localChanges","setLocationChanges","reactSelect","setReactSelect","label","checkDecimal","name","split_values","split","length","first","last","isInvalid","handleChange","prevErrors","prevDetails","handleContinue","e","preventDefault","hasErrors","Object","keys","reduce","prevError","hasError","checkErrors","value_1","value_2","error_1","error_2","priceOptions","target","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAAkC;AAChC,SAAQ,GAAEA,KAAM,IAAhB;AACD;;AAQD;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,aAAR;AAAuBC,EAAAA,kBAAvB;AAA2CC,EAAAA;AAA3C,CAAD,KAA4E;AAAA;;AAC1F,QAAM;AAAEC,IAAAA;AAAF,MAAmBT,SAAzB;AAEA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAA8B;AAAEa,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAA9B,CAApD;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC;AAAEa,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAAD,CAApC;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACmB,YAAD,EAAeC,kBAAf,IAAqCpB,QAAQ,CAAC,KAAD,CAAnD;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAE,UAAT;AAAqBmB,IAAAA,KAAK,EAAE;AAA5B,GAAD,CAA9C;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,aAAa,IAAI,CAACY,YAAtB,EAAoC;AAClCP,MAAAA,iBAAiB,CAAC;AAChBC,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QAAL,IAAiB,aADX;AAEhBC,QAAAA,MAAM,EAAER,IAAI,CAACQ;AAFG,OAAD,CAAjB;;AAKA,UAAIR,IAAI,CAACO,QAAL,KAAkB,UAAtB,EAAkC;AAChCS,QAAAA,cAAc,CAAC;AAAElB,UAAAA,KAAK,EAAE,UAAT;AAAqBmB,UAAAA,KAAK,EAAE;AAA5B,SAAD,CAAd;AACD,OAFD,MAEO;AACLD,QAAAA,cAAc,CAAC;AAAElB,UAAAA,KAAK,EAAE,aAAT;AAAwBmB,UAAAA,KAAK,EAAE;AAA/B,SAAD,CAAd;AACD;;AAEDH,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,GAfQ,EAeN,CAACb,aAAD,EAAgBD,IAAhB,CAfM,CAAT,CAT0F,CA0B1F;;AACA,QAAMiB,KAAkC,GAAG;AACzCV,IAAAA,QAAQ,EAAE,UAD+B;AAEzCC,IAAAA,MAAM,EAAE;AAFiC,GAA3C;;AAKA,QAAMU,YAAY,GAAG,CAACC,IAAD,EAAerB,KAAf,KAAiC;AACpD,QAAIsB,YAAY,GAAGtB,KAAK,CAACuB,KAAN,CAAY,GAAZ,CAAnB;;AACA,QAAID,YAAY,CAACE,MAAjB,EAAyB;AACvB,UAAIC,KAAU,GAAGH,YAAY,CAAC,CAAD,CAA7B;AACA,UAAII,IAAS,GAAGJ,YAAY,CAAC,CAAD,CAA5B;;AAGA,UAAII,IAAI,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEF,MAAN,IAAe,CAA3B,EAA8B;AAC5B,eAAO,sDAAP;AACD;;AAED,UAAIC,KAAK,IAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAED,MAAP,IAAgB,CAA7B,EAAgC;AAC9B,eAAO,uDAAP;AACD;;AAED,aAAO,EAAP;AAED,KAfD,MAeO;AACL,aAAO,EAAP;AACD;AACF,GApBD;;AAqBA,QAAMG,SAAS,GAAG,CAACN,IAAD,EAAerB,KAAf,KAAiC;AACjD,YAAQqB,IAAR;AACE,WAAK,UAAL;AACE,eAAO,CAACrB,KAAK,CAACwB,MAAP,GAAiB,GAAEL,KAAK,CAACE,IAAD,CAAO,eAA/B,GAAgD,EAAvD;;AACF,WAAK,QAAL;AACE,eAAO,CAACrB,KAAK,CAACwB,MAAP,IAAiB,CAACxB,KAAD,GAAS,CAA1B,GAA+B,GAAEmB,KAAK,CAACE,IAAD,CAAO,eAA7C,GAA8DD,YAAY,CAACC,IAAD,EAAOrB,KAAP,CAAjF;AAJJ;AAMD,GAPD;;AASA,QAAM4B,YAAY,GAAG,CAAC5B,KAAD,EAAgBqB,IAAhB,KAAiC;AACpDT,IAAAA,SAAS,CAAEiB,UAAD,KAAiB,EACzB,GAAGA,UADsB;AAEzB,OAACR,IAAD,GAAQM,SAAS,CAACN,IAAD,EAAOrB,KAAP;AAFQ,KAAjB,CAAD,CAAT;AAKAQ,IAAAA,iBAAiB,CAAEsB,WAAD,IAAiB;AACjC;AACA;AACA;AACA,aAAQ,EACN,GAAGA,WADG;AAEN,SAACT,IAAD,GAAQrB;AAFF,OAAR;AAID,KARgB,CAAjB;AASD,GAfD;;AAiBA,QAAM+B,cAAc,GAAIC,CAAD,IAAY;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,SAAJ;;AAEA,QAAI,CAACrB,eAAL,EAAsB;AACpBC,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAoB,MAAAA,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAY7B,cAAZ,EAA4B8B,MAA5B,CAAmC,CAACC,SAAD,EAAYjB,IAAZ,KAAqB;AAClE,cAAMkB,QAAQ,GAAG,CAAC,CAACZ,SAAS,CAACN,IAAD,EAAOd,cAAc,CAACc,IAAD,CAArB,CAA5B;AACAT,QAAAA,SAAS,CAAEiB,UAAD,KAAiB,EACzB,GAAGA,UADsB;AAEzB,WAACR,IAAD,GAAQM,SAAS,CAACN,IAAD,EAAOd,cAAc,CAACc,IAAD,CAArB;AAFQ,SAAjB,CAAD,CAAT;AAIA,eAAOkB,QAAQ,IAAID,SAAnB;AACD,OAPW,EAOT,KAPS,CAAZ;AAQD;;AAED,QAAI,CAACJ,SAAL,EAAgB;AACd9B,MAAAA,kBAAkB,CAACG,cAAD,CAAlB;AACD,KAFD,MAEO;AACLO,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AACF,GArBD;;AAuBA,QAAM0B,WAAW,GAAG,MAAM;AACxB,QAAIC,OAAO,GAAGlC,cAAc,CAAC,UAAD,CAA5B;AACA,QAAImC,OAAO,GAAGnC,cAAc,CAAC,QAAD,CAA5B;;AACA,QAAIkC,OAAO,IAAIC,OAAf,EAAwB;AACtB,UAAIC,OAAO,GAAGhB,SAAS,CAAC,UAAD,EAAapB,cAAc,CAAC,UAAD,CAA3B,CAAvB;AACA,UAAIqC,OAAO,GAAGjB,SAAS,CAAC,QAAD,EAAWpB,cAAc,CAAC,QAAD,CAAzB,CAAvB;;AACA,UAAI,EAACoC,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEnB,MAAV,KAAoB,EAACoB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEpB,MAAV,CAAxB,EAA0C;AACxC,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD,GAXD;;AAaA,QAAMqB,YAAY,GAAG,CACnB;AAAE7C,IAAAA,KAAK,EAAE,UAAT;AAAqBmB,IAAAA,KAAK,EAAE;AAA5B,GADmB,EAEnB;AAAEnB,IAAAA,KAAK,EAAE,aAAT;AAAwBmB,IAAAA,KAAK,EAAE;AAA/B,GAFmB,CAArB;AAMA,QAAM;AAAEV,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBH,cAA7B;AACA,sBAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,wCACE;AAAQ,kBAAA,SAAS,EAAC,MAAlB;AAAyB,kBAAA,OAAO,EAAEF;AAAlC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,kBAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,4CACE;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,WAAW,EAAC,OAFd;AAGE,sBAAA,IAAI,EAAC,OAHP;AAIE,sBAAA,SAAS,EAAC,kBAJZ;AAKE,sBAAA,GAAG,EAAC,GALN;AAME,sBAAA,IAAI,EAAC,KANP;AAOE,sBAAA,QAAQ,MAPV;AAQE,sBAAA,KAAK,EAAEK,MART;AASE,sBAAA,QAAQ,EAAE,CAAC;AAAEoC,wBAAAA,MAAM,EAAE;AAAE9C,0BAAAA;AAAF;AAAV,uBAAD,KAA2B4B,YAAY,CAAC5B,KAAD,EAAQ,QAAR;AATnD;AAAA;AAAA;AAAA;AAAA,4BADF,eAYE;AAAM,sBAAA,SAAS,EAAC,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAZF;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAeE;AAAM,oBAAA,SAAS,EAAC,kBAAhB;AAAA,8BAAoCW,MAApC,aAAoCA,MAApC,uBAAoCA,MAAM,CAAED;AAA5C;AAAA;AAAA;AAAA;AAAA,0BAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAoBE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,2CASE,QAAC,MAAD;AACE,sBAAA,SAAS,EAAC,aADZ;AAEE,sBAAA,KAAK,EAAEO,WAFT;AAGE,sBAAA,OAAO,EAAE4B,YAHX;AAIE,sBAAA,QAAQ,EAAGE,IAAD,IAAe;AACvB7B,wBAAAA,cAAc,CAAC6B,IAAD,CAAd;AACAnB,wBAAAA,YAAY,CAACmB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE/C,KAAP,EAAc,UAAd,CAAZ;AACD;AAPH;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF,eA8DE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAG,gCAA+BwC,WAAW,KAAK,aAAL,GAAqB,EAAG,EADhF;AAEE,YAAA,OAAO,EAAET,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAmHD,CA7OD;;GAAM9B,O;;KAAAA,O;AA+ON,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Constants from '../../../utils/constants';\nimport Select from 'react-select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nfunction valuetext(value: number) {\n  return `${value}Â°C`;\n}\n\ninterface Proptypes {\n  data: any;\n  stepCompleted: Boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepBack: () => void;\n}\n// \"Per hour\" and \"Fixed price\"\nconst Payment = ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n  const { errorStrings } = Constants;\n\n  const [paymentDetails, setPaymentDetails] = useState<{ [index: string]: string }>({ pay_type: 'Per hour', amount: '' });\n  const [errors, setErrors] = useState({ pay_type: '', amount: '' });\n  const [continueClicked, setContinueClicked] = useState(false);\n  const [localChanges, setLocationChanges] = useState(false);\n  const [reactSelect, setReactSelect] = useState({ value: \"Per hour\", label: \"Per Hour\" });\n\n  useEffect(() => {\n    if (stepCompleted && !localChanges) {\n      setPaymentDetails({\n        pay_type: data.pay_type || 'Fixed price',\n        amount: data.amount\n      });\n\n      if (data.pay_type === 'Per hour') {\n        setReactSelect({ value: 'Per hour', label: 'Per Hour' });\n      } else {\n        setReactSelect({ value: 'Fixed price', label: 'Fixed Price' });\n      }\n\n      setLocationChanges(true);\n    }\n  }, [stepCompleted, data]);\n\n  // for error messages\n  const label: { [index: string]: string } = {\n    pay_type: 'Pay Type',\n    amount: 'Price',\n  }\n\n  const checkDecimal = (name: string, value: string) => {\n    let split_values = value.split('.');\n    if (split_values.length) {\n      let first: any = split_values[0];\n      let last: any = split_values[1];\n\n\n      if (last && last?.length > 2) {\n        return 'Price field must have maximum 2 digits after decimal';\n      }\n\n      if (first && first?.length > 6) {\n        return 'Price field must have 6 or less digits before decimal';\n      }\n\n      return ''\n\n    } else {\n      return ''\n    }\n  }\n  const isInvalid = (name: string, value: string) => {\n    switch (name) {\n      case 'pay_type':\n        return !value.length ? `${label[name]} is required.` : '';\n      case 'amount':\n        return !value.length || +value < 1 ? `${label[name]} is required.` : checkDecimal(name, value);\n    }\n  }\n\n  const handleChange = (value: string, name: string) => {\n    setErrors((prevErrors) => ({\n      ...prevErrors,\n      [name]: isInvalid(name, value),\n    }));\n\n    setPaymentDetails((prevDetails) => {\n      // if (name === \"pay_type\" && prevDetails.pay_type !== value) {\n      //   prevDetails.amount = '';\n      // }\n      return ({\n        ...prevDetails,\n        [name]: value,\n      })\n    })\n  };\n\n  const handleContinue = (e: any) => {\n    e.preventDefault();\n    let hasErrors;\n\n    if (!continueClicked) {\n      setContinueClicked(true);\n      hasErrors = Object.keys(paymentDetails).reduce((prevError, name) => {\n        const hasError = !!isInvalid(name, paymentDetails[name]);\n        setErrors((prevErrors) => ({\n          ...prevErrors,\n          [name]: isInvalid(name, paymentDetails[name]),\n        }));\n        return hasError || prevError;\n      }, false);\n    }\n\n    if (!hasErrors) {\n      handleStepComplete(paymentDetails);\n    } else {\n      setContinueClicked(false);\n    }\n  };\n\n  const checkErrors = () => {\n    let value_1 = paymentDetails['pay_type'];\n    let value_2 = paymentDetails['amount'];\n    if (value_1 && value_2) {\n      let error_1 = isInvalid('pay_type', paymentDetails['pay_type']);\n      let error_2 = isInvalid('amount', paymentDetails['amount']);\n      if (!error_1?.length && !error_2?.length) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const priceOptions = [\n    { value: 'Per hour', label: 'Per Hour' },\n    { value: 'Fixed price', label: 'Fixed Price' },\n  ];\n\n\n  const { pay_type, amount } = paymentDetails;\n  return (\n\n    <div className=\"app_wrapper\">\n      <div className=\"section_wrapper\">\n        <div className=\"custom_container\">\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_5\">\n                <div className=\"relate\">\n                  <button className=\"back\" onClick={handleStepBack}></button>\n                  <span className=\"title\">Payment</span>\n                </div>\n                <p className=\"commn_para\">How much will you pay for a job</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_6\">\n              <div className=\"flex_row\">\n                <div className=\"flex_col_sm_7\">\n                  <div className=\"form_field\">\n                    <div className=\"text_field\">\n                      <input\n                        type=\"number\"\n                        placeholder=\"Price\"\n                        name=\"Price\"\n                        className=\"detect_input_ltr\"\n                        min=\"1\"\n                        step=\".01\"\n                        required\n                        value={amount}\n                        onChange={({ target: { value } }) => handleChange(value, 'amount')}\n                      />\n                      <span className=\"detect_icon_ltr dollar\">$</span>\n                    </div>\n                    <span className=\"error_msg mtb-15\">{errors?.amount}</span>\n                  </div>\n                </div>\n                <div className=\"flex_col_sm_5\">\n                  <div className=\"form_field\">\n                    <div className=\"text_field\">\n                      {/* <select\n                    value={pay_type}\n                    onChange={({ target: { value } }) => handleChange(value, 'pay_type')}\n                    className=\"select_input\"\n                  >\n                    <option value=\"fixed\">{'Fixed Price'}</option>\n                    <option value=\"perHour\">{'Per Hour'}</option>\n                  </select> */}\n                      <Select\n                        className=\"select_menu\"\n                        value={reactSelect}\n                        options={priceOptions}\n                        onChange={(item: any) => {\n                          setReactSelect(item);\n                          handleChange(item?.value, 'pay_type')\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form_field\">\n            <button\n              className={`fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`}\n              onClick={handleContinue}>Continue</button>\n          </div>\n\n\n          {/* <div className=\"flex_row\">\n                        <div className=\"flex_col_sm_5\">\n                            <div className=\"form_field\">\n                                <div className=\"radio_wrap agree_check\">\n                                    <input className=\"filter-type filled-in\" name=\"pay_type\" type=\"radio\" id=\"perHour\" />\n                                    <label htmlFor=\"perHour\">Per hour</label>\n                                </div>\n                                <div className=\"radio_wrap agree_check\">\n                                    <input className=\"filter-type filled-in\" name=\"pay_type\" type=\"radio\" id=\"fixed\" />\n                                    <label htmlFor=\"fixed\">Fixed price</label>\n                                </div>\n                            </div>\n\n                            <div className=\"form_field\">\n                                <div className=\"text_field\">\n                                    <input type=\"number\" placeholder=\"Price\" name=\"Price\" className=\"sm_box\" value={amount} onChange={({ target: { value }}) => handleChange(value, 'amount')} />\n                                </div>\n                                <span className=\"error_msg\"></span>\n                            </div>\n\n                            <div className=\"form_field\">\n\n                            <Slider\n                                value={value}\n                                onChange={handleSliderChange}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"range-slider\"\n                                getAriaValueText={valuetext}\n                            />\n                            </div>\n\n                            <div className=\"form_field\">\n                                <button className=\"fill_btn full_btn\" onClick={handleContinue}>Continue</button>\n                            </div>\n                        </div>\n                    </div> */}\n          {/* <Typography id=\"range-slider\" gutterBottom></Typography> */}\n        </div >\n      </div >\n\n    </div >\n  )\n}\n\nexport default Payment\n"]},"metadata":{},"sourceType":"module"}