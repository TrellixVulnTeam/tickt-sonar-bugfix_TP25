{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/pastJobs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport rateStar from '../../../assets/images/ic-star-fill.png';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport RateThisJob from './ratethisJob/index';\nimport { useLocation } from \"react-router-dom\";\nimport { renderTime } from '../../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PastJobs = props => {\n  _s();\n\n  const {\n    dataItems,\n    jobType,\n    isLoading\n  } = props;\n  let listData = dataItems;\n  const [enableRateJob, setRateJob] = useState({\n    data: {},\n    isTrue: false\n  }); // toggle-rate-job\n\n  const [currentPage, setCurrentPage] = useState(1);\n  let [isEnable, setEnable] = useState(false);\n  const location = useLocation();\n\n  const redirectToInfo = ({\n    jobId,\n    status\n  }) => {\n    if ((jobId === null || jobId === void 0 ? void 0 : jobId.length) && (status === null || status === void 0 ? void 0 : status.length)) {\n      // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&job=past&activeType=${props?.activeType}`)\n      let urlEncode = `?jobId=${jobId}&status=${status}&job=past&activeType=${props === null || props === void 0 ? void 0 : props.activeType}`;\n      props.history.push(`/job-detail?${urlEncode}`);\n    }\n  };\n\n  const backToScreen = () => {\n    props.history.replace('/jobs?active=past');\n    setRateJob(prev => ({\n      data: {},\n      isTrue: !prev.isTrue\n    }));\n  };\n\n  useEffect(() => {\n    const urlSearchParams = new URLSearchParams(location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n\n    if (params === null || params === void 0 ? void 0 : params.jobId) {\n      let jobId_ = params === null || params === void 0 ? void 0 : params.jobId;\n\n      if (listData === null || listData === void 0 ? void 0 : listData.length) {\n        let result = listData.find(item => (item === null || item === void 0 ? void 0 : item.jobId) === jobId_);\n\n        if (result) {\n          setRateJob({\n            data: result,\n            isTrue: true\n          });\n        }\n      }\n    }\n  }, [props]);\n  useEffect(() => {\n    if (isLoading === false) {\n      setEnable(true);\n    }\n  }, [isLoading]);\n\n  if (enableRateJob === null || enableRateJob === void 0 ? void 0 : enableRateJob.isTrue) {\n    return /*#__PURE__*/_jsxDEV(RateThisJob, {\n      backToScreen: backToScreen,\n      data: enableRateJob.data,\n      history: null,\n      location: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!isEnable) {\n    return null;\n  } // \"60dadb661fed05158f8745e3\"\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sub_title\",\n      children: [jobType.charAt(0).toUpperCase() + jobType.slice(1), \" Jobs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row tradies_row\",\n      children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n        amount,\n        fromDate,\n        jobData,\n        jobId,\n        isRated,\n        jobName,\n        locationName,\n        isPublishedAgain,\n        milestoneNumber,\n        specializationId,\n        specializationName,\n        status,\n        toDate,\n        totalMilestones,\n        tradeId,\n        tradieId,\n        tradeName,\n        tradeSelectedUrl,\n        tradieData\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card\",\n          \"data-aos\": \"fade-in\",\n          \"data-aos-delay\": \"250\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              redirectToInfo({\n                jobId,\n                status\n              });\n            },\n            className: \"more_detail circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (jobData === null || jobData === void 0 ? void 0 : jobData.tradeSelectedUrl) || jobTypePlaceholder,\n                alt: \"traide-img\",\n                onError: e => {\n                  var _e$target, _e$target2;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                    e.target.src = jobTypePlaceholder;\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: tradeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: renderTime(fromDate, toDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon location line-1\",\n                children: locationName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"job_status\",\n                children: status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_progress_wrap\",\n            id: \"scroll-progress-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completed-digit\",\n                id: \"digit-progress\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: `Job Milestones ${milestoneNumber} `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 45\n                }, this), `of ${totalMilestones}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 41\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress_bar\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"done_progress\",\n                  id: \"progress-bar\",\n                  type: \"range\",\n                  min: \"0\",\n                  value: milestoneNumber / totalMilestones > 0 ? milestoneNumber / totalMilestones * 100 : 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), status === \"COMPLETED\" ? !isRated && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setRateJob(prev => ({\n                  data: {\n                    amount,\n                    fromDate,\n                    jobData,\n                    jobId,\n                    jobName,\n                    locationName,\n                    milestoneNumber,\n                    specializationId,\n                    specializationName,\n                    status,\n                    toDate,\n                    totalMilestones,\n                    tradeId,\n                    tradieId,\n                    tradeName,\n                    tradeSelectedUrl,\n                    tradieData\n                  },\n                  isTrue: !prev.isTrue\n                }));\n              },\n              className: \"fill_grey_btn full_btn\",\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: rateStar,\n                  alt: \"rating-star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this), 'Rate this tradie']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 54\n            }, this) : status === \"EXPIRED\" && !isPublishedAgain && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn full_btn\",\n              onClick: () => redirectToInfo({\n                jobId,\n                status\n              }),\n              children: \"Publish again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record  m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noDataFound,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: 'No Data Found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PastJobs, \"jZ6d89qqQFAiI2gUzPrJAfWlysk=\", false, function () {\n  return [useLocation];\n});\n\n_c = PastJobs;\nexport default PastJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"PastJobs\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/pastJobs.tsx"],"names":["React","useState","useEffect","rateStar","noDataFound","jobTypePlaceholder","RateThisJob","useLocation","renderTime","PastJobs","props","dataItems","jobType","isLoading","listData","enableRateJob","setRateJob","data","isTrue","currentPage","setCurrentPage","isEnable","setEnable","location","redirectToInfo","jobId","status","length","urlEncode","activeType","history","push","backToScreen","replace","prev","urlSearchParams","URLSearchParams","search","params","Object","fromEntries","entries","jobId_","result","find","item","charAt","toUpperCase","slice","map","amount","fromDate","jobData","isRated","jobName","locationName","isPublishedAgain","milestoneNumber","specializationId","specializationName","toDate","totalMilestones","tradeId","tradieId","tradeName","tradeSelectedUrl","tradieData","e","target","onerror","src"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useEffect } from 'react'\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport approved from '../../../assets/images/approved.png';\nimport rateStar from '../../../assets/images/ic-star-fill.png';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport moment from 'moment';\nimport RateThisJob from './ratethisJob/index';\n\nimport { useLocation } from \"react-router-dom\";\n\nimport { renderTime } from '../../../utils/common';\ninterface Post {\n    amount: any,\n    fromDate: any,\n    jobData: any,\n    jobId: any,\n    isRated: any,\n    jobName: any,\n    locationName: any,\n    milestoneNumber: any,\n    specializationId: any,\n    specializationName: any,\n    status: any,\n    toDate: any,\n    totalMilestones: any,\n    isPublishedAgain: boolean,\n    tradeId: any,\n    tradieId: any,\n    tradeName: any,\n    tradeSelectedUrl: any,\n    isLoading: any,\n    tradieData: any,\n}\n\n\nconst PastJobs = (props: any) => {\n    const { dataItems, jobType, isLoading } = props;\n    let listData: any = dataItems;\n    const [enableRateJob, setRateJob] = useState({ data: {}, isTrue: false }); // toggle-rate-job\n    const [currentPage, setCurrentPage] = useState(1);\n    let [isEnable, setEnable] = useState<any>(false);\n\n    const location = useLocation();\n\n    const redirectToInfo = ({ jobId, status }: any) => {\n        if (jobId?.length && status?.length) {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&job=past&activeType=${props?.activeType}`)\n            let urlEncode: any = `?jobId=${jobId}&status=${status}&job=past&activeType=${props?.activeType}`\n            props.history.push(`/job-detail?${urlEncode}`);\n        }\n    }\n\n    const backToScreen = () => {\n        props.history.replace('/jobs?active=past');\n        setRateJob((prev: any) => ({\n            data: {},\n            isTrue: !prev.isTrue\n        }));\n    }\n\n    useEffect(() => {\n        const urlSearchParams = new URLSearchParams(location.search);\n        const params = Object.fromEntries(urlSearchParams.entries());\n\n        if (params?.jobId) {\n            let jobId_ = params?.jobId;\n            if (listData?.length) {\n                let result = listData.find((item: any) => item?.jobId === jobId_);\n                if (result) {\n                    setRateJob({\n                        data: result,\n                        isTrue: true\n                    });\n                }\n            }\n        }\n    }, [props]);\n\n\n    useEffect(() => {\n        if (isLoading === false) {\n            setEnable(true);\n        }\n    }, [isLoading])\n\n    if (enableRateJob?.isTrue) {\n        return (\n            <RateThisJob\n                backToScreen={backToScreen}\n                data={enableRateJob.data}\n                history={null}\n                location={null}\n            />\n        )\n    }\n\n    if (!isEnable) {\n        return null;\n    }\n    // \"60dadb661fed05158f8745e3\"\n    return (\n        <React.Fragment>\n            <span className=\"sub_title\">{jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs</span>\n            <div className=\"flex_row tradies_row\">\n                {listData?.length ?\n                    listData.map(({\n                        amount,\n                        fromDate,\n                        jobData,\n                        jobId,\n                        isRated,\n                        jobName,\n                        locationName,\n                        isPublishedAgain,\n                        milestoneNumber,\n                        specializationId,\n                        specializationName,\n                        status,\n                        toDate,\n                        totalMilestones,\n                        tradeId,\n                        tradieId,\n                        tradeName,\n                        tradeSelectedUrl,\n                        tradieData,\n                    }: Post) => (\n                        <div className=\"flex_col_sm_6\">\n                            <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                                <span\n                                    onClick={() => {\n                                        redirectToInfo({ jobId, status })\n                                    }}\n                                    className=\"more_detail circle\">\n                                </span>\n                                <div className=\"user_wrap\">\n                                    <figure className=\"u_img\">\n                                        <img\n                                            src={jobData?.tradeSelectedUrl || jobTypePlaceholder}\n                                            alt=\"traide-img\"\n                                            onError={(e: any) => {\n                                                if (e?.target?.onerror) {\n                                                    e.target.onerror = null;\n                                                }\n                                                if (e?.target?.src) {\n                                                    e.target.src = jobTypePlaceholder;\n                                                }\n                                            }}\n                                            />\n                                    </figure>\n                                    <div className=\"details\">\n                                        <span className=\"name\">{tradeName}</span>\n                                        <p className=\"commn_para\">{jobName}</p>\n                                    </div>\n                                </div>\n                                <div className=\"job_info\">\n                                    <ul>\n                                        <li className=\"icon calendar\">{renderTime(fromDate, toDate)}</li>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"icon location line-1\">{locationName}</li>\n                                        <li className=\"job_status\">{status}</li>\n                                    </ul>\n                                </div>\n                                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                    <div className=\"progress_wrapper\">\n                                        <span className=\"completed-digit\" id=\"digit-progress\">\n                                            <b>{`Job Milestones ${milestoneNumber} `}</b>{`of ${totalMilestones}`}\n                                        </span>\n                                        {/* <span className=\"approval_info\">\n                                            {status === \"Approved\" && <img src={approved} alt=\"icon\" />}\n                                            {status}\n                                        </span> */}\n                                        {/* {'Approved'} */} {/* Awaiting */}\n                                        {/* <img src={waiting} alt=\"icon\" /> */}\n                                        {/* Need approval */}\n                                        <span className=\"progress_bar\">\n                                            <input\n                                                className=\"done_progress\"\n                                                id=\"progress-bar\"\n                                                type=\"range\"\n                                                min=\"0\"\n                                                value={(milestoneNumber / totalMilestones) > 0 ? milestoneNumber / totalMilestones * 100 : 0}\n                                            />\n                                        </span>\n                                    </div>\n                                    {status === \"COMPLETED\" ?\n                                        !isRated && (<button\n                                            onClick={() => {\n                                                setRateJob((prev: any) => ({\n                                                    data: {\n                                                        amount,\n                                                        fromDate,\n                                                        jobData,\n                                                        jobId,\n                                                        jobName,\n                                                        locationName,\n                                                        milestoneNumber,\n                                                        specializationId,\n                                                        specializationName,\n                                                        status,\n                                                        toDate,\n                                                        totalMilestones,\n                                                        tradeId,\n                                                        tradieId,\n                                                        tradeName,\n                                                        tradeSelectedUrl,\n                                                        tradieData,\n                                                    },\n                                                    isTrue: !prev.isTrue\n                                                }));\n                                            }}\n                                            className=\"fill_grey_btn full_btn\">\n                                            <React.Fragment>\n                                                <img src={rateStar} alt=\"rating-star\" />\n                                                {'Rate this tradie'}\n                                            </React.Fragment>\n                                        </button>\n                                        )\n                                        : (status === \"EXPIRED\" && !isPublishedAgain) && (\n                                            <button\n                                                className=\"fill_grey_btn full_btn\"\n                                                onClick={() => redirectToInfo({ jobId, status })}>\n                                                {\"Publish again\"}\n                                            </button>\n                                        )}\n                                </div>\n                            </div>\n                        </div>\n                    )) : !isLoading && (\n                        <div className=\"no_record  m-t-vh\">\n                            <figure className=\"no_img\">\n                                <img src={noDataFound} alt=\"data not found\" />\n                            </figure>\n                            <span>{'No Data Found'}</span>\n                        </div>\n                    )}\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default PastJobs;"]},"metadata":{},"sourceType":"module"}