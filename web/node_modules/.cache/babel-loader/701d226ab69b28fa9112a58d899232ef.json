{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/personalInformation.tsx\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Modal from '@material-ui/core/Modal';\nimport NumberFormat from 'react-number-format';\nimport Constants from '../../../../utils/constants';\nimport regex from '../../../../utils/regex';\nimport { portfolioModal } from '../../../builderInfo/builderInfo';\nimport ChangeEmailModal from './changeEmailModal/changeEmailModal';\nimport { tradieUpdateProfileDetails, tradieUpdateBasicDetails, tradieUpdatePassword, tradieAddPortfolioJob, tradieUpdatePortfolioJob, tradieDeletePortfolioJob, tradieChangeEmail } from '../../../../redux/profile/actions';\nimport { onFileUpload } from '../../../../redux/auth/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport portfolioPlaceholder from '../../../../assets/images/portfolio-placeholder.jpg';\nimport menu from '../../../../assets/images/menu-line-blue.png';\nimport dotMenu from '../../../../assets/images/menu-dot.png';\nimport dummy from '../../../../assets/images/u_placeholder.jpg';\nimport cameraBlack from '../../../../assets/images/camera-black.png';\nimport editIconBlue from '../../../../assets/images/ic-edit-blue.png';\nimport profilePlaceholder from '../../../../assets/images/ic-placeholder-detail.png';\nimport cancel from \"../../../../assets/images/ic-cancel.png\";\nimport remove from \"../../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../../assets/images/add-image.png\";\nimport addMediaLrg from \"../../../../assets/images/add-image-lg.png\";\nimport spherePlaceholder from \"../../../../assets/images/ic_categories_placeholder.svg\";\nimport eyeIconClose from '../../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../../assets/images/icon-eye-open.png';\nimport removeFile from '../../../../assets/images/icon-close-1.png';\nimport jpegFile from '../../../../assets/images/jpeg.png';\nimport jpgFile from '../../../../assets/images/jpg.png';\nimport pngFile from '../../../../assets/images/png.png';\nimport pdfFile from '../../../../assets/images/pdf.png';\nimport docFile from '../../../../assets/images/doc.png';\nimport viewProfile from '../../../../assets/images/view.png';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport storageService from '../../../../utils/storageService';\nimport { validateABN } from '../../../../utils/common'; //@ts-ignore\n\nimport Skeleton from 'react-loading-skeleton';\nimport { updateChatUserImageAndName } from '../../../../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class PersonalInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.userType = void 0;\n\n    this.toggleSidebar = () => this.setState({\n      isToggleSidebar: !this.state.isToggleSidebar\n    });\n\n    this.tradeHandler = (item, name) => {\n      const id = item === null || item === void 0 ? void 0 : item._id;\n      console.log(item, \"item-------------------\");\n\n      if (name === 'trade') {\n        if (this.state.trade.length && this.state.trade[0] == id) {\n          this.setState({\n            trade: [],\n            tradeData: [],\n            specialization: [],\n            allSpecializationSelected: false\n          });\n        } else {\n          this.setState({\n            trade: [id],\n            tradeData: [{\n              tradeId: id,\n              tradeName: item === null || item === void 0 ? void 0 : item.trade_name,\n              tradeSelectedUrl: item === null || item === void 0 ? void 0 : item.selected_url\n            }],\n            specialization: [],\n            allSpecializationSelected: false\n          });\n        }\n      } else if (name === 'specializationId') {\n        this.setState(state => {\n          var newData = [...state.specialization];\n          var newSpecsData = [...state.specializationData];\n\n          if (state.allSpecializationSelected) {\n            newData = [];\n            newSpecsData = [];\n          }\n\n          const itemIndex = newData.indexOf(id);\n\n          if (newData.indexOf(id) < 0) {\n            newData.push(id);\n            newSpecsData.push({\n              specializationId: id,\n              specializationName: item === null || item === void 0 ? void 0 : item.name\n            });\n          } else {\n            newData.splice(itemIndex, 1);\n            newSpecsData.splice(itemIndex, 1);\n          }\n\n          return {\n            specialization: newData,\n            specializationData: newSpecsData,\n            allSpecializationSelected: false\n          };\n        });\n      } else if (name === 'All Clicked') {\n        if (this.state.allSpecializationSelected) {\n          this.setState({\n            allSpecializationSelected: false,\n            specialization: [],\n            specializationData: []\n          });\n        } else {\n          const newSpecialization = item.map(({\n            _id\n          }) => _id);\n          const newSpecializationData = item.map(({\n            _id,\n            name\n          }) => {\n            return {\n              specializationId: _id,\n              specializationName: name\n            };\n          });\n          this.setState({\n            allSpecializationSelected: true,\n            specialization: newSpecialization,\n            specializationData: newSpecializationData\n          });\n        }\n      } else if (name === 'Clear All') {\n        this.setState({\n          allSpecializationSelected: false,\n          trade: [],\n          tradeData: [],\n          specialization: [],\n          specializationData: []\n        });\n      }\n    };\n\n    this.submitAreasOfTrade = () => {\n      const newData = { ...this.state.profileViewData\n      };\n      newData.areasOfSpecialization.tradeData = this.state.tradeData;\n      newData.areasOfSpecialization.specializationData = this.state.specializationData;\n      console.log(newData, \"newdata-----------\");\n      this.setState({\n        profileViewData: newData,\n        areasOfSpecsModalClicked: false,\n        isProfileViewDataChanged: true\n      });\n    };\n\n    this.onFileChange = async (e, type, id) => {\n      var _newFile$name, _newFile$type, _newFile$type$split$;\n\n      const formData = new FormData();\n      const newFile = e.target.files[0];\n      var uploadFileName = newFile === null || newFile === void 0 ? void 0 : (_newFile$name = newFile.name) === null || _newFile$name === void 0 ? void 0 : _newFile$name.split('.');\n      uploadFileName.pop();\n      uploadFileName = uploadFileName.join('.');\n      var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split('/')[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n      const docTypes = [\"jpeg\", \"jpg\", \"png\", \"pdf\", \"msword\", \"doc\", \"docx\", \"vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n      const docTypes2 = [\"jpeg\", \"jpg\", \"png\"];\n      var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024;\n\n      if (type === \"profileImage\" || type === \"addJobPhotos\") {\n        if (docTypes2.indexOf(fileType) < 0 || selectedFileSize > 10) {\n          alert('The file must be in proper format or size');\n          return;\n        }\n      } else if (docTypes.indexOf(fileType) < 0 || selectedFileSize > 10) {\n        alert('The file must be in proper format or size');\n        return;\n      }\n\n      formData.append('file', newFile);\n\n      if (type === \"profileImage\") {\n        this.setState({\n          userImage: URL.createObjectURL(newFile),\n          formData: formData,\n          isProfileViewDataChanged: true\n        });\n      }\n\n      if (type === \"addJobPhotos\") {\n        const res = await onFileUpload(formData);\n\n        if (res.success) {\n          var _data$portfolioImage;\n\n          const data = { ...this.state.portfolioJobDetail\n          };\n          data === null || data === void 0 ? void 0 : (_data$portfolioImage = data.portfolioImage) === null || _data$portfolioImage === void 0 ? void 0 : _data$portfolioImage.push(res.imgUrl);\n          this.setState({\n            portfolioJobDetail: data\n          });\n        }\n      }\n\n      if (type === \"filledQualification\") {\n        const res = await onFileUpload(formData);\n\n        if (res.success) {\n          const newBasicData = { ...this.state.basicDetailsData\n          };\n          const newqualificationDoc = newBasicData === null || newBasicData === void 0 ? void 0 : newBasicData.qualificationDoc;\n          const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i.qualification_id === id);\n          item.url = res.imgUrl;\n          item.fileName = uploadFileName;\n          this.setState({\n            basicDetailsData: newBasicData,\n            isEditProfileModalChanged: true\n          });\n        }\n      }\n\n      if (type === \"remainingQualification\") {\n        const res = await onFileUpload(formData);\n\n        if (res.success) {\n          const data = [...this.state.remainingQualificationDoc];\n          const item = data === null || data === void 0 ? void 0 : data.find(i => i._id === id);\n          item.url = res.imgUrl;\n          item.fileName = uploadFileName;\n          this.setState({\n            remainingQualificationDoc: data,\n            isEditProfileModalChanged: true\n          });\n        }\n      }\n    };\n\n    this.validateBasicDetailsForm = () => {\n      var _this$state$basicDeta, _this$state$basicDeta2, _this$state$basicDeta3, _this$state$basicDeta5, _this$state$basicDeta7;\n\n      const newErrors = {};\n\n      if (!((_this$state$basicDeta = this.state.basicDetailsData) === null || _this$state$basicDeta === void 0 ? void 0 : _this$state$basicDeta.fullName)) {\n        newErrors.fullName = Constants.errorStrings.fullNameEmpty;\n      } else if (((_this$state$basicDeta2 = this.state.basicDetailsData) === null || _this$state$basicDeta2 === void 0 ? void 0 : (_this$state$basicDeta3 = _this$state$basicDeta2.fullName.trim()) === null || _this$state$basicDeta3 === void 0 ? void 0 : _this$state$basicDeta3.length) > 50) {\n        newErrors.fullName = 'Maximum 50 characters are allowed.';\n      } else {\n        var _this$state$basicDeta4;\n\n        const nameRegex = new RegExp(regex.fullname);\n\n        if (!nameRegex.test((_this$state$basicDeta4 = this.state.basicDetailsData) === null || _this$state$basicDeta4 === void 0 ? void 0 : _this$state$basicDeta4.fullName.trim())) {\n          newErrors.fullName = Constants.errorStrings.fullNameErr;\n        }\n      }\n\n      if (!((_this$state$basicDeta5 = this.state.basicDetailsData) === null || _this$state$basicDeta5 === void 0 ? void 0 : _this$state$basicDeta5.mobileNumber)) {\n        newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n      } else {\n        var _this$state$basicDeta6;\n\n        const phoneRegex = new RegExp(regex.mobile);\n\n        if (!phoneRegex.test((_this$state$basicDeta6 = this.state.basicDetailsData) === null || _this$state$basicDeta6 === void 0 ? void 0 : _this$state$basicDeta6.mobileNumber)) {\n          newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr;\n        }\n      }\n\n      if (!((_this$state$basicDeta7 = this.state.basicDetailsData) === null || _this$state$basicDeta7 === void 0 ? void 0 : _this$state$basicDeta7.abn)) {\n        newErrors.abn = Constants.errorStrings.abnEmpty;\n      } else {\n        const abnRegex = new RegExp(regex.abn);\n\n        if (!abnRegex.test(this.state.basicDetailsData.abn.replaceAll(' ', ''))) {\n          newErrors.abn = Constants.errorStrings.abnErr;\n        }\n\n        if (!validateABN(this.state.basicDetailsData.abn.replaceAll(' ', ''))) {\n          newErrors.abn = Constants.errorStrings.abnErr;\n        }\n      }\n\n      if (this.userType === 1) {\n        var _this$state$basicDeta8, _this$state$basicDeta9, _Object$keys, _this$state$remaining, _Object$keys2;\n\n        const newQualificationDoc = (_this$state$basicDeta8 = this.state.basicDetailsData) === null || _this$state$basicDeta8 === void 0 ? void 0 : (_this$state$basicDeta9 = _this$state$basicDeta8.qualificationDoc) === null || _this$state$basicDeta9 === void 0 ? void 0 : _this$state$basicDeta9.find(({\n          url,\n          isSelected\n        }) => !(url === null || url === void 0 ? void 0 : url.length) && !(isSelected === null || isSelected === void 0 ? void 0 : isSelected.length));\n        console.log(newQualificationDoc, \"newQualificationDoc validation\");\n\n        if (!!newQualificationDoc && ((_Object$keys = Object.keys(newQualificationDoc)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) {\n          setShowToast(true, \"Please upload all selected documents\");\n          return;\n        }\n\n        const newRemainingDoc = (_this$state$remaining = this.state.remainingQualificationDoc) === null || _this$state$remaining === void 0 ? void 0 : _this$state$remaining.find(({\n          url,\n          isSelected\n        }) => !(url === null || url === void 0 ? void 0 : url.length) && (isSelected === null || isSelected === void 0 ? void 0 : isSelected.length));\n        console.log(newRemainingDoc, \"newRemainingDoc validation\");\n\n        if (!!newRemainingDoc && ((_Object$keys2 = Object.keys(newRemainingDoc)) === null || _Object$keys2 === void 0 ? void 0 : _Object$keys2.length) > 0) {\n          setShowToast(true, \"Please upload all selected documents\");\n          return;\n        }\n      } else {\n        var _this$state$basicDeta10, _this$state$basicDeta11, _this$state$basicDeta12, _this$state$basicDeta13, _this$state$basicDeta14, _this$state$basicDeta15;\n\n        if (!((_this$state$basicDeta10 = this.state.basicDetailsData) === null || _this$state$basicDeta10 === void 0 ? void 0 : _this$state$basicDeta10.companyName)) {\n          newErrors.companyName = Constants.errorStrings.companyNameEmpty;\n        } else if (((_this$state$basicDeta11 = this.state.basicDetailsData) === null || _this$state$basicDeta11 === void 0 ? void 0 : (_this$state$basicDeta12 = _this$state$basicDeta11.companyName.trim()) === null || _this$state$basicDeta12 === void 0 ? void 0 : _this$state$basicDeta12.length) > 50) {\n          newErrors.companyName = 'Maximum 50 characters are allowed.';\n        } else {\n          const nameRegex = new RegExp(regex.fullname);\n\n          if (!nameRegex.test(this.state.basicDetailsData.companyName.trim())) {\n            newErrors.companyName = Constants.errorStrings.companyNameErr;\n          }\n        }\n\n        if (!((_this$state$basicDeta13 = this.state.basicDetailsData) === null || _this$state$basicDeta13 === void 0 ? void 0 : _this$state$basicDeta13.position)) {\n          newErrors.position = Constants.errorStrings.positionNameEmpty;\n        } else if (((_this$state$basicDeta14 = this.state.basicDetailsData) === null || _this$state$basicDeta14 === void 0 ? void 0 : (_this$state$basicDeta15 = _this$state$basicDeta14.position.trim()) === null || _this$state$basicDeta15 === void 0 ? void 0 : _this$state$basicDeta15.length) > 50) {\n          newErrors.position = 'Maximum 50 characters are allowed.';\n        } else {\n          const positionRegex = new RegExp(regex.fullname);\n\n          if (!positionRegex.test(this.state.basicDetailsData.position.trim())) {\n            newErrors.position = Constants.errorStrings.positionNameErr;\n          }\n        }\n      }\n\n      this.setState({\n        errors: newErrors\n      });\n      return !Object.keys(newErrors).length;\n    };\n\n    this.validatePasswordForm = () => {\n      const newErrors = {};\n\n      if (!this.state.password) {\n        newErrors.password = Constants.errorStrings.oldPassword;\n      }\n\n      if (!this.state.newPassword) {\n        newErrors.newPassword = 'New Password is required';\n      } else {\n        const passwordRegex = new RegExp(regex.password);\n\n        if (!passwordRegex.test(this.state.newPassword.trim())) {\n          newErrors.newPassword = Constants.errorStrings.passwordError;\n        }\n      }\n\n      if (this.state.newPassword.trim() !== this.state.confirmNewPassword.trim()) {\n        newErrors.confirmNewPassword = Constants.errorStrings.confirmNewPassword;\n      }\n\n      this.setState({\n        errors: newErrors\n      });\n      return !Object.keys(newErrors).length;\n    };\n\n    this.validateChangeEmailForm = () => {\n      const newErrors = {};\n\n      if (!this.state.newEmail) {\n        newErrors.newEmail = 'New Email Address is required';\n      } else {\n        var _this$state$basicDeta16;\n\n        const emailRegex = new RegExp(regex.email);\n\n        if (!emailRegex.test((_this$state$basicDeta16 = this.state.basicDetailsData) === null || _this$state$basicDeta16 === void 0 ? void 0 : _this$state$basicDeta16.email)) {\n          newErrors.newEmail = Constants.errorStrings.emailErr;\n        }\n      }\n\n      if (!this.state.password) {\n        newErrors.currentPassword = 'Current Password is required';\n      } else {\n        const passwordRegex = new RegExp(regex.password);\n\n        if (!passwordRegex.test(this.state.password.trim())) {\n          newErrors.currentPassword = Constants.errorStrings.passwordError;\n        }\n      }\n\n      this.setState({\n        errors: newErrors\n      });\n      return !Object.keys(newErrors).length;\n    };\n\n    this.changeHandler = e => {\n      const newBasicDetails = { ...this.state.basicDetailsData\n      };\n      newBasicDetails[`${e.target.name}`] = e.target.value;\n      this.setState({\n        basicDetailsData: newBasicDetails,\n        isEditProfileModalChanged: true\n      });\n    };\n\n    this.submitBasicProfileDetails = async () => {\n      if (this.validateBasicDetailsForm()) {\n        var _ref, _this$state$basicDeta17, _this$state$remaining2;\n\n        const basicDetails = { ...this.state.basicDetailsData\n        };\n        const filledQualification = this.userType === 1 ? (_ref = [...((_this$state$basicDeta17 = this.state.basicDetailsData) === null || _this$state$basicDeta17 === void 0 ? void 0 : _this$state$basicDeta17.qualificationDoc)]) === null || _ref === void 0 ? void 0 : _ref.map(({\n          url,\n          qualification_id\n        }) => (url === null || url === void 0 ? void 0 : url.length) && {\n          qualification_id: qualification_id,\n          url: url\n        }) : [];\n        const newFilledQualification = filledQualification === null || filledQualification === void 0 ? void 0 : filledQualification.filter(i => {\n          var _Object$keys3;\n\n          return i && ((_Object$keys3 = Object.keys(i)) === null || _Object$keys3 === void 0 ? void 0 : _Object$keys3.length) > 0;\n        });\n        const remainingQualification = (_this$state$remaining2 = this.state.remainingQualificationDoc) === null || _this$state$remaining2 === void 0 ? void 0 : _this$state$remaining2.map(({\n          _id,\n          url\n        }) => (url === null || url === void 0 ? void 0 : url.length) && {\n          qualification_id: _id,\n          url: url\n        });\n        const newRemainingQualification = remainingQualification === null || remainingQualification === void 0 ? void 0 : remainingQualification.filter(i => {\n          var _Object$keys4;\n\n          return i && ((_Object$keys4 = Object.keys(i)) === null || _Object$keys4 === void 0 ? void 0 : _Object$keys4.length) > 0;\n        });\n        const builderData = {\n          companyName: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.companyName,\n          position: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.position\n        };\n        const data = {\n          fullName: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.fullName,\n          mobileNumber: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.mobileNumber,\n          email: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.email,\n          abn: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.abn,\n          qualificationDoc: this.userType === 1 ? [...newFilledQualification, ...newRemainingQualification] : undefined,\n          ...(this.userType === 1 ? {} : builderData)\n        };\n        const res = await tradieUpdateBasicDetails(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          this.props.cleanTradieBasicDetails();\n          updateChatUserImageAndName('userName', data.fullName);\n          basicDetails.qualificationDoc = this.userType === 1 ? data.qualificationDoc : [];\n          this.setState(prevState => ({\n            profileModalClicked: false,\n            addQualificationClicked: false,\n            remainingQualificationDoc: [],\n            basicDetailsData: basicDetails\n          }));\n          this.props.getTradieBasicDetails();\n          this.userType === 1 ? this.props.callTradieProfileData() : this.props.getProfileBuilder();\n        }\n      }\n    };\n\n    this.passwordHandler = e => {\n      this.setState(prevState => ({ ...prevState,\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.updatePasswordHandler = async () => {\n      if (this.validatePasswordForm()) {\n        const data = {\n          user_type: storageService.getItem('userType'),\n          oldPassword: this.state.password,\n          newPassword: this.state.newPassword\n        };\n        const res = await tradieUpdatePassword(data);\n\n        if (res.success) {\n          this.props.history.push('/change-password-success'); // this.passwordModalCloseHandler();\n        }\n      }\n    };\n\n    this.passwordModalCloseHandler = () => {\n      this.setState({\n        profileModalClicked: true,\n        passwordModalClicked: false,\n        password: '',\n        newPassword: '',\n        confirmNewPassword: '',\n        showPassword: false,\n        showNewPassword: false,\n        showConfirmNewPassword: false,\n        errors: {}\n      });\n    };\n\n    this.changeEmailModalCloseHandler = () => {\n      this.setState({\n        profileModalClicked: true,\n        changeEmailModalClicked: false,\n        password: '',\n        newEmail: '',\n        showPassword: false,\n        errors: {}\n      });\n    };\n\n    this.submitPortfolioJobs = async () => {\n      if (this.state.addPortfolioJob) {\n        const portfolioJobDetail = this.state.portfolioJobDetail;\n        const data = {\n          jobName: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobName,\n          jobDescription: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription,\n          url: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioImage\n        };\n        const res = await tradieAddPortfolioJob(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          const data = { ...this.state.profileViewData\n          };\n          data.portfolio.push(res === null || res === void 0 ? void 0 : res.data);\n          this.setState({\n            portfolioJobDetail: '',\n            profileViewData: data,\n            portfolioJobClicked: false,\n            isAddEditPortfolioModal: false,\n            addPortfolioJob: false,\n            portfolioJobIndex: null\n          });\n        }\n      }\n\n      if (this.state.editPortfolioJob) {\n        const portfolioJobDetail = this.state.portfolioJobDetail;\n        const data = {\n          portfolioId: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioId,\n          jobName: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobName,\n          jobDescription: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription,\n          url: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioImage\n        };\n        const res = await tradieUpdatePortfolioJob(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          const index = this.state.portfolioJobIndex;\n          const newProfileData = { ...this.state.profileViewData\n          };\n          const newPortfolio = newProfileData === null || newProfileData === void 0 ? void 0 : newProfileData.portfolio;\n          newPortfolio.splice(index, 1, portfolioJobDetail);\n          this.setState({\n            // portfolioJobDetail: '',\n            profileViewData: newProfileData,\n            portfolioJobClicked: true,\n            isAddEditPortfolioModal: false,\n            editPortfolioJob: false,\n            portfolioJobIndex: null\n          });\n          return;\n        }\n      }\n\n      if (this.state.deletePortfolioJob) {\n        const portfolioJobDetail = this.state.portfolioJobDetail;\n        const index = this.state.portfolioJobIndex;\n        const newProfileData = { ...this.state.profileViewData\n        };\n        const newPortfolio = newProfileData === null || newProfileData === void 0 ? void 0 : newProfileData.portfolio;\n        newPortfolio.splice(index, 1);\n        const res = await tradieDeletePortfolioJob(portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioId);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          this.setState({\n            portfolioJobDetail: '',\n            profileViewData: newProfileData,\n            portfolioJobClicked: false,\n            isAddEditPortfolioModal: false,\n            deletePortfolioJob: false,\n            confirmationModalClicked: false,\n            portfolioJobIndex: null\n          });\n          return;\n        }\n      }\n    };\n\n    this.closeAddEditPortofolioModal = () => {\n      this.setState(prevState => ({\n        isAddEditPortfolioModal: false,\n        portfolioJobClicked: prevState.addPortfolioJob ? false : true,\n        addPortfolioJob: false\n      }));\n    };\n\n    this.addNewPortfolioJob = () => {\n      this.setState({\n        addPortfolioJob: true,\n        isAddEditPortfolioModal: true,\n        portfolioJobDetail: {\n          jobName: '',\n          jobDescription: '',\n          portfolioImage: []\n        }\n      });\n    };\n\n    this.addInfoAboutYou = () => {\n      this.setState(prevState => {\n        var _prevState$profileVie, _prevState$profileVie2;\n\n        return {\n          aboutModalClicked: true,\n          about: (prevState === null || prevState === void 0 ? void 0 : (_prevState$profileVie = prevState.profileViewData) === null || _prevState$profileVie === void 0 ? void 0 : _prevState$profileVie.about) || (prevState === null || prevState === void 0 ? void 0 : (_prevState$profileVie2 = prevState.profileViewData) === null || _prevState$profileVie2 === void 0 ? void 0 : _prevState$profileVie2.aboutCompany) || ''\n        };\n      });\n    };\n\n    this.submitUpdateProfile = async () => {\n      var _this$state$profileVi, _this$state$profileVi2, _this$state$basicDeta18, _this$state$profileVi3, _this$state$profileVi4, _this$state$profileVi5, _this$state$profileVi6, _this$state$profileVi7, _this$state$profileVi8, _this$state$profileVi9, _this$state$profileVi10, _this$state$profileVi11, _this$state$profileVi12;\n\n      const newSpecialization = [...((_this$state$profileVi = this.state.profileViewData) === null || _this$state$profileVi === void 0 ? void 0 : (_this$state$profileVi2 = _this$state$profileVi.areasOfSpecialization) === null || _this$state$profileVi2 === void 0 ? void 0 : _this$state$profileVi2.specializationData)];\n      var newSpecializationData = newSpecialization === null || newSpecialization === void 0 ? void 0 : newSpecialization.map(({\n        specializationId\n      }) => (specializationId === null || specializationId === void 0 ? void 0 : specializationId.length) > 0 && specializationId);\n      const data = {\n        fullName: (_this$state$basicDeta18 = this.state.basicDetailsData) === null || _this$state$basicDeta18 === void 0 ? void 0 : _this$state$basicDeta18.fullName,\n        userImage: ((_this$state$profileVi3 = this.state.profileViewData) === null || _this$state$profileVi3 === void 0 ? void 0 : _this$state$profileVi3.tradieImage) || ((_this$state$profileVi4 = this.state.profileViewData) === null || _this$state$profileVi4 === void 0 ? void 0 : _this$state$profileVi4.builderImage),\n        trade: [(_this$state$profileVi5 = this.state.profileViewData) === null || _this$state$profileVi5 === void 0 ? void 0 : (_this$state$profileVi6 = _this$state$profileVi5.areasOfSpecialization) === null || _this$state$profileVi6 === void 0 ? void 0 : (_this$state$profileVi7 = _this$state$profileVi6.tradeData[0]) === null || _this$state$profileVi7 === void 0 ? void 0 : _this$state$profileVi7.tradeId],\n        specialization: newSpecializationData,\n        about: this.userType === 1 ? ((_this$state$profileVi8 = this.state.profileViewData) === null || _this$state$profileVi8 === void 0 ? void 0 : _this$state$profileVi8.about) || '' : undefined,\n        position: this.userType === 1 ? undefined : (_this$state$profileVi9 = this.state.profileViewData) === null || _this$state$profileVi9 === void 0 ? void 0 : _this$state$profileVi9.position,\n        companyName: this.userType === 1 ? undefined : (_this$state$profileVi10 = this.state.profileViewData) === null || _this$state$profileVi10 === void 0 ? void 0 : _this$state$profileVi10.companyName,\n        aboutCompany: this.userType === 1 ? undefined : ((_this$state$profileVi11 = this.state.profileViewData) === null || _this$state$profileVi11 === void 0 ? void 0 : _this$state$profileVi11.about) || ((_this$state$profileVi12 = this.state.profileViewData) === null || _this$state$profileVi12 === void 0 ? void 0 : _this$state$profileVi12.aboutCompany)\n      };\n\n      if (this.state.formData) {\n        const res1 = await onFileUpload(this.state.formData);\n\n        if (res1 === null || res1 === void 0 ? void 0 : res1.success) {\n          data.userImage = res1 === null || res1 === void 0 ? void 0 : res1.imgUrl;\n        }\n      }\n\n      const res2 = await tradieUpdateProfileDetails(data);\n\n      if (res2 === null || res2 === void 0 ? void 0 : res2.success) {\n        if (this.state.formData) {\n          updateChatUserImageAndName('userImage', data.userImage);\n        }\n\n        this.setState({\n          formData: null,\n          isProfileViewDataChanged: false\n        });\n        this.userType === 1 ? this.props.callTradieProfileData() : this.props.getProfileBuilder();\n      }\n    };\n\n    this.changeEmailHandler = async () => {\n      if (this.validateChangeEmailForm()) {\n        var _this$state$basicDeta19;\n\n        const data = {\n          currentEmail: (_this$state$basicDeta19 = this.state.basicDetailsData) === null || _this$state$basicDeta19 === void 0 ? void 0 : _this$state$basicDeta19.email,\n          newEmail: this.state.newEmail,\n          password: this.state.password,\n          user_type: storageService.getItem('userType')\n        };\n        const res = await tradieChangeEmail(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {}\n      }\n    };\n\n    this.removeQualificationFileHandler = (e, id, type) => {\n      e.stopPropagation();\n\n      if (type === \"filledQualification\") {\n        const newBasicData = { ...this.state.basicDetailsData\n        };\n        const newqualificationDoc = newBasicData === null || newBasicData === void 0 ? void 0 : newBasicData.qualificationDoc;\n        const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i.qualification_id === id);\n        item.url = '';\n        item.fileName = '';\n        newBasicData.qualificationDoc = newqualificationDoc;\n        this.setState({\n          basicDetailsData: newBasicData\n        });\n      }\n\n      if (type === \"remainingQualification\") {\n        const data = [...this.state.remainingQualificationDoc];\n        const item = data === null || data === void 0 ? void 0 : data.find(i => i._id === id);\n        item.url = '';\n        item.fileName = '';\n        this.setState({\n          remainingQualificationDoc: data\n        });\n      }\n    };\n\n    this.changeQualificationHandler = (id, type) => {\n      if (type === \"filledQualification\") {\n        const newBasicData = { ...this.state.basicDetailsData\n        };\n        const newqualificationDoc = newBasicData === null || newBasicData === void 0 ? void 0 : newBasicData.qualificationDoc;\n        const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i.qualification_id === id);\n        const itemIndex = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.indexOf(item);\n\n        if (item.isSelected) {\n          newqualificationDoc.splice(itemIndex, 1, {\n            qualification_id: id,\n            url: ''\n          });\n        } else {\n          newqualificationDoc.splice(itemIndex, 1, {\n            qualification_id: id,\n            url: '',\n            isSelected: \"isSelected\"\n          });\n        }\n\n        newBasicData.qualificationDoc = newqualificationDoc;\n        this.setState({\n          basicDetailsData: newBasicData\n        });\n      }\n\n      if (type === \"remainingQualification\") {\n        const newqualificationDoc = [...this.state.remainingQualificationDoc];\n        const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i._id === id);\n        const itemIndex = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.indexOf(item);\n\n        if (item.isSelected) {\n          newqualificationDoc.splice(itemIndex, 1, {\n            _id: id,\n            url: '',\n            name: item.name\n          });\n        } else {\n          newqualificationDoc.splice(itemIndex, 1, {\n            _id: id,\n            url: '',\n            name: item.name,\n            isSelected: \"isSelected\"\n          });\n        }\n\n        this.setState({\n          remainingQualificationDoc: newqualificationDoc\n        });\n      }\n    };\n\n    this.qualificationFileDetails = url => {\n      var fileArray = url.replace(/^.*[\\\\\\/]/, '').split('.');\n      const type = fileArray[1].toLowerCase();\n\n      switch (type) {\n        case \"jpeg\":\n          return {\n            fileName: fileArray[0],\n            fileType: jpegFile\n          };\n\n        case \"jpg\":\n          return {\n            fileName: fileArray[0],\n            fileType: jpgFile\n          };\n\n        case \"png\":\n          return {\n            fileName: fileArray[0],\n            fileType: pngFile\n          };\n\n        case \"pdf\":\n          return {\n            fileName: fileArray[0],\n            fileType: pdfFile\n          };\n\n        case \"doc\":\n          return {\n            fileName: fileArray[0],\n            fileType: docFile\n          };\n\n        case \"docx\":\n          return {\n            fileName: fileArray[0],\n            fileType: docFile\n          };\n\n        default:\n          return null;\n      }\n    };\n\n    this.editProfileCloseHandler = () => {\n      this.setState(prevState => ({\n        profileModalClicked: false,\n        basicDetailsData: this.props.tradieBasicDetailsData ? this.props.tradieBasicDetailsData : {},\n        addQualificationClicked: false,\n        remainingQualificationDoc: [],\n        errors: {}\n      }));\n    };\n\n    this.state = {\n      errors: {},\n      isToggleSidebar: false,\n      profileModalClicked: false,\n      areasOfSpecsModalClicked: false,\n      aboutModalClicked: false,\n      portfolioJobClicked: false,\n      isAddEditPortfolioModal: false,\n      passwordModalClicked: false,\n      trade: [],\n      tradeData: [],\n      specialization: [],\n      specializationData: [],\n      allSpecializationSelected: false,\n      about: '',\n      userImage: '',\n      password: '',\n      showPassword: false,\n      newPassword: '',\n      showNewPassword: false,\n      confirmNewPassword: '',\n      showConfirmNewPassword: false,\n      formData: null,\n      basicDetailsData: {},\n      profileViewData: {},\n      localProfileView: '',\n      portfolioJobDetail: '',\n      addPortfolioJob: false,\n      editPortfolioJob: false,\n      deletePortfolioJob: false,\n      portfolioJobIndex: null,\n      confirmationModalClicked: false,\n      changeEmailModalClicked: false,\n      isProfileViewDataChanged: false,\n      isEditProfileModalChanged: false,\n      newEmail: '',\n      addQualificationClicked: false,\n      localQualificationDoc: [],\n      remainingQualificationDoc: []\n    };\n    this.userType = storageService.getItem('userType');\n  }\n\n  componentDidMount() {\n    this.props.getTradieProfileView();\n    this.props.getTradieBasicDetails();\n\n    if (!this.props.tradeListData.length) {\n      this.props.callTradeList();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanTradieProfileViewData();\n    this.props.cleanTradieBasicDetails();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    var _prevState$localQuali, _prevState$remainingQ;\n\n    console.log(nextProps, \"nextProps--------------\", prevState, \"prevState-------------\");\n\n    if (nextProps.tradieProfileViewData && Object.keys(prevState.profileViewData).length === 0 && !_.isEqual(nextProps.tradieProfileViewData, prevState.profileViewData)) {\n      var _nextProps$tradieProf, _nextProps$tradieProf2;\n\n      return {\n        profileViewData: nextProps.tradieProfileViewData,\n        userImage: ((_nextProps$tradieProf = nextProps.tradieProfileViewData) === null || _nextProps$tradieProf === void 0 ? void 0 : _nextProps$tradieProf.tradieImage) || ((_nextProps$tradieProf2 = nextProps.tradieProfileViewData) === null || _nextProps$tradieProf2 === void 0 ? void 0 : _nextProps$tradieProf2.builderImage)\n      };\n    }\n\n    if (nextProps.tradieBasicDetailsData && Object.keys(prevState.basicDetailsData).length === 0 && !_.isEqual(nextProps.tradieBasicDetailsData, prevState.basicDetailsData)) {\n      return {\n        basicDetailsData: nextProps.tradieBasicDetailsData\n      };\n    }\n\n    if (storageService.getItem('userType') === 1 && nextProps.tradeListData && (!((_prevState$localQuali = prevState.localQualificationDoc) === null || _prevState$localQuali === void 0 ? void 0 : _prevState$localQuali.length) || !((_prevState$remainingQ = prevState.remainingQualificationDoc) === null || _prevState$remainingQ === void 0 ? void 0 : _prevState$remainingQ.length)) && nextProps.tradieBasicDetailsData) {\n      var _2, _$qualifications, _nextProps$tradieBasi, _nextProps$tradieBasi2;\n\n      const data = (_2 = [...nextProps.tradeListData][0]) === null || _2 === void 0 ? void 0 : (_$qualifications = _2.qualifications) === null || _$qualifications === void 0 ? void 0 : _$qualifications.map(item => {\n        var _item$name;\n\n        return ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.length) && {\n          _id: item._id,\n          name: item.name\n        };\n      });\n      const alreadyFilledQualificationDoc = (_nextProps$tradieBasi = nextProps.tradieBasicDetailsData) === null || _nextProps$tradieBasi === void 0 ? void 0 : (_nextProps$tradieBasi2 = _nextProps$tradieBasi.qualificationDoc) === null || _nextProps$tradieBasi2 === void 0 ? void 0 : _nextProps$tradieBasi2.map(({\n        qualification_id\n      }) => (qualification_id === null || qualification_id === void 0 ? void 0 : qualification_id.length) && qualification_id);\n      const remainingQualificationDoc = data === null || data === void 0 ? void 0 : data.filter(({\n        _id\n      }) => !(alreadyFilledQualificationDoc === null || alreadyFilledQualificationDoc === void 0 ? void 0 : alreadyFilledQualificationDoc.includes(_id)));\n      console.log(remainingQualificationDoc, \"remainingQualificationDoc\", alreadyFilledQualificationDoc, \"alreadyFilledQualificationDoc\");\n      return {\n        localQualificationDoc: data ? data : [],\n        remainingQualificationDoc: remainingQualificationDoc ? remainingQualificationDoc : []\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    var _props$tradeListData$, _this$props$tradiePro, _this$props$builderPr, _this$props$tradiePro2, _this$props$builderPr2, _storageService$getIt, _basicDetailsData$qua, _basicDetailsData$qua2, _basicDetailsData$qua3, _this$state$basicDeta20, _profileViewData$area, _profileViewData$area2, _profileViewData$area3, _profileViewData$area4, _profileViewData$port, _profileViewData$port2, _profileViewData$port3, _profileViewData$port4, _portfolioJobDetail$p, _portfolioJobDetail$p2, _portfolioJobDetail$p3, _portfolioJobDetail$p4, _portfolioJobDetail$j, _portfolioJobDetail$j2, _portfolioJobDetail$p5;\n\n    let props = this.props;\n    console.log(this.state, \"state--------------\", props, \"props------------\");\n    let {\n      errors,\n      profileModalClicked,\n      areasOfSpecsModalClicked,\n      aboutModalClicked,\n      isAddEditPortfolioModal,\n      portfolioJobClicked,\n      passwordModalClicked,\n      basicDetailsData,\n      trade,\n      specialization,\n      allSpecializationSelected,\n      about,\n      userImage,\n      profileViewData,\n      password,\n      showPassword,\n      newPassword,\n      showNewPassword,\n      confirmNewPassword,\n      showConfirmNewPassword,\n      portfolioJobDetail,\n      addPortfolioJob,\n      confirmationModalClicked,\n      changeEmailModalClicked,\n      isProfileViewDataChanged,\n      isEditProfileModalChanged,\n      addQualificationClicked,\n      localQualificationDoc,\n      remainingQualificationDoc\n    } = this.state;\n    const tradeList = props.tradeListData;\n    const isSkeletonLoading = props.isSkeletonLoading;\n    const specializationList = (_props$tradeListData$ = props.tradeListData.find(({\n      _id\n    }) => _id === trade[0])) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.specialisations;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row f_col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload_profile_pic\",\n            children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 240\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"user_img\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userImage ? userImage : dummy,\n                alt: \"Profile-pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"camera\",\n                htmlFor: \"upload_profile_pic\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cameraBlack,\n                  alt: \"camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\" // accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                ,\n                accept: \"image/png,image/jpg,image/jpeg\",\n                style: {\n                  display: \"none\"\n                },\n                id: \"upload_profile_pic\",\n                onChange: e => this.onFileChange(e, \"profileImage\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 78\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_view_wrap\",\n            children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title line-2\",\n              title: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.fullName,\n              children: [basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.fullName, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edit_icon\",\n                title: \"Edit\",\n                onClick: () => this.setState({\n                  profileModalClicked: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: editIconBlue,\n                  alt: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 65\n            }, this), isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"javascript:void(0)\",\n              className: \"view_profile\",\n              onClick: () => {\n                props.cleanTradieProfileViewData();\n                props.history.push(`/${this.userType === 1 ? 'tradie' : 'builder'}-info?${this.userType === 1 ? 'trade' : 'builder'}Id=${basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.userId}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: viewProfile,\n                alt: \"view-profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 33\n              }, this), \"View public profile\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagg\",\n            children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 69\n            }, this) : basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_4 w85per\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job_progress_wrap\",\n                id: \"scroll-progress-bar\",\n                children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  count: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 58\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress_wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: \"Complete your profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"approval_info\",\n                    children: this.userType === 1 ? (_this$props$tradiePro = this.props.tradieProfileData) === null || _this$props$tradiePro === void 0 ? void 0 : _this$props$tradiePro.profileCompleted : (_this$props$builderPr = this.props.builderProfile) === null || _this$props$builderPr === void 0 ? void 0 : _this$props$builderPr.profileCompleted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 834,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"progress_bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"done_progress\",\n                      id: \"progress-bar\",\n                      type: \"range\",\n                      min: \"0\",\n                      value: parseInt(this.userType === 1 ? (_this$props$tradiePro2 = this.props.tradieProfileData) === null || _this$props$tradiePro2 === void 0 ? void 0 : _this$props$tradiePro2.profileCompleted : (_this$props$builderPr2 = this.props.builderProfile) === null || _this$props$builderPr2 === void 0 ? void 0 : _this$props$builderPr2.profileCompleted)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 836,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 83\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"review_job\",\n            children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon reviews\",\n                children: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.ratings) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review_count\",\n                children: `${(profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.reviewsCount) || 0} reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 65\n            }, this), isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 50\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon job\",\n                children: profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.jobCompletedCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review_count\",\n                children: \" jobs completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 854,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: profileModalClicked,\n        onClose: this.editProfileCloseHandler,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh profile_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: this.editProfileCloseHandler,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_wrappr\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 879,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter Full Name\",\n                    name: \"fullName\",\n                    value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.fullName,\n                    onChange: this.changeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.fullName) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 883,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Mobile Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.mobileNumber,\n                    className: \"foo\",\n                    displayType: 'text',\n                    prefix: '+61 ',\n                    format: \"+61 ### ### ###\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.mobileNumber) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.mobileNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 33\n              }, this), this.userType === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Australian Business Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 914,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.abn,\n                    displayType: 'input',\n                    type: 'tel',\n                    placeholder: \"51 824 753 556\",\n                    format: \"## ### ### ###\",\n                    isNumericString: true,\n                    onValueChange: values => {\n                      const {\n                        formattedValue,\n                        value\n                      } = values;\n                      const newBasicDetails = { ...this.state.basicDetailsData\n                      };\n                      newBasicDetails.abn = value;\n                      this.setState({\n                        basicDetailsData: newBasicDetails,\n                        isEditProfileModalChanged: true\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 916,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.abn) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.abn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 913,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 934,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field f_spacebw\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 937,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 33\n              }, this), ((_storageService$getIt = storageService.getItem('userInfo')) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt.accountType) === 'normal' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field f_spacebw\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  onClick: () => this.setState({\n                    changeEmailModalClicked: true,\n                    profileModalClicked: false\n                  }),\n                  children: \" Change Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  onClick: () => this.setState({\n                    passwordModalClicked: true,\n                    profileModalClicked: false\n                  }),\n                  children: \"Change Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 943,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 98\n              }, this), this.userType === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Qualification documents \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 948,\n                  columnNumber: 37\n                }, this), (basicDetailsData === null || basicDetailsData === void 0 ? void 0 : (_basicDetailsData$qua = basicDetailsData.qualificationDoc) === null || _basicDetailsData$qua === void 0 ? void 0 : _basicDetailsData$qua.length) > 0 && localQualificationDoc.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : (_basicDetailsData$qua2 = basicDetailsData.qualificationDoc) === null || _basicDetailsData$qua2 === void 0 ? void 0 : _basicDetailsData$qua2.map(({\n                    qualification_id,\n                    url,\n                    isSelected,\n                    fileName\n                  }) => {\n                    var _localQualificationDo;\n\n                    const qualificationName = (_localQualificationDo = localQualificationDoc.find(({\n                      _id\n                    }) => _id === qualification_id)) === null || _localQualificationDo === void 0 ? void 0 : _localQualificationDo.name;\n                    const docDetails = url && this.qualificationFileDetails(url);\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"f_spacebw mt-15\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"checkbox_wrap agree_check\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"filter-type filled-in\",\n                            type: \"checkbox\",\n                            checked: !!isSelected ? false : true,\n                            name: qualificationName,\n                            id: qualificationName,\n                            onChange: () => this.changeQualificationHandler(qualification_id, \"filledQualification\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 959,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: qualificationName,\n                            children: qualificationName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 967,\n                            columnNumber: 65\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 958,\n                          columnNumber: 61\n                        }, this), url ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"file_upload_box\",\n                          onClick: () => window.open(url, '_blank'),\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"close\",\n                            onClick: e => this.removeQualificationFileHandler(e, qualification_id, \"filledQualification\"),\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: removeFile\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 974,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 973,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"file_icon\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileType\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 977,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 976,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"file_details\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"name\",\n                              children: fileName ? fileName : docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 980,\n                              columnNumber: 73\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 979,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 970,\n                          columnNumber: 66\n                        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"upload_doc\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: `upload_btn ${isSelected ? \"disable\" : \"\"}`,\n                            htmlFor: qualificationName + 'upload',\n                            children: \"Upload\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 984,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"file\",\n                            className: \"none\",\n                            id: qualificationName + 'upload',\n                            accept: \"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                            disabled: !!isSelected ? true : false,\n                            onChange: e => this.onFileChange(e, \"filledQualification\", qualification_id)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 987,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 983,\n                          columnNumber: 66\n                        }, this)]\n                      }, qualification_id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false), addQualificationClicked && (remainingQualificationDoc === null || remainingQualificationDoc === void 0 ? void 0 : remainingQualificationDoc.length) > 0 && (remainingQualificationDoc === null || remainingQualificationDoc === void 0 ? void 0 : remainingQualificationDoc.map(({\n                  _id,\n                  name,\n                  url,\n                  isSelected,\n                  fileName\n                }) => {\n                  const docDetails = url && this.qualificationFileDetails(url);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"f_spacebw mt-15\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"checkbox_wrap agree_check\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          className: \"filter-type filled-in\",\n                          type: \"checkbox\",\n                          checked: !!isSelected ? true : false,\n                          name: name,\n                          id: name,\n                          onChange: () => this.changeQualificationHandler(_id, \"remainingQualification\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1010,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: name,\n                          children: name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1018,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1009,\n                        columnNumber: 57\n                      }, this), url ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"file_upload_box\",\n                        onClick: () => window.open(url, '_blank'),\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"close\",\n                          onClick: e => this.removeQualificationFileHandler(e, _id, \"remainingQualification\"),\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: removeFile\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1025,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1024,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"file_icon\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileType\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1028,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1027,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"file_details\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"name\",\n                            children: fileName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1032,\n                            columnNumber: 69\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1030,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1021,\n                        columnNumber: 62\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"upload_doc\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: `upload_btn ${!isSelected ? \"disable\" : \"\"}`,\n                          htmlFor: name + 'upload',\n                          children: \"Upload\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1036,\n                          columnNumber: 65\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"file\",\n                          className: \"none\",\n                          id: name + 'upload',\n                          accept: \"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                          disabled: !!isSelected ? false : true,\n                          onChange: e => this.onFileChange(e, \"remainingQualification\", _id)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1039,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1035,\n                        columnNumber: 62\n                      }, this)]\n                    }, _id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1008,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false);\n                }))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 947,\n                columnNumber: 58\n              }, this), this.userType === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1056,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Company Name\",\n                      name: \"companyName\",\n                      value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.companyName,\n                      onChange: this.changeHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1058,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1057,\n                    columnNumber: 45\n                  }, this), !!(errors === null || errors === void 0 ? void 0 : errors.companyName) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.companyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1060,\n                    columnNumber: 71\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Your Position\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1063,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Your Position\",\n                      name: \"position\",\n                      value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.position,\n                      onChange: this.changeHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1065,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1064,\n                    columnNumber: 45\n                  }, this), !!(errors === null || errors === void 0 ? void 0 : errors.position) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1067,\n                    columnNumber: 68\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Australian Business Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.abn,\n                      displayType: 'input',\n                      type: 'tel',\n                      placeholder: \"51 824 753 556\",\n                      format: \"## ### ### ###\",\n                      isNumericString: true,\n                      onValueChange: values => {\n                        const {\n                          formattedValue,\n                          value\n                        } = values;\n                        const newBasicDetails = { ...this.state.basicDetailsData\n                        };\n                        newBasicDetails.abn = value;\n                        this.setState({\n                          basicDetailsData: newBasicDetails,\n                          isEditProfileModalChanged: true\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1073,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 45\n                  }, this), !!(errors === null || errors === void 0 ? void 0 : errors.abn) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.abn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 63\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 29\n            }, this), this.userType === 1 && (basicDetailsData === null || basicDetailsData === void 0 ? void 0 : (_basicDetailsData$qua3 = basicDetailsData.qualificationDoc) === null || _basicDetailsData$qua3 === void 0 ? void 0 : _basicDetailsData$qua3.length) < 6 && !addQualificationClicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fill_grey_btn full_btn btn-effect\",\n                  onClick: () => this.setState({\n                    addQualificationClicked: true\n                  }),\n                  children: \"Add qualification documents \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1094,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 135\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info_note\",\n                children: \"Don\\u2019t worry, nobody will see it. This is for verification only!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${isEditProfileModalChanged ? '' : 'disable_btn'}`,\n              onClick: this.submitBasicProfileDetails,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: passwordModalClicked,\n        onClose: this.passwordModalCloseHandler,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh profile_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: this.passwordModalCloseHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md_heading\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sub_title\",\n                  children: \"Change password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: this.passwordModalCloseHandler,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_wrappr\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Old Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: showPassword ? 'text' : 'password',\n                    className: \"detect_input\",\n                    placeholder: \"Enter Password\",\n                    name: \"password\",\n                    value: password,\n                    onChange: this.passwordHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1128,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detect_icon\",\n                    onClick: () => this.setState(prevState => ({\n                      showPassword: !prevState.showPassword\n                    })),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: showPassword ? eyeIconOpen : eyeIconClose,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1130,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1129,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1133,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: showNewPassword ? 'text' : 'password',\n                    className: \"detect_input\",\n                    placeholder: \"Enter New Password\",\n                    name: \"newPassword\",\n                    value: newPassword,\n                    onChange: this.passwordHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1138,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detect_icon\",\n                    onClick: () => this.setState(prevState => ({\n                      showNewPassword: !prevState.showNewPassword\n                    })),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: showNewPassword ? eyeIconOpen : eyeIconClose,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1140,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1139,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1137,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.newPassword) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.newPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1143,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Confirm New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: showConfirmNewPassword ? 'text' : 'password',\n                    className: \"detect_input\",\n                    placeholder: \"Enter Confirm New Password\",\n                    name: \"confirmNewPassword\",\n                    value: confirmNewPassword,\n                    onChange: this.passwordHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detect_icon\",\n                    onClick: () => this.setState(prevState => ({\n                      showConfirmNewPassword: !prevState.showConfirmNewPassword\n                    })),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: showConfirmNewPassword ? eyeIconOpen : eyeIconClose,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1150,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1149,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 37\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.confirmNewPassword) && !(errors === null || errors === void 0 ? void 0 : errors.newPassword) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.confirmNewPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 94\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${password && newPassword && confirmNewPassword ? '' : 'disable_btn'}`,\n              onClick: this.updatePasswordHandler,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChangeEmailModal, {\n        history: props.history,\n        isChangeEmailModalClicked: changeEmailModalClicked,\n        currentEmail: (_this$state$basicDeta20 = this.state.basicDetailsData) === null || _this$state$basicDeta20 === void 0 ? void 0 : _this$state$basicDeta20.email,\n        changeEmailModalCloseHandler: this.changeEmailModalCloseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: ['Areas of specialisation', this.userType === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edit_icon\",\n            title: \"Edit\",\n            onClick: () => this.setState({\n              areasOfSpecsModalClicked: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editIconBlue,\n              alt: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags_wrap\",\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            count: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$area = profileViewData.areasOfSpecialization) === null || _profileViewData$area === void 0 ? void 0 : (_profileViewData$area2 = _profileViewData$area.tradeData) === null || _profileViewData$area2 === void 0 ? void 0 : _profileViewData$area2.map(({\n              tradeId,\n              tradeName,\n              tradeSelectedUrl\n            }, index) => {\n              if (this.userType === 1 && index > 0) {\n                return null;\n              }\n\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"main\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tradeSelectedUrl || menu,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1189,\n                  columnNumber: 41\n                }, this), tradeName]\n              }, tradeId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 37\n              }, this);\n            }), profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$area3 = profileViewData.areasOfSpecialization) === null || _profileViewData$area3 === void 0 ? void 0 : (_profileViewData$area4 = _profileViewData$area3.specializationData) === null || _profileViewData$area4 === void 0 ? void 0 : _profileViewData$area4.map(({\n              specializationId,\n              specializationName\n            }) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: specializationName\n              }, specializationId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 44\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: areasOfSpecsModalClicked,\n        onClose: () => this.setState({\n          areasOfSpecsModalClicked: false\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh filter_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"What is your trade?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: () => this.setState({\n                areasOfSpecsModalClicked: false\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: \"Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1219,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select_sphere\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: tradeList === null || tradeList === void 0 ? void 0 : tradeList.map(({\n                  _id,\n                  trade_name,\n                  selected_url,\n                  specialisations\n                }) => {\n                  const active = trade[0] === _id;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: active ? 'active' : '',\n                    onClick: () => this.tradeHandler({\n                      _id,\n                      trade_name,\n                      selected_url\n                    }, 'trade'),\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: selected_url ? selected_url : spherePlaceholder,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1228,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1227,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"name\",\n                      children: trade_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1230,\n                      columnNumber: 49\n                    }, this)]\n                  }, _id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1226,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1222,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: \"Specialisation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags_wrap\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [(specializationList === null || specializationList === void 0 ? void 0 : specializationList.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: allSpecializationSelected ? 'selected' : '',\n                  onClick: () => this.tradeHandler(specializationList, 'All Clicked'),\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 41\n                }, this), specializationList === null || specializationList === void 0 ? void 0 : specializationList.map(({\n                  _id,\n                  name\n                }) => {\n                  const active = (specialization === null || specialization === void 0 ? void 0 : specialization.indexOf(_id)) >= 0;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: active && !allSpecializationSelected ? 'selected' : '',\n                    onClick: () => this.tradeHandler({\n                      _id,\n                      name\n                    }, 'specializationId'),\n                    children: name\n                  }, _id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1246,\n                    columnNumber: 48\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1240,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: `link ${trade.length && specialization.length ? '' : 'disable_link'}`,\n              onClick: () => this.tradeHandler('Clear All', 'Clear All'),\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${trade.length && specialization.length ? '' : 'disable_btn'}`,\n              onClick: this.submitAreasOfTrade,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: [\"About \", this.userType === 2 && 'company', ((profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) || (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.aboutCompany)) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edit_icon\",\n            title: \"Edit\",\n            onClick: this.addInfoAboutYou,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editIconBlue,\n              alt: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1262,\n            columnNumber: 87\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1261,\n          columnNumber: 57\n        }, this), !(profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) && !(profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.aboutCompany) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_grey_btn full_btn btn-effect\",\n          onClick: this.addInfoAboutYou,\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 191\n          }, this) : `Add info about ${this.userType === 1 ? 'you' : 'company'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1266,\n          columnNumber: 85\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commn_para\",\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 68\n          }, this) : (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) || (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.aboutCompany)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: aboutModalClicked,\n        onClose: () => this.setState({\n          about: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) ? profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about : '',\n          aboutModalClicked: false,\n          errors: {}\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh profile_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: [\"About \", this.userType === 2 && 'company']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: () => this.setState({\n                about: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) ? profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about : '',\n                aboutModalClicked: false,\n                errors: {}\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1281,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1280,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: this.userType === 1 ? 'Description' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Enter Description\",\n                maxLength: 250,\n                value: about,\n                onChange: ({\n                  target: {\n                    value\n                  }\n                }) => this.setState({\n                  about: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1287,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char_count\",\n                children: `${about.length}/250`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1286,\n              columnNumber: 29\n            }, this), !!errors.about && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors.about\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1290,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: () => {\n                let err = {};\n\n                if (about.trim().length < 1) {\n                  err.about = 'Description is required';\n                  this.setState({\n                    errors: err\n                  });\n                } else {\n                  const newData = { ...profileViewData\n                  };\n                  newData.about = about;\n                  this.setState({\n                    profileViewData: newData,\n                    aboutModalClicked: false,\n                    isProfileViewDataChanged: true\n                  });\n                }\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn btn-effect\",\n              onClick: () => this.setState({\n                about: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) ? profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about : '',\n                aboutModalClicked: false,\n                errors: {}\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 70\n          }, this) : 'Portfolio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1310,\n          columnNumber: 21\n        }, this), (profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port = profileViewData.portfolio) === null || _profileViewData$port === void 0 ? void 0 : _profileViewData$port.length) === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_grey_btn full_btn btn-effect\",\n          onClick: this.addNewPortfolioJob,\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 175\n          }, this) : 'Add portfolio'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 66\n        }, this), isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"portfolio_wrappr\",\n          children: [profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port2 = profileViewData.portfolio) === null || _profileViewData$port2 === void 0 ? void 0 : _profileViewData$port2.map(({\n            jobDescription,\n            jobName,\n            portfolioId,\n            portfolioImage\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"media\",\n              onClick: () => this.setState({\n                portfolioJobClicked: true,\n                portfolioJobDetail: {\n                  jobDescription,\n                  jobName,\n                  portfolioId,\n                  portfolioImage\n                },\n                portfolioJobIndex: index\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"portfolio_img\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: portfolioImage[0] ? portfolioImage[0] : profilePlaceholder,\n                  alt: \"portfolio-images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1317,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"xs_sub_title\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"line-3\",\n                    title: jobName,\n                    children: jobName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1319,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1318,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 37\n              }, this)\n            }, portfolioId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 33\n            }, this);\n          }), (profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port3 = profileViewData.portfolio) === null || _profileViewData$port3 === void 0 ? void 0 : _profileViewData$port3.length) < 6 && (profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port4 = profileViewData.portfolio) === null || _profileViewData$port4 === void 0 ? void 0 : _profileViewData$port4.length) > 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload_media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: addMediaLrg,\n              alt: \"add\",\n              onClick: this.addNewPortfolioJob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 112\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: portfolioJobClicked,\n        onClose: () => this.setState({\n          portfolioJobClicked: false\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh portfolio_preview\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: /*#__PURE__*/_jsxDEV(Carousel, {\n                responsive: portfolioModal,\n                showDots: true,\n                infinite: true,\n                autoPlay: true,\n                arrows: false,\n                className: \"portfolio_wrappr\",\n                children: (portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p === void 0 ? void 0 : _portfolioJobDetail$p.length) > 0 ? portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p2 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p2 === void 0 ? void 0 : _portfolioJobDetail$p2.map(image => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"media\",\n                    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"portfolio_img\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: image ? image : portfolioPlaceholder,\n                        alt: \"portfolio-images\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1354,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"back bk_white\",\n                        title: \"Back\",\n                        onClick: () => this.setState({\n                          portfolioJobClicked: false\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1355,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1353,\n                      columnNumber: 49\n                    }, this)\n                  }, portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1352,\n                    columnNumber: 45\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: portfolioPlaceholder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1359,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot_menu\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: dotMenu,\n                  alt: \"menu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1364,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit_menu\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon edit\",\n                      onClick: () => this.setState({\n                        isAddEditPortfolioModal: true,\n                        portfolioJobClicked: false,\n                        editPortfolioJob: true\n                      }),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1368,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon delete\",\n                      onClick: () => this.setState({\n                        deletePortfolioJob: true,\n                        confirmationModalClicked: true\n                      }),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1369,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1367,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1366,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: \"Job Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1374,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job_content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1376,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1375,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1339,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: confirmationModalClicked,\n        onClose: () => this.setState({\n          confirmationModalClicked: false,\n          portfolioJobIndex: null\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh confirmation\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xs_sub_title\",\n              children: \"Delete Portfolio Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: () => this.setState({\n                confirmationModalClicked: false,\n                portfolioJobIndex: null\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1394,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1393,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1391,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal_message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Are you sure you want to delete portfolio job?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1398,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog_actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn btn-effect\",\n              onClick: this.submitPortfolioJobs,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn btn-effect\",\n              onClick: () => this.setState({\n                confirmationModalClicked: false,\n                portfolioJobIndex: null\n              }),\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1402,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1390,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1383,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: isAddEditPortfolioModal,\n        onClose: this.closeAddEditPortofolioModal,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: this.closeAddEditPortofolioModal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1417,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md_heading\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sub_title\",\n                  children: \"Portfolio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1419,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info_note\",\n                  children: storageService.getItem('userType') === 1 ? 'Tradies who have a portfolio with photos get job faster.' : 'Showcase your work and attract the best talent to your jobs.'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1420,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1418,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1416,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: this.closeAddEditPortofolioModal,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1430,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1429,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_wrappr\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Job Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1436,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter Job Name\",\n                    value: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobName,\n                    maxLength: 100,\n                    onChange: e => {\n                      const data = { ...portfolioJobDetail\n                      };\n                      data.jobName = e.target.value;\n                      this.setState({\n                        portfolioJobDetail: data\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1438,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1437,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1435,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Job Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1453,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    placeholder: \"Enter Job Description\",\n                    value: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription,\n                    maxLength: 250,\n                    onChange: e => {\n                      const data = { ...portfolioJobDetail\n                      };\n                      data.jobDescription = e.target.value;\n                      this.setState({\n                        portfolioJobDetail: data\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1455,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1454,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1452,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload_img_video\",\n              children: [portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p3 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p3 === void 0 ? void 0 : _portfolioJobDetail$p3.map((image, index) => {\n                return /*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"img_video\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: image ? image : dummy,\n                    \"async-src\": image ? image : dummy,\n                    decoding: \"async\",\n                    loading: \"lazy\",\n                    alt: \"portfolio-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1473,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: remove,\n                    alt: \"remove\",\n                    className: \"remove\",\n                    onClick: () => {\n                      var _data$portfolioImage2;\n\n                      const data = { ...portfolioJobDetail\n                      };\n                      data === null || data === void 0 ? void 0 : (_data$portfolioImage2 = data.portfolioImage) === null || _data$portfolioImage2 === void 0 ? void 0 : _data$portfolioImage2.splice(index, 1);\n                      this.setState({\n                        portfolioJobDetail: data\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1479,\n                    columnNumber: 45\n                  }, this)]\n                }, image, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1472,\n                  columnNumber: 41\n                }, this);\n              }), (portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p4 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p4 === void 0 ? void 0 : _portfolioJobDetail$p4.length) < 6 && addPortfolioJob && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"upload_media\",\n                  htmlFor: \"upload_img_video\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: addMedia,\n                    alt: \"add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1493,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1492,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/png,image/jpg,image/jpeg\",\n                  style: {\n                    display: \"none\"\n                  },\n                  id: \"upload_img_video\",\n                  onChange: e => this.onFileChange(e, \"addJobPhotos\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1496,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${(portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$j = portfolioJobDetail.jobName) === null || _portfolioJobDetail$j === void 0 ? void 0 : _portfolioJobDetail$j.trim()) && (portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$j2 = portfolioJobDetail.jobDescription) === null || _portfolioJobDetail$j2 === void 0 ? void 0 : _portfolioJobDetail$j2.trim()) && (portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p5 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p5 === void 0 ? void 0 : _portfolioJobDetail$p5.length) ? '' : 'disable_btn'}`,\n              onClick: this.submitPortfolioJobs,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn btn-effect\",\n              onClick: this.closeAddEditPortofolioModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1515,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1407,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `fill_btn full_btn btn-effect ${isProfileViewDataChanged ? '' : 'disable_btn'}`,\n          onClick: this.submitUpdateProfile,\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 81\n          }, this) : 'Save changes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1521,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default PersonalInformation;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/personalInformation.tsx"],"names":["React","Component","_","Modal","NumberFormat","Constants","regex","portfolioModal","ChangeEmailModal","tradieUpdateProfileDetails","tradieUpdateBasicDetails","tradieUpdatePassword","tradieAddPortfolioJob","tradieUpdatePortfolioJob","tradieDeletePortfolioJob","tradieChangeEmail","onFileUpload","setShowToast","portfolioPlaceholder","menu","dotMenu","dummy","cameraBlack","editIconBlue","profilePlaceholder","cancel","remove","addMedia","addMediaLrg","eyeIconClose","eyeIconOpen","removeFile","jpegFile","jpgFile","pngFile","pdfFile","docFile","viewProfile","Carousel","storageService","validateABN","Skeleton","updateChatUserImageAndName","PersonalInformation","constructor","props","userType","toggleSidebar","setState","isToggleSidebar","state","tradeHandler","item","name","id","_id","console","log","trade","length","tradeData","specialization","allSpecializationSelected","tradeId","tradeName","trade_name","tradeSelectedUrl","selected_url","newData","newSpecsData","specializationData","itemIndex","indexOf","push","specializationId","specializationName","splice","newSpecialization","map","newSpecializationData","submitAreasOfTrade","profileViewData","areasOfSpecialization","areasOfSpecsModalClicked","isProfileViewDataChanged","onFileChange","e","type","formData","FormData","newFile","target","files","uploadFileName","split","pop","join","fileType","toLowerCase","docTypes","docTypes2","selectedFileSize","size","alert","append","userImage","URL","createObjectURL","res","success","data","portfolioJobDetail","portfolioImage","imgUrl","newBasicData","basicDetailsData","newqualificationDoc","qualificationDoc","find","i","qualification_id","url","fileName","isEditProfileModalChanged","remainingQualificationDoc","validateBasicDetailsForm","newErrors","fullName","errorStrings","fullNameEmpty","trim","nameRegex","RegExp","fullname","test","fullNameErr","mobileNumber","phoneNumberEmpty","phoneRegex","mobile","phoneNumberErr","abn","abnEmpty","abnRegex","replaceAll","abnErr","newQualificationDoc","isSelected","Object","keys","newRemainingDoc","companyName","companyNameEmpty","companyNameErr","position","positionNameEmpty","positionRegex","positionNameErr","errors","validatePasswordForm","password","oldPassword","newPassword","passwordRegex","passwordError","confirmNewPassword","validateChangeEmailForm","newEmail","emailRegex","email","emailErr","currentPassword","changeHandler","newBasicDetails","value","submitBasicProfileDetails","basicDetails","filledQualification","newFilledQualification","filter","remainingQualification","newRemainingQualification","builderData","undefined","cleanTradieBasicDetails","prevState","profileModalClicked","addQualificationClicked","getTradieBasicDetails","callTradieProfileData","getProfileBuilder","passwordHandler","updatePasswordHandler","user_type","getItem","history","passwordModalCloseHandler","passwordModalClicked","showPassword","showNewPassword","showConfirmNewPassword","changeEmailModalCloseHandler","changeEmailModalClicked","submitPortfolioJobs","addPortfolioJob","jobName","jobDescription","portfolio","portfolioJobClicked","isAddEditPortfolioModal","portfolioJobIndex","editPortfolioJob","portfolioId","index","newProfileData","newPortfolio","deletePortfolioJob","confirmationModalClicked","closeAddEditPortofolioModal","addNewPortfolioJob","addInfoAboutYou","aboutModalClicked","about","aboutCompany","submitUpdateProfile","tradieImage","builderImage","res1","res2","changeEmailHandler","currentEmail","removeQualificationFileHandler","stopPropagation","changeQualificationHandler","qualificationFileDetails","fileArray","replace","editProfileCloseHandler","tradieBasicDetailsData","localProfileView","localQualificationDoc","componentDidMount","getTradieProfileView","tradeListData","callTradeList","componentWillUnmount","cleanTradieProfileViewData","getDerivedStateFromProps","nextProps","tradieProfileViewData","isEqual","qualifications","alreadyFilledQualificationDoc","includes","render","tradeList","isSkeletonLoading","specializationList","specialisations","display","userId","tradieProfileData","profileCompleted","builderProfile","parseInt","ratings","reviewsCount","jobCompletedCount","values","formattedValue","accountType","qualificationName","docDetails","window","open","active","spherePlaceholder","err","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport Modal from '@material-ui/core/Modal';\nimport NumberFormat from 'react-number-format';\nimport Constants from '../../../../utils/constants';\nimport regex from '../../../../utils/regex';\nimport { portfolioModal } from '../../../builderInfo/builderInfo';\nimport ChangeEmailModal from './changeEmailModal/changeEmailModal';\nimport {\n    tradieUpdateProfileDetails,\n    tradieUpdateBasicDetails,\n    tradieUpdatePassword,\n    tradieAddPortfolioJob,\n    tradieUpdatePortfolioJob,\n    tradieDeletePortfolioJob,\n    tradieChangeEmail,\n} from '../../../../redux/profile/actions';\nimport { onFileUpload } from '../../../../redux/auth/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\n\nimport portfolioPlaceholder from '../../../../assets/images/portfolio-placeholder.jpg';\nimport menu from '../../../../assets/images/menu-line-blue.png';\nimport dotMenu from '../../../../assets/images/menu-dot.png';\nimport dummy from '../../../../assets/images/u_placeholder.jpg';\nimport cameraBlack from '../../../../assets/images/camera-black.png';\nimport editIconBlue from '../../../../assets/images/ic-edit-blue.png';\nimport profilePlaceholder from '../../../../assets/images/ic-placeholder-detail.png';\nimport cancel from \"../../../../assets/images/ic-cancel.png\";\nimport remove from \"../../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../../assets/images/add-image.png\";\nimport addMediaLrg from \"../../../../assets/images/add-image-lg.png\";\nimport editIconWhite from '../../../../assets/images/ic-edit-white.png';\nimport spherePlaceholder from '../../../../assets/images/ic_categories_placeholder.svg';\nimport eyeIconClose from '../../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../../assets/images/icon-eye-open.png';\nimport removeFile from '../../../../assets/images/icon-close-1.png';\nimport jpegFile from '../../../../assets/images/jpeg.png';\nimport jpgFile from '../../../../assets/images/jpg.png';\nimport pngFile from '../../../../assets/images/png.png';\nimport pdfFile from '../../../../assets/images/pdf.png';\nimport docFile from '../../../../assets/images/doc.png';\nimport viewProfile from '../../../../assets/images/view.png';\n\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport storageService from '../../../../utils/storageService';\nimport { validateABN } from '../../../../utils/common';\n//@ts-ignore\nimport Skeleton from 'react-loading-skeleton';\nimport { updateChatUserImageAndName } from '../../../../services/firebase';\n\ninterface Props {\n    history: any,\n    tradieProfileData: any,\n    builderProfile: any,\n    tradieProfileViewData: any,\n    tradieBasicDetailsData: any,\n    tradeListData: any,\n    isLoading: boolean,\n    getTradieProfileView: () => void,\n    getTradieBasicDetails: () => void,\n    callTradeList: () => void,\n    callTradieProfileData: () => void,\n    getProfileBuilder: () => void,\n    cleanTradieBasicDetails: () => void,\n    cleanTradieProfileViewData: () => void,\n}\n\ninterface State {\n    errors: any,\n    isToggleSidebar: boolean,\n    profileModalClicked: boolean,\n    areasOfSpecsModalClicked: boolean,\n    aboutModalClicked: boolean,\n    isAddEditPortfolioModal: boolean,\n    portfolioJobClicked: boolean,\n    passwordModalClicked: boolean,\n    basicDetailsData: any,\n    trade: Array<any>,\n    specialization: Array<any>,\n    allSpecializationSelected: boolean,\n    about: string,\n    userImage: string,\n    password: string,\n    showPassword: boolean,\n    newPassword: string,\n    showNewPassword: boolean,\n    confirmNewPassword: string,\n    showConfirmNewPassword: boolean,\n    formData: any,\n    profileViewData: any,\n    localProfileView: any,\n    tradeData: Array<any>,\n    specializationData: Array<any>,\n    portfolioJobDetail: any,\n    addPortfolioJob: boolean,\n    editPortfolioJob: boolean,\n    deletePortfolioJob: boolean,\n    portfolioJobIndex: number | null,\n    confirmationModalClicked: boolean,\n    changeEmailModalClicked: boolean,\n    newEmail: string,\n    addQualificationClicked: boolean,\n    isProfileViewDataChanged: boolean,\n    isEditProfileModalChanged: boolean,\n    localQualificationDoc: any,\n    remainingQualificationDoc: any,\n}\n\nexport class PersonalInformation extends Component<Props, State> {\n    private userType: any;\n\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            errors: {},\n            isToggleSidebar: false,\n            profileModalClicked: false,\n            areasOfSpecsModalClicked: false,\n            aboutModalClicked: false,\n            portfolioJobClicked: false,\n            isAddEditPortfolioModal: false,\n            passwordModalClicked: false,\n            trade: [],\n            tradeData: [],\n            specialization: [],\n            specializationData: [],\n            allSpecializationSelected: false,\n            about: '',\n            userImage: '',\n            password: '',\n            showPassword: false,\n            newPassword: '',\n            showNewPassword: false,\n            confirmNewPassword: '',\n            showConfirmNewPassword: false,\n            formData: null,\n            basicDetailsData: {},\n            profileViewData: {},\n            localProfileView: '',\n            portfolioJobDetail: '',\n            addPortfolioJob: false,\n            editPortfolioJob: false,\n            deletePortfolioJob: false,\n            portfolioJobIndex: null,\n            confirmationModalClicked: false,\n            changeEmailModalClicked: false,\n            isProfileViewDataChanged: false,\n            isEditProfileModalChanged: false,\n            newEmail: '',\n            addQualificationClicked: false,\n            localQualificationDoc: [],\n            remainingQualificationDoc: [],\n        }\n\n        this.userType = storageService.getItem('userType');\n    }\n\n    componentDidMount() {\n        this.props.getTradieProfileView();\n        this.props.getTradieBasicDetails();\n        if (!this.props.tradeListData.length) { this.props.callTradeList(); }\n    }\n\n    componentWillUnmount() {\n        this.props.cleanTradieProfileViewData();\n        this.props.cleanTradieBasicDetails();\n    }\n\n    static getDerivedStateFromProps(nextProps: any, prevState: any) {\n        console.log(nextProps, \"nextProps--------------\", prevState, \"prevState-------------\");\n        if (nextProps.tradieProfileViewData && Object.keys(prevState.profileViewData).length === 0 && !_.isEqual(nextProps.tradieProfileViewData, prevState.profileViewData)) {\n            return {\n                profileViewData: nextProps.tradieProfileViewData,\n                userImage: nextProps.tradieProfileViewData?.tradieImage || nextProps.tradieProfileViewData?.builderImage\n            }\n        }\n        if (nextProps.tradieBasicDetailsData && Object.keys(prevState.basicDetailsData).length === 0 && !_.isEqual(nextProps.tradieBasicDetailsData, prevState.basicDetailsData)) {\n            return {\n                basicDetailsData: nextProps.tradieBasicDetailsData\n            }\n        }\n        if (storageService.getItem('userType') === 1 && nextProps.tradeListData && (!prevState.localQualificationDoc?.length || !prevState.remainingQualificationDoc?.length) && nextProps.tradieBasicDetailsData) {\n            const data = [...nextProps.tradeListData][0]?.qualifications?.map((item: any) => item.name?.length && { _id: item._id, name: item.name });\n            const alreadyFilledQualificationDoc: Array<any> = nextProps.tradieBasicDetailsData?.qualificationDoc?.map(({ qualification_id }: { qualification_id: string }) => qualification_id?.length && qualification_id);\n            const remainingQualificationDoc = data?.filter(({ _id }: { _id: string }) => !alreadyFilledQualificationDoc?.includes(_id));\n            console.log(remainingQualificationDoc, \"remainingQualificationDoc\", alreadyFilledQualificationDoc, \"alreadyFilledQualificationDoc\");\n            return {\n                localQualificationDoc: data ? data : [],\n                remainingQualificationDoc: remainingQualificationDoc ? remainingQualificationDoc : []\n            }\n        }\n        return null;\n    }\n\n    toggleSidebar = () => this.setState({ isToggleSidebar: !this.state.isToggleSidebar });\n\n    tradeHandler = (item: any, name: string) => {\n        const id = item?._id;\n        console.log(item, \"item-------------------\")\n        if (name === 'trade') {\n            if (this.state.trade.length && this.state.trade[0] == id) {\n                this.setState({\n                    trade: [],\n                    tradeData: [],\n                    specialization: [],\n                    allSpecializationSelected: false\n                });\n            } else {\n                this.setState({\n                    trade: [id],\n                    tradeData: [{\n                        tradeId: id,\n                        tradeName: item?.trade_name,\n                        tradeSelectedUrl: item?.selected_url\n                    }],\n                    specialization: [],\n                    allSpecializationSelected: false\n                });\n            }\n        } else if (name === 'specializationId') {\n            this.setState((state: any) => {\n                var newData = [...state.specialization];\n                var newSpecsData = [...state.specializationData];\n                if (state.allSpecializationSelected) {\n                    newData = [];\n                    newSpecsData = [];\n                }\n                const itemIndex = newData.indexOf(id);\n                if (newData.indexOf(id) < 0) {\n                    newData.push(id);\n                    newSpecsData.push({ specializationId: id, specializationName: item?.name })\n                } else {\n                    newData.splice(itemIndex, 1);\n                    newSpecsData.splice(itemIndex, 1);\n                }\n                return {\n                    specialization: newData,\n                    specializationData: newSpecsData,\n                    allSpecializationSelected: false\n                }\n            })\n        } else if (name === 'All Clicked') {\n            if (this.state.allSpecializationSelected) {\n                this.setState({ allSpecializationSelected: false, specialization: [], specializationData: [] });\n            } else {\n                const newSpecialization = item.map(({ _id }: { _id: string }) => _id)\n                const newSpecializationData = item.map(({ _id, name }: { _id: string, name: string }) => {\n                    return {\n                        specializationId: _id,\n                        specializationName: name\n                    }\n                });\n                this.setState({ allSpecializationSelected: true, specialization: newSpecialization, specializationData: newSpecializationData });\n            }\n        }\n        else if (name === 'Clear All') {\n            this.setState({ allSpecializationSelected: false, trade: [], tradeData: [], specialization: [], specializationData: [] });\n        }\n    }\n\n    submitAreasOfTrade = () => {\n        const newData = { ...this.state.profileViewData };\n        newData.areasOfSpecialization.tradeData = this.state.tradeData;\n        newData.areasOfSpecialization.specializationData = this.state.specializationData;\n        console.log(newData, \"newdata-----------\")\n        this.setState({ profileViewData: newData, areasOfSpecsModalClicked: false, isProfileViewDataChanged: true });\n    }\n\n    onFileChange = async (e: any, type?: string, id?: string) => {\n        const formData = new FormData();\n        const newFile = e.target.files[0];\n        var uploadFileName = newFile?.name?.split('.');\n        uploadFileName.pop();\n        uploadFileName = uploadFileName.join('.');\n        var fileType = newFile?.type?.split('/')[1]?.toLowerCase();\n        const docTypes: Array<any> = [\"jpeg\", \"jpg\", \"png\", \"pdf\", \"msword\", \"doc\", \"docx\", \"vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n        const docTypes2: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\n        var selectedFileSize = newFile?.size / 1024 / 1024;\n        if (type === \"profileImage\" || type === \"addJobPhotos\") {\n            if (docTypes2.indexOf(fileType) < 0 || (selectedFileSize > 10)) {\n                alert('The file must be in proper format or size');\n                return;\n            }\n        } else if (docTypes.indexOf(fileType) < 0 || (selectedFileSize > 10)) {\n            alert('The file must be in proper format or size');\n            return;\n        }\n        formData.append('file', newFile);\n        if (type === \"profileImage\") {\n            this.setState({ userImage: URL.createObjectURL(newFile), formData: formData, isProfileViewDataChanged: true });\n        }\n        if (type === \"addJobPhotos\") {\n            const res = await onFileUpload(formData);\n            if (res.success) {\n                const data: any = { ...this.state.portfolioJobDetail };\n                data?.portfolioImage?.push(res.imgUrl);\n                this.setState({ portfolioJobDetail: data });\n            }\n        }\n        if (type === \"filledQualification\") {\n            const res = await onFileUpload(formData);\n            if (res.success) {\n                const newBasicData: any = { ...this.state.basicDetailsData };\n                const newqualificationDoc: Array<any> = newBasicData?.qualificationDoc;\n                const item = newqualificationDoc?.find(i => i.qualification_id === id)\n                item.url = res.imgUrl;\n                item.fileName = uploadFileName;\n                this.setState({ basicDetailsData: newBasicData, isEditProfileModalChanged: true });\n            }\n        }\n        if (type === \"remainingQualification\") {\n            const res = await onFileUpload(formData);\n            if (res.success) {\n                const data: Array<any> = [...this.state.remainingQualificationDoc];\n                const item = data?.find(i => i._id === id)\n                item.url = res.imgUrl;\n                item.fileName = uploadFileName;\n                this.setState({ remainingQualificationDoc: data, isEditProfileModalChanged: true });\n            }\n        }\n    }\n\n    validateBasicDetailsForm = () => {\n        const newErrors: any = {};\n        if (!this.state.basicDetailsData?.fullName) {\n            newErrors.fullName = Constants.errorStrings.fullNameEmpty;\n        } else if (this.state.basicDetailsData?.fullName.trim()?.length > 50) {\n            newErrors.fullName = 'Maximum 50 characters are allowed.';\n        } else {\n            const nameRegex = new RegExp(regex.fullname);\n            if (!nameRegex.test(this.state.basicDetailsData?.fullName.trim())) {\n                newErrors.fullName = Constants.errorStrings.fullNameErr\n            }\n        }\n\n        if (!this.state.basicDetailsData?.mobileNumber) {\n            newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n        } else {\n            const phoneRegex = new RegExp(regex.mobile);\n            if (!phoneRegex.test(this.state.basicDetailsData?.mobileNumber)) {\n                newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr\n            }\n        }\n\n        if (!this.state.basicDetailsData?.abn) {\n            newErrors.abn = Constants.errorStrings.abnEmpty;\n        } else {\n            const abnRegex = new RegExp(regex.abn);\n            if (!abnRegex.test(this.state.basicDetailsData.abn.replaceAll(' ', ''))) {\n                newErrors.abn = Constants.errorStrings.abnErr\n            }\n            if (!validateABN(this.state.basicDetailsData.abn.replaceAll(' ', ''))) {\n                newErrors.abn = Constants.errorStrings.abnErr\n            }\n        }\n\n        if (this.userType === 1) {\n            const newQualificationDoc = this.state.basicDetailsData?.qualificationDoc?.find(({ url, isSelected }: { url: string, isSelected: string }) => (!url?.length && !isSelected?.length));\n            console.log(newQualificationDoc, \"newQualificationDoc validation\");\n            if (!!newQualificationDoc && Object.keys(newQualificationDoc)?.length > 0) {\n                setShowToast(true, \"Please upload all selected documents\");\n                return;\n            }\n\n            const newRemainingDoc = this.state.remainingQualificationDoc?.find(({ url, isSelected }: { url: string, isSelected: string }) => (!url?.length && isSelected?.length));\n            console.log(newRemainingDoc, \"newRemainingDoc validation\");\n            if (!!newRemainingDoc && Object.keys(newRemainingDoc)?.length > 0) {\n                setShowToast(true, \"Please upload all selected documents\");\n                return;\n            }\n        } else {\n            if (!this.state.basicDetailsData?.companyName) {\n                newErrors.companyName = Constants.errorStrings.companyNameEmpty;\n            } else if (this.state.basicDetailsData?.companyName.trim()?.length > 50) {\n                newErrors.companyName = 'Maximum 50 characters are allowed.';\n            } else {\n                const nameRegex = new RegExp(regex.fullname);\n                if (!nameRegex.test(this.state.basicDetailsData.companyName.trim())) {\n                    newErrors.companyName = Constants.errorStrings.companyNameErr;\n                }\n            }\n            if (!this.state.basicDetailsData?.position) {\n                newErrors.position = Constants.errorStrings.positionNameEmpty;\n            } else if (this.state.basicDetailsData?.position.trim()?.length > 50) {\n                newErrors.position = 'Maximum 50 characters are allowed.';\n            } else {\n                const positionRegex = new RegExp(regex.fullname);\n                if (!positionRegex.test(this.state.basicDetailsData.position.trim())) {\n                    newErrors.position = Constants.errorStrings.positionNameErr;\n                }\n            }\n        }\n\n        this.setState({ errors: newErrors });\n        return !Object.keys(newErrors).length;\n    }\n\n    validatePasswordForm = () => {\n        const newErrors: any = {};\n        if (!this.state.password) {\n            newErrors.password = Constants.errorStrings.oldPassword;\n        }\n        if (!this.state.newPassword) {\n            newErrors.newPassword = 'New Password is required';\n        } else {\n            const passwordRegex = new RegExp(regex.password);\n            if (!passwordRegex.test(this.state.newPassword.trim())) {\n                newErrors.newPassword = Constants.errorStrings.passwordError;\n            }\n        }\n        if (this.state.newPassword.trim() !== this.state.confirmNewPassword.trim()) {\n            newErrors.confirmNewPassword = Constants.errorStrings.confirmNewPassword;\n        }\n        this.setState({ errors: newErrors });\n        return !Object.keys(newErrors).length;\n    }\n\n    validateChangeEmailForm = () => {\n        const newErrors: any = {};\n        if (!this.state.newEmail) {\n            newErrors.newEmail = 'New Email Address is required';\n        } else {\n            const emailRegex = new RegExp(regex.email);\n            if (!emailRegex.test(this.state.basicDetailsData?.email)) {\n                newErrors.newEmail = Constants.errorStrings.emailErr;\n            }\n        }\n\n        if (!this.state.password) {\n            newErrors.currentPassword = 'Current Password is required';\n        } else {\n            const passwordRegex = new RegExp(regex.password);\n            if (!passwordRegex.test(this.state.password.trim())) {\n                newErrors.currentPassword = Constants.errorStrings.passwordError;\n            }\n        }\n\n        this.setState({ errors: newErrors });\n        return !Object.keys(newErrors).length;\n    }\n\n    changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newBasicDetails = { ...this.state.basicDetailsData };\n        newBasicDetails[`${e.target.name}`] = e.target.value;\n        this.setState({ basicDetailsData: newBasicDetails, isEditProfileModalChanged: true });\n    }\n\n    submitBasicProfileDetails = async () => {\n        if (this.validateBasicDetailsForm()) {\n            const basicDetails = { ...this.state.basicDetailsData };\n            const filledQualification = this.userType === 1 ? [...this.state.basicDetailsData?.qualificationDoc]?.map(({ url, qualification_id }: { url: string, qualification_id: string }) => url?.length && { qualification_id: qualification_id, url: url }) : [];\n            const newFilledQualification = filledQualification?.filter((i: any) => (i && Object.keys(i)?.length > 0));\n            const remainingQualification = this.state.remainingQualificationDoc?.map(({ _id, url }: { _id: string, url: string }) => url?.length && { qualification_id: _id, url: url });\n            const newRemainingQualification = remainingQualification?.filter((i: any) => (i && Object.keys(i)?.length > 0));\n\n            const builderData = {\n                companyName: basicDetails?.companyName,\n                position: basicDetails?.position,\n            }\n\n            const data = {\n                fullName: basicDetails?.fullName,\n                mobileNumber: basicDetails?.mobileNumber,\n                email: basicDetails?.email,\n                abn: basicDetails?.abn,\n                qualificationDoc: this.userType === 1 ? [...newFilledQualification, ...newRemainingQualification] : undefined,\n                ...(this.userType === 1 ? {} : builderData),\n            }\n            const res = await tradieUpdateBasicDetails(data);\n            if (res?.success) {\n                this.props.cleanTradieBasicDetails();\n                updateChatUserImageAndName('userName', data.fullName);\n                basicDetails.qualificationDoc = this.userType === 1 ? data.qualificationDoc : [];\n                this.setState((prevState: any) => ({\n                    profileModalClicked: false,\n                    addQualificationClicked: false,\n                    remainingQualificationDoc: [],\n                    basicDetailsData: basicDetails\n                }));\n                this.props.getTradieBasicDetails();\n                this.userType === 1 ? this.props.callTradieProfileData() : this.props.getProfileBuilder();\n            }\n        }\n    }\n\n    passwordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState((prevState: any) => ({ ...prevState, [e.target.name]: e.target.value }));\n    }\n\n    updatePasswordHandler = async () => {\n        if (this.validatePasswordForm()) {\n            const data = {\n                user_type: storageService.getItem('userType'),\n                oldPassword: this.state.password,\n                newPassword: this.state.newPassword\n            }\n            const res = await tradieUpdatePassword(data);\n            if (res.success) {\n                this.props.history.push('/change-password-success');\n                // this.passwordModalCloseHandler();\n            }\n        }\n    }\n\n    passwordModalCloseHandler = () => {\n        this.setState({\n            profileModalClicked: true,\n            passwordModalClicked: false,\n            password: '',\n            newPassword: '',\n            confirmNewPassword: '',\n            showPassword: false,\n            showNewPassword: false,\n            showConfirmNewPassword: false,\n            errors: {}\n        });\n    }\n\n    changeEmailModalCloseHandler = () => {\n        this.setState({\n            profileModalClicked: true,\n            changeEmailModalClicked: false,\n            password: '',\n            newEmail: '',\n            showPassword: false,\n            errors: {}\n        });\n    }\n\n    submitPortfolioJobs = async () => {\n        if (this.state.addPortfolioJob) {\n            const portfolioJobDetail = this.state.portfolioJobDetail;\n            const data = {\n                jobName: portfolioJobDetail?.jobName,\n                jobDescription: portfolioJobDetail?.jobDescription,\n                url: portfolioJobDetail?.portfolioImage,\n            };\n            const res = await tradieAddPortfolioJob(data);\n            if (res?.success) {\n                const data = { ...this.state.profileViewData };\n                data.portfolio.push(res?.data);\n                this.setState({\n                    portfolioJobDetail: '',\n                    profileViewData: data,\n                    portfolioJobClicked: false,\n                    isAddEditPortfolioModal: false,\n                    addPortfolioJob: false,\n                    portfolioJobIndex: null,\n                });\n            }\n        }\n        if (this.state.editPortfolioJob) {\n            const portfolioJobDetail = this.state.portfolioJobDetail;\n            const data = {\n                portfolioId: portfolioJobDetail?.portfolioId,\n                jobName: portfolioJobDetail?.jobName,\n                jobDescription: portfolioJobDetail?.jobDescription,\n                url: portfolioJobDetail?.portfolioImage,\n            };\n            const res = await tradieUpdatePortfolioJob(data);\n            if (res?.success) {\n                const index = this.state.portfolioJobIndex;\n                const newProfileData = { ...this.state.profileViewData };\n                const newPortfolio = newProfileData?.portfolio;\n                newPortfolio.splice(index, 1, portfolioJobDetail);\n                this.setState({\n                    // portfolioJobDetail: '',\n                    profileViewData: newProfileData,\n                    portfolioJobClicked: true,\n                    isAddEditPortfolioModal: false,\n                    editPortfolioJob: false,\n                    portfolioJobIndex: null,\n                });\n                return;\n            }\n        }\n        if (this.state.deletePortfolioJob) {\n            const portfolioJobDetail = this.state.portfolioJobDetail;\n            const index = this.state.portfolioJobIndex;\n            const newProfileData = { ...this.state.profileViewData };\n            const newPortfolio = newProfileData?.portfolio;\n            newPortfolio.splice(index, 1);\n            const res = await tradieDeletePortfolioJob(portfolioJobDetail?.portfolioId);\n            if (res?.success) {\n                this.setState({\n                    portfolioJobDetail: '',\n                    profileViewData: newProfileData,\n                    portfolioJobClicked: false,\n                    isAddEditPortfolioModal: false,\n                    deletePortfolioJob: false,\n                    confirmationModalClicked: false,\n                    portfolioJobIndex: null,\n                });\n                return;\n            }\n        }\n    }\n\n    closeAddEditPortofolioModal = () => {\n        this.setState((prevState: any) => ({\n            isAddEditPortfolioModal: false,\n            portfolioJobClicked: prevState.addPortfolioJob ? false : true,\n            addPortfolioJob: false\n        }));\n    }\n\n    addNewPortfolioJob = () => {\n        this.setState({\n            addPortfolioJob: true,\n            isAddEditPortfolioModal: true,\n            portfolioJobDetail: { jobName: '', jobDescription: '', portfolioImage: [] }\n        })\n    }\n\n    addInfoAboutYou = () => {\n        this.setState((prevState: any) => ({\n            aboutModalClicked: true,\n            about: prevState?.profileViewData?.about || prevState?.profileViewData?.aboutCompany || '',\n        }));\n    }\n\n    submitUpdateProfile = async () => {\n        const newSpecialization: Array<any> = [...this.state.profileViewData?.areasOfSpecialization?.specializationData];\n        var newSpecializationData: Array<any> = newSpecialization?.map(({ specializationId }: { specializationId: string }) => specializationId?.length > 0 && specializationId);\n        const data = {\n            fullName: this.state.basicDetailsData?.fullName,\n            userImage: this.state.profileViewData?.tradieImage || this.state.profileViewData?.builderImage,\n            trade: [this.state.profileViewData?.areasOfSpecialization?.tradeData[0]?.tradeId],\n            specialization: newSpecializationData,\n            about: this.userType === 1 ? this.state.profileViewData?.about || '' : undefined,\n            position: this.userType === 1 ? undefined : this.state.profileViewData?.position,\n            companyName: this.userType === 1 ? undefined : this.state.profileViewData?.companyName,\n            aboutCompany: this.userType === 1 ? undefined : this.state.profileViewData?.about || this.state.profileViewData?.aboutCompany,\n        }\n        if (this.state.formData) {\n            const res1 = await onFileUpload(this.state.formData);\n            if (res1?.success) {\n                data.userImage = res1?.imgUrl;\n            }\n        }\n        const res2 = await tradieUpdateProfileDetails(data);\n        if (res2?.success) {\n            if (this.state.formData) {\n                updateChatUserImageAndName('userImage', data.userImage);\n            }\n            this.setState({\n                formData: null,\n                isProfileViewDataChanged: false\n            });\n            this.userType === 1 ? this.props.callTradieProfileData() : this.props.getProfileBuilder();\n        }\n    }\n\n    changeEmailHandler = async () => {\n        if (this.validateChangeEmailForm()) {\n            const data = {\n                currentEmail: this.state.basicDetailsData?.email,\n                newEmail: this.state.newEmail,\n                password: this.state.password,\n                user_type: storageService.getItem('userType'),\n            }\n            const res = await tradieChangeEmail(data);\n            if (res?.success) {\n\n            }\n        }\n    }\n\n    removeQualificationFileHandler = (e: any, id: string, type: string) => {\n        e.stopPropagation();\n        if (type === \"filledQualification\") {\n            const newBasicData: any = { ...this.state.basicDetailsData };\n            const newqualificationDoc: Array<any> = newBasicData?.qualificationDoc;\n            const item = newqualificationDoc?.find(i => i.qualification_id === id)\n            item.url = '';\n            item.fileName = '';\n            newBasicData.qualificationDoc = newqualificationDoc;\n            this.setState({ basicDetailsData: newBasicData });\n        }\n        if (type === \"remainingQualification\") {\n            const data: Array<any> = [...this.state.remainingQualificationDoc];\n            const item = data?.find(i => i._id === id)\n            item.url = '';\n            item.fileName = '';\n            this.setState({ remainingQualificationDoc: data });\n        }\n    }\n\n    changeQualificationHandler = (id: string, type: string) => {\n        if (type === \"filledQualification\") {\n            const newBasicData: any = { ...this.state.basicDetailsData };\n            const newqualificationDoc: Array<any> = newBasicData?.qualificationDoc;\n            const item = newqualificationDoc?.find(i => i.qualification_id === id);\n            const itemIndex = newqualificationDoc?.indexOf(item);\n            if (item.isSelected) {\n                newqualificationDoc.splice(itemIndex, 1, { qualification_id: id, url: '' });\n            } else {\n                newqualificationDoc.splice(itemIndex, 1, { qualification_id: id, url: '', isSelected: \"isSelected\" });\n            }\n            newBasicData.qualificationDoc = newqualificationDoc;\n            this.setState({ basicDetailsData: newBasicData });\n        }\n\n        if (type === \"remainingQualification\") {\n            const newqualificationDoc: Array<any> = [...this.state.remainingQualificationDoc];\n            const item = newqualificationDoc?.find(i => i._id === id);\n            const itemIndex = newqualificationDoc?.indexOf(item);\n            if (item.isSelected) {\n                newqualificationDoc.splice(itemIndex, 1, { _id: id, url: '', name: item.name });\n            } else {\n                newqualificationDoc.splice(itemIndex, 1, { _id: id, url: '', name: item.name, isSelected: \"isSelected\" });\n            }\n            this.setState({ remainingQualificationDoc: newqualificationDoc });\n        }\n    }\n\n    qualificationFileDetails = (url: any) => {\n        var fileArray = url.replace(/^.*[\\\\\\/]/, '').split('.');\n        const type = fileArray[1].toLowerCase();\n        switch (type) {\n            case \"jpeg\":\n                return { fileName: fileArray[0], fileType: jpegFile };\n            case \"jpg\":\n                return { fileName: fileArray[0], fileType: jpgFile };\n            case \"png\":\n                return { fileName: fileArray[0], fileType: pngFile };\n            case \"pdf\":\n                return { fileName: fileArray[0], fileType: pdfFile };\n            case \"doc\":\n                return { fileName: fileArray[0], fileType: docFile };\n            case \"docx\":\n                return { fileName: fileArray[0], fileType: docFile };\n            default:\n                return null;\n        }\n    }\n\n    editProfileCloseHandler = () => {\n        this.setState((prevState: any) => ({\n            profileModalClicked: false,\n            basicDetailsData: this.props.tradieBasicDetailsData ? this.props.tradieBasicDetailsData : {},\n            addQualificationClicked: false,\n            remainingQualificationDoc: [],\n            errors: {},\n        }));\n    }\n\n\n    render() {\n        let props: any = this.props;\n        console.log(this.state, \"state--------------\", props, \"props------------\");\n        let {\n            errors,\n            profileModalClicked,\n            areasOfSpecsModalClicked,\n            aboutModalClicked,\n            isAddEditPortfolioModal,\n            portfolioJobClicked,\n            passwordModalClicked,\n            basicDetailsData,\n            trade,\n            specialization,\n            allSpecializationSelected,\n            about,\n            userImage,\n            profileViewData,\n            password,\n            showPassword,\n            newPassword,\n            showNewPassword,\n            confirmNewPassword,\n            showConfirmNewPassword,\n            portfolioJobDetail,\n            addPortfolioJob,\n            confirmationModalClicked,\n            changeEmailModalClicked,\n            isProfileViewDataChanged,\n            isEditProfileModalChanged,\n            addQualificationClicked,\n            localQualificationDoc,\n            remainingQualificationDoc,\n        } = this.state;\n\n        const tradeList: any = props.tradeListData;\n        const isSkeletonLoading: any = props.isSkeletonLoading;\n        const specializationList = props.tradeListData.find(({ _id }: { _id: string }) => _id === trade[0])?.specialisations;\n\n        return (\n            <>\n                <div className=\"flex_row f_col\">\n                    <div className=\"flex_col_sm_4\">\n                        <div className=\"upload_profile_pic\">\n                            {isSkeletonLoading ? <Skeleton height={240} /> : <figure className=\"user_img\">\n                                <img src={userImage ? userImage : dummy} alt=\"Profile-pic\" />\n                                <label className=\"camera\" htmlFor=\"upload_profile_pic\">\n                                    <img src={cameraBlack} alt=\"camera\" />\n                                </label>\n                                <input\n                                    type=\"file\"\n                                    // accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                                    accept=\"image/png,image/jpg,image/jpeg\"\n                                    style={{ display: \"none\" }}\n                                    id=\"upload_profile_pic\"\n                                    onChange={(e) => this.onFileChange(e, \"profileImage\")}\n                                />\n                            </figure>}\n                        </div>\n                    </div>\n                    <div className=\"flex_col_sm_8\">\n                        <div className=\"title_view_wrap\">\n                            {isSkeletonLoading ? <Skeleton /> : <span className=\"title line-2\" title={basicDetailsData?.fullName}>{basicDetailsData?.fullName}\n                                <span className=\"edit_icon\" title=\"Edit\" onClick={() => this.setState({ profileModalClicked: true })}>\n                                    <img src={editIconBlue} alt=\"edit\" />\n                                </span>\n                            </span>}\n                            {isSkeletonLoading ? <Skeleton /> : <a href=\"javascript:void(0)\" className=\"view_profile\"\n                                onClick={() => {\n                                    props.cleanTradieProfileViewData();\n                                    props.history.push(`/${this.userType === 1 ? 'tradie' : 'builder'}-info?${this.userType === 1 ? 'trade' : 'builder'}Id=${basicDetailsData?.userId}`);\n                                }}>\n                                <img src={viewProfile} alt=\"view-profile\" />View public profile</a>}\n                        </div>\n\n                        <span className=\"tagg\">{isSkeletonLoading ? <Skeleton /> : basicDetailsData?.position}</span>\n\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_4 w85per\">\n                                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                    {isSkeletonLoading ? <Skeleton count={2} /> : <div className=\"progress_wrapper\">\n                                        <span className=\"show_label\">\n                                            Complete your profile\n                                        </span>\n                                        <span className=\"approval_info\">{this.userType === 1 ? this.props.tradieProfileData?.profileCompleted : this.props.builderProfile?.profileCompleted}</span>\n                                        <span className=\"progress_bar\">\n                                            <input\n                                                className=\"done_progress\"\n                                                id=\"progress-bar\"\n                                                type=\"range\"\n                                                min=\"0\"\n                                                value={parseInt(this.userType === 1 ? this.props.tradieProfileData?.profileCompleted : this.props.builderProfile?.profileCompleted)}\n                                            />\n                                        </span>\n                                    </div>}\n                                </div>\n                            </div>\n                        </div>\n\n                        <ul className=\"review_job\">\n                            {isSkeletonLoading ? <Skeleton /> : <li>\n                                <span className=\"icon reviews\">{profileViewData?.ratings || 0}</span>\n                                <span className=\"review_count\">{`${profileViewData?.reviewsCount || 0} reviews`}</span>\n                            </li>}\n                            {isSkeletonLoading ? <Skeleton /> : <li>\n                                <span className=\"icon job\">{profileViewData?.jobCompletedCount}</span>\n                                <span className=\"review_count\"> jobs completed</span>\n                            </li>}\n                        </ul>\n                    </div>\n                </div>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={profileModalClicked}\n                    onClose={this.editProfileCloseHandler}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading\">\n                            <span className=\"sub_title\">Edit Profile</span>\n                            <button className=\"close_btn\" onClick={this.editProfileCloseHandler}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n                        <div className=\"inner_wrap\">\n                            <div className=\"inner_wrappr\">\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Full Name</label>\n                                    <div className=\"text_field\">\n                                        <input type=\"text\" placeholder=\"Enter Full Name\" name='fullName' value={basicDetailsData?.fullName} onChange={this.changeHandler} />\n                                    </div>\n                                    {!!errors?.fullName && <span className=\"error_msg\">{errors?.fullName}</span>}\n                                </div>\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Mobile Number</label>\n                                    <div className=\"text_field\">\n                                        <NumberFormat\n                                            value={basicDetailsData?.mobileNumber}\n                                            className=\"foo\"\n                                            displayType={'text'}\n                                            prefix={'+61 '}\n                                            format=\"+61 ### ### ###\"\n                                        />\n                                        {/* <input type=\"number\" placeholder=\"Enter Mobile Number\" value={basicDetailsData?.mobileNumber} /> */}\n                                        {/* <NumberFormat\n                                            value={basicDetailsData?.mobileNumber}\n                                            displayType={'input'}\n                                            type={'tel'}\n                                            placeholder=\"+61 400 123 456\"\n                                            format=\"+61 ### ### ###\"\n                                            isNumericString={true}\n                                            onValueChange={(values) => {\n                                                const { formattedValue, value } = values;\n                                                const newBasicDetails = { ...this.state.basicDetailsData };\n                                                newBasicDetails.mobileNumber = value;\n                                                this.setState({ basicDetailsData: newBasicDetails, isEditProfileModalChanged: true });\n                                            }}\n                                        /> */}\n                                    </div>\n                                    {!!errors?.mobileNumber && <span className=\"error_msg\">{errors?.mobileNumber}</span>}\n                                </div>\n                                {this.userType === 1 && <div className=\"form_field\">\n                                    <label className=\"form_label\">Australian Business Number</label>\n                                    <div className=\"text_field\">\n                                        <NumberFormat\n                                            value={basicDetailsData?.abn}\n                                            displayType={'input'}\n                                            type={'tel'}\n                                            placeholder=\"51 824 753 556\"\n                                            format=\"## ### ### ###\"\n                                            isNumericString={true}\n                                            onValueChange={(values) => {\n                                                const { formattedValue, value } = values;\n                                                const newBasicDetails = { ...this.state.basicDetailsData };\n                                                newBasicDetails.abn = value;\n                                                this.setState({ basicDetailsData: newBasicDetails, isEditProfileModalChanged: true });\n                                            }}\n                                        />\n                                    </div>\n                                    {!!errors?.abn && <span className=\"error_msg\">{errors?.abn}</span>}\n                                </div>}\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Email</label>\n                                    <div className=\"text_field f_spacebw\">\n                                        {/* <input type=\"text\" placeholder=\"Enter Email\" value={basicDetailsData?.email} name='email' onChange={this.changeHandler} /> */}\n                                        <span className=\"show_label\">{basicDetailsData?.email}</span>\n                                    </div>\n                                    {!!errors?.email && <span className=\"error_msg\">{errors?.email}</span>}\n                                </div>\n                                {storageService.getItem('userInfo')?.accountType === 'normal' && <div className=\"form_field f_spacebw\">\n                                    <a className=\"link\" onClick={() => this.setState({ changeEmailModalClicked: true, profileModalClicked: false })}> Change Email</a>\n                                    <a className=\"link\"\n                                        onClick={() => this.setState({ passwordModalClicked: true, profileModalClicked: false })}\n                                    >Change Password</a>\n                                </div>}\n                                {this.userType === 1 && (<div className=\"form_field\">\n                                    <label className=\"form_label\">Qualification documents </label>\n\n                                    {(basicDetailsData?.qualificationDoc?.length > 0 && localQualificationDoc.length > 0) &&\n                                        <>\n                                            {basicDetailsData?.qualificationDoc?.map(({ qualification_id, url, isSelected, fileName }: { qualification_id: string, url: string, isSelected: string, fileName: string }) => {\n                                                const qualificationName: string = localQualificationDoc.find(({ _id }: { _id: string }) => _id === qualification_id)?.name;\n                                                const docDetails: any = url && this.qualificationFileDetails(url);\n                                                return (\n                                                    <>\n                                                        <div className=\"f_spacebw mt-15\" key={qualification_id}>\n                                                            <div className=\"checkbox_wrap agree_check\">\n                                                                <input\n                                                                    className=\"filter-type filled-in\"\n                                                                    type=\"checkbox\"\n                                                                    checked={!!isSelected ? false : true}\n                                                                    name={qualificationName}\n                                                                    id={qualificationName}\n                                                                    onChange={() => this.changeQualificationHandler(qualification_id, \"filledQualification\")}\n                                                                />\n                                                                <label htmlFor={qualificationName}>{qualificationName}</label>\n                                                            </div>\n                                                            {url ?\n                                                                (<div className=\"file_upload_box\"\n                                                                    onClick={() => window.open(url, '_blank')}\n                                                                >\n                                                                    <span className=\"close\" onClick={(e) => this.removeQualificationFileHandler(e, qualification_id, \"filledQualification\")}>\n                                                                        <img src={removeFile} />\n                                                                    </span>\n                                                                    <span className=\"file_icon\">\n                                                                        <img src={docDetails?.fileType} />\n                                                                    </span>\n                                                                    <div className=\"file_details\">\n                                                                        <span className=\"name\">{fileName ? fileName : docDetails?.fileName}</span>\n                                                                    </div>\n                                                                </div>) :\n                                                                (<div className=\"upload_doc\">\n                                                                    <label\n                                                                        className={`upload_btn ${isSelected ? \"disable\" : \"\"}`}\n                                                                        htmlFor={qualificationName + 'upload'}>Upload</label>\n                                                                    <input\n                                                                        type=\"file\"\n                                                                        className=\"none\"\n                                                                        id={qualificationName + 'upload'}\n                                                                        accept=\"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                                                                        disabled={!!isSelected ? true : false}\n                                                                        onChange={(e) => this.onFileChange(e, \"filledQualification\", qualification_id)}\n                                                                    />\n                                                                </div>)}\n                                                        </div>\n                                                    </>\n                                                )\n                                            })}\n                                        </>\n                                    }\n\n                                    {(addQualificationClicked && remainingQualificationDoc?.length > 0) &&\n                                        remainingQualificationDoc?.map(({ _id, name, url, isSelected, fileName }: { _id: string, name: string, url: string, isSelected: string, fileName: string }) => {\n                                            const docDetails: any = url && this.qualificationFileDetails(url);\n                                            return (\n                                                <>\n                                                    <div className=\"f_spacebw mt-15\" key={_id}>\n                                                        <div className=\"checkbox_wrap agree_check\">\n                                                            <input\n                                                                className=\"filter-type filled-in\"\n                                                                type=\"checkbox\"\n                                                                checked={!!isSelected ? true : false}\n                                                                name={name}\n                                                                id={name}\n                                                                onChange={() => this.changeQualificationHandler(_id, \"remainingQualification\")}\n                                                            />\n                                                            <label htmlFor={name}>{name}</label>\n                                                        </div>\n                                                        {url ?\n                                                            (<div className=\"file_upload_box\"\n                                                                onClick={() => window.open(url, '_blank')}\n                                                            >\n                                                                <span className=\"close\" onClick={(e) => this.removeQualificationFileHandler(e, _id, \"remainingQualification\")}>\n                                                                    <img src={removeFile} />\n                                                                </span>\n                                                                <span className=\"file_icon\">\n                                                                    <img src={docDetails?.fileType} />\n                                                                </span>\n                                                                <div className=\"file_details\">\n                                                                    {/* <span className=\"name\">{docDetails?.fileName}</span> */}\n                                                                    <span className=\"name\">{fileName}</span>\n                                                                </div>\n                                                            </div>) :\n                                                            (<div className=\"upload_doc\">\n                                                                <label\n                                                                    className={`upload_btn ${!isSelected ? \"disable\" : \"\"}`}\n                                                                    htmlFor={name + 'upload'}>Upload</label>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"none\"\n                                                                    id={name + 'upload'}\n                                                                    accept=\"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                                                                    disabled={!!isSelected ? false : true}\n                                                                    onChange={(e) => this.onFileChange(e, \"remainingQualification\", _id)}\n                                                                />\n                                                            </div>)}\n                                                    </div>\n                                                </>\n                                            )\n                                        })}\n                                </div>)}\n                                {this.userType === 2 &&\n                                    <>\n                                        <div className=\"form_field\">\n                                            <label className=\"form_label\">Company Name</label>\n                                            <div className=\"text_field\">\n                                                <input type=\"text\" placeholder=\"Company Name\" name='companyName' value={basicDetailsData?.companyName} onChange={this.changeHandler} />\n                                            </div>\n                                            {!!errors?.companyName && <span className=\"error_msg\">{errors?.companyName}</span>}\n                                        </div>\n                                        <div className=\"form_field\">\n                                            <label className=\"form_label\">Your Position</label>\n                                            <div className=\"text_field\">\n                                                <input type=\"text\" placeholder=\"Your Position\" name='position' value={basicDetailsData?.position} onChange={this.changeHandler} />\n                                            </div>\n                                            {!!errors?.position && <span className=\"error_msg\">{errors?.position}</span>}\n                                        </div>\n                                        <div className=\"form_field\">\n                                            <label className=\"form_label\">Australian Business Number</label>\n                                            <div className=\"text_field\">\n                                                {/* <input type=\"text\" placeholder=\"51 824 753 556\" name='abn' value={basicDetailsData?.abn} onChange={this.changeHandler} /> */}\n                                                <NumberFormat\n                                                    value={basicDetailsData?.abn}\n                                                    displayType={'input'}\n                                                    type={'tel'}\n                                                    placeholder=\"51 824 753 556\"\n                                                    format=\"## ### ### ###\"\n                                                    isNumericString={true}\n                                                    onValueChange={(values) => {\n                                                        const { formattedValue, value } = values;\n                                                        const newBasicDetails = { ...this.state.basicDetailsData };\n                                                        newBasicDetails.abn = value;\n                                                        this.setState({ basicDetailsData: newBasicDetails, isEditProfileModalChanged: true });\n                                                    }}\n                                                />\n                                            </div>\n                                            {!!errors?.abn && <span className=\"error_msg\">{errors?.abn}</span>}\n                                        </div>\n                                    </>}\n                            </div>\n\n                            {(this.userType === 1 && basicDetailsData?.qualificationDoc?.length < 6 && !addQualificationClicked) && <><div className=\"form_field\">\n                                <button className=\"fill_grey_btn full_btn btn-effect\" onClick={() => this.setState({ addQualificationClicked: true })}>Add qualification documents </button>\n                            </div>\n                                <span className=\"info_note\">Don’t worry, nobody will see it. This is for verification only!</span></>}\n                        </div>\n                        <div className=\"bottom_btn custom_btn\">\n                            <button className={`fill_btn full_btn btn-effect ${isEditProfileModalChanged ? '' : 'disable_btn'}`} onClick={this.submitBasicProfileDetails}>Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={passwordModalClicked}\n                    onClose={this.passwordModalCloseHandler}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading form_field\">\n                            <div className=\"relate\">\n                                <button className=\"back\" onClick={this.passwordModalCloseHandler}></button>\n                                <div className=\"md_heading\">\n                                    <span className=\"sub_title\">Change password</span>\n                                </div>\n                            </div>\n                            <button className=\"close_btn\" onClick={this.passwordModalCloseHandler}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n                        <div className=\"inner_wrap\">\n                            <div className=\"inner_wrappr\">\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Old Password</label>\n                                    <div className=\"text_field\">\n                                        <input type={showPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter Password\" name='password' value={password} onChange={this.passwordHandler} />\n                                        <span className=\"detect_icon\" onClick={() => this.setState((prevState: any) => ({ showPassword: !prevState.showPassword }))}>\n                                            <img src={showPassword ? eyeIconOpen : eyeIconClose} alt=\"\" />\n                                        </span>\n                                    </div>\n                                    {!!errors?.password && <span className=\"error_msg\">{errors?.password}</span>}\n                                </div>\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">New Password</label>\n                                    <div className=\"text_field\">\n                                        <input type={showNewPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter New Password\" name='newPassword' value={newPassword} onChange={this.passwordHandler} />\n                                        <span className=\"detect_icon\" onClick={() => this.setState((prevState: any) => ({ showNewPassword: !prevState.showNewPassword }))}>\n                                            <img src={showNewPassword ? eyeIconOpen : eyeIconClose} alt=\"\" />\n                                        </span>\n                                    </div>\n                                    {!!errors?.newPassword && <span className=\"error_msg\">{errors?.newPassword}</span>}\n                                </div>\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Confirm New Password</label>\n                                    <div className=\"text_field\">\n                                        <input type={showConfirmNewPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter Confirm New Password\" name='confirmNewPassword' value={confirmNewPassword} onChange={this.passwordHandler} />\n                                        <span className=\"detect_icon\" onClick={() => this.setState((prevState: any) => ({ showConfirmNewPassword: !prevState.showConfirmNewPassword }))}>\n                                            <img src={showConfirmNewPassword ? eyeIconOpen : eyeIconClose} alt=\"\" />\n                                        </span>\n                                    </div>\n                                    {!!errors?.confirmNewPassword && !errors?.newPassword && <span className=\"error_msg\">{errors?.confirmNewPassword}</span>}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"bottom_btn custom_btn\">\n                            <button\n                                className={`fill_btn full_btn btn-effect ${(password && newPassword && confirmNewPassword) ? '' : 'disable_btn'}`}\n                                onClick={this.updatePasswordHandler}>Save changes</button>\n                        </div>\n                    </div >\n                </Modal >\n\n                {/* change email */}\n                <ChangeEmailModal\n                    history={props.history}\n                    isChangeEmailModalClicked={changeEmailModalClicked}\n                    currentEmail={this.state.basicDetailsData?.email}\n                    changeEmailModalCloseHandler={this.changeEmailModalCloseHandler}\n                />\n\n\n                <div className=\"section_wrapper\">\n                    {isSkeletonLoading ? <Skeleton /> : <span className=\"sub_title\">{'Areas of specialisation'}\n                        {this.userType === 1 && <span className=\"edit_icon\" title=\"Edit\" onClick={() => this.setState({ areasOfSpecsModalClicked: true })}>\n                            <img src={editIconBlue} alt=\"edit\" />\n                        </span>}\n                    </span>}\n                    <div className=\"tags_wrap\">\n                        {isSkeletonLoading ? <Skeleton count={3} /> : <ul>\n                            {profileViewData?.areasOfSpecialization?.tradeData?.map(({ tradeId, tradeName, tradeSelectedUrl }: { tradeId: string, tradeName: string, tradeSelectedUrl: string }, index: number) => {\n                                if (this.userType === 1 && index > 0) {\n                                    return null;\n                                }\n\n                                return (\n                                    <li key={tradeId} className=\"main\">\n                                        <img src={tradeSelectedUrl || menu} alt=\"\" />{tradeName}\n                                    </li>\n                                )\n                            })}\n                            {\n                                profileViewData?.areasOfSpecialization?.specializationData?.map(({ specializationId, specializationName }: { specializationId: string, specializationName: string }) => {\n                                    return <li key={specializationId}>{specializationName}</li>\n                                })\n                            }\n                        </ul>}\n                    </div>\n                </div>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={areasOfSpecsModalClicked}\n                    onClose={() => this.setState({ areasOfSpecsModalClicked: false })}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh filter_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading\">\n                            <span className=\"sub_title\">What is your trade?</span>\n                            <button className=\"close_btn\" onClick={() => this.setState({ areasOfSpecsModalClicked: false })}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n\n                        <div className=\"inner_wrap\">\n                            <div className=\"form_field\">\n                                <span className=\"xs_sub_title\">Categories</span>\n                            </div>\n                            <div className=\"select_sphere\">\n                                <ul>\n                                    {tradeList?.map(({ _id, trade_name, selected_url, specialisations }: { _id: string, trade_name: string, selected_url: string, specialisations: [] }) => {\n                                        const active = trade[0] === _id;\n                                        return (\n                                            <li key={_id} className={active ? 'active' : ''} onClick={() => this.tradeHandler({ _id, trade_name, selected_url }, 'trade')}>\n                                                <figure>\n                                                    <img src={selected_url ? selected_url : spherePlaceholder} alt=\"\" />\n                                                </figure>\n                                                <span className=\"name\">{trade_name}</span>\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                            </div>\n                            <div className=\"form_field\">\n                                <span className=\"xs_sub_title\">Specialisation</span>\n                            </div>\n                            <div className=\"tags_wrap\">\n                                <ul>\n                                    {specializationList?.length > 0 &&\n                                        <li className={allSpecializationSelected ? 'selected' : ''}\n                                            onClick={() => this.tradeHandler(specializationList, 'All Clicked')}>All</li>}\n                                    {specializationList?.map(({ _id, name }: { _id: string, name: string }) => {\n                                        const active = specialization?.indexOf(_id) >= 0;\n                                        return <li key={_id} className={active && !allSpecializationSelected ? 'selected' : ''} onClick={() => this.tradeHandler({ _id, name }, 'specializationId')}>{name}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"filter_btn\">\n                            <a className={`link ${(trade.length && specialization.length) ? '' : 'disable_link'}`} onClick={() => this.tradeHandler('Clear All', 'Clear All')}>Clear All</a>\n                            <button className={`fill_btn full_btn btn-effect ${(trade.length && specialization.length) ? '' : 'disable_btn'}`}\n                                onClick={this.submitAreasOfTrade}\n                            >Save changes</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"section_wrapper\">\n                    {isSkeletonLoading ? <Skeleton /> : <span className=\"sub_title\">About {this.userType === 2 && 'company'}\n                        {(profileViewData?.about || profileViewData?.aboutCompany) && <span className=\"edit_icon\" title=\"Edit\" onClick={this.addInfoAboutYou}>\n                            <img src={editIconBlue} alt=\"edit\" />\n                        </span>}\n                    </span>}\n                    {(!profileViewData?.about && !profileViewData?.aboutCompany) && <button className=\"fill_grey_btn full_btn btn-effect\" onClick={this.addInfoAboutYou}>{isSkeletonLoading ? <Skeleton /> : `Add info about ${this.userType === 1 ? 'you' : 'company'}`}</button>}\n                    <p className=\"commn_para\">{isSkeletonLoading ? <Skeleton /> : profileViewData?.about || profileViewData?.aboutCompany}</p>\n                </div>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={aboutModalClicked}\n                    onClose={() => this.setState({ about: profileViewData?.about ? profileViewData?.about : '', aboutModalClicked: false, errors: {} })}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading\">\n                            <span className=\"sub_title\">About {this.userType === 2 && 'company'}</span>\n                            <button className=\"close_btn\" onClick={() => this.setState({ about: profileViewData?.about ? profileViewData?.about : '', aboutModalClicked: false, errors: {} })}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">{this.userType === 1 ? 'Description' : ''}</label>\n                            <div className=\"text_field\">\n                                <textarea placeholder=\"Enter Description\" maxLength={250} value={about} onChange={({ target: { value } }: { target: { value: string } }) => this.setState({ about: value })} />\n                                <span className=\"char_count\">{`${about.length}/250`}</span>\n                            </div>\n                            {!!errors.about && <span className=\"error_msg\">{errors.about}</span>}\n                        </div>\n                        <div className=\"bottom_btn custom_btn\">\n                            <button className=\"fill_btn full_btn btn-effect\" onClick={() => {\n                                let err: any = {};\n                                if (about.trim().length < 1) {\n                                    err.about = 'Description is required';\n                                    this.setState({ errors: err });\n                                } else {\n                                    const newData = { ...profileViewData };\n                                    newData.about = about;\n                                    this.setState({ profileViewData: newData, aboutModalClicked: false, isProfileViewDataChanged: true });\n                                }\n                            }}>Save changes</button>\n                            <button className=\"fill_grey_btn btn-effect\" onClick={() => this.setState({ about: profileViewData?.about ? profileViewData?.about : '', aboutModalClicked: false, errors: {} })}>Cancel</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"section_wrapper\">\n                    <span className=\"sub_title\">{isSkeletonLoading ? <Skeleton /> : 'Portfolio'}</span>\n                    {profileViewData?.portfolio?.length === 0 && <button className=\"fill_grey_btn full_btn btn-effect\" onClick={this.addNewPortfolioJob}>{isSkeletonLoading ? <Skeleton /> : 'Add portfolio'}</button>}\n                    {isSkeletonLoading ? <Skeleton height={200} /> : <ul className=\"portfolio_wrappr\">\n                        {profileViewData?.portfolio?.map(({ jobDescription, jobName, portfolioId, portfolioImage }: { jobDescription: string, jobName: string, portfolioId: string, portfolioImage: Array<any> }, index: number) => {\n                            return (\n                                <li className=\"media\" key={portfolioId} onClick={() => this.setState({ portfolioJobClicked: true, portfolioJobDetail: { jobDescription, jobName, portfolioId, portfolioImage }, portfolioJobIndex: index })}>\n                                    <figure className=\"portfolio_img\">\n                                        <img src={portfolioImage[0] ? portfolioImage[0] : profilePlaceholder} alt=\"portfolio-images\" />\n                                        <span className=\"xs_sub_title\">\n                                            <p className=\"line-3\" title={jobName}>{jobName}</p>\n                                        </span>\n                                    </figure>\n                                </li>\n                            )\n                        })}\n\n                        {(profileViewData?.portfolio?.length < 6 && profileViewData?.portfolio?.length > 0) && <label className=\"upload_media\">\n                            <img src={addMediaLrg} alt=\"add\" onClick={this.addNewPortfolioJob} />\n                        </label>}\n                    </ul>}\n                </div>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={portfolioJobClicked}\n                    onClose={() => this.setState({ portfolioJobClicked: false })}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh portfolio_preview\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_6\">\n                                <Carousel\n                                    responsive={portfolioModal}\n                                    showDots={true}\n                                    infinite={true}\n                                    autoPlay={true}\n                                    arrows={false}\n                                    className=\"portfolio_wrappr\"\n                                >\n                                    {portfolioJobDetail?.portfolioImage?.length > 0 ? portfolioJobDetail?.portfolioImage?.map((image: string) => {\n                                        return (\n                                            <div className=\"media\" key={portfolioJobDetail?.portfolioId}>\n                                                <figure className=\"portfolio_img\">\n                                                    <img src={image ? image : portfolioPlaceholder} alt=\"portfolio-images\" />\n                                                    <span className=\"back bk_white\" title=\"Back\" onClick={() => this.setState({ portfolioJobClicked: false })}></span>\n                                                </figure>\n                                            </div>\n                                        )\n                                    }) : <img alt=\"\" src={portfolioPlaceholder} />}\n                                </Carousel>\n                            </div>\n                            <div className=\"flex_col_sm_6\">\n                                <span className=\"dot_menu\">\n                                    <img src={dotMenu} alt=\"menu\" />\n\n                                    <div className=\"edit_menu\">\n                                        <ul>\n                                            <li className=\"icon edit\" onClick={() => this.setState({ isAddEditPortfolioModal: true, portfolioJobClicked: false, editPortfolioJob: true })}>Edit</li>\n                                            <li className=\"icon delete\" onClick={() => this.setState({ deletePortfolioJob: true, confirmationModalClicked: true })}>Delete</li>\n                                        </ul>\n                                    </div>\n\n                                </span>\n                                <span className=\"xs_sub_title\">Job Description</span>\n                                <div className=\"job_content\">\n                                    <p>{portfolioJobDetail?.jobDescription}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={confirmationModalClicked}\n                    onClose={() => this.setState({ confirmationModalClicked: false, portfolioJobIndex: null })}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh confirmation\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading\">\n                            <span className=\"xs_sub_title\">Delete Portfolio Job</span>\n                            <button className=\"close_btn\" onClick={() => this.setState({ confirmationModalClicked: false, portfolioJobIndex: null })}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n                        <div className=\"modal_message\">\n                            <p>Are you sure you want to delete portfolio job?</p>\n                        </div>\n                        <div className=\"dialog_actions\">\n                            <button className=\"fill_btn btn-effect\" onClick={this.submitPortfolioJobs}>Yes</button>\n                            <button className=\"fill_grey_btn btn-effect\" onClick={() => this.setState({ confirmationModalClicked: false, portfolioJobIndex: null })}>No</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <Modal\n                    className=\"custom_modal\"\n                    open={isAddEditPortfolioModal}\n                    onClose={this.closeAddEditPortofolioModal}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading\">\n                            <div className=\"relate\">\n                                <button className=\"back\" onClick={this.closeAddEditPortofolioModal} />\n                                <div className=\"md_heading\">\n                                    <span className=\"sub_title\">Portfolio</span>\n                                    <span className=\"info_note\">\n                                        {storageService.getItem('userType') === 1 ?\n                                            'Tradies who have a portfolio with photos get job faster.'\n                                            :\n                                            'Showcase your work and attract the best talent to your jobs.'\n                                        }\n                                    </span>\n                                </div>\n                            </div>\n                            <button className=\"close_btn\" onClick={this.closeAddEditPortofolioModal}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n                        <div className=\"inner_wrap\">\n                            <div className=\"inner_wrappr\">\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Job Name</label>\n                                    <div className=\"text_field\">\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter Job Name\"\n                                            value={portfolioJobDetail?.jobName}\n                                            maxLength={100}\n                                            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                                                const data = { ...portfolioJobDetail };\n                                                data.jobName = e.target.value;\n                                                this.setState({ portfolioJobDetail: data });\n                                            }\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Job Description</label>\n                                    <div className=\"text_field\">\n                                        <textarea\n                                            placeholder=\"Enter Job Description\"\n                                            value={portfolioJobDetail?.jobDescription}\n                                            maxLength={250}\n                                            onChange={(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n                                                const data = { ...portfolioJobDetail };\n                                                data.jobDescription = e.target.value;\n                                                this.setState({ portfolioJobDetail: data });\n                                            }\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"upload_img_video\">\n                                {portfolioJobDetail?.portfolioImage?.map((image: string, index: number) => {\n                                    return (\n                                        <figure className=\"img_video\" key={image}>\n                                            <img\n                                                src={image ? image : dummy}\n                                                async-src={image ? image : dummy}\n                                                decoding=\"async\"\n                                                loading=\"lazy\"\n                                                alt=\"portfolio-images\" />\n                                            <img src={remove} alt=\"remove\" className=\"remove\"\n                                                onClick={() => {\n                                                    const data: any = { ...portfolioJobDetail };\n                                                    data?.portfolioImage?.splice(index, 1);\n                                                    this.setState({ portfolioJobDetail: data });\n                                                }} />\n                                        </figure>\n                                    )\n                                })\n                                }\n\n                                {(portfolioJobDetail?.portfolioImage?.length < 6 && addPortfolioJob) &&\n                                    <>\n                                        <label className=\"upload_media\" htmlFor=\"upload_img_video\">\n                                            <img src={addMedia} alt=\"add\" />\n                                        </label>\n\n                                        <input\n                                            type=\"file\"\n                                            accept=\"image/png,image/jpg,image/jpeg\"\n                                            style={{ display: \"none\" }}\n                                            id=\"upload_img_video\"\n                                            onChange={(e) => this.onFileChange(e, \"addJobPhotos\")}\n                                        />\n                                    </>\n                                }\n\n                            </div>\n                        </div>\n                        <div className=\"bottom_btn custom_btn\">\n                            <button\n                                className={`fill_btn full_btn btn-effect ${portfolioJobDetail?.jobName?.trim() && portfolioJobDetail?.jobDescription?.trim() && portfolioJobDetail?.portfolioImage?.length ? '' : 'disable_btn'}`}\n                                onClick={this.submitPortfolioJobs}\n                            >\n                                Save changes\n                            </button>\n                            <button className=\"fill_grey_btn btn-effect\"\n                                onClick={this.closeAddEditPortofolioModal}>Cancel</button>\n                        </div>\n                    </div>\n                </Modal>\n\n                <div className=\"section_wrapper\">\n                    <button\n                        className={`fill_btn full_btn btn-effect ${isProfileViewDataChanged ? '' : 'disable_btn'}`}\n                        onClick={this.submitUpdateProfile}>{isSkeletonLoading ? <Skeleton /> : 'Save changes'}</button>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default PersonalInformation;"]},"metadata":{},"sourceType":"module"}