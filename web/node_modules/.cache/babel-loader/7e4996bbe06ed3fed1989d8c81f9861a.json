{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/chooseTiming.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // @ts-ignore\n\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport moment from 'moment';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { useLocation } from \"react-router-dom\";\nimport _ from 'lodash';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst default_format = 'YYYY-MM-DD';\n\nconst ChooseTiming = ({\n  data,\n  milestones,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  let location = useLocation();\n  let jobId = null;\n\n  if (location.search) {\n    let urlParams = new URLSearchParams(location.search);\n    jobId = urlParams.get('jobId');\n  }\n\n  const setCurrentDateWithoutTime = () => {\n    const date = new Date();\n    date.setHours(0, 0, 0, 0);\n    return date;\n  };\n\n  const [range, setRange] = useState({\n    //startDate: '', //new Date(), // ''\n    startDate: setCurrentDateWithoutTime(),\n    // ''\n    endDate: setCurrentDateWithoutTime(),\n    key: 'selection'\n  });\n  const [singleDayRange, setSingleDayRange] = useState(data.isSingleDayJob ? 2 : 1);\n  const [singleDayModal, setSingleDayModal] = useState(false);\n  const [formattedDates, setFormattedDates] = useState({});\n  const [error, setError] = useState('');\n  const [localChanges, setLocalChanges] = useState(false);\n  useEffect(() => {\n    if (stepCompleted) {\n      if (jobId) {\n        let startDt = moment(data.from_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.from_date).toDate() : '';\n        let endDt = moment(data.to_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.to_date).toDate() : '';\n\n        if (data.isJobRepublish) {\n          if (!startDt) {\n            startDt = new Date();\n          }\n\n          if (!endDt) {\n            endDt = new Date();\n          }\n        }\n\n        setRange({\n          startDate: startDt,\n          endDate: endDt,\n          key: 'selection'\n        });\n        handleCheck({\n          startDate: startDt,\n          endDate: endDt\n        });\n      } else {\n        setRange({\n          startDate: data.from_date ? moment(data.from_date).toDate() : new Date(),\n          endDate: data.to_date ? moment(data.to_date).toDate() : '',\n          key: 'selection'\n        });\n      }\n\n      setLocalChanges(true);\n    }\n  }, [data, stepCompleted]);\n  useEffect(() => {\n    if (singleDayRange === 2) {\n      if (!data.isSingleDayJob) {\n        setSingleDayModal(true);\n      }\n    } else if (singleDayRange === 1) {\n      handleCheck(range);\n    }\n  }, [singleDayRange, range]);\n\n  const handleChange = item => {\n    let mile = milestones; // console.log({ mile, item });\n\n    if (mile === null || mile === void 0 ? void 0 : mile.length) {\n      let start_selection = moment(item.selection.startDate).format('MM-DD-YYYY');\n      let end_selection = moment(item.selection.endDate).isValid() ? moment(item.selection.endDate).format('MM-DD-YYYY') : null;\n      let item_find = false;\n      mile.forEach(item_date => {\n        let start = item_date.from_date;\n        let end = moment(item_date.to_date).isValid() ? item_date.to_date : null;\n\n        if (start && end) {\n          if (moment(start_selection).isAfter(start) || moment(end_selection).isBefore(end)) {\n            item_find = true;\n          }\n        }\n\n        if (start && !end) {\n          if (moment(start_selection).isAfter(start)) {\n            item_find = true; // true;\n          }\n        }\n\n        if (start_selection && end_selection && !end) {\n          if (moment(start).isSameOrAfter(start_selection) && moment(start).isSameOrBefore(end_selection)) {\n            item_find = false;\n          } else {\n            item_find = true;\n          }\n        }\n      });\n\n      if (item_find && !jobId) {\n        setShowToast(true, 'Please check the milestone dates');\n        return;\n      }\n    }\n\n    setRange(item.selection);\n    handleCheck(item.selection);\n    console.log(_.isEqual(item.selection.startDate, item.selection.endDate), 'val', _.isEqual(item.selection, range), singleDayRange);\n\n    if (_.isEqual(item.selection.startDate, item.selection.endDate) && singleDayRange === null || !_.isEqual(item.selection, range)) {\n      setSingleDayRange(1);\n      return;\n    }\n\n    if (_.isEqual(item.selection.startDate, item.selection.endDate) && _.isEqual(item.selection, range) && singleDayRange === 1) {\n      setSingleDayRange(2);\n      return;\n    }\n\n    if (_.isEqual(item.selection.startDate, item.selection.endDate) && _.isEqual(item.selection, range) && singleDayRange === 2) return;\n    if (singleDayRange === 1 || singleDayRange === 2) setSingleDayRange(null);\n  };\n\n  const handleCheck = item => {\n    let from_date = moment(item.startDate).format(default_format);\n    let to_date = moment(item.endDate).format(default_format);\n    setFormattedDates({\n      from_date,\n      to_date\n    });\n\n    if (moment(from_date, default_format).isAfter(moment(to_date, default_format))) {\n      // isAfter\n      setError('finish date is greater then the start date.');\n    } else {\n      setError('');\n    }\n  };\n\n  const handleContinue = () => {\n    handleStepComplete({ ...formattedDates,\n      ...(singleDayRange === 2 ? {\n        isSingleDayJob: true\n      } : {\n        isSingleDayJob: false\n      })\n    });\n  };\n\n  const checkDisable = () => {\n    if ((range === null || range === void 0 ? void 0 : range.startDate) && (range === null || range === void 0 ? void 0 : range.startDate) !== 'Invalid date') {\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(Dialog, {\n          open: singleDayModal // onClose={handleClose}\n          ,\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"alert-dialog-title\",\n            children: 'Are you sure you want to create single day job?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setSingleDayModal(false);\n              },\n              color: \"primary\",\n              children: 'Yes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setSingleDayModal(false);\n                setSingleDayRange(1);\n              },\n              color: \"primary\",\n              autoFocus: true,\n              children: 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: handleStepBack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \"Timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: 'Choose the start and finish day of your job'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n                ranges: [range],\n                onChange: handleChange,\n                months: 2,\n                direction: \"horizontal\",\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: moment().add(2, 'years').toDate(),\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg mtb-15\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `fill_btn full_btn btn-effect ${checkDisable() ? 'disable_btn' : ''}`,\n                onClick: handleContinue,\n                children: 'Continue'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseTiming, \"DuFG0Ly3Q+b+rsu7Q1jlNqrNX/U=\", false, function () {\n  return [useLocation];\n});\n\n_c = ChooseTiming;\nexport default ChooseTiming;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseTiming\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/chooseTiming.tsx"],"names":["useState","useEffect","DateRangePicker","moment","setShowToast","useLocation","_","Button","Dialog","DialogActions","DialogTitle","default_format","ChooseTiming","data","milestones","stepCompleted","handleStepComplete","handleStepBack","location","jobId","search","urlParams","URLSearchParams","get","setCurrentDateWithoutTime","date","Date","setHours","range","setRange","startDate","endDate","key","singleDayRange","setSingleDayRange","isSingleDayJob","singleDayModal","setSingleDayModal","formattedDates","setFormattedDates","error","setError","localChanges","setLocalChanges","startDt","from_date","isSameOrAfter","format","toDate","endDt","to_date","isJobRepublish","handleCheck","handleChange","item","mile","length","start_selection","selection","end_selection","isValid","item_find","forEach","item_date","start","end","isAfter","isBefore","isSameOrBefore","console","log","isEqual","handleContinue","checkDisable","add"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n// @ts-ignore\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport moment from 'moment';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { useLocation } from \"react-router-dom\";\nimport _ from 'lodash';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ninterface Proptypes {\n    data: any;\n    milestones: any,\n    stepCompleted: Boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepBack: () => void;\n}\n\nconst default_format = 'YYYY-MM-DD';\nconst ChooseTiming = ({ data, milestones, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n    let location = useLocation();\n    let jobId: any = null;\n\n    if (location.search) {\n        let urlParams = new URLSearchParams(location.search);\n        jobId = urlParams.get('jobId');\n    }\n\n    const setCurrentDateWithoutTime = () => {\n        const date = new Date();\n        date.setHours(0, 0, 0, 0);\n        return date;\n    }\n    const [range, setRange] = useState<{ [index: string]: any }>({\n        //startDate: '', //new Date(), // ''\n        startDate: setCurrentDateWithoutTime(), // ''\n        endDate: setCurrentDateWithoutTime(),\n        key: 'selection',\n    });\n    const [singleDayRange, setSingleDayRange] = useState<number | null>(data.isSingleDayJob ? 2 : 1);\n    const [singleDayModal, setSingleDayModal] = useState<boolean>(false);\n    const [formattedDates, setFormattedDates] = useState({});\n    const [error, setError] = useState('');\n    const [localChanges, setLocalChanges] = useState(false);\n\n\n    useEffect(() => {\n        if (stepCompleted) {\n            if (jobId) {\n                let startDt = moment(data.from_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.from_date).toDate() : '';\n                let endDt = moment(data.to_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.to_date).toDate() : '';\n                if (data.isJobRepublish) {\n                    if (!startDt) {\n                        startDt = new Date();\n                    }\n                    if (!endDt) {\n                        endDt = new Date();\n                    }\n                }\n                setRange({\n                    startDate: startDt,\n                    endDate: endDt,\n                    key: 'selection',\n                });\n                handleCheck({ startDate: startDt, endDate: endDt });\n            } else {\n                setRange({\n                    startDate: data.from_date ? moment(data.from_date).toDate() : new Date(),\n                    endDate: data.to_date ? moment(data.to_date).toDate() : '',\n                    key: 'selection',\n                });\n            }\n            setLocalChanges(true);\n        }\n    }, [data, stepCompleted])\n\n    useEffect(() => {\n        if (singleDayRange === 2) {\n            if (!data.isSingleDayJob) {\n                setSingleDayModal(true);\n            }\n        } else if ((singleDayRange === 1)) {\n            handleCheck(range);\n        }\n    }, [singleDayRange, range]);\n\n\n    const handleChange = (item: any) => {\n        let mile: any = milestones;\n        // console.log({ mile, item });\n        if (mile?.length) {\n            let start_selection: any = moment(item.selection.startDate).format('MM-DD-YYYY');\n            let end_selection: any = moment(item.selection.endDate).isValid() ? moment(item.selection.endDate).format('MM-DD-YYYY') : null;\n            let item_find: any = false;\n\n            mile.forEach((item_date: any) => {\n                let start: any = item_date.from_date;\n                let end: any = moment(item_date.to_date).isValid() ? item_date.to_date : null;\n\n                if (start && end) {\n                    if (moment(start_selection).isAfter(start) || moment(end_selection).isBefore(end)) {\n                        item_find = true\n                    }\n                }\n\n                if (start && !end) {\n                    if (moment(start_selection).isAfter(start)) {\n                        item_find = true; // true;\n                    }\n                }\n\n                if (start_selection && end_selection && !end) {\n                    if (moment(start).isSameOrAfter(start_selection) && moment(start).isSameOrBefore(end_selection)) {\n                        item_find = false;\n                    } else {\n                        item_find = true\n                    }\n                }\n\n            });\n\n            if (item_find && !jobId) {\n                setShowToast(true, 'Please check the milestone dates');\n                return;\n            }\n        }\n        setRange(item.selection);\n        handleCheck(item.selection);\n        console.log(_.isEqual(item.selection.startDate, item.selection.endDate), 'val', _.isEqual(item.selection, range), singleDayRange)\n        if ((_.isEqual(item.selection.startDate, item.selection.endDate) && singleDayRange === null) || !_.isEqual(item.selection, range)) {\n            setSingleDayRange(1)\n            return;\n        }\n        if (_.isEqual(item.selection.startDate, item.selection.endDate) && _.isEqual(item.selection, range) && singleDayRange === 1) {\n            setSingleDayRange(2)\n            return;\n        }\n        if (_.isEqual(item.selection.startDate, item.selection.endDate) && _.isEqual(item.selection, range) && singleDayRange === 2) return;\n        if (singleDayRange === 1 || singleDayRange === 2) setSingleDayRange(null);\n    };\n\n    const handleCheck = (item: any) => {\n        let from_date = moment(item.startDate).format(default_format);\n        let to_date = moment(item.endDate).format(default_format);\n        setFormattedDates({ from_date, to_date });\n        if (moment(from_date, default_format).isAfter(moment(to_date, default_format))) { // isAfter\n            setError('finish date is greater then the start date.');\n        } else {\n            setError('');\n        }\n    }\n\n    const handleContinue = () => {\n        handleStepComplete({\n            ...formattedDates,\n            ...((singleDayRange === 2) ? { isSingleDayJob: true } : { isSingleDayJob: false })\n        });\n    }\n\n    const checkDisable = () => {\n        if (range?.startDate && range?.startDate !== 'Invalid date') {\n            return false;\n        }\n        return true;\n    }\n\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n                    <Dialog\n                        open={singleDayModal}\n                        // onClose={handleClose}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {'Are you sure you want to create single day job?'}\n                        </DialogTitle>\n                        <DialogActions>\n                            <Button\n                                onClick={() => { setSingleDayModal(false) }}\n                                color=\"primary\">\n                                {'Yes'}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    setSingleDayModal(false);\n                                    setSingleDayRange(1);\n                                }}\n                                color=\"primary\" autoFocus>\n                                {'No'}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    <div className=\"form_field\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n                                <div className=\"relate\">\n                                    <button className=\"back\" onClick={handleStepBack}></button>\n                                    <span className=\"title\">Timing</span>\n                                </div>\n                                <p className=\"commn_para\">\n                                    {'Choose the start and finish day of your job'}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex_row\">\n                        <div className=\"flex_col_sm_8\">\n                            <div className=\"form_field\">\n                                <DateRangePicker\n                                    ranges={[range]}\n                                    onChange={handleChange}\n                                    months={2}\n                                    direction=\"horizontal\"\n                                    moveRangeOnFirstSelection={false}\n                                    rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                                    showDateDisplay={false}\n                                    showSelectionPreview={true}\n                                    showPreview={true}\n                                    minDate={new Date()}\n                                    maxDate={moment().add(2, 'years').toDate()}\n                                    fixedHeight={true}\n                                />\n                            </div>\n                            <span className=\"error_msg mtb-15\">{error}</span>\n                            <div className=\"form_field\">\n                                <button\n                                    className={`fill_btn full_btn btn-effect ${checkDisable() ? 'disable_btn' : ''}`}\n                                    onClick={handleContinue}>\n                                    {'Continue'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ChooseTiming\n"]},"metadata":{},"sourceType":"module"}