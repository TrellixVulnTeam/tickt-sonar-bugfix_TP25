{"ast":null,"code":"import _defineProperty from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import storageService from\"../../../utils/storageService\";import Modal from\"@material-ui/core/Modal\";import DigitalIdVerification from\"./digitalIdVerification\";import cancel from\"../../../assets/images/ic-cancel.png\";import verifiedIcon from\"../../../assets/images/checked-2.png\";import{moengage,mixPanel}from\"../../../services/analyticsTools\";import{MoEConstants}from\"../../../utils/constants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var digitalInfoPoints=[\"Passport\",\"Driver Licence (Driver's license) - scans of front and back are required\",\"Photo Card - scans of front and back are required\",\"New South Wales Driving Instructor Licence - scans of front and back are required\",\"Tasmanian Government Personal Information Card - scans of front and back are required\",\"ImmiCard - scans of front and back are required\",\"Proof of Age card - scans of front and back are required\",\"Australian Defence Force (ADF) identification card (Military ID) - scans of front and back are required\"];var BankingDetails=function BankingDetails(_ref){var _data$account_name2,_bankDetails$account_;var getBankDetails=_ref.getBankDetails,addBankDetails=_ref.addBankDetails,updateBankDetails=_ref.updateBankDetails,bankDetails=_ref.bankDetails;var _useState=useState({accountVerified:false,account_name:\"\",account_number:\"\",bsb_number:\"\",stripeAccountId:\"\"}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState({account_name:\"\",account_number:\"\",bsb_number:\"\"}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),submitClicked=_useState6[0],setSubmitClicked=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),digitalIdInfo=_useState8[0],setDigitalIdInfo=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),idVerifClicked=_useState10[0],setIdVerifClicked=_useState10[1];var errorLabel={account_number:\"Account Number\",account_name:\"Account Name\",bsb_number:\"BSB Number\"};useEffect(function(){getBankDetails();},[getBankDetails]);useEffect(function(){setData(Object.keys(bankDetails).length?bankDetails:{accountVerified:false,account_name:\"\",account_number:\"\",bsb_number:\"\",stripeAccountId:\"\"});},[bankDetails]);var validate=function validate(name,value){if(value&&!value.trimLeft()){return\"\".concat(errorLabel[name],\" is required\");}// return value.replace(/[^a-z0-9]+/gi, '').replace(/(.{4})/g, '$1 ');\nswitch(name){case\"account_number\":return value.length>10?\"Maximum 10 digits are allowed\":value.length<6?\"Minimum 6 digits are required\":\"\";case\"bsb_number\":return!/^\\d{3}-\\d{3}$/.test(value)?\"Please enter valid BSB Number like 123-444\":\"\";}return\"\";};var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),input=_useState12[0],setInput=_useState12[1];var handleChange=function handleChange(_ref2){var _ref2$target=_ref2.target,name=_ref2$target.name,value=_ref2$target.value;if(name===\"bsb_number\"){setInput(value);if(value.length===4&&value.includes(\"-\")){setInput(value.replace(\"-\",\"\"));}if(value.length===3){setInput(value+\"-\");setData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},{bsb_number:input});});}}setData(function(prevData){return _objectSpread(_objectSpread({},prevData),{},_defineProperty({},name,value===null||value===void 0?void 0:value.trimLeft()));});if(submitClicked){setErrors(function(prevErrors){return _objectSpread(_objectSpread({},prevErrors),{},_defineProperty({},name,validate(name,value)));});}};var handleSave=function handleSave(){var _data$account_name;if(!submitClicked){setSubmitClicked(true);}var hasErrors=Object.keys(data).reduce(function(prevValue,name){var error=validate(name,data[name]);setErrors(function(prevErrors){return _objectSpread(_objectSpread({},prevErrors),{},_defineProperty({},name,error));});return prevValue||error;},\"\");var updatedBankDetails={account_name:(_data$account_name=data.account_name)===null||_data$account_name===void 0?void 0:_data$account_name.trim(),account_number:data.account_number,bsb_number:data.bsb_number};console.log(data.bsb_number,\"33333333333#####################\");if(!hasErrors){if(bankDetails.userId){updateBankDetails(_objectSpread({userId:data.userId},updatedBankDetails));}else{addBankDetails(updatedBankDetails);var mData={timeStamp:moengage.getCurrentTimeStamp()};moengage.moE_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS,mData);mixPanel.mixP_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS,mData);}}};var userType=storageService.getItem(\"userType\");var updated=((_data$account_name2=data.account_name)===null||_data$account_name2===void 0?void 0:_data$account_name2.trim())!==((_bankDetails$account_=bankDetails.account_name)===null||_bankDetails$account_===void 0?void 0:_bankDetails$account_.trim())||data.account_number!==bankDetails.account_number||data.bsb_number!==bankDetails.bsb_number;return idVerifClicked?/*#__PURE__*/_jsx(DigitalIdVerification,{setIdVerifClicked:setIdVerifClicked,stripeAccountId:data.stripeAccountId}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex_row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex_col_sm_8\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"Payment details\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info_note\",children:userType===1?\"Enter your Bank account details\":\"Enter your card details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Account Name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Account Name\",name:\"account_name\",value:data.account_name,onChange:handleChange,maxLength:50})}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.account_name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"BSB Number\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text_field\",children:[console.log(data.bsb_number,\"12@@@@@@@@@@@@\"),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter BSB Number\",name:\"bsb_number\",value:input,onChange:handleChange,maxLength:7})]}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.bsb_number})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Account Number\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter Account Number\",name:\"account_number\",value:data.account_number,onChange:handleChange,maxLength:10,max:9999999999})}),/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.account_number})]}),data.account_name&&data.account_number&&data.bsb_number&&data.stripeAccountId&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"fill_grey_btn full_btn btn-effect id_verified\",onClick:function onClick(){if(data===null||data===void 0?void 0:data.accountVerified)return;setIdVerifClicked(true);},children:[(data===null||data===void 0?void 0:data.accountVerified)&&/*#__PURE__*/_jsx(\"img\",{src:verifiedIcon,alt:\"verified\"}),\"\".concat((data===null||data===void 0?void 0:data.accountVerified)?\"ID Verified\":\"Add ID Verification\")]})}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label id_info\",onClick:function onClick(){return setDigitalIdInfo(true);},children:\"ID verification is required as part of Stripe ID verification process.\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect\".concat(!updated?\" disabled\":\"\"),onClick:handleSave,children:\"Save changes\"})]}),/*#__PURE__*/_jsx(Modal,{className:\"custom_modal\",open:digitalIdInfo,onClose:function onClose(){return setDigitalIdInfo(false);},\"aria-labelledby\":\"simple-modal-title\",\"aria-describedby\":\"simple-modal-description\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_wh profile_modal\",\"data-aos\":\"zoom-in\",\"data-aos-delay\":\"30\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"heading\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"ID verification\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close_btn\",onClick:function onClick(){return setDigitalIdInfo(false);},children:/*#__PURE__*/_jsx(\"img\",{src:cancel,alt:\"cancel\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"inner_wrap\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"show_label\",children:\"ID verification is required as part of Stripe ID verification process.\"}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label\",children:\"Below is a spansting of documents that can accept as proof of identity, address, and entity.\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"verificationid_list\",children:digitalInfoPoints.map(function(info,index){return/*#__PURE__*/_jsx(\"li\",{className:\"show_label\",children:info},index);})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom_btn custom_btn center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect\",onClick:function onClick(){return setDigitalIdInfo(false);},children:\"Ok\"})})]})]})})]});};export default BankingDetails;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/bankingDetails.tsx"],"names":["useEffect","useState","storageService","Modal","DigitalIdVerification","cancel","verifiedIcon","moengage","mixPanel","MoEConstants","digitalInfoPoints","BankingDetails","getBankDetails","addBankDetails","updateBankDetails","bankDetails","accountVerified","account_name","account_number","bsb_number","stripeAccountId","data","setData","errors","setErrors","submitClicked","setSubmitClicked","digitalIdInfo","setDigitalIdInfo","idVerifClicked","setIdVerifClicked","errorLabel","Object","keys","length","validate","name","value","trimLeft","test","input","setInput","handleChange","target","includes","replace","prevData","prevErrors","handleSave","hasErrors","reduce","prevValue","error","updatedBankDetails","trim","console","log","userId","mData","timeStamp","getCurrentTimeStamp","moE_SendEvent","ADDED_PAYMENT_DETAILS","mixP_SendEvent","userType","getItem","updated","map","info","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport storageService from \"../../../utils/storageService\";\nimport Modal from \"@material-ui/core/Modal\";\nimport DigitalIdVerification from \"./digitalIdVerification\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport verifiedIcon from \"../../../assets/images/checked-2.png\";\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\n\ninterface BankDetails {\n  userId: string;\n  account_name: string;\n  account_number: string;\n  bsb_number: string;\n  accountVerified: boolean;\n  stripeAccountId: string;\n}\n\ninterface Props {\n  getBankDetails: () => void;\n  addBankDetails: (data: any) => void;\n  updateBankDetails: (data: any) => void;\n  bankDetails: BankDetails;\n}\n\nconst digitalInfoPoints: Array<string> = [\n  \"Passport\",\n  \"Driver Licence (Driver's license) - scans of front and back are required\",\n  \"Photo Card - scans of front and back are required\",\n  \"New South Wales Driving Instructor Licence - scans of front and back are required\",\n  \"Tasmanian Government Personal Information Card - scans of front and back are required\",\n  \"ImmiCard - scans of front and back are required\",\n  \"Proof of Age card - scans of front and back are required\",\n  \"Australian Defence Force (ADF) identification card (Military ID) - scans of front and back are required\",\n];\n\nconst BankingDetails = ({\n  getBankDetails,\n  addBankDetails,\n  updateBankDetails,\n  bankDetails,\n}: Props) => {\n  const [data, setData] = useState<any>({\n    accountVerified: false,\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n    stripeAccountId: \"\",\n  });\n  const [errors, setErrors] = useState({\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n  });\n  const [submitClicked, setSubmitClicked] = useState<boolean>(false);\n  const [digitalIdInfo, setDigitalIdInfo] = useState<boolean>(false);\n  const [idVerifClicked, setIdVerifClicked] = useState<boolean>(false);\n\n  const errorLabel = {\n    account_number: \"Account Number\",\n    account_name: \"Account Name\",\n    bsb_number: \"BSB Number\",\n  } as { [key: string]: string };\n\n  useEffect(() => {\n    getBankDetails();\n  }, [getBankDetails]);\n\n  useEffect(() => {\n    setData(\n      Object.keys(bankDetails).length\n        ? bankDetails\n        : {\n            accountVerified: false,\n            account_name: \"\",\n            account_number: \"\",\n            bsb_number: \"\",\n            stripeAccountId: \"\",\n          }\n    );\n  }, [bankDetails]);\n\n  const validate = (name: string, value: string) => {\n    if (value && !value.trimLeft()) {\n      return `${errorLabel[name]} is required`;\n    }\n    // return value.replace(/[^a-z0-9]+/gi, '').replace(/(.{4})/g, '$1 ');\n\n    switch (name) {\n      case \"account_number\":\n        return value.length > 10\n          ? \"Maximum 10 digits are allowed\"\n          : value.length < 6\n          ? \"Minimum 6 digits are required\"\n          : \"\";\n      case \"bsb_number\":\n        return !/^\\d{3}-\\d{3}$/.test(value)\n          ? \"Please enter valid BSB Number like 123-444\"\n          : \"\";\n    }\n\n    return \"\";\n  };\n  const [input, setInput] = useState<any>();\n\n  const handleChange = ({ target: { name, value } }: any) => {\n    if (name === \"bsb_number\") {\n      setInput(value);\n      if (value.length === 4 && value.includes(\"-\")) {\n        setInput(value.replace(\"-\", \"\"));\n      }\n      if (value.length === 3) {\n        setInput(value + \"-\");\n        setData((prevData: any) => ({\n          ...prevData,\n          bsb_number: input,\n        }));\n      }\n    }\n    setData((prevData: any) => ({\n      ...prevData,\n      [name]: value?.trimLeft(),\n    }));\n\n    if (submitClicked) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: validate(name, value),\n      }));\n    }\n  };\n\n  const handleSave = () => {\n    if (!submitClicked) {\n      setSubmitClicked(true);\n    }\n\n    const hasErrors = Object.keys(data).reduce((prevValue, name) => {\n      const error = validate(name, data[name]);\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: error,\n      }));\n\n      return prevValue || error;\n    }, \"\");\n\n    const updatedBankDetails = {\n      account_name: data.account_name?.trim(),\n      account_number: data.account_number,\n      bsb_number: data.bsb_number,\n    };\n    console.log(data.bsb_number, \"33333333333#####################\");\n    if (!hasErrors) {\n      if (bankDetails.userId) {\n        updateBankDetails({\n          userId: data.userId,\n          ...updatedBankDetails,\n        });\n      } else {\n        addBankDetails(updatedBankDetails);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        };\n        moengage.moE_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n      }\n    }\n  };\n  const userType = storageService.getItem(\"userType\");\n  const updated =\n    data.account_name?.trim() !== bankDetails.account_name?.trim() ||\n    data.account_number !== bankDetails.account_number ||\n    data.bsb_number !== bankDetails.bsb_number;\n\n  return idVerifClicked ? (\n    <DigitalIdVerification\n      setIdVerifClicked={setIdVerifClicked}\n      stripeAccountId={data.stripeAccountId}\n    />\n  ) : (\n    <div className=\"flex_row\">\n      <div className=\"flex_col_sm_8\">\n        <span className=\"sub_title\">Payment details</span>\n        <span className=\"info_note\">\n          {userType === 1\n            ? \"Enter your Bank account details\"\n            : \"Enter your card details\"}\n        </span>\n        <div className=\"form_field\">\n          <label className=\"form_label\">Account Name</label>\n          <div className=\"text_field\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Account Name\"\n              name=\"account_name\"\n              value={data.account_name}\n              onChange={handleChange}\n              maxLength={50}\n            />\n          </div>\n          <span className=\"error_msg\">{errors.account_name}</span>\n        </div>\n        <div className=\"form_field\">\n          <label className=\"form_label\">BSB Number</label>\n\n          <div className=\"text_field\">\n            {console.log(data.bsb_number, \"12@@@@@@@@@@@@\")}\n            <input\n              type=\"text\"\n              placeholder=\"Enter BSB Number\"\n              name=\"bsb_number\"\n              value={input}\n              onChange={handleChange}\n              maxLength={7}\n            />\n          </div>\n          <span className=\"error_msg\">{errors.bsb_number}</span>\n        </div>\n        <div className=\"form_field\">\n          <label className=\"form_label\">Account Number</label>\n          <div className=\"text_field\">\n            <input\n              type=\"number\"\n              placeholder=\"Enter Account Number\"\n              name=\"account_number\"\n              value={data.account_number}\n              onChange={handleChange}\n              maxLength={10}\n              max={9999999999}\n            />\n          </div>\n          <span className=\"error_msg\">{errors.account_number}</span>\n        </div>\n\n        {data.account_name &&\n          data.account_number &&\n          data.bsb_number &&\n          data.stripeAccountId && (\n            <>\n              <div className=\"form_field\">\n                <button\n                  className=\"fill_grey_btn full_btn btn-effect id_verified\"\n                  onClick={() => {\n                    if (data?.accountVerified) return;\n                    setIdVerifClicked(true);\n                  }}\n                >\n                  {data?.accountVerified && (\n                    <img src={verifiedIcon} alt=\"verified\" />\n                  )}\n                  {`${\n                    data?.accountVerified\n                      ? \"ID Verified\"\n                      : \"Add ID Verification\"\n                  }`}\n                </button>\n              </div>\n              <span\n                className=\"show_label id_info\"\n                onClick={() => setDigitalIdInfo(true)}\n              >\n                ID verification is required as part of Stripe ID verification\n                process.\n              </span>\n            </>\n          )}\n\n        <button\n          className={`fill_btn full_btn btn-effect${\n            !updated ? \" disabled\" : \"\"\n          }`}\n          onClick={handleSave}\n        >\n          Save changes\n        </button>\n      </div>\n\n      <Modal\n        className=\"custom_modal\"\n        open={digitalIdInfo}\n        onClose={() => setDigitalIdInfo(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div\n          className=\"custom_wh profile_modal\"\n          data-aos=\"zoom-in\"\n          data-aos-delay=\"30\"\n          data-aos-duration=\"1000\"\n        >\n          <div className=\"heading\">\n            <span className=\"sub_title\">ID verification</span>\n            <button\n              className=\"close_btn\"\n              onClick={() => setDigitalIdInfo(false)}\n            >\n              <img src={cancel} alt=\"cancel\" />\n            </button>\n          </div>\n          <div className=\"inner_wrap\">\n            <span className=\"show_label\">\n              ID verification is required as part of Stripe ID verification\n              process.\n            </span>\n            <span className=\"show_label\">\n              Below is a spansting of documents that can accept as proof of\n              identity, address, and entity.\n            </span>\n            <ul className=\"verificationid_list\">\n              {digitalInfoPoints.map((info, index) => (\n                <li className=\"show_label\" key={index}>\n                  {info}\n                </li>\n              ))}\n            </ul>\n            <div className=\"bottom_btn custom_btn center\">\n              <button\n                className={`fill_btn full_btn btn-effect`}\n                onClick={() => setDigitalIdInfo(false)}\n              >\n                Ok\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BankingDetails;\n"]},"metadata":{},"sourceType":"module"}