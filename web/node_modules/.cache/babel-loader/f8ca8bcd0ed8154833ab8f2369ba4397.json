{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Constants from'../../utils/constants';import gmail from'../../assets/images/ic-google.png';import linkedin from'../../assets/images/ic-linkedin.png';import{checkSocialId,getLinkedinProfile,socialSignupLogin}from'../../redux/auth/actions';// @ts-ignore\nimport{GoogleLogin}from'react-google-login';// @ts-ignore\nimport{LinkedIn}from'react-linkedin-login-oauth2';// @ts-ignore\n//import AppleLogin from 'react-apple-login';\nimport{loginAnonymously}from'../../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SocialAuth=function SocialAuth(props){var onFailure=function onFailure(error){console.log(error);};var googleResponse=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var res,_response$profileObj,_response$profileObj2,_data,_res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return checkSocialId({socialId:response.googleId,email:response.profileObj.email});case 2:res=_context.sent;if(!res.success){_context.next=13;break;}if(!res.isProfileCompleted){_context.next=12;break;}//in case of existing social account\n_data=_objectSpread({//firstName: profileData.name,\nauthType:\"login\",email:(_response$profileObj=response.profileObj)===null||_response$profileObj===void 0?void 0:_response$profileObj.email,socialId:(_response$profileObj2=response.profileObj)===null||_response$profileObj2===void 0?void 0:_response$profileObj2.googleId,// deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\naccountType:\"google\"},props.userType&&{user_type:props.userType});_context.next=8;return socialSignupLogin(_data);case 8:_res=_context.sent;if(_res.success){// const authData = {\n//     email: res.result?.email,\n//     password: '12345678'\n// }\n// const loginRes = {\n//     email: res.result?.email,\n//     user_image: res.result?.user_image,\n//     userName: res.result?.userName ? res.result?.userName : 'name',\n//     _id: res.result?._id,\n//     user_type: res.result?.user_type,\n// }\nloginAnonymously();// firebaseLogInWithEmailPassword(authData, loginRes);\nif(props.showModal){props.setShowModal(!props.showModal);}props.history.push('/');}_context.next=13;break;case 12://in case of new social account\nprops.onNewAccount(response.profileObj,'google');case 13:case\"end\":return _context.stop();}}},_callee);}));return function googleResponse(_x){return _ref.apply(this,arguments);};}();var linkedInResponse=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response){var resSocial,resCheckId,_resSocial$result,_resSocial$result2,_data2,resAuth;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getLinkedinProfile({code:response.code,redirect_uri:Constants.LinkedInAuth.REDIRECT_URI});case 2:resSocial=_context2.sent;_context2.next=5;return checkSocialId({socialId:resSocial.result.id,email:resSocial.result.email});case 5:resCheckId=_context2.sent;if(!resCheckId.success){_context2.next=17;break;}if(!resCheckId.isProfileCompleted){_context2.next=16;break;}//in case of existing social account\n_data2=_objectSpread({//firstName: profileData.name,\nauthType:\"login\",email:(_resSocial$result=resSocial.result)===null||_resSocial$result===void 0?void 0:_resSocial$result.email,// deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\naccountType:\"linkedIn\",socialId:(_resSocial$result2=resSocial.result)===null||_resSocial$result2===void 0?void 0:_resSocial$result2.id},props.userType&&{user_type:props.userType});_context2.next=11;return socialSignupLogin(_data2);case 11:resAuth=_context2.sent;console.log('resAuth: ',resAuth);if(resAuth.success){// const authData = {\n//     email: resAuth.result?.email,\n//     password: '12345678'\n// }\n// const loginRes = {\n//     email: resAuth.result?.email,\n//     user_image: resAuth.result?.user_image,\n//     userName: resAuth.result?.userName ? resAuth.result?.userName : 'name',\n//     _id: resAuth.result?._id,\n//     user_type: resAuth.result?.user_type,\n// }\nloginAnonymously();// firebaseLogInWithEmailPassword(authData, loginRes);\nif(props.showModal){props.setShowModal(!props.showModal);}props.history.push('/');}_context2.next=17;break;case 16://in case of new social account\nprops.onNewAccount({name:resSocial.result.firstName,email:resSocial.result.email,socialId:resSocial.result.id},'linkedIn');case 17:case\"end\":return _context2.stop();}}},_callee2);}));return function linkedInResponse(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"continue_with\",children:[/*#__PURE__*/_jsx(GoogleLogin,{clientId:Constants.SocialAuth.GOOGLE_CLIENT_ID,onSuccess:googleResponse,onFailure:onFailure,render:function render(renderProps){return/*#__PURE__*/_jsx(\"a\",{className:\"hvr-ripple-out\",onClick:renderProps.onClick,children:/*#__PURE__*/_jsx(\"img\",{src:gmail,alt:\"google\"})});}}),/*#__PURE__*/_jsx(LinkedIn,{clientId:Constants.LinkedInAuth.CLIENT_ID,onSuccess:linkedInResponse,onFailure:onFailure,scope:\"r_liteprofile r_emailaddress\",state:\"gjhcbf355ESDE\",redirectUri:Constants.LinkedInAuth.REDIRECT_URI,renderElement:function renderElement(renderProps){return/*#__PURE__*/_jsx(\"a\",{className:\"hvr-ripple-out\",onClick:renderProps.onClick,children:/*#__PURE__*/_jsx(\"img\",{src:linkedin,alt:\"linkedin\"})});}})]});};export default SocialAuth;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/auth/socialAuth.tsx"],"names":["Constants","gmail","linkedin","checkSocialId","getLinkedinProfile","socialSignupLogin","GoogleLogin","LinkedIn","loginAnonymously","SocialAuth","props","onFailure","error","console","log","googleResponse","response","socialId","googleId","email","profileObj","res","success","isProfileCompleted","data","authType","accountType","userType","user_type","showModal","setShowModal","history","push","onNewAccount","linkedInResponse","code","redirect_uri","LinkedInAuth","REDIRECT_URI","resSocial","result","id","resCheckId","resAuth","name","firstName","GOOGLE_CLIENT_ID","renderProps","onClick","CLIENT_ID"],"mappings":"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","sourcesContent":["import Constants from '../../utils/constants';\nimport gmail from '../../assets/images/ic-google.png';\nimport linkedin from '../../assets/images/ic-linkedin.png';\nimport { checkSocialId, getLinkedinProfile, socialSignupLogin } from '../../redux/auth/actions';\n// @ts-ignore\nimport { GoogleLogin } from 'react-google-login';\n// @ts-ignore\nimport { LinkedIn } from 'react-linkedin-login-oauth2';\n// @ts-ignore\n//import AppleLogin from 'react-apple-login';\nimport { firebaseLogInWithEmailPassword, loginAnonymously } from '../../services/firebase';\n\ninterface Propstype {\n    onNewAccount: Function,\n    history: any,\n    userType?: number,\n    showModal?: boolean,\n    modalUpdateSteps: (data: any) => void,\n    setShowModal: (data: any) => void,\n}\n\nconst SocialAuth = (props: Propstype) => {\n\n    const onFailure = (error: any) => {\n        console.log(error);\n    };\n\n    const googleResponse = async (response: any) => {\n        const res = await checkSocialId({ socialId: response.googleId, email: response.profileObj.email })\n        if (res.success) {\n            if (res.isProfileCompleted) {\n                //in case of existing social account\n                let data: any = {\n                    //firstName: profileData.name,\n                    authType: \"login\",\n                    email: response.profileObj?.email,\n                    socialId: response.profileObj?.googleId,\n                    // deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\n                    accountType: \"google\",\n                    ...(props.userType && { user_type: props.userType })\n                }\n                const res = await socialSignupLogin(data)\n                if (res.success) {\n                    // const authData = {\n                    //     email: res.result?.email,\n                    //     password: '12345678'\n                    // }\n                    // const loginRes = {\n                    //     email: res.result?.email,\n                    //     user_image: res.result?.user_image,\n                    //     userName: res.result?.userName ? res.result?.userName : 'name',\n                    //     _id: res.result?._id,\n                    //     user_type: res.result?.user_type,\n                    // }\n                    loginAnonymously();\n                    // firebaseLogInWithEmailPassword(authData, loginRes);\n                    if (props.showModal) {\n                        props.setShowModal(!props.showModal);\n                    }\n                    props.history.push('/');\n                }\n            } else {\n                //in case of new social account\n                props.onNewAccount(response.profileObj, 'google');\n            }\n        }\n    };\n\n    const linkedInResponse = async (response: any) => {\n        const resSocial = await getLinkedinProfile({ code: response.code, redirect_uri: Constants.LinkedInAuth.REDIRECT_URI })\n        const resCheckId = await checkSocialId({ socialId: resSocial.result.id, email: resSocial.result.email })\n        if (resCheckId.success) {\n            if (resCheckId.isProfileCompleted) {\n                //in case of existing social account\n                let data: any = {\n                    //firstName: profileData.name,\n                    authType: \"login\",\n                    email: resSocial.result?.email,\n                    // deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\n                    accountType: \"linkedIn\",\n                    socialId: resSocial.result?.id,\n                    ...(props.userType && { user_type: props.userType })\n                }\n                const resAuth = await socialSignupLogin(data)\n                console.log('resAuth: ', resAuth);\n                if (resAuth.success) {\n                    // const authData = {\n                    //     email: resAuth.result?.email,\n                    //     password: '12345678'\n                    // }\n                    // const loginRes = {\n                    //     email: resAuth.result?.email,\n                    //     user_image: resAuth.result?.user_image,\n                    //     userName: resAuth.result?.userName ? resAuth.result?.userName : 'name',\n                    //     _id: resAuth.result?._id,\n                    //     user_type: resAuth.result?.user_type,\n                    // }\n                    loginAnonymously();\n                    // firebaseLogInWithEmailPassword(authData, loginRes);\n                    if (props.showModal) {\n                        props.setShowModal(!props.showModal);\n                    }\n                    props.history.push('/');\n                }\n            } else {\n                //in case of new social account\n                props.onNewAccount({ name: resSocial.result.firstName, email: resSocial.result.email, socialId: resSocial.result.id }, 'linkedIn');\n            }\n        }\n    }\n\n    return (\n        <div className=\"continue_with\">\n            <GoogleLogin\n                clientId={Constants.SocialAuth.GOOGLE_CLIENT_ID}\n                onSuccess={googleResponse}\n                onFailure={onFailure}\n                render={(renderProps: any) => (<a className=\"hvr-ripple-out\" onClick={renderProps.onClick}>\n                    <img src={gmail} alt=\"google\" />\n                </a>)}\n            />\n            <LinkedIn\n                clientId={Constants.LinkedInAuth.CLIENT_ID}\n                onSuccess={linkedInResponse}\n                onFailure={onFailure}\n                scope=\"r_liteprofile r_emailaddress\"\n                state=\"gjhcbf355ESDE\"\n                redirectUri={Constants.LinkedInAuth.REDIRECT_URI}\n                renderElement={(renderProps: any) => (<a className=\"hvr-ripple-out\" onClick={renderProps.onClick} >\n                    <img src={linkedin} alt=\"linkedin\" />\n                </a>\n                )}\n            />\n            {/* <AppleLogin\n                clientId=\"com.react.apple.login\"\n                redirectURI=\"https://redirectUrl.com\"\n            /> */}\n            {/* <a href=\"javascript:void(0)\" >\n                <img src={linkedin} alt=\"linkedin\" />\n            </a> */}\n            {/* <a href=\"javascript:void(0)\">\n                <img src={apple} alt=\"apple\" />\n            </a> */}\n        </div>\n    )\n}\n\nexport default SocialAuth\n"]},"metadata":{},"sourceType":"module"}