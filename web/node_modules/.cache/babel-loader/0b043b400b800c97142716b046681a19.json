{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/home/home.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport GuestHome from './guestHome';\nimport TradieHome from './tradieHome/index';\nimport BuilderHome from './builderHome/index';\nimport storageService from '../../utils//storageService';\nimport { addFCMNotifToken } from '../../redux/auth/actions';\nimport { requestPermission, updateChatUserDetails } from \"../../services/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [userType] = useState(storageService.getItem('userType'));\n  const location = useLocation();\n  const history = useHistory();\n\n  const setTokenSentToServer = sent => {\n    storageService.setItem('sentToServer', sent ? '1' : '0');\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (userType === 1 || userType === 2) {\n        var _storageService$getIt;\n\n        const res = await requestPermission();\n        const data = {\n          deviceToken: res === null || res === void 0 ? void 0 : res.deviceToken,\n          //fcm device token\n          deviceId: `${(_storageService$getIt = storageService.getItem('userInfo')) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt.deviceId}`,\n          deviceType: 1\n        };\n        console.log(data.deviceToken, \"---------------diff----------------\", storageService.getItem('fcmToken'));\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          if (storageService.getItem('fcmToken') !== data.deviceToken) {\n            updateChatUserDetails('deviceToken', data.deviceToken);\n            const res2 = await addFCMNotifToken(data);\n\n            if (res2.success) {\n              storageService.setItem(\"fcmToken\", data.deviceToken);\n              setTokenSentToServer(true);\n            } else {\n              setTokenSentToServer(false);\n            }\n          }\n        }\n      }\n    })();\n  }, []);\n\n  if (userType === 1) {\n    return /*#__PURE__*/_jsxDEV(TradieHome, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  } else if (userType === 2) {\n    return /*#__PURE__*/_jsxDEV(BuilderHome, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(GuestHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(Home, \"4c4VuC6c2zeWVV1xgOaCs5zgLoo=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/home/home.tsx"],"names":["useState","useEffect","useLocation","useHistory","GuestHome","TradieHome","BuilderHome","storageService","addFCMNotifToken","requestPermission","updateChatUserDetails","Home","props","userType","getItem","location","history","setTokenSentToServer","sent","setItem","res","data","deviceToken","deviceId","deviceType","console","log","success","res2"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,yBAAzD;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAgB;AAAA;;AACzB,QAAM,CAACC,QAAD,IAAab,QAAQ,CAACO,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAAD,CAA3B;AACA,QAAMC,QAAa,GAAGb,WAAW,EAAjC;AACA,QAAMc,OAAY,GAAGb,UAAU,EAA/B;;AAEA,QAAMc,oBAAoB,GAAIC,IAAD,IAAe;AACxCX,IAAAA,cAAc,CAACY,OAAf,CAAuB,cAAvB,EAAuCD,IAAI,GAAG,GAAH,GAAS,GAApD;AACH,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAIY,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,CAAnC,EAAsC;AAAA;;AAClC,cAAMO,GAAQ,GAAG,MAAMX,iBAAiB,EAAxC;AACA,cAAMY,IAAS,GAAG;AACdC,UAAAA,WAAW,EAAEF,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEE,WADJ;AACiB;AAC/BC,UAAAA,QAAQ,EAAG,GAAD,yBAAGhB,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAAH,0DAAG,sBAAoCS,QAAS,EAF5C;AAGdC,UAAAA,UAAU,EAAE;AAHE,SAAlB;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,WAAjB,EAA8B,qCAA9B,EAAqEf,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAArE;;AACA,YAAIM,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEO,OAAT,EAAkB;AACd,cAAIpB,cAAc,CAACO,OAAf,CAAuB,UAAvB,MAAuCO,IAAI,CAACC,WAAhD,EAA6D;AACzDZ,YAAAA,qBAAqB,CAAC,aAAD,EAAgBW,IAAI,CAACC,WAArB,CAArB;AACA,kBAAMM,IAAI,GAAG,MAAMpB,gBAAgB,CAACa,IAAD,CAAnC;;AACA,gBAAIO,IAAI,CAACD,OAAT,EAAkB;AACdpB,cAAAA,cAAc,CAACY,OAAf,CAAuB,UAAvB,EAAmCE,IAAI,CAACC,WAAxC;AACAL,cAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,aAHD,MAGO;AACHA,cAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH;AACJ;AACJ;AACJ;AACJ,KAtBD;AAuBH,GAxBQ,EAwBN,EAxBM,CAAT;;AA0BA,MAAIJ,QAAQ,KAAK,CAAjB,EAAoB;AAChB,wBAAO,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEG;AAArB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAIH,QAAQ,KAAK,CAAjB,EAAoB;AACvB,wBAAO,QAAC,WAAD;AAAa,MAAA,OAAO,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CA1CD;;GAAML,I;UAEoBT,W,EACDC,U;;;KAHnBQ,I;AA4CN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport GuestHome from './guestHome';\nimport TradieHome from './tradieHome/index';\nimport BuilderHome from './builderHome/index';\nimport storageService from '../../utils//storageService';\nimport { addFCMNotifToken } from '../../redux/auth/actions';\nimport { requestPermission, updateChatUserDetails } from \"../../services/firebase\";\n\nconst Home = (props: any) => {\n    const [userType] = useState(storageService.getItem('userType'))\n    const location: any = useLocation();\n    const history: any = useHistory();\n\n    const setTokenSentToServer = (sent: any) => {\n        storageService.setItem('sentToServer', sent ? '1' : '0');\n    }\n\n    useEffect(() => {\n        (async () => {\n            if (userType === 1 || userType === 2) {\n                const res: any = await requestPermission();\n                const data: any = {\n                    deviceToken: res?.deviceToken, //fcm device token\n                    deviceId: `${storageService.getItem('userInfo')?.deviceId}`,\n                    deviceType: 1\n                }\n                console.log(data.deviceToken, \"---------------diff----------------\", storageService.getItem('fcmToken'));\n                if (res?.success) {\n                    if (storageService.getItem('fcmToken') !== data.deviceToken) {\n                        updateChatUserDetails('deviceToken', data.deviceToken);\n                        const res2 = await addFCMNotifToken(data);\n                        if (res2.success) {\n                            storageService.setItem(\"fcmToken\", data.deviceToken);\n                            setTokenSentToServer(true);\n                        } else {\n                            setTokenSentToServer(false);\n                        }\n                    }\n                }\n            }\n        })();\n    }, []);\n\n    if (userType === 1) {\n        return <TradieHome history={history} />\n    } else if (userType === 2) {\n        return <BuilderHome history={history} />\n    } else {\n        return <GuestHome />\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}