{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/cancelJobs/cancelJob.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { tradieCancelJob } from '../../../../redux/jobs/actions'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react';\nimport { JobCancelReasons } from '../../../../utils/common';\nimport { moengage, mixPanel } from '../../../../services/analyticsTools';\nimport { MoEConstants } from '../../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\n\nconst LodgeDispute = props => {\n  _s();\n\n  const {\n    item: {\n      jobId,\n      jobName\n    },\n    history\n  } = props;\n  const [stateData, setStateData] = useState({\n    reason: 0,\n    detail: '',\n    upload: []\n  });\n  const [errorData, setErrorData] = useState({\n    reason: '',\n    detail: '',\n    upload: ''\n  });\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const {\n    reason,\n    detail\n  } = stateData;\n\n  const isValid = ({\n    name,\n    value,\n    title\n  }) => {\n    if (name === 'reason') {\n      return value === 0 ? `${title} is required.` : '';\n    }\n\n    return !(value === null || value === void 0 ? void 0 : value.length) ? `${title} is required.` : '';\n  };\n\n  const checkErrors = () => {\n    let error_1 = isValid({\n      name: 'reason',\n      value: reason,\n      title: 'Reason'\n    });\n\n    if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      jobId: jobId,\n      reason: reason,\n      note: detail\n    };\n    if (!data.note) delete data.note;\n    let response = await tradieCancelJob(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      const mData = {\n        timeStamp: moengage.getCurrentTimeStamp()\n      };\n      moengage.moE_SendEvent(MoEConstants.CANCEL_JOB, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.CANCEL_JOB, mData);\n      history.push('/cancel-job-success');\n    }\n  };\n\n  const commonRenderValues = ({\n    id\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox_wrap agree_check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: reason,\n        onClick: () => {\n          setStateData(prev => ({ ...prev,\n            reason: id\n          }));\n        },\n        checked: reason === id,\n        name: \"Reason\",\n        className: \"filter-type filled-in\",\n        type: \"checkbox\",\n        id: `reason${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `reason${id}`,\n        children: JobCancelReasons(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderFilteredItems = () => {\n    let sources = [];\n    let types = [];\n\n    if (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) {\n      filesUrl.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push('image');\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const {\n    sources,\n    types\n  } = renderFilteredItems();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relate\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              props.backTab('cancel');\n            },\n            className: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: jobName || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: 'Your reason for canceling job'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commn_para\",\n          children: 'Let the builder and Tickt know why you are cancelling the job.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n          toggler: toggler,\n          slide: selectedSlide,\n          sources: sources,\n          types: types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reason_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"f_spacebw\",\n            children: [commonRenderValues({\n              id: 1\n            }), commonRenderValues({\n              id: 2\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"f_spacebw\",\n            children: [commonRenderValues({\n              id: 3\n            }), commonRenderValues({\n              id: 4\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"f_spacebw\",\n            children: commonRenderValues({\n              id: 5\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_9\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"Add note (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: detail,\n              onChange: e => {\n                setStateData(prev => ({ ...prev,\n                  detail: e.target.value\n                }));\n              },\n              placeholder: \"It\\u2019s really bad work, because...\",\n              maxLength: 1000\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errorData.detail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: `fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`,\n          children: 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LodgeDispute, \"k249q9ABaoBxeul1ELMDuUxKiw0=\");\n\n_c = LodgeDispute;\nexport default LodgeDispute;\n\nvar _c;\n\n$RefreshReg$(_c, \"LodgeDispute\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/cancelJobs/cancelJob.tsx"],"names":["useState","tradieCancelJob","FsLightbox","JobCancelReasons","moengage","mixPanel","MoEConstants","imageFormats","LodgeDispute","props","item","jobId","jobName","history","stateData","setStateData","reason","detail","upload","errorData","setErrorData","filesUrl","setFilesUrl","toggler","setToggler","selectedSlide","setSelectSlide","isValid","name","value","title","length","checkErrors","error_1","handleSubmit","data","note","response","success","mData","timeStamp","getCurrentTimeStamp","moE_SendEvent","CANCEL_JOB","mixP_SendEvent","push","commonRenderValues","id","prev","renderFilteredItems","sources","types","forEach","mediaType","link","backTab","e","target"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { onFileUpload } from '../../../../redux/auth/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport { tradieCancelJob } from '../../../../redux/jobs/actions';\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\nimport { JobCancelReasons } from '../../../../utils/common';\nimport { moengage, mixPanel } from '../../../../services/analyticsTools';\nimport { MoEConstants } from '../../../../utils/constants';\n\nimport close from '../../../../assets/images/icon-close-1.png';\n\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\n\ninterface PropTypes {\n    item: any,\n    history: any,\n    backTab: (data: string) => void,\n}\n\nconst LodgeDispute = (props: PropTypes) => {\n    const { item: { jobId, jobName }, history } = props;\n    const [stateData, setStateData] = useState({ reason: 0, detail: '', upload: [] });\n    const [errorData, setErrorData] = useState({ reason: '', detail: '', upload: '' });\n    const [filesUrl, setFilesUrl] = useState([] as any);\n\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState(1);\n\n\n    const { reason, detail } = stateData;\n\n    const isValid = ({ name, value, title }: any) => {\n        if (name === 'reason') {\n            return value === 0 ? `${title} is required.` : '';\n        }\n        return !value?.length ? `${title} is required.` : '';\n    }\n\n    const checkErrors = () => {\n        let error_1 = isValid({ name: 'reason', value: reason, title: 'Reason' });\n        if (!error_1?.length) {\n            return false;\n        }\n        return true;\n    }\n\n\n    const handleSubmit = async () => {\n        let data: any = {\n            jobId: jobId,\n            reason: reason,\n            note: detail,\n        }\n        if (!data.note) delete data.note;\n        let response: any = await tradieCancelJob(data);\n        if (response?.success) {\n            const mData = {\n                timeStamp: moengage.getCurrentTimeStamp(),\n            }\n            moengage.moE_SendEvent(MoEConstants.CANCEL_JOB, mData);\n            mixPanel.mixP_SendEvent(MoEConstants.CANCEL_JOB, mData);\n            history.push('/cancel-job-success');\n        }\n    }\n\n\n    const commonRenderValues = ({ id }: any) => {\n        return (\n            <div className=\"checkbox_wrap agree_check\">\n                <input\n                    value={reason}\n                    onClick={() => { setStateData((prev: any) => ({ ...prev, reason: id })) }}\n                    checked={reason === id}\n                    name=\"Reason\" className=\"filter-type filled-in\" type=\"checkbox\" id={`reason${id}`} />\n                <label htmlFor={`reason${id}`}>\n                    {JobCancelReasons(id)}\n                </label>\n            </div>\n        )\n    }\n\n    const renderFilteredItems = () => {\n        let sources: any = [];\n        let types: any = [];\n\n        if (filesUrl?.length) {\n            filesUrl.forEach((item: any) => {\n                if (item?.mediaType === 1) {\n                    sources.push(item.link);\n                    types.push('image');\n                }\n            })\n        }\n\n        return { sources, types };\n    }\n\n    const { sources, types } = renderFilteredItems();\n    return (\n        <div className=\"detail_col\">\n            <div className=\"flex_row\">\n                <div className=\"flex_col_sm_8\">\n                    <div className=\"relate\">\n                        <button\n                            onClick={() => { props.backTab('cancel') }}\n                            className=\"back\"></button>\n                        <span className=\"xs_sub_title\">\n                            {jobName || ''}\n                        </span>\n                    </div>\n\n                    <span className=\"sub_title\">\n                        {'Your reason for canceling job'}\n                    </span>\n                    <p className=\"commn_para\">\n                        {'Let the builder and Tickt know why you are cancelling the job.'}\n                    </p>\n\n                    <FsLightbox\n                        toggler={toggler}\n                        slide={selectedSlide}\n                        sources={sources}\n                        types={types}\n                    />\n\n                    <div className=\"reason_wrap\">\n                        <div className=\"f_spacebw\">\n                            {commonRenderValues({ id: 1 })}\n                            {commonRenderValues({ id: 2 })}\n                        </div>\n\n                        <div className=\"f_spacebw\">\n                            {commonRenderValues({ id: 3 })}\n                            {commonRenderValues({ id: 4 })}\n                        </div>\n\n                        <div className=\"f_spacebw\">\n                            {commonRenderValues({ id: 5 })}\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"flex_col_sm_9\">\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">Add note (optional)</label>\n                        <div className=\"text_field\">\n                            <textarea\n                                value={detail}\n                                onChange={(e: any) => {\n                                    setStateData((prev: any) => ({ ...prev, detail: e.target.value }))\n                                }}\n                                placeholder=\"It’s really bad work, because...\"\n                                maxLength={1000}\n                            />\n                        </div>\n                        <span className=\"error_msg\">\n                            {errorData.detail}\n                        </span>\n                    </div>\n                    <button\n                        onClick={handleSubmit}\n                        className={`fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`}>\n                        {'Send'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LodgeDispute;"]},"metadata":{},"sourceType":"module"}