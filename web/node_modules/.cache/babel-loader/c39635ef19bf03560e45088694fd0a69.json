{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/createPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport eyeIconClose from '../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../assets/images/icon-eye-open.png';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePassword = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const changeHandler = e => {\n    setPassword(e.target.value);\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!password) {\n      newErrors.password = Constants.errorStrings.password;\n    } else {\n      const passwordRegex = new RegExp(regex.password);\n\n      if (!passwordRegex.test(password.trim())) {\n        newErrors.password = Constants.errorStrings.passwordError;\n      }\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      props.onResetPassword({\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? 'text' : 'password',\n            className: \"detect_input\",\n            value: password,\n            placeholder: \"Enter Password\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"detect_icon\",\n            onClick: () => setShowPassword(!showPassword),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: showPassword ? eyeIconOpen : eyeIconClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), !!errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field hide text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"reg\",\n        children: [\"No account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"link\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreatePassword, \"Mu8GyN0Wb9i1SPJ6ax5SpXXfB7Q=\");\n\n_c = CreatePassword;\nexport default CreatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePassword\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/createPassword.tsx"],"names":["useState","eyeIconClose","eyeIconOpen","Constants","regex","CreatePassword","props","errors","setErrors","password","setPassword","showPassword","setShowPassword","changeHandler","e","target","value","validateForm","newErrors","errorStrings","passwordRegex","RegExp","test","trim","passwordError","Object","keys","length","onSubmit","preventDefault","onResetPassword"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport eyeIconClose from '../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../assets/images/icon-eye-open.png';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex'\n\n\ninterface Propstype {\n    onResetPassword: (data: any) => void\n}\n\nconst CreatePassword = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [password, setPassword] = useState<any>('')\n    const [showPassword, setShowPassword] = useState(false)\n\n    const changeHandler = (e: any) => {\n        setPassword(e.target.value)\n    }\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!password) {\n            newErrors.password = Constants.errorStrings.password;\n        } else {\n            const passwordRegex = new RegExp(regex.password);\n            if (!passwordRegex.test(password.trim())) {\n                newErrors.password = Constants.errorStrings.passwordError;\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            props.onResetPassword({ password })\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Password</label>\n                    <div className=\"text_field\">\n                        <input type={showPassword ? 'text' : 'password'} className=\"detect_input\" value={password} placeholder=\"Enter Password\" onChange={changeHandler} />\n                        <span className=\"detect_icon\" onClick={() => setShowPassword(!showPassword)}><img src={showPassword ? eyeIconOpen : eyeIconClose} /></span>\n                    </div>\n                    {!!errors.password && <span className=\"error_msg\">{errors.password}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n            </form>\n            <div className=\"form_field hide text-center\">\n                <span className=\"reg\">No account? <a className=\"link\">Signup</a></span>\n            </div>\n        </div>\n    )\n}\n\nexport default CreatePassword\n"]},"metadata":{},"sourceType":"module"}