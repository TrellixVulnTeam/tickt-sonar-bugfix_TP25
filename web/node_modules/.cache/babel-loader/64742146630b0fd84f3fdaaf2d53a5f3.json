{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import templateImage from'../../../.././assets/images/job-posted-bg.jpg';import{withRouter,useLocation}from'react-router-dom';import{closeQuoteJob}from'../../../../redux/quotes/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteJobCancel=function QuoteJobCancel(props){var location=useLocation();var urlParams=new URLSearchParams(location.search);var jobId=urlParams.get('jobId');var tradieId=urlParams.get('tradieId');var cancelJob=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:data={jobId:jobId,tradieId:tradieId};_context.next=3;return closeQuoteJob(data);case 3:response=_context.sent;if(response.success){props.history.push('/jobs?active=past');}case 5:case\"end\":return _context.stop();}}},_callee);}));return function cancelJob(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"img_text_wrap\",children:/*#__PURE__*/_jsxs(\"figure\",{className:\"full_image\",children:[/*#__PURE__*/_jsx(\"img\",{src:templateImage,alt:\"template-item\",loading:\"eager\"}),/*#__PURE__*/_jsx(\"div\",{className:\"short_info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:'Job Cancelled'}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label\",children:'Your job for quoting has just being cancelled. Do you want to close the job or keep it open for new bidders?'}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{onClick:cancelJob,className:\"fill_btn full_btn btn-effect\",children:\"Close the job\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return props.history.push(\"/post-new-job?jobId=\".concat(jobId));},className:\"fill_grey_btn full_btn btn-effect\",children:'Keep the job open'})})]})})]})});};export default withRouter(QuoteJobCancel);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/quoteJobs/quoteJobCancel.tsx"],"names":["React","templateImage","withRouter","useLocation","closeQuoteJob","QuoteJobCancel","props","location","urlParams","URLSearchParams","search","jobId","get","tradieId","cancelJob","data","response","success","history","push"],"mappings":"qUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,+CAA1B,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,kBAAxC,CACA,OAASC,aAAT,KAA8B,kCAA9B,C,wFAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAgB,CACrC,GAAIC,CAAAA,QAAQ,CAAGJ,WAAW,EAA1B,CACA,GAAIK,CAAAA,SAAS,CAAG,GAAIC,CAAAA,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAhB,CACA,GAAIC,CAAAA,KAAK,CAAGH,SAAS,CAACI,GAAV,CAAc,OAAd,CAAZ,CACA,GAAIC,CAAAA,QAAQ,CAAGL,SAAS,CAACI,GAAV,CAAc,UAAd,CAAf,CAEA,GAAME,CAAAA,SAAS,0FAAG,qJACZC,IADY,CACL,CAAEJ,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CADK,uBAEKT,CAAAA,aAAa,CAACW,IAAD,CAFlB,QAEZC,QAFY,eAGhB,GAAIA,QAAQ,CAACC,OAAb,CAAsB,CACpBX,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,mBAAnB,EACD,CALe,sDAAH,kBAATL,CAAAA,SAAS,0CAAf,CAQA,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,gBAAQ,SAAS,CAAC,YAAlB,wBACE,YAAK,GAAG,CAAEb,aAAV,CAAyB,GAAG,CAAC,eAA7B,CAA6C,OAAO,CAAC,OAArD,EADF,cAEE,YAAK,SAAS,CAAC,YAAf,uBACE,aAAK,SAAS,CAAC,SAAf,wBACE,WAAI,SAAS,CAAC,OAAd,UACG,eADH,EADF,cAIE,aAAM,SAAS,CAAC,YAAhB,UACG,8GADH,EAJF,cAQE,YAAK,SAAS,CAAC,YAAf,uBACE,eACE,OAAO,CAAEa,SADX,CAEE,SAAS,CAAC,8BAFZ,2BADF,EARF,cAgBE,YAAK,SAAS,CAAC,YAAf,uBACE,eACE,OAAO,CAAE,yBAAMR,CAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,+BAA0CR,KAA1C,EAAN,EADX,CAEE,SAAS,CAAC,mCAFZ,UAGG,mBAHH,EADF,EAhBF,GADF,EAFF,GADF,EADF,CAkCD,CAhDD,CAkDA,cAAeT,CAAAA,UAAU,CAACG,cAAD,CAAzB","sourcesContent":["import React from 'react';\nimport templateImage from '../../../.././assets/images/job-posted-bg.jpg';\nimport { withRouter, useLocation } from 'react-router-dom';\nimport { closeQuoteJob } from '../../../../redux/quotes/actions'\n\n\nconst QuoteJobCancel = (props: any) => {\n  let location = useLocation();\n  let urlParams = new URLSearchParams(location.search);\n  let jobId = urlParams.get('jobId');\n  let tradieId = urlParams.get('tradieId');\n\n  const cancelJob = async () => {\n    let data = { jobId, tradieId };\n    let response = await closeQuoteJob(data);\n    if (response.success) {\n      props.history.push('/jobs?active=past');\n    }\n  }\n\n  return (\n    <div className=\"img_text_wrap\">\n      <figure className=\"full_image\">\n        <img src={templateImage} alt=\"template-item\" loading=\"eager\" />\n        <div className=\"short_info\">\n          <div className=\"content\">\n            <h1 className=\"title\">\n              {'Job Cancelled'}\n            </h1>\n            <span className=\"show_label\">\n              {'Your job for quoting has just being cancelled. Do you want to close the job or keep it open for new bidders?'}\n            </span>\n\n            <div className=\"form_field\">\n              <button\n                onClick={cancelJob}\n                className=\"fill_btn full_btn btn-effect\">\n                {`Close the job`}\n              </button>\n            </div>\n\n            <div className=\"form_field\">\n              <button\n                onClick={() => props.history.push(`/post-new-job?jobId=${jobId}`)}\n                className=\"fill_grey_btn full_btn btn-effect\">\n                {'Keep the job open'}\n              </button>\n            </div>\n\n          </div>\n        </div>\n      </figure>\n    </div>\n  )\n}\n\nexport default withRouter(QuoteJobCancel);"]},"metadata":{},"sourceType":"module"}