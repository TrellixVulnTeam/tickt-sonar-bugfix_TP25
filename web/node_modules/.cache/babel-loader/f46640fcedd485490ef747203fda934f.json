{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/components/successPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { setLoading } from '../../../../../../redux/common/actions';\nimport storageService from '../../../../../../utils/storageService';\nimport colorLogo from '../../../../../../assets/images/ic-logo-yellow.png';\nimport templateImage from '../../../../../../assets/images/thanks-bg.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuccessPage = props => {\n  _s();\n\n  const [isLoad, setImageLoad] = useState(true);\n  useEffect(() => {\n    if (!isLoad) {\n      setLoading(false);\n    }\n  }, [isLoad]);\n  useEffect(() => {\n    setLoading(true);\n    storageService.clearAll();\n  }, []);\n\n  const goToLogin = () => {\n    var _props$history;\n\n    // props.updateSteps(1);\n    // props.closeModalHandler();\n    (_props$history = props.history) === null || _props$history === void 0 ? void 0 : _props$history.push('/login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_text_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"full_image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: templateImage,\n        alt: \"template\",\n        onLoad: () => {\n          setImageLoad(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"logo_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: colorLogo,\n            alt: \"Tickt-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Thanks!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label msg\",\n            children: \"You have updated email for your account.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn full_btn btn-effect\",\n            onClick: goToLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SuccessPage, \"Z9yh2OBGcp6FpxCN0NmniztoVWs=\");\n\n_c = SuccessPage;\nexport default SuccessPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuccessPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/components/successPage.tsx"],"names":["React","useState","useEffect","setLoading","storageService","colorLogo","templateImage","SuccessPage","props","isLoad","setImageLoad","clearAll","goToLogin","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,wCAA3B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AAEA,OAAOC,SAAP,MAAsB,oDAAtB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;;;AAMA,MAAMC,WAAW,GAAIC,KAAD,IAAsB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBT,QAAQ,CAAC,IAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACO,MAAL,EAAa;AAAEN,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB;AACrC,GAFQ,EAEN,CAACM,MAAD,CAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,cAAc,CAACO,QAAf;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB;AACA;AACA,sBAAAJ,KAAK,CAACK,OAAN,kEAAeC,IAAf,CAAoB,QAApB;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI;AACI,QAAA,GAAG,EAAER,aADT;AAEI,QAAA,GAAG,EAAC,UAFR;AAGI,QAAA,MAAM,EAAE,MAAM;AACVI,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEL,SAAV;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,SAAS,EAAC,8BAAlB;AAAiD,YAAA,OAAO,EAAEO,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA1CD;;GAAML,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { setLoading } from '../../../../../../redux/common/actions';\nimport storageService from '../../../../../../utils/storageService';\n\nimport colorLogo from '../../../../../../assets/images/ic-logo-yellow.png';\nimport templateImage from '../../../../../../assets/images/thanks-bg.jpg';\n\ninterface Propstype {\n    history: any,\n}\n\nconst SuccessPage = (props: Propstype) => {\n    const [isLoad, setImageLoad] = useState(true);\n\n    useEffect(() => {\n        if (!isLoad) { setLoading(false) }\n    }, [isLoad])\n\n    useEffect(() => {\n        setLoading(true)\n        storageService.clearAll();\n    }, []);\n\n    const goToLogin = () => {\n        // props.updateSteps(1);\n        // props.closeModalHandler();\n        props.history?.push('/login');\n    }\n\n    return (\n        <div className=\"img_text_wrap\">\n            <figure className=\"full_image\">\n                <img\n                    src={templateImage}\n                    alt=\"template\"\n                    onLoad={() => {\n                        setImageLoad(false)\n                    }}\n                />\n\n                <div className=\"short_info\">\n                    <figure className=\"logo_img\">\n                        <img src={colorLogo} alt=\"Tickt-logo\" />\n                    </figure>\n                    <div className=\"content\">\n                        <h1 className=\"title\">Thanks!</h1>\n                        <span className=\"show_label msg\">You have updated email for your account.</span>\n                        <button className=\"fill_btn full_btn btn-effect\" onClick={goToLogin}>Login</button>\n                    </div>\n                </div>\n            </figure>\n        </div>\n    )\n}\n\nexport default SuccessPage;\n"]},"metadata":{},"sourceType":"module"}