{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import dummy from'../../../../assets/images/u_placeholder.jpg';import NumberFormat from'react-number-format';import{quoteByJobId}from'../../../../redux/quotes/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListQuotes=/*#__PURE__*/function(_Component){_inherits(ListQuotes,_Component);var _super=_createSuper(ListQuotes);function ListQuotes(){var _this;_classCallCheck(this,ListQuotes);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={toggle:true,dataItems:[]};_this.preFetchForQuotes=function(){var _props$history,_props$history$locati;var props=_this.props;var params=new URLSearchParams(props===null||props===void 0?void 0:(_props$history=props.history)===null||_props$history===void 0?void 0:(_props$history$locati=_props$history.location)===null||_props$history$locati===void 0?void 0:_props$history$locati.search);var quotes_param=params.get('quotes');var viewQuotesParam=params.get('viewQuotes');var jobId=params.get('jobId');if(jobId===null||jobId===void 0?void 0:jobId.length){if(quotes_param===\"true\"){_this.fetchQuotesById(jobId,1);}else{_this.fetchQuotesById(jobId,1);}}};_this.fetchQuotesById=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(jobId,sortBy){var result,_result$data,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return quoteByJobId({jobId:jobId,sortBy:sortBy});case 2:result=_context.sent;console.log({result:result});if(result===null||result===void 0?void 0:result.success){data=result===null||result===void 0?void 0:(_result$data=result.data)===null||_result$data===void 0?void 0:_result$data.resultData;if(data){_this.setState({dataItems:data});}}case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();return _this;}_createClass(ListQuotes,[{key:\"componentDidMount\",value:function componentDidMount(){this.preFetchForQuotes();}},{key:\"render\",value:function render(){var _props$history2,_props$history2$locat,_this2=this;var props=this.props;var params=new URLSearchParams(props===null||props===void 0?void 0:(_props$history2=props.history)===null||_props$history2===void 0?void 0:(_props$history2$locat=_props$history2.location)===null||_props$history2$locat===void 0?void 0:_props$history2$locat.search);var activeType=params.get('active');var jobId=params.get('jobId');var _this$state=this.state,dataItems=_this$state.dataItems,toggle=_this$state.toggle;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex_row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if(activeType===\"open\"){_this2.props.history.replace(\"/jobs?active=open\");_this2.props.setJobLabel('open');}if(activeType===\"applicant\"){_this2.props.history.replace(\"/jobs?active=applicant\");_this2.props.setJobLabel('applicant');}},className:\"back\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'24px'},className:\"title\",children:\"Quotes\"})]})})}),/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){_this2.setState({toggle:!_this2.state.toggle},function(){_this2.preFetchForQuotes();});},className:\"fill_grey_btn sort_btn\",children:\"\".concat(toggle?'Highest':'Lowest',\" quote\")})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:dataItems.map(function(item){var _item$status;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{style:{minHeight:'180px'},className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){_this2.props.history.replace(\"/jobs?active=\".concat(activeType,\"&viewQuotes=true&jobId=\").concat(jobId,\"&id=\").concat(item===null||item===void 0?void 0:item._id));_this2.props.setJobLabel('quotes');},className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img\",children:/*#__PURE__*/_jsx(\"img\",{src:(item===null||item===void 0?void 0:item.tradieImage)||dummy,alt:\"traide-img\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:item===null||item===void 0?void 0:item.tradieName}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"rating\",children:[(item===null||item===void 0?void 0:item.rating)?(item===null||item===void 0?void 0:item.rating).toFixed(1):'0',\" | \",(item===null||item===void 0?void 0:item.reviewCount)||'0',\" reviews\"]})})]})]}),(item===null||item===void 0?void 0:item.status)&&/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"div\",{className:\"job_status\",children:item===null||item===void 0?void 0:(_item$status=item.status)===null||_item$status===void 0?void 0:_item$status.toUpperCase()})}),/*#__PURE__*/_jsxs(\"button\",{className:\"fill_grey_btn full_btn btn-effect\",onClick:function onClick(){_this2.props.history.replace(\"/jobs?active=\".concat(activeType,\"&viewQuotes=true&jobId=\").concat(jobId,\"&id=\").concat(item===null||item===void 0?void 0:item._id));_this2.props.setJobLabel('quotes');},children:[\"Total quote:\",/*#__PURE__*/_jsx(NumberFormat,{value:!!(item===null||item===void 0?void 0:item.totalQuoteAmount)?item===null||item===void 0?void 0:item.totalQuoteAmount:'0',displayType:'text',prefix:'$',thousandSeparator:true,isNumericString:true})]})]})});})})]});}}]);return ListQuotes;}(Component);export default ListQuotes;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/quoteJobs/ListQuotes.tsx"],"names":["React","Component","dummy","NumberFormat","quoteByJobId","ListQuotes","state","toggle","dataItems","preFetchForQuotes","props","params","URLSearchParams","history","location","search","quotes_param","get","viewQuotesParam","jobId","length","fetchQuotesById","sortBy","result","console","log","success","data","resultData","setState","activeType","replace","setJobLabel","fontSize","map","item","minHeight","_id","tradieImage","e","target","onerror","src","tradieName","rating","toFixed","reviewCount","status","toUpperCase","totalQuoteAmount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport dummy from '../../../../assets/images/u_placeholder.jpg';\nimport { withRouter } from 'react-router-dom'\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport moment from 'moment';\nimport { renderTime } from '../../../../utils/common';\nimport NumberFormat from 'react-number-format';\n\nimport {\n    getAcceptDeclineTradie,\n    quoteByJobId\n} from '../../../../redux/quotes/actions';\n\ntype State = {\n    toggle: boolean,\n    dataItems: any\n}\n\ntype Props = {\n    quotes_param: any,\n    history: any,\n    setJobLabel: any,\n    jobId: String\n}\n\nclass ListQuotes extends Component<Props, State> {\n    state: State = {\n        toggle: true,\n        dataItems: []\n    };\n\n\n    componentDidMount() {\n        this.preFetchForQuotes();\n    }\n\n    preFetchForQuotes = () => {\n        const props: any = this.props;\n        const params = new URLSearchParams(props?.history?.location?.search);\n        const quotes_param: any = params.get('quotes');\n        const viewQuotesParam: any = params.get('viewQuotes');\n        const jobId: any = params.get('jobId');\n        if (jobId?.length) {\n            if (quotes_param === \"true\") {\n                this.fetchQuotesById(jobId, 1)\n            } else {\n                this.fetchQuotesById(jobId, 1)\n            }\n        }\n    }\n\n    fetchQuotesById = async (jobId: String, sortBy: Number) => {\n        let result = await quoteByJobId({ jobId, sortBy });\n        console.log({ result });\n        if (result?.success) {\n            let data = result?.data?.resultData;\n            if (data) {\n                this.setState({ dataItems: data })\n            }\n        }\n    }\n\n\n    render() {\n        const props: any = this.props;\n        const params = new URLSearchParams(props?.history?.location?.search);\n        const activeType = params.get('active');\n        const jobId = params.get('jobId');\n        let { dataItems, toggle } = this.state;\n        return (\n            <React.Fragment>\n                <div className=\"flex_row\">\n                    <div className=\"flex_col_sm_5\">\n                        <div className=\"relate\">\n                            <button\n                                onClick={() => {\n                                    if (activeType === \"open\") {\n                                        this.props.history.replace(`/jobs?active=open`);\n                                        this.props.setJobLabel('open');\n                                    }\n\n                                    if (activeType === \"applicant\") {\n                                        this.props.history.replace(`/jobs?active=applicant`);\n                                        this.props.setJobLabel('applicant');\n                                    }\n                                }}\n                                className=\"back\"></button>\n                            <span style={{ fontSize: '24px' }} className=\"title\">Quotes</span>\n                        </div>\n                    </div>\n                </div>\n\n                <span className=\"sub_title\">\n                    <button\n                        onClick={() => {\n                            this.setState({ toggle: !this.state.toggle }, () => {\n                                this.preFetchForQuotes();\n                            })\n                        }}\n                        className=\"fill_grey_btn sort_btn\">\n                        {`${toggle ? 'Highest' : 'Lowest'} quote`}\n                    </button>\n                </span>\n\n                <div className=\"flex_row tradies_row\">\n                    {dataItems.map((item: any) => (\n                        <div className=\"flex_col_sm_6\">\n                            <div\n                                style={{ minHeight: '180px' }}\n                                className=\"tradie_card\"\n                                data-aos=\"fade-in\"\n                                data-aos-delay=\"250\"\n                                data-aos-duration=\"1000\"\n                            >\n                                <span\n                                    onClick={() => {\n                                        this.props.history.replace(`/jobs?active=${activeType}&viewQuotes=true&jobId=${jobId}&id=${item?._id}`);\n                                        this.props.setJobLabel('quotes');\n                                    }}\n                                    className=\"more_detail circle\">\n                                </span>\n                                <div className=\"user_wrap\">\n                                    <figure className=\"u_img\">\n                                        <img\n                                            src={item?.tradieImage || dummy}\n                                            alt=\"traide-img\"\n                                            onError={(e: any) => {\n                                                if (e?.target?.onerror) {\n                                                    e.target.onerror = null;\n                                                }\n                                                if (e?.target?.src) {\n                                                    e.target.src = dummy;\n                                                }\n                                            }}\n                                        />\n                                    </figure>\n                                    <div className=\"details\">\n                                        <span className=\"name\">{item?.tradieName}</span>\n                                        <p className=\"commn_para\">\n                                            <span className=\"rating\">{item?.rating ? (item?.rating).toFixed(1) : '0'} | {item?.reviewCount || '0'} reviews</span>\n                                        </p>\n                                    </div>\n                                </div>\n\n                                {item?.status && <div className=\"form_field\"><div className=\"job_status\" >{item?.status?.toUpperCase()}</div></div>}\n\n                                <button\n                                    className=\"fill_grey_btn full_btn btn-effect\"\n                                    onClick={() => {\n                                        this.props.history.replace(`/jobs?active=${activeType}&viewQuotes=true&jobId=${jobId}&id=${item?._id}`);\n                                        this.props.setJobLabel('quotes');\n                                    }}>\n                                    {`Total quote:`}\n                                    {<NumberFormat\n                                        value={!!item?.totalQuoteAmount ? item?.totalQuoteAmount : '0'}\n                                        displayType={'text'}\n                                        prefix={'$'}\n                                        thousandSeparator={true}\n                                        isNumericString={true}\n                                    />}\n                                </button>\n                            </div>\n                        </div>\n                    ))}\n\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default ListQuotes;"]},"metadata":{},"sourceType":"module"}