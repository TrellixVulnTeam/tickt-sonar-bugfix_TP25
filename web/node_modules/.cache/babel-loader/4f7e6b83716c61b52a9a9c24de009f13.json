{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/fixedRate.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ConfirmPay from './confirmAndPay';\nimport ApproveMilestonePayment from '../addBankDetails/approveMilestonePayment';\nimport { lastUsedCard } from '../../../../redux/jobs/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport { useSelector } from 'react-redux';\nimport storageService from \"../../../../utils/storageService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FixedRate = props => {\n  _s();\n\n  var _props$data, _props$data$selectedM, _props$data2, _props$data2$itemDeta;\n\n  console.log({\n    props\n  });\n  const indexMile = props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$selectedM = _props$data.selectedMilestoneIndex) === null || _props$data$selectedM === void 0 ? void 0 : _props$data$selectedM.index;\n  const milestones = props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : (_props$data2$itemDeta = _props$data2.itemDetails) === null || _props$data2$itemDeta === void 0 ? void 0 : _props$data2$itemDeta.milestones;\n  const selectedItems = milestones[indexMile];\n  const [toggle, setToggle] = useState(false);\n  const [toggleBankAcc, setToggleBankAcc] = useState(false);\n  const [lastCard, setLastCard] = useState({});\n  const [toggleDetails, setToggleDetails] = useState({\n    toggle: false,\n    data: null\n  });\n  const isLoading = useSelector(state => state.common.isLoading);\n  const [checkPaymentType, setCheckPaymentType] = useState('1'); // 1 => credit card; 2 => bank account\n\n  const backToScreen = () => {\n    if (toggle) setToggle(false);\n    if (toggleBankAcc) setToggleBankAcc(false);\n    setToggleDetails({\n      toggle: false,\n      data: null\n    });\n    fetchLastCard();\n  };\n\n  const fetchLastCard = async () => {\n    let response = await lastUsedCard();\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      setLastCard(response.data);\n    }\n  };\n\n  useEffect(() => {\n    fetchLastCard();\n  }, []);\n  useEffect(() => {}, [toggle, toggleBankAcc]);\n\n  if (toggle) {\n    return /*#__PURE__*/_jsxDEV(ConfirmPay, {\n      toggleDetails: toggleDetails,\n      jobName: props === null || props === void 0 ? void 0 : props.jobName,\n      dataItem: props === null || props === void 0 ? void 0 : props.data,\n      backToScreen: backToScreen,\n      total: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.total,\n      onSubmitAccept: props.onSubmitAccept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (toggleBankAcc) {\n    var _props$data3, _props$data3$itemDeta, _storageService$getIt, _props$data4, _props$data4$itemDeta, _props$data5, _props$data5$selected, _props$data6, _props$data6$itemDeta, _props$data6$itemDeta2, _props$data6$itemDeta3;\n\n    return /*#__PURE__*/_jsxDEV(ApproveMilestonePayment, {\n      isAddnewAccount: true,\n      tradieId: props === null || props === void 0 ? void 0 : (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : (_props$data3$itemDeta = _props$data3.itemDetails) === null || _props$data3$itemDeta === void 0 ? void 0 : _props$data3$itemDeta.tradieId,\n      builderId: ((_storageService$getIt = storageService.getItem(\"userInfo\")) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id) || '',\n      jobName: props === null || props === void 0 ? void 0 : props.jobName,\n      jobId: props === null || props === void 0 ? void 0 : (_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : (_props$data4$itemDeta = _props$data4.itemDetails) === null || _props$data4$itemDeta === void 0 ? void 0 : _props$data4$itemDeta.jobId,\n      milestoneId: props === null || props === void 0 ? void 0 : (_props$data5 = props.data) === null || _props$data5 === void 0 ? void 0 : (_props$data5$selected = _props$data5.selectedMilestoneIndex) === null || _props$data5$selected === void 0 ? void 0 : _props$data5$selected.milestoneId,\n      milestoneAmount: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.milestoneAmount,\n      milestoneTotalAmount: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.total,\n      backToScreen: backToScreen,\n      milestoneNumber: indexMile,\n      category: props === null || props === void 0 ? void 0 : (_props$data6 = props.data) === null || _props$data6 === void 0 ? void 0 : (_props$data6$itemDeta = _props$data6.itemDetails) === null || _props$data6$itemDeta === void 0 ? void 0 : (_props$data6$itemDeta2 = _props$data6$itemDeta.categories) === null || _props$data6$itemDeta2 === void 0 ? void 0 : (_props$data6$itemDeta3 = _props$data6$itemDeta2[0]) === null || _props$data6$itemDeta3 === void 0 ? void 0 : _props$data6$itemDeta3.trade_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  const renderItem = ({\n    title,\n    value,\n    bold\n  }) => {\n    if (value) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f_spacebw\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form_label\",\n          children: bold ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this) : title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form_label\",\n          children: bold ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this) : value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.toggleBack();\n          },\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: props === null || props === void 0 ? void 0 : props.jobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: 'Confirm and pay'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), isLoading ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment_details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inner_title\",\n            children: \"Milestone payment details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), renderItem({\n            title: 'Hours worked',\n            value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.hoursWorked\n          }), renderItem({\n            title: 'Hours rate',\n            value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.hourlyRate\n          }), renderItem({\n            title: 'Milestone amount',\n            value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.milestoneAmount\n          }), renderItem({\n            title: 'GST',\n            value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.taxes\n          }), renderItem({\n            title: 'Platform fees',\n            value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.platformFees\n          }), renderItem({\n            title: 'Total',\n            value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.total,\n            bold: true\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), !(lastCard === null || lastCard === void 0 ? void 0 : lastCard.last4) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb50\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn full_btn btn-effect\",\n              onClick: () => {\n                setToggle(true);\n              },\n              children: \"Add card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb50\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn full_btn btn-effect\",\n              onClick: () => {\n                setToggleBankAcc(true);\n              },\n              children: \"Bank account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view_more agree_check mb50\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: () => {\n                checkPaymentType !== '1' ? setCheckPaymentType('1') : setCheckPaymentType('0');\n              },\n              checked: checkPaymentType === '1' ? true : false,\n              className: \"filter-type filled-in\",\n              type: \"checkbox\",\n              id: \"creditCard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"creditCard\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  setToggle(true);\n                  setToggleDetails({\n                    toggle: true,\n                    data: lastCard\n                  });\n                },\n                style: {\n                  cursor: 'pointer'\n                },\n                className: \"bank_detail\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"xs_head\",\n                  children: `${lastCard === null || lastCard === void 0 ? void 0 : lastCard.funding} card`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"show_label\",\n                  children: `xxxx ${lastCard === null || lastCard === void 0 ? void 0 : lastCard.last4}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"view_more agree_check mb50\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: () => {\n                checkPaymentType !== '2' ? setCheckPaymentType('2') : setCheckPaymentType('0');\n              },\n              checked: checkPaymentType === '2' ? true : false,\n              className: \"filter-type filled-in\",\n              type: \"checkbox\",\n              id: \"bankAccount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"bankAccount\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  cursor: 'pointer'\n                },\n                className: \"bank_detail\",\n                onClick: () => {\n                  setToggleBankAcc(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"xs_head\",\n                  children: `Bank account`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (checkPaymentType === '1') {\n              if (!(lastCard === null || lastCard === void 0 ? void 0 : lastCard.last4)) {\n                setShowToast(true, 'Add card to proceed');\n                return;\n              }\n\n              setToggle(true);\n            } else if (checkPaymentType === '2') {\n              setToggleBankAcc(true);\n            }\n          },\n          className: \"fill_btn full_btn btn-effect\",\n          children: 'Pay'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FixedRate, \"rihOTJnrOqjmy8WJDKBNetjeysM=\", false, function () {\n  return [useSelector];\n});\n\n_c = FixedRate;\nexport default FixedRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FixedRate\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/fixedRate.tsx"],"names":["React","useEffect","useState","ConfirmPay","ApproveMilestonePayment","lastUsedCard","setShowToast","useSelector","storageService","FixedRate","props","console","log","indexMile","data","selectedMilestoneIndex","index","milestones","itemDetails","selectedItems","toggle","setToggle","toggleBankAcc","setToggleBankAcc","lastCard","setLastCard","toggleDetails","setToggleDetails","isLoading","state","common","checkPaymentType","setCheckPaymentType","backToScreen","fetchLastCard","response","success","jobName","total","onSubmitAccept","tradieId","getItem","_id","jobId","milestoneId","milestoneAmount","categories","trade_name","renderItem","title","value","bold","toggleBack","hoursWorked","hourlyRate","taxes","platformFees","last4","cursor","funding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ConfirmPay from './confirmAndPay';\nimport ApproveMilestonePayment from '../addBankDetails/approveMilestonePayment';\nimport { lastUsedCard } from '../../../../redux/jobs/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport { useSelector } from 'react-redux';\nimport storageService from \"../../../../utils/storageService\";\n\nconst FixedRate = (props: any) => {\n    console.log({ props });\n    const indexMile: any = props?.data?.selectedMilestoneIndex?.index;\n    const milestones: any = props?.data?.itemDetails?.milestones;\n    const selectedItems: any = milestones[indexMile];\n    const [toggle, setToggle] = useState(false);\n    const [toggleBankAcc, setToggleBankAcc] = useState(false);\n    const [lastCard, setLastCard] = useState<any>({});\n    const [toggleDetails, setToggleDetails] = useState<any>({ toggle: false, data: null })\n    const isLoading = useSelector((state: any) => state.common.isLoading)\n    const [checkPaymentType, setCheckPaymentType] = useState('1'); // 1 => credit card; 2 => bank account\n\n    const backToScreen = () => {\n        if (toggle) setToggle(false);\n        if (toggleBankAcc) setToggleBankAcc(false);\n        setToggleDetails({ toggle: false, data: null });\n        fetchLastCard();\n    }\n\n    const fetchLastCard = async () => {\n        let response = await lastUsedCard();\n        if (response?.success) {\n            setLastCard(response.data);\n        }\n    }\n\n    useEffect(() => {\n        fetchLastCard();\n    }, [])\n\n    useEffect(() => {\n    }, [toggle, toggleBankAcc])\n\n    if (toggle) {\n        return (\n            <ConfirmPay\n                toggleDetails={toggleDetails}\n                jobName={props?.jobName}\n                dataItem={props?.data}\n                backToScreen={backToScreen}\n                total={selectedItems?.total}\n                onSubmitAccept={props.onSubmitAccept}\n            />\n        )\n    }\n\n    if (toggleBankAcc) {\n        return (\n            <ApproveMilestonePayment\n                isAddnewAccount={true}\n                tradieId={props?.data?.itemDetails?.tradieId}\n                builderId={storageService.getItem(\"userInfo\")?._id || ''}\n                jobName={props?.jobName}\n                jobId={props?.data?.itemDetails?.jobId}\n                milestoneId={props?.data?.selectedMilestoneIndex?.milestoneId}\n                milestoneAmount={selectedItems?.milestoneAmount}\n                milestoneTotalAmount={selectedItems?.total}\n                backToScreen={backToScreen}\n                milestoneNumber={indexMile}\n                category={props?.data?.itemDetails?.categories?.[0]?.trade_name}\n            />\n        )\n    }\n\n    const renderItem = ({ title, value, bold }: any) => {\n        if (value) {\n            return (\n                <div className=\"f_spacebw\">\n                    <span className=\"form_label\">\n                        {bold ? (\n                            <b>{title}</b>\n                        ) : title}\n                    </span>\n                    <span className=\"form_label\">\n                        {bold ? <b>{value}</b> : value}\n                    </span>\n                </div>\n            )\n        }\n        return null;\n    }\n\n    return (\n        <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n                <div className=\"relate\">\n                    <button\n                        onClick={() => {\n                            props.toggleBack()\n                        }}\n                        className=\"back\"></button>\n                    <span className=\"xs_sub_title\">\n                        {props?.jobName}\n                    </span>\n                </div>\n                <div className=\"form_field\">\n                    <span className=\"sub_title\">\n                        {'Confirm and pay'}\n                    </span>\n                </div>\n                {isLoading ? null : <>\n                    <div className=\"payment_details\">\n                        <span className=\"inner_title\">Milestone payment details</span>\n\n                        {renderItem({\n                            title: 'Hours worked',\n                            value: selectedItems?.hoursWorked\n                        })}\n\n                        {renderItem({\n                            title: 'Hours rate',\n                            value: selectedItems?.hourlyRate\n                        })}\n\n                        {renderItem({\n                            title: 'Milestone amount',\n                            value: selectedItems?.milestoneAmount\n                        })}\n\n                        {renderItem({\n                            title: 'GST',\n                            value: selectedItems?.taxes\n                        })}\n\n                        {renderItem({\n                            title: 'Platform fees',\n                            value: selectedItems?.platformFees\n                        })}\n\n                        {renderItem({\n                            title: 'Total',\n                            value: selectedItems?.total,\n                            bold: true\n                        })}\n\n                    </div>\n                    {!lastCard?.last4 ? (\n                        <>\n                            <div className=\"mb50\">\n                                <button className=\"fill_grey_btn full_btn btn-effect\"\n                                    onClick={() => {\n                                        setToggle(true);\n                                    }}>Add card</button>\n                            </div>\n                            <div className=\"mb50\">\n                                <button className=\"fill_grey_btn full_btn btn-effect\"\n                                    onClick={() => {\n                                        setToggleBankAcc(true);\n                                    }}>Bank account</button>\n                            </div>\n                        </>\n                    ) : (\n                        <div>\n                            <div className=\"view_more agree_check mb50\">\n                                <input\n                                    onChange={() => {\n                                        checkPaymentType !== '1' ? setCheckPaymentType('1') : setCheckPaymentType('0')\n                                    }}\n                                    checked={checkPaymentType === '1' ? true : false}\n                                    className=\"filter-type filled-in\"\n                                    type=\"checkbox\"\n                                    id=\"creditCard\" />\n                                <label htmlFor=\"creditCard\">\n                                    <div\n                                        onClick={() => {\n                                            setToggle(true);\n                                            setToggleDetails({\n                                                toggle: true,\n                                                data: lastCard\n                                            })\n                                        }}\n                                        style={{ cursor: 'pointer' }}\n                                        className=\"bank_detail\">\n                                        <span className=\"xs_head\">{`${lastCard?.funding} card`}</span>\n                                        <span className=\"show_label\">{`xxxx ${lastCard?.last4}`}</span>\n                                        {/* <div className=\"edit_delete\">\n                                    <span className=\"edit\" title=\"Edit\"></span>\n                                </div> */}\n                                    </div>\n                                </label>\n                            </div>\n                            <div className=\"view_more agree_check mb50\">\n                                <input\n                                    onChange={() => {\n                                        checkPaymentType !== '2' ? setCheckPaymentType('2') : setCheckPaymentType('0')\n                                    }}\n                                    checked={checkPaymentType === '2' ? true : false}\n                                    className=\"filter-type filled-in\"\n                                    type=\"checkbox\"\n                                    id=\"bankAccount\" />\n                                <label htmlFor=\"bankAccount\">\n                                    <div\n                                        style={{ cursor: 'pointer' }}\n                                        className=\"bank_detail\"\n                                        onClick={() => {\n                                            setToggleBankAcc(true);\n                                        }}>\n                                        <span className=\"xs_head\">{`Bank account`}</span>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    )}\n                    <button\n                        onClick={() => {\n                            if (checkPaymentType === '1') {\n                                if (!lastCard?.last4) {\n                                    setShowToast(true, 'Add card to proceed')\n                                    return;\n                                }\n                                setToggle(true);\n                            } else if (checkPaymentType === '2') {\n                                setToggleBankAcc(true);\n                            }\n                        }}\n                        className=\"fill_btn full_btn btn-effect\"\n                    >\n                        {'Pay'}\n                    </button>\n                </>}\n            </div>\n        </div >\n\n    )\n}\n\nexport default FixedRate;\n"]},"metadata":{},"sourceType":"module"}