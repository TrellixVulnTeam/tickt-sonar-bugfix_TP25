{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/appliedJobs.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst AppliedJobs = ({\n  loading,\n  getAppliedJobList,\n  appliedJobList,\n  newJobsCount,\n  resetAppliedJobList\n}) => {\n  _s();\n\n  const [jobList, setJobList] = useState([]);\n  const [pageNo, setPageNo] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n  const [isLoad, setIsLoad] = useState(true);\n  const history = useHistory();\n  let totalJobsCount = newJobsCount;\n  console.log(totalJobsCount, \"totalJobsCount\", jobList, \"jobList\", hasMoreItems, \"hasMoreItems\");\n  useEffect(() => {\n    callJobList();\n    return () => resetAppliedJobList();\n  }, []);\n\n  const callJobList = async () => {\n    // if (newJobsCount && jobList.length >= totalJobsCount) {\n    //   setHasMoreItems(false);\n    //   return;\n    // }\n    getAppliedJobList(pageNo);\n  };\n\n  useEffect(() => {\n    if ((appliedJobList === null || appliedJobList === void 0 ? void 0 : appliedJobList.length) || Array.isArray(appliedJobList)) {\n      const allJobs = [...jobList, ...appliedJobList];\n      console.log(jobList, \"jobList\", appliedJobList, \"props.appliedJobList\", allJobs, \"allJobs\");\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n\n      if (appliedJobList.length < 10) {\n        setHasMoreItems(false);\n      }\n\n      resetAppliedJobList();\n    }\n  }, [appliedJobList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: jobList.length,\n      next: callJobList,\n      style: {\n        overflowX: 'hidden'\n      },\n      hasMore: hasMoreItems,\n      loader: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Applied Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row tradies_row\",\n        children: !isLoad && !loading && jobList.length ? jobList.map(({\n          jobId,\n          tradeSelectedUrl,\n          tradeId,\n          specializationId,\n          jobName,\n          tradeName,\n          time,\n          amount,\n          locationName,\n          durations,\n          milestoneNumber,\n          totalMilestones,\n          status,\n          builderName,\n          builderImage,\n          quoteJob,\n          quoteSent\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradie_card\",\n            \"data-aos\": \"fade-in\",\n            \"data-aos-delay\": \"250\",\n            \"data-aos-duration\": \"1000\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/job-details-page?jobId=${jobId}&redirect_from=jobs`,\n              className: \"more_detail circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"u_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: builderImage || dummy,\n                  alt: \"\",\n                  onError: e => {\n                    var _e$target, _e$target2;\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                      e.target.onerror = null;\n                    }\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                      e.target.src = dummy;\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: jobName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"prof\",\n                  children: builderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_info\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon clock\",\n                  children: time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon dollar\",\n                  children: amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon location line-1\",\n                  children: locationName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon calendar\",\n                  children: durations\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_progress_wrap\",\n              id: \"scroll-progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress_wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-digit\",\n                  id: \"digit-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"Job Milestones \", milestoneNumber]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 23\n                  }, this), \" of \", totalMilestones]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress_bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"done_progress\",\n                    id: \"progress-bar\",\n                    type: \"range\",\n                    min: \"0\",\n                    value: milestoneNumber,\n                    max: totalMilestones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), quoteJob && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quote-text\",\n              onClick: () => {\n                history.push({\n                  pathname: `/quote-job`,\n                  state: {\n                    jobData: {\n                      jobId: jobId,\n                      tradeId: tradeId,\n                      specializationId: specializationId\n                    },\n                    redirect_from: 'appliedJobs'\n                  }\n                });\n              },\n              children: 'Quote sent'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)) : !isLoad && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_record  m-t-vh\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"no_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: noDataFound,\n              alt: \"data not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppliedJobs, \"Yo3L2snPkeXQEXhc3mAQbmIljmQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = AppliedJobs;\nexport default AppliedJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppliedJobs\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/appliedJobs.tsx"],"names":["useState","useEffect","NavLink","useHistory","InfiniteScroll","dummy","noDataFound","AppliedJobs","loading","getAppliedJobList","appliedJobList","newJobsCount","resetAppliedJobList","jobList","setJobList","pageNo","setPageNo","hasMoreItems","setHasMoreItems","isLoad","setIsLoad","history","totalJobsCount","console","log","callJobList","length","Array","isArray","allJobs","overflowX","map","jobId","tradeSelectedUrl","tradeId","specializationId","jobName","tradeName","time","amount","locationName","durations","milestoneNumber","totalMilestones","status","builderName","builderImage","quoteJob","quoteSent","e","target","onerror","src","push","pathname","state","jobData","redirect_from"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\ninterface Proptypes {\n  loading: boolean;\n  newJobsCount: number,\n  appliedJobList: any,\n  getAppliedJobList: (page: number) => void,\n  resetAppliedJobList: () => void;\n};\n\nconst AppliedJobs = ({ loading, getAppliedJobList, appliedJobList, newJobsCount, resetAppliedJobList }: Proptypes) => {\n  const [jobList, setJobList] = useState<Array<any>>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n  const [isLoad, setIsLoad] = useState(true);\n  const history: any = useHistory();\n  let totalJobsCount: number = newJobsCount;\n  console.log(totalJobsCount, \"totalJobsCount\", jobList, \"jobList\", hasMoreItems, \"hasMoreItems\");\n\n  useEffect(() => {\n    callJobList();\n\n    return () => resetAppliedJobList();\n  }, []);\n\n  const callJobList = async () => {\n    // if (newJobsCount && jobList.length >= totalJobsCount) {\n    //   setHasMoreItems(false);\n    //   return;\n    // }\n    getAppliedJobList(pageNo);\n  }\n\n  useEffect(() => {\n    if (appliedJobList?.length || Array.isArray(appliedJobList)) {\n      const allJobs = [...jobList, ...appliedJobList];\n      console.log(jobList, \"jobList\", appliedJobList, \"props.appliedJobList\", allJobs, \"allJobs\");\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n      if (appliedJobList.length < 10) { setHasMoreItems(false); }\n      resetAppliedJobList();\n    }\n  }, [appliedJobList]);\n\n\n  return (\n    <div className=\"detail_col\">\n      <InfiniteScroll\n        dataLength={jobList.length}\n        next={callJobList}\n        style={{ overflowX: 'hidden' }}\n        hasMore={hasMoreItems}\n        loader={<></>}\n      >\n        <span className=\"sub_title\">Applied Jobs</span>\n        <div className=\"flex_row tradies_row\">\n          {!isLoad && !loading && jobList.length ? jobList.map(({ jobId, tradeSelectedUrl, tradeId, specializationId, jobName, tradeName, time, amount, locationName, durations, milestoneNumber, totalMilestones, status, builderName, builderImage, quoteJob, quoteSent }) => (\n            <div className=\"flex_col_sm_6\">\n              <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                <NavLink to={`/job-details-page?jobId=${jobId}&redirect_from=jobs`} className=\"more_detail circle\"></NavLink>\n                <div className=\"user_wrap\">\n                  <figure className=\"u_img\">\n                    <img\n                      src={builderImage || dummy}\n                      alt=\"\"\n                      onError={(e: any) => {\n                        if (e?.target?.onerror) {\n                          e.target.onerror = null;\n                        }\n                        if (e?.target?.src) {\n                          e.target.src = dummy;\n                        }\n                      }}\n                    />\n                  </figure>\n                  <div className=\"details\">\n                    <span className=\"name\">{jobName}</span>\n                    <span className=\"prof\">{builderName}</span>\n                  </div>\n                </div>\n                <div className=\"job_info\">\n                  <ul>\n                    <li className=\"icon clock\">{time}</li>\n                    <li className=\"icon dollar\">{amount}</li>\n                    <li className=\"icon location line-1\">{locationName}</li>\n                    <li className=\"icon calendar\">{durations}</li>\n                  </ul>\n                </div>\n                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                  <div className=\"progress_wrapper\">\n                    <span className=\"completed-digit\" id=\"digit-progress\">\n                      <b>Job Milestones {milestoneNumber}</b> of {totalMilestones}\n                    </span>\n                    <span className=\"progress_bar\">\n                      <input\n                        className=\"done_progress\"\n                        id=\"progress-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        value={milestoneNumber}\n                        max={totalMilestones}\n                      />\n                    </span>\n                  </div>\n                </div>\n                {quoteJob && <div className=\"quote-text\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `/quote-job`,\n                      state: {\n                        jobData: {\n                          jobId: jobId,\n                          tradeId: tradeId,\n                          specializationId: specializationId\n                        },\n                        redirect_from: 'appliedJobs'\n                      }\n                    })\n                  }}>\n                  {'Quote sent'}\n                </div>}\n              </div>\n            </div>\n          )) : !isLoad && !loading && (\n            <div className=\"no_record  m-t-vh\">\n              <figure className=\"no_img\">\n                <img src={noDataFound} alt=\"data not found\" />\n              </figure>\n              <span>No Data Found</span>\n            </div>\n          )}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default AppliedJobs;\n"]},"metadata":{},"sourceType":"module"}