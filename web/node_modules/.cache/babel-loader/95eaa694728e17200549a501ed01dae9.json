{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from './constants';\nimport NetworkOps from '../../network/NetworkOps';\nimport Urls from '../../network/Urls';\nimport { setLoading, setShowToast, setSkeletonLoading } from '../common/actions';\nimport storageService from '../../utils/storageService';\n\nfunction* callTradieProfileData() {\n  const response = yield NetworkOps.get(Urls.profileTradie);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE_DATA,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE_DATA,\n      payload: ''\n    });\n  }\n}\n\nfunction* getTradieProfileView() {\n  yield put({\n    type: actionTypes.SET_TRADIE_PROFILE_VIEW,\n    payload: ''\n  });\n  setSkeletonLoading(true);\n  const response = yield NetworkOps.get(storageService.getItem('userType') === 1 ? Urls.tradieProfileView : Urls.builderProfileView);\n  setSkeletonLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE_VIEW,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE_VIEW,\n      payload: ''\n    });\n  }\n}\n\nfunction* cleanTradieProfileViewData() {\n  yield put({\n    type: actionTypes.SET_TRADIE_PROFILE_VIEW,\n    payload: ''\n  });\n}\n\nfunction* getBuilderProfileView() {\n  yield put({\n    type: actionTypes.SET_BUILDER_PROFILE_VIEW,\n    payload: ''\n  });\n  setSkeletonLoading(true);\n  const response = yield NetworkOps.get(Urls.builderProfileView);\n  setSkeletonLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_BUILDER_PROFILE_VIEW,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_BUILDER_PROFILE_VIEW,\n      payload: ''\n    });\n  }\n}\n\nfunction* getTradieBasicDetails() {\n  const response = yield NetworkOps.get(storageService.getItem('userType') === 1 ? Urls.getTradieBasicDetails : Urls.getBuilderBasicDetails);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_BASIC_DETAILS,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_TRADIE_BASIC_DETAILS,\n      payload: ''\n    });\n  }\n}\n\nfunction* cleanTradieBasicDetails() {\n  yield put({\n    type: actionTypes.SET_TRADIE_BASIC_DETAILS,\n    payload: ''\n  });\n}\n\nfunction* addBankDetails({\n  data\n}) {\n  setLoading(true);\n  const response = yield NetworkOps.postToJson(Urls.addBankDetails, data);\n  setLoading(false);\n  setShowToast(true, response.message);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.ADD_BANK_DETAILS_END,\n      payload: response.result\n    });\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({\n    type: actionTypes.ADD_BANK_DETAILS_END,\n    payload: data\n  });\n}\n\nfunction* updateBankDetails({\n  data\n}) {\n  setLoading(true);\n  const response = yield NetworkOps.putToJson(Urls.updateBankDetails, data);\n  setLoading(false);\n  setShowToast(true, response.message);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.UPDATE_BANK_DETAILS_END,\n      payload: response.result\n    });\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({\n    type: actionTypes.UPDATE_BANK_DETAILS_END,\n    payload: data\n  });\n}\n\nfunction* removeBankDetails() {\n  setLoading(true);\n  const response = yield NetworkOps.delete(Urls.removeBankDetails);\n  setLoading(false);\n  setShowToast(true, response.message);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.REMOVE_BANK_DETAILS_END,\n      payload: {\n        success: true\n      }\n    });\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({\n    type: actionTypes.REMOVE_BANK_DETAILS_END,\n    payload: {\n      success: false\n    }\n  });\n}\n\nfunction* getBankDetails() {\n  setLoading(true);\n  yield put({\n    type: actionTypes.GET_BANK_DETAILS_END,\n    payload: {}\n  });\n  const response = yield NetworkOps.get(Urls.getBankDetails);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.GET_BANK_DETAILS_END,\n      payload: response.result\n    });\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({\n    type: actionTypes.UPDATE_BANK_DETAILS_END,\n    payload: {}\n  });\n}\n\nfunction* getTradieProfile({\n  data\n}) {\n  const response = yield NetworkOps.get(Urls.tradieProfile + `?tradieId=${data.tradieId}&jobId=${data.jobId}`);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE,\n      payload: []\n    });\n  }\n}\n\nfunction* getProfileBuilder() {\n  const response = yield NetworkOps.get(Urls.builder);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_PROFILE_BUILDER,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_PROFILE_BUILDER,\n      payload: []\n    });\n  }\n}\n\nfunction* getSavedJobList({\n  page\n}) {\n  setLoading(true);\n  const response = yield NetworkOps.get(`${Urls.tradieSavedJobs}?page=${page}`);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_SAVED_JOBS,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_SAVED_JOBS,\n      payload: []\n    });\n  }\n}\n\nfunction* getSettings() {\n  const userType = storageService.getItem('userType');\n  setLoading(true);\n  const response = yield NetworkOps.get(userType === 1 ? Urls.tradieSettings : Urls.builderSettings);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    var _response$result;\n\n    yield put({\n      type: actionTypes.SET_SETTINGS,\n      payload: (_response$result = response.result) === null || _response$result === void 0 ? void 0 : _response$result.pushNotificationCategory\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_SETTINGS,\n      payload: {}\n    });\n  }\n}\n\nfunction* updateSettings({\n  settings\n}) {\n  const userType = storageService.getItem('userType');\n  setLoading(true);\n  const response = yield NetworkOps.putToJson(userType === 1 ? Urls.tradieUpdateSettings : Urls.builderUpdateSettings, settings);\n  setLoading(false);\n  setShowToast(true, response.message);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_SETTINGS,\n      payload: settings === null || settings === void 0 ? void 0 : settings.pushNotificationCategory\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_SETTINGS,\n      payload: {}\n    });\n  }\n}\n\nfunction* getPaymentHistory({\n  page,\n  search,\n  init\n}) {\n  const userType = storageService.getItem('userType');\n\n  if (init) {\n    page === 1 && setLoading(true);\n  } else {\n    yield put({\n      type: actionTypes.SET_SEARCHING,\n      payload: true\n    });\n  }\n\n  const response = yield NetworkOps.get(`${Urls.profile}${userType === 1 ? 'tradie' : 'builder'}/myRevenue?page=${page}${search ? `&search=${search}` : ''}`);\n\n  if (init) {\n    page === 1 && setLoading(false);\n  } else {\n    yield put({\n      type: actionTypes.SET_SEARCHING,\n      payload: false\n    });\n  }\n\n  if (response.status_code === 200) {\n    var _response$result2;\n\n    yield put({\n      type: actionTypes.SET_PAYMENT_HISTORY,\n      payload: ((_response$result2 = response.result) === null || _response$result2 === void 0 ? void 0 : _response$result2[0]) || {}\n    });\n  } else {\n    setShowToast(true, response.message);\n    yield put({\n      type: actionTypes.SET_PAYMENT_HISTORY,\n      payload: {}\n    });\n  }\n}\n\nfunction* getPaymentDetails({\n  jobId\n}) {\n  const userType = storageService.getItem('userType');\n  setLoading(true);\n  const response = yield NetworkOps.get(`${Urls.profile}${userType === 1 ? 'tradie' : 'builder'}/revenueDetail?jobId=${jobId}`);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_PAYMENT_DETAILS,\n      payload: response.result\n    });\n  } else {\n    setShowToast(true, response.message);\n    yield put({\n      type: actionTypes.SET_PAYMENT_DETAILS,\n      payload: {}\n    });\n  }\n}\n\nfunction* authWatcher() {\n  yield takeLatest(actionTypes.GET_TRADIE_PROFILE_DATA, callTradieProfileData);\n  yield takeLatest(actionTypes.ADD_BANK_DETAILS_START, addBankDetails);\n  yield takeLatest(actionTypes.UPDATE_BANK_DETAILS_START, updateBankDetails);\n  yield takeLatest(actionTypes.REMOVE_BANK_DETAILS_START, removeBankDetails);\n  yield takeLatest(actionTypes.GET_BANK_DETAILS_START, getBankDetails);\n  yield takeLatest(actionTypes.GET_TRADIE_PROFILE, getTradieProfile);\n  yield takeLatest(actionTypes.GET_PROFILE_BUILDER, getProfileBuilder);\n  yield takeLatest(actionTypes.GET_TRADIE_PROFILE_VIEW, getTradieProfileView);\n  yield takeLatest(actionTypes.GET_BUILDER_PROFILE_VIEW, getBuilderProfileView);\n  yield takeLatest(actionTypes.GET_TRADIE_BASIC_DETAILS, getTradieBasicDetails);\n  yield takeLatest(actionTypes.CLEAN_TRADIE_BASIC_DETAILS, cleanTradieBasicDetails);\n  yield takeLatest(actionTypes.CLEAN_TRADIE_PROFILE_VIEW_DATA, cleanTradieProfileViewData);\n  yield takeLatest(actionTypes.GET_SAVED_JOBS, getSavedJobList);\n  yield takeLatest(actionTypes.GET_SETTINGS, getSettings);\n  yield takeLatest(actionTypes.UPDATE_SETTINGS, updateSettings);\n  yield takeLatest(actionTypes.GET_PAYMENT_HISTORY, getPaymentHistory);\n  yield takeLatest(actionTypes.GET_PAYMENT_DETAILS, getPaymentDetails);\n}\n\nexport default authWatcher;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/redux/profile/sagas.ts"],"names":["put","takeLatest","actionTypes","NetworkOps","Urls","setLoading","setShowToast","setSkeletonLoading","storageService","callTradieProfileData","response","get","profileTradie","status_code","type","SET_TRADIE_PROFILE_DATA","payload","result","getTradieProfileView","SET_TRADIE_PROFILE_VIEW","getItem","tradieProfileView","builderProfileView","cleanTradieProfileViewData","getBuilderProfileView","SET_BUILDER_PROFILE_VIEW","getTradieBasicDetails","getBuilderBasicDetails","SET_TRADIE_BASIC_DETAILS","cleanTradieBasicDetails","addBankDetails","data","postToJson","message","ADD_BANK_DETAILS_END","updateBankDetails","putToJson","UPDATE_BANK_DETAILS_END","removeBankDetails","delete","REMOVE_BANK_DETAILS_END","success","getBankDetails","GET_BANK_DETAILS_END","getTradieProfile","tradieProfile","tradieId","jobId","SET_TRADIE_PROFILE","getProfileBuilder","builder","SET_PROFILE_BUILDER","getSavedJobList","page","tradieSavedJobs","SET_SAVED_JOBS","getSettings","userType","tradieSettings","builderSettings","SET_SETTINGS","pushNotificationCategory","updateSettings","settings","tradieUpdateSettings","builderUpdateSettings","getPaymentHistory","search","init","SET_SEARCHING","profile","SET_PAYMENT_HISTORY","getPaymentDetails","SET_PAYMENT_DETAILS","authWatcher","GET_TRADIE_PROFILE_DATA","ADD_BANK_DETAILS_START","UPDATE_BANK_DETAILS_START","REMOVE_BANK_DETAILS_START","GET_BANK_DETAILS_START","GET_TRADIE_PROFILE","GET_PROFILE_BUILDER","GET_TRADIE_PROFILE_VIEW","GET_BUILDER_PROFILE_VIEW","GET_TRADIE_BASIC_DETAILS","CLEAN_TRADIE_BASIC_DETAILS","CLEAN_TRADIE_PROFILE_VIEW_DATA","GET_SAVED_JOBS","GET_SETTINGS","UPDATE_SETTINGS","GET_PAYMENT_HISTORY","GET_PAYMENT_DETAILS"],"mappings":"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","sourcesContent":["import { put, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from './constants';\nimport { MARK_MILESTONE_COMPLETE } from '../jobs/constants';\nimport NetworkOps, { FetchResponse } from '../../network/NetworkOps';\nimport Urls from '../../network/Urls';\nimport { setLoading, setShowToast, setSkeletonLoading } from '../common/actions';\nimport { markMilestoneComplete } from '../jobs/actions';\nimport * as commonActions from '../common/actions';\nimport storageService from '../../utils/storageService';\n\nfunction* callTradieProfileData() {\n  const response: FetchResponse = yield NetworkOps.get(Urls.profileTradie);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE_DATA,\n      payload: response.result,\n    });\n  } else {\n    yield put({ type: actionTypes.SET_TRADIE_PROFILE_DATA, payload: '' });\n  }\n}\n\nfunction* getTradieProfileView() {\n  yield put({ type: actionTypes.SET_TRADIE_PROFILE_VIEW, payload: '' });\n  setSkeletonLoading(true);\n  const response: FetchResponse = yield NetworkOps.get(storageService.getItem('userType') === 1 ? Urls.tradieProfileView : Urls.builderProfileView);\n  setSkeletonLoading(false);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_PROFILE_VIEW,\n      payload: response.result,\n    });\n  } else {\n    yield put({ type: actionTypes.SET_TRADIE_PROFILE_VIEW, payload: '' });\n  }\n}\n\nfunction* cleanTradieProfileViewData() {\n  yield put({ type: actionTypes.SET_TRADIE_PROFILE_VIEW, payload: '' });\n}\n\nfunction* getBuilderProfileView() {\n  yield put({ type: actionTypes.SET_BUILDER_PROFILE_VIEW, payload: '' });\n  setSkeletonLoading(true);\n  const response: FetchResponse = yield NetworkOps.get(Urls.builderProfileView);\n  setSkeletonLoading(false);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_BUILDER_PROFILE_VIEW,\n      payload: response.result,\n    });\n  } else {\n    yield put({ type: actionTypes.SET_BUILDER_PROFILE_VIEW, payload: '' });\n  }\n}\n\nfunction* getTradieBasicDetails() {\n  const response: FetchResponse = yield NetworkOps.get(storageService.getItem('userType') === 1 ? Urls.getTradieBasicDetails : Urls.getBuilderBasicDetails);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_TRADIE_BASIC_DETAILS,\n      payload: response.result,\n    });\n  } else {\n    yield put({ type: actionTypes.SET_TRADIE_BASIC_DETAILS, payload: '' });\n  }\n}\n\nfunction* cleanTradieBasicDetails() {\n  yield put({ type: actionTypes.SET_TRADIE_BASIC_DETAILS, payload: '' });\n}\n\nfunction* addBankDetails({ data }: any) {\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.postToJson(\n    Urls.addBankDetails,\n    data\n  );\n  setLoading(false);\n\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.ADD_BANK_DETAILS_END,\n      payload: response.result\n    });\n\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({ type: actionTypes.ADD_BANK_DETAILS_END, payload: data });\n}\n\nfunction* updateBankDetails({ data }: any) {\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.putToJson(\n    Urls.updateBankDetails,\n    data\n  );\n  setLoading(false);\n\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.UPDATE_BANK_DETAILS_END,\n      payload: response.result\n    });\n\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({ type: actionTypes.UPDATE_BANK_DETAILS_END, payload: data });\n}\n\nfunction* removeBankDetails() {\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.delete(\n    Urls.removeBankDetails,\n  );\n  setLoading(false);\n\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.REMOVE_BANK_DETAILS_END,\n      payload: { success: true }\n    });\n\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({ type: actionTypes.REMOVE_BANK_DETAILS_END, payload: { success: false } });\n}\n\nfunction* getBankDetails() {\n  setLoading(true);\n  yield put({\n    type: actionTypes.GET_BANK_DETAILS_END,\n    payload: {},\n  });\n  const response: FetchResponse = yield NetworkOps.get(Urls.getBankDetails);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.GET_BANK_DETAILS_END,\n      payload: response.result\n    });\n\n    return;\n  }\n\n  setShowToast(true, response.message);\n  yield put({ type: actionTypes.UPDATE_BANK_DETAILS_END, payload: {} });\n}\n\nfunction* getTradieProfile({ data }: any) {\n  const response: FetchResponse = yield NetworkOps.get(Urls.tradieProfile + `?tradieId=${data.tradieId}&jobId=${data.jobId}`);\n\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_TRADIE_PROFILE, payload: response.result });\n  } else {\n    yield put({ type: actionTypes.SET_TRADIE_PROFILE, payload: [] });\n  }\n}\n\nfunction* getProfileBuilder() {\n  const response: FetchResponse = yield NetworkOps.get(Urls.builder)\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_PROFILE_BUILDER, payload: response.result });\n  } else {\n    yield put({ type: actionTypes.SET_PROFILE_BUILDER, payload: [] });\n  }\n}\n\nfunction* getSavedJobList({ page }: any) {\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.get(`${Urls.tradieSavedJobs}?page=${page}`);\n  setLoading(false);\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_SAVED_JOBS, payload: response.result });\n  } else {\n    yield put({ type: actionTypes.SET_SAVED_JOBS, payload: [] });\n  }\n}\n\nfunction* getSettings() {\n  const userType = storageService.getItem('userType');\n\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.get(userType === 1 ? Urls.tradieSettings : Urls.builderSettings);\n  setLoading(false);\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_SETTINGS, payload: response.result?.pushNotificationCategory });\n  } else {\n    yield put({ type: actionTypes.SET_SETTINGS, payload: {} });\n  }\n}\n\nfunction* updateSettings({ settings }: any) {\n  const userType = storageService.getItem('userType');\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.putToJson(userType === 1 ? Urls.tradieUpdateSettings : Urls.builderUpdateSettings, settings);\n  setLoading(false);\n  setShowToast(true, response.message);\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_SETTINGS, payload: settings?.pushNotificationCategory });\n  } else {\n    yield put({ type: actionTypes.SET_SETTINGS, payload: {} });\n  }\n}\n\nfunction* getPaymentHistory({ page, search, init }: any) {\n  const userType = storageService.getItem('userType');\n\n  if (init) {\n    page === 1 && setLoading(true);\n  } else {\n    yield put({ type: actionTypes.SET_SEARCHING, payload: true });\n  }\n  const response: FetchResponse = yield NetworkOps.get(`${Urls.profile}${userType === 1 ? 'tradie' : 'builder'}/myRevenue?page=${page}${search ? `&search=${search}` : ''}`);\n  if (init) {\n    page === 1 && setLoading(false);\n  } else {\n    yield put({ type: actionTypes.SET_SEARCHING, payload: false });\n  }\n\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_PAYMENT_HISTORY, payload: response.result?.[0] || {} });\n  } else {\n    setShowToast(true, response.message);\n    yield put({ type: actionTypes.SET_PAYMENT_HISTORY, payload: {} });\n  }\n}\n\nfunction* getPaymentDetails({ jobId }: any) {\n  const userType = storageService.getItem('userType');\n\n  setLoading(true);\n  const response: FetchResponse = yield NetworkOps.get(`${Urls.profile}${userType === 1 ? 'tradie' : 'builder'}/revenueDetail?jobId=${jobId}`);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({ type: actionTypes.SET_PAYMENT_DETAILS, payload: response.result });\n  } else {\n    setShowToast(true, response.message);\n    yield put({ type: actionTypes.SET_PAYMENT_DETAILS, payload: {} });\n  }\n}\n\nfunction* authWatcher() {\n  yield takeLatest(actionTypes.GET_TRADIE_PROFILE_DATA, callTradieProfileData);\n  yield takeLatest(actionTypes.ADD_BANK_DETAILS_START, addBankDetails);\n  yield takeLatest(actionTypes.UPDATE_BANK_DETAILS_START, updateBankDetails);\n  yield takeLatest(actionTypes.REMOVE_BANK_DETAILS_START, removeBankDetails);\n  yield takeLatest(actionTypes.GET_BANK_DETAILS_START, getBankDetails);\n  yield takeLatest(actionTypes.GET_TRADIE_PROFILE, getTradieProfile);\n  yield takeLatest(actionTypes.GET_PROFILE_BUILDER, getProfileBuilder);\n  yield takeLatest(actionTypes.GET_TRADIE_PROFILE_VIEW, getTradieProfileView);\n  yield takeLatest(actionTypes.GET_BUILDER_PROFILE_VIEW, getBuilderProfileView);\n  yield takeLatest(actionTypes.GET_TRADIE_BASIC_DETAILS, getTradieBasicDetails);\n  yield takeLatest(actionTypes.CLEAN_TRADIE_BASIC_DETAILS, cleanTradieBasicDetails);\n  yield takeLatest(actionTypes.CLEAN_TRADIE_PROFILE_VIEW_DATA, cleanTradieProfileViewData);\n  yield takeLatest(actionTypes.GET_SAVED_JOBS, getSavedJobList);\n  yield takeLatest(actionTypes.GET_SETTINGS, getSettings);\n  yield takeLatest(actionTypes.UPDATE_SETTINGS, updateSettings);\n  yield takeLatest(actionTypes.GET_PAYMENT_HISTORY, getPaymentHistory);\n  yield takeLatest(actionTypes.GET_PAYMENT_DETAILS, getPaymentDetails);\n}\n\nexport default authWatcher;\n"]},"metadata":{},"sourceType":"module"}