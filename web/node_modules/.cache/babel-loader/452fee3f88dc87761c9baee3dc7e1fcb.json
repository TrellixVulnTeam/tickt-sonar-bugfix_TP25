{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/changeEmailModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport NewEmail from './components/newEmail';\nimport VerifyNewEmail from './components/verifyNewEmail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeEmailModal = props => {\n  _s();\n\n  const [steps, setSteps] = useState(1);\n  const [stateData, setStateData] = useState({\n    newEmail: '',\n    currentPassword: ''\n  });\n\n  const updateSteps = (step, newData) => {\n    setSteps(step);\n\n    if (newData) {\n      setStateData(prevData => ({ ...prevData,\n        ...newData\n      }));\n    }\n  };\n\n  const backButtonHandler = () => {\n    let minStep = 1;\n\n    if (steps === 1) {\n      if (props.isChangeEmailModalClicked) {\n        props.changeEmailModalCloseHandler();\n        return;\n      }\n    }\n\n    setSteps(steps - minStep);\n  };\n\n  const closeModalHandler = () => {\n    setSteps(1);\n    props.changeEmailModalCloseHandler();\n  };\n\n  const renderPages = () => {\n    switch (steps) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(NewEmail, {\n          backButtonHandler: backButtonHandler,\n          closeModalHandler: closeModalHandler,\n          currentEmail: props.currentEmail,\n          updateSteps: updateSteps,\n          newEmail: stateData.newEmail,\n          currentPassword: stateData.currentPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(VerifyNewEmail, {\n          history: props.history,\n          backButtonHandler: backButtonHandler,\n          closeModalHandler: closeModalHandler,\n          currentEmail: props.currentEmail,\n          updateSteps: updateSteps,\n          newEmail: stateData.newEmail,\n          currentPassword: stateData.currentPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this);\n      // case 3:\n      // return <SuccessPage\n      // history={props.history}\n      // updateSteps={updateSteps}\n      // closeModalHandler={closeModalHandler}\n      // />\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    className: \"custom_modal\",\n    open: props.isChangeEmailModalClicked,\n    onClose: closeModalHandler,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_wh profile_modal\",\n      \"data-aos\": \"zoom-in\",\n      \"data-aos-delay\": \"30\",\n      \"data-aos-duration\": \"1000\",\n      children: renderPages()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangeEmailModal, \"wZiARtBe41ZqjkzZZ4wtAdgXgU4=\");\n\n_c = ChangeEmailModal;\nexport default ChangeEmailModal;\n{\n  /* <Modal\n                     className=\"custom_modal\"\n                     open={changeEmailModalClicked}\n                     onClose={this.changeEmailModalCloseHandler}\n                     aria-labelledby=\"simple-modal-title\"\n                     aria-describedby=\"simple-modal-description\"\n                 >\n                     <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                         <div className=\"heading form_field\">\n                             <div className=\"relate\">\n                                 <button className=\"back\" onClick={this.changeEmailModalCloseHandler}></button>\n                                 <div className=\"md_heading\">\n                                     <span className=\"sub_title\">Change email</span>\n                                     <span className=\"\">Enter your password too and we will send you message to verify new email</span>\n                                 </div>\n                             </div>\n                             <button className=\"close_btn\" onClick={this.changeEmailModalCloseHandler}>\n                                 <img src={cancel} alt=\"cancel\" />\n                             </button>\n                         </div>\n                         <div className=\"inner_wrap\">\n                             <div className=\"inner_wrappr\">\n                                 <div className=\"form_field\">\n                                     <label className=\"form_label\">New Email</label>\n                                     <div className=\"text_field\">\n                                         <input type=\"text\" placeholder=\"Enter New Email\" value={newEmail} name='newEmail' onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ newEmail: e.target.value })} />\n                                     </div>\n                                     {!!errors?.newEmail && <span className=\"error_msg\">{errors?.newEmail}</span>}\n                                 </div>\n                                 <div className=\"form_field\">\n                                     <label className=\"form_label\">Current Password</label>\n                                     <div className=\"text_field\">\n                                         <input type={showPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter Current Password\" name='password' value={password} onChange={this.passwordHandler} />\n                                         <span className=\"detect_icon\" onClick={() => this.setState((prevState: any) => ({ showPassword: !prevState.showPassword }))}>\n                                             <img src={showPassword ? eyeIconOpen : eyeIconClose} />\n                                         </span>\n                                     </div>\n                                     {!!errors?.currentPassword && <span className=\"error_msg\">{errors?.currentPassword}</span>}\n                                 </div>\n                             </div>\n                         </div>\n                         <div className=\"bottom_btn custom_btn\">\n                             <button className=\"fill_btn full_btn btn-effect\" onClick={this.changeEmailHandler}>Next</button>\n                         </div>\n                     </div >\n                 </Modal > */\n} // portfolio edit button removed ==> modal html\n\n{\n  /* <Modal\n                                     className=\"custom_modal\"\n                                     open={portfolioModalClicked}\n                                     onClose={() => this.setState({ portfolioModalClicked: false })}\n                                     aria-labelledby=\"simple-modal-title\"\n                                     aria-describedby=\"simple-modal-description\"\n                                 >\n                                     <div className=\"custom_wh profile_info\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                                         <div className=\"heading\">\n                                             <span className=\"sub_title\">Portfolio</span>\n                                             <button className=\"close_btn\" onClick={() => this.setState({ portfolioModalClicked: false })}>\n                                                 <img src={cancel} alt=\"cancel\" />\n                                             </button>\n                                         </div>\n                                         <div className=\"inner_wrap\">\n                                             <ul className=\"portfolio_wrappr\">\n                                                 <li className=\"media\">\n                                                     <figure className=\"portfolio_img\" >\n                                                         <img src={profilePlaceholder} alt=\"portfolio-images\" onClick={() => this.setState({ portfolioModalClicked: false, portfolioJobClicked: true })} />\n                                                         <span className=\"edit_icon\" onClick={() => this.setState({ portfolioModalClicked: false, portfolioJobClicked: true })} >\n                                                             <img src={editIconWhite} alt=\"edit\" />\n                                                         </span>\n                                                         <span className=\"xs_sub_title\">Dummy text</span>\n                                                     </figure>\n                                                 </li>\n                                                 <li className=\"media\">\n                                                     <figure className=\"portfolio_img\">\n                                                         <img src={profilePlaceholder} alt=\"portfolio-images\" />\n                                                         <span className=\"edit_icon\">\n                                                             <img src={editIconWhite} alt=\"edit\" />\n                                                         </span>\n                                                         <span className=\"xs_sub_title\">Dummy text</span>\n                                                     </figure>\n                                                 </li>\n                                             </ul>\n                                         </div>\n                                         <div className=\"bottom_btn custom_btn\">\n                                             <button className=\"fill_btn full_btn btn-effect\">Save changes</button>\n                                         </div>\n                                     </div>\n                                 </Modal> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeEmailModal\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/changeEmailModal.tsx"],"names":["React","useState","Modal","NewEmail","VerifyNewEmail","ChangeEmailModal","props","steps","setSteps","stateData","setStateData","newEmail","currentPassword","updateSteps","step","newData","prevData","backButtonHandler","minStep","isChangeEmailModalClicked","changeEmailModalCloseHandler","closeModalHandler","renderPages","currentEmail","history"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport NewEmail from './components/newEmail';\nimport VerifyNewEmail from './components/verifyNewEmail';\ninterface Propstype {\n    history: any,\n    isChangeEmailModalClicked: boolean,\n    currentEmail: string,\n    changeEmailModalCloseHandler: () => void,\n}\n\n\nconst ChangeEmailModal = (props: Propstype) => {\n    const [steps, setSteps] = useState(1);\n    const [stateData, setStateData] = useState({\n        newEmail: '',\n        currentPassword: ''\n    })\n\n    const updateSteps = (step: number, newData?: any) => {\n        setSteps(step);\n        if (newData) {\n            setStateData((prevData: any) => ({ ...prevData, ...newData }))\n        }\n    }\n\n    const backButtonHandler = () => {\n        let minStep = 1;\n        if (steps === 1) {\n            if (props.isChangeEmailModalClicked) {\n                props.changeEmailModalCloseHandler();\n                return;\n            }\n        }\n        setSteps(steps - minStep);\n    }\n\n    const closeModalHandler = () => {\n        setSteps(1);\n        props.changeEmailModalCloseHandler();\n    }\n\n    const renderPages = () => {\n        switch (steps) {\n            case 1:\n                return <NewEmail\n                    backButtonHandler={backButtonHandler}\n                    closeModalHandler={closeModalHandler}\n                    currentEmail={props.currentEmail}\n                    updateSteps={updateSteps}\n                    newEmail={stateData.newEmail}\n                    currentPassword={stateData.currentPassword}\n                />\n            case 2:\n                return <VerifyNewEmail\n                    history={props.history}\n                    backButtonHandler={backButtonHandler}\n                    closeModalHandler={closeModalHandler}\n                    currentEmail={props.currentEmail}\n                    updateSteps={updateSteps}\n                    newEmail={stateData.newEmail}\n                    currentPassword={stateData.currentPassword}\n                />\n            // case 3:\n            // return <SuccessPage\n            // history={props.history}\n            // updateSteps={updateSteps}\n            // closeModalHandler={closeModalHandler}\n            // />\n            default: return null\n        }\n    }\n\n\n\n    return (\n        <Modal\n            className=\"custom_modal\"\n            open={props.isChangeEmailModalClicked}\n            onClose={closeModalHandler}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n        >\n            <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                {renderPages()}\n            </div >\n        </Modal >\n    )\n}\n\nexport default ChangeEmailModal;\n\n\n\n\n\n\n{/* <Modal\n                    className=\"custom_modal\"\n                    open={changeEmailModalClicked}\n                    onClose={this.changeEmailModalCloseHandler}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                >\n                    <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                        <div className=\"heading form_field\">\n                            <div className=\"relate\">\n                                <button className=\"back\" onClick={this.changeEmailModalCloseHandler}></button>\n                                <div className=\"md_heading\">\n                                    <span className=\"sub_title\">Change email</span>\n                                    <span className=\"\">Enter your password too and we will send you message to verify new email</span>\n                                </div>\n                            </div>\n                            <button className=\"close_btn\" onClick={this.changeEmailModalCloseHandler}>\n                                <img src={cancel} alt=\"cancel\" />\n                            </button>\n                        </div>\n                        <div className=\"inner_wrap\">\n                            <div className=\"inner_wrappr\">\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">New Email</label>\n                                    <div className=\"text_field\">\n                                        <input type=\"text\" placeholder=\"Enter New Email\" value={newEmail} name='newEmail' onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ newEmail: e.target.value })} />\n                                    </div>\n                                    {!!errors?.newEmail && <span className=\"error_msg\">{errors?.newEmail}</span>}\n                                </div>\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">Current Password</label>\n                                    <div className=\"text_field\">\n                                        <input type={showPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter Current Password\" name='password' value={password} onChange={this.passwordHandler} />\n                                        <span className=\"detect_icon\" onClick={() => this.setState((prevState: any) => ({ showPassword: !prevState.showPassword }))}>\n                                            <img src={showPassword ? eyeIconOpen : eyeIconClose} />\n                                        </span>\n                                    </div>\n                                    {!!errors?.currentPassword && <span className=\"error_msg\">{errors?.currentPassword}</span>}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"bottom_btn custom_btn\">\n                            <button className=\"fill_btn full_btn btn-effect\" onClick={this.changeEmailHandler}>Next</button>\n                        </div>\n                    </div >\n                </Modal > */}\n\n\n// portfolio edit button removed ==> modal html\n{/* <Modal\n                                    className=\"custom_modal\"\n                                    open={portfolioModalClicked}\n                                    onClose={() => this.setState({ portfolioModalClicked: false })}\n                                    aria-labelledby=\"simple-modal-title\"\n                                    aria-describedby=\"simple-modal-description\"\n                                >\n                                    <div className=\"custom_wh profile_info\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                                        <div className=\"heading\">\n                                            <span className=\"sub_title\">Portfolio</span>\n                                            <button className=\"close_btn\" onClick={() => this.setState({ portfolioModalClicked: false })}>\n                                                <img src={cancel} alt=\"cancel\" />\n                                            </button>\n                                        </div>\n                                        <div className=\"inner_wrap\">\n                                            <ul className=\"portfolio_wrappr\">\n                                                <li className=\"media\">\n                                                    <figure className=\"portfolio_img\" >\n                                                        <img src={profilePlaceholder} alt=\"portfolio-images\" onClick={() => this.setState({ portfolioModalClicked: false, portfolioJobClicked: true })} />\n                                                        <span className=\"edit_icon\" onClick={() => this.setState({ portfolioModalClicked: false, portfolioJobClicked: true })} >\n                                                            <img src={editIconWhite} alt=\"edit\" />\n                                                        </span>\n                                                        <span className=\"xs_sub_title\">Dummy text</span>\n                                                    </figure>\n                                                </li>\n                                                <li className=\"media\">\n                                                    <figure className=\"portfolio_img\">\n                                                        <img src={profilePlaceholder} alt=\"portfolio-images\" />\n                                                        <span className=\"edit_icon\">\n                                                            <img src={editIconWhite} alt=\"edit\" />\n                                                        </span>\n                                                        <span className=\"xs_sub_title\">Dummy text</span>\n                                                    </figure>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        <div className=\"bottom_btn custom_btn\">\n                                            <button className=\"fill_btn full_btn btn-effect\">Save changes</button>\n                                        </div>\n                                    </div>\n                                </Modal> */}"]},"metadata":{},"sourceType":"module"}