{"ast":null,"code":"import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{NavLink}from'react-router-dom';import InfiniteScroll from'react-infinite-scroll-component';import dummy from'../../../assets/images/u_placeholder.jpg';import noDataFound from\"../../../assets/images/no-search-data.png\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";;var NewJobs=function NewJobs(_ref){var loading=_ref.loading,getNewJobList=_ref.getNewJobList,newJobList=_ref.newJobList,newJobsCount=_ref.newJobsCount,resetNewJobList=_ref.resetNewJobList;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobList=_useState2[0],setJobList=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),pageNo=_useState4[0],setPageNo=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hasMoreItems=_useState6[0],setHasMoreItems=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoad=_useState8[0],setIsLoad=_useState8[1];var totalJobsCount=newJobsCount;console.log(totalJobsCount,\"totalJobsCount\",jobList,\"jobList\",hasMoreItems,\"hasMoreItems\");useEffect(function(){callJobList();return function(){return resetNewJobList();};},[]);var callJobList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// if (newJobsCount && jobList.length >= totalJobsCount) {\n//   setHasMoreItems(false);\n//   return;\n// }\ngetNewJobList(pageNo);case 1:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref2.apply(this,arguments);};}();useEffect(function(){if((newJobList===null||newJobList===void 0?void 0:newJobList.length)||Array.isArray(newJobList)){var allJobs=[].concat(_toConsumableArray(jobList),_toConsumableArray(newJobList));console.log(jobList,\"jobList\",newJobList,\"props.newJobList\",allJobs,\"allJobs\");setJobList(allJobs);setIsLoad(false);setPageNo(pageNo+1);if(newJobList.length<10){setHasMoreItems(false);}resetNewJobList();}},[newJobList]);return/*#__PURE__*/_jsx(\"div\",{className:\"detail_col\",children:/*#__PURE__*/_jsxs(InfiniteScroll,{dataLength:jobList.length,next:callJobList,style:{overflowX:'hidden'},hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(_Fragment,{}),children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"New Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:!isLoad&&!loading&&jobList.length?jobList.map(function(_ref3){var jobId=_ref3.jobId,tradeId=_ref3.tradeId,specializationId=_ref3.specializationId,tradeSelectedUrl=_ref3.tradeSelectedUrl,jobName=_ref3.jobName,tradeName=_ref3.tradeName,jobDescription=_ref3.jobDescription,time=_ref3.time,amount=_ref3.amount,locationName=_ref3.locationName,durations=_ref3.durations,viewersCount=_ref3.viewersCount,questionsCount=_ref3.questionsCount,builderName=_ref3.builderName,builderImage=_ref3.builderImage;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(NavLink,{to:\"/job-details-page?jobId=\".concat(jobId,\"&redirect_from=jobs&jobAction=invite\"),className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img\",children:/*#__PURE__*/_jsx(\"img\",{src:builderImage||dummy,alt:\"\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:jobName}),/*#__PURE__*/_jsx(\"span\",{className:\"prof\",children:builderName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon clock\",children:time}),/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"icon location line-1\",children:locationName}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:durations})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para line-2\",children:jobDescription}),/*#__PURE__*/_jsxs(\"ul\",{className:\"count_wrap\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon view\",children:viewersCount}),/*#__PURE__*/_jsx(\"li\",{className:\"icon comment\",children:questionsCount})]})]})});}):!isLoad&&!loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noDataFound,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"No Data Found\"})]})})]})});};export default NewJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/newJobs.tsx"],"names":["useState","useEffect","NavLink","InfiniteScroll","dummy","noDataFound","NewJobs","loading","getNewJobList","newJobList","newJobsCount","resetNewJobList","jobList","setJobList","pageNo","setPageNo","hasMoreItems","setHasMoreItems","isLoad","setIsLoad","totalJobsCount","console","log","callJobList","length","Array","isArray","allJobs","overflowX","map","jobId","tradeId","specializationId","tradeSelectedUrl","jobName","tradeName","jobDescription","time","amount","locationName","durations","viewersCount","questionsCount","builderName","builderImage","e","target","onerror","src"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\ninterface Proptypes {\n  loading: boolean;\n  newJobsCount: number,\n  newJobList: any,\n  getNewJobList: (page: number) => void,\n  resetNewJobList: () => void;\n};\n\nconst NewJobs = ({ loading, getNewJobList, newJobList, newJobsCount, resetNewJobList }: Proptypes) => {\n  const [jobList, setJobList] = useState<Array<any>>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n  const [isLoad, setIsLoad] = useState(true);\n\n  let totalJobsCount: number = newJobsCount;\n  console.log(totalJobsCount, \"totalJobsCount\", jobList, \"jobList\", hasMoreItems, \"hasMoreItems\");\n\n  useEffect(() => {\n    callJobList();\n\n    return () => resetNewJobList();\n  }, []);\n\n  const callJobList = async () => {\n    // if (newJobsCount && jobList.length >= totalJobsCount) {\n    //   setHasMoreItems(false);\n    //   return;\n    // }\n    getNewJobList(pageNo);\n  }\n\n  useEffect(() => {\n    if (newJobList?.length || Array.isArray(newJobList)) {\n      const allJobs = [...jobList, ...newJobList];\n      console.log(jobList, \"jobList\", newJobList, \"props.newJobList\", allJobs, \"allJobs\");\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n      if (newJobList.length < 10) { setHasMoreItems(false); }\n      resetNewJobList();\n    }\n  }, [newJobList]);\n\n  return (\n    <div className=\"detail_col\">\n      <InfiniteScroll\n        dataLength={jobList.length}\n        next={callJobList}\n        style={{ overflowX: 'hidden' }}\n        hasMore={hasMoreItems}\n        loader={<></>}\n      >\n        <span className=\"sub_title\">New Jobs</span>\n        <div className=\"flex_row tradies_row\">\n          {!isLoad && !loading && jobList.length ? jobList.map(({ jobId, tradeId, specializationId, tradeSelectedUrl, jobName, tradeName, jobDescription, time, amount, locationName, durations, viewersCount, questionsCount, builderName, builderImage }) => (\n            <div className=\"flex_col_sm_6\">\n              <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                <NavLink to={`/job-details-page?jobId=${jobId}&redirect_from=jobs&jobAction=invite`} className=\"more_detail circle\"></NavLink>\n                <div className=\"user_wrap\">\n                  <figure className=\"u_img\">\n                    <img\n                      src={builderImage || dummy}\n                      alt=\"\"\n                      onError={(e: any) => {\n                        if (e?.target?.onerror) {\n                          e.target.onerror = null;\n                        }\n                        if (e?.target?.src) {\n                          e.target.src = dummy;\n                        }\n                      }}\n                    />\n                  </figure>\n                  <div className=\"details\">\n                    <span className=\"name\">{jobName}</span>\n                    <span className=\"prof\">{builderName}</span>\n                  </div>\n                </div>\n                <div className=\"job_info\">\n                  <ul>\n                    <li className=\"icon clock\">{time}</li>\n                    <li className=\"icon dollar\">{amount}</li>\n                    <li className=\"icon location line-1\">{locationName}</li>\n                    <li className=\"icon calendar\">{durations}</li>\n                  </ul>\n                </div>\n                <p className=\"commn_para line-2\">\n                  {jobDescription}\n                </p>\n                <ul className=\"count_wrap\">\n                  <li className=\"icon view\">{viewersCount}</li>\n                  <li className=\"icon comment\">{questionsCount}</li>\n                </ul>\n              </div>\n            </div>\n          )) : !isLoad && !loading && (\n            <div className=\"no_record  m-t-vh\">\n              <figure className=\"no_img\">\n                <img src={noDataFound} alt=\"data not found\" />\n              </figure>\n              <span>No Data Found</span>\n            </div>\n          )}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default NewJobs;\n"]},"metadata":{},"sourceType":"module"}