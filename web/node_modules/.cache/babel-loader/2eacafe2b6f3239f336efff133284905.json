{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{callForgotPassword}from'../../../redux/auth/actions';import Constants from'../../../utils/constants';import regex from'../../../utils/regex';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResetPassword=function ResetPassword(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var changeHandler=function changeHandler(e){var inputVal=e.target.value.replaceAll(' ','');setEmail(inputVal);};var validateForm=function validateForm(){var newErrors={};if(!email){newErrors.email=Constants.errorStrings.emailEmpty;}else{var nameRegex=new RegExp(regex.email);if(!nameRegex.test(email.replaceAll(' ',''))){newErrors.email=Constants.errorStrings.emailErr;}}setErrors(newErrors);return!Object.keys(newErrors).length;};var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _data,res,email_;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!validateForm()){_context.next=7;break;}_data={email:email.replaceAll(' ','')};// const checkIfExist = await checkEmailId(data.email, true);\n// if (checkIfExist?.success) {\n_context.next=5;return callForgotPassword(_data);case 5:res=_context.sent;if(res.success){email_=email.replaceAll(' ','');props.updateSteps(props.step+1,{email:email_});}// } else {\n//     setShowToast(true, 'Email not exist.')\n// }\ncase 7:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"form_wrapper\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{className:\"detect_input\",name:\"email\",placeholder:\"Enter Email\",value:email,onChange:changeHandler})}),!!errors.email&&/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.email})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"show_label\",children:\"Enter the email associated with your account and we will send a code to reset your password.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn btn-effect\",children:\"Next\"})})]})});};export default ResetPassword;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/resetPassword.tsx"],"names":["React","useState","callForgotPassword","Constants","regex","ResetPassword","props","errors","setErrors","email","setEmail","changeHandler","e","inputVal","target","value","replaceAll","validateForm","newErrors","errorStrings","emailEmpty","nameRegex","RegExp","test","emailErr","Object","keys","length","onSubmit","preventDefault","data","res","success","email_","updateSteps","step"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { callForgotPassword } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex'\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void\n    step: number\n    history?: any\n    emailAddress?: any,\n}\n\nconst ResetPassword = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [email, setEmail] = useState<any>('')\n\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputVal = e.target.value.replaceAll(' ', '');\n        setEmail(inputVal)\n    }\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!email) {\n            newErrors.email = Constants.errorStrings.emailEmpty;\n        } else {\n            const nameRegex = new RegExp(regex.email);\n            if (!nameRegex.test(email.replaceAll(' ', ''))) {\n                newErrors.email = Constants.errorStrings.emailErr\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const data: any = {\n                email: email.replaceAll(' ', '')\n            }\n            // const checkIfExist = await checkEmailId(data.email, true);\n            // if (checkIfExist?.success) {\n                const res: any = await callForgotPassword(data)\n                if (res.success) {\n                    const email_ = email.replaceAll(' ', '');\n                    props.updateSteps(props.step + 1, { email: email_ })\n                }\n            // } else {\n            //     setShowToast(true, 'Email not exist.')\n            // }\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Email</label>\n                    <div className=\"text_field\">\n                        <input\n                            className=\"detect_input\"\n                            name=\"email\"\n                            placeholder=\"Enter Email\"\n                            value={email}\n                            onChange={changeHandler}\n                        />\n                        {/* <span className=\"detect_icon_ltr\">+61</span> */}\n                    </div>\n                    {!!errors.email && <span className=\"error_msg\">{errors.email}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <span className=\"show_label\">\n                        Enter the email associated with your account and we will send a code to reset your password.\n                    </span>\n                </div>\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nexport default ResetPassword\n"]},"metadata":{},"sourceType":"module"}