{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/chooseTheJob/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport milestonesPlaceholder from '../../assets/images/Job milestones-preview.png';\nimport { renderTimeWithCustomFormat } from '../../utils/common';\nimport { ChooseJob, InviteForJob, invitedJobIds, CancelInviteForJob } from '../../redux/jobs/actions';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseTheJob = props => {\n  _s();\n\n  var _props$location3;\n\n  const [editItem, setEditItems] = useState({});\n  const [stateData, setStateData] = useState([]);\n\n  const checkOnClick = (e, index) => {\n    if (editItem[index]) {\n      setEditItems({});\n      return;\n    }\n\n    setEditItems(() => ({\n      [index]: e.target.checked\n    }));\n  };\n\n  useEffect(() => {\n    preFetch();\n  }, []);\n\n  const preFetch = async () => {\n    var _props$location;\n\n    const {\n      tradieId,\n      cancelJob\n    } = props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.state;\n\n    if (cancelJob) {\n      let response = await invitedJobIds({\n        tradieId,\n        page: 1\n      });\n\n      if (response === null || response === void 0 ? void 0 : response.success) {\n        setStateData(response.data);\n      }\n    } else {\n      let response = await ChooseJob({\n        page: 1\n      });\n\n      if (response === null || response === void 0 ? void 0 : response.success) {\n        setStateData(response.data);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log('Here!=====>', {\n      editItem\n    });\n  }, [editItem]);\n\n  const handleSubmit = async () => {\n    var _props$location2;\n\n    const {\n      tradieId,\n      path,\n      cancelJob\n    } = props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.state;\n    let key = '';\n\n    if (Object.keys(editItem).length) {\n      key = Object.keys(editItem)[0];\n    }\n\n    let data = {\n      tradieId: tradieId,\n      jobId: key\n    };\n\n    if (!cancelJob) {\n      let response = await InviteForJob(data);\n\n      if (response.success) {\n        props.history.push('/choose-the-job-success');\n      }\n    } else {\n      let filter = stateData.find(item => item.jobId === key);\n\n      if (filter === null || filter === void 0 ? void 0 : filter.invitationId) {\n        data['invitationId'] = filter === null || filter === void 0 ? void 0 : filter.invitationId;\n        let response = await CancelInviteForJob(data);\n\n        if (response.success) {\n          props.history.push(`/tradie-info${path}`);\n        }\n      }\n    }\n  };\n\n  const {\n    path,\n    cancelJob\n  } = props === null || props === void 0 ? void 0 : (_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : _props$location3.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relate\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"back\",\n                    onClick: () => {\n                      props.history.push(`/tradie-info${path}`);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"title\",\n                    children: 'Choose the job'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_5\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: `milestones`,\n              children: [(stateData === null || stateData === void 0 ? void 0 : stateData.length) > 0 ? stateData.map((item, index) => {\n                var _item$jobDescription;\n\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"checkbox_wrap agree_check\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      checked: editItem[item === null || item === void 0 ? void 0 : item.jobId] == true ? true : false,\n                      onChange: e => {\n                        checkOnClick(e, item === null || item === void 0 ? void 0 : item.jobId);\n                      },\n                      className: \"filter-type filled-in\",\n                      type: \"checkbox\",\n                      id: `milestone${index}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `milestone${index}`,\n                      children: `${item === null || item === void 0 ? void 0 : item.tradeName}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: item === null || item === void 0 ? void 0 : item.jobName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: renderTimeWithCustomFormat(item === null || item === void 0 ? void 0 : item.fromDate, item === null || item === void 0 ? void 0 : item.toDate, '', ['DD MMM', 'DD MMM YY'])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: `${item === null || item === void 0 ? void 0 : item.jobDescription.substring(0, 120)} ${(item === null || item === void 0 ? void 0 : (_item$jobDescription = item.jobDescription) === null || _item$jobDescription === void 0 ? void 0 : _item$jobDescription.length) > 120 ? '...' : ''}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 121,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 41\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"placeholder_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: milestonesPlaceholder,\n                  alt: \"milestones-placeholder\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: '50px'\n                },\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleSubmit,\n                  className: `fill_btn full_btn btn-effect ${!Object.keys(editItem).length ? 'disable_btn' : ''}`,\n                  children: `${cancelJob ? 'Cancel' : ''} Invite `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseTheJob, \"bWh5QbGrjXkt0tjcqKGmuojp14Q=\");\n\n_c = ChooseTheJob;\nexport default _c2 = withRouter(ChooseTheJob);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChooseTheJob\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chooseTheJob/index.tsx"],"names":["React","useState","useEffect","milestonesPlaceholder","renderTimeWithCustomFormat","ChooseJob","InviteForJob","invitedJobIds","CancelInviteForJob","withRouter","ChooseTheJob","props","editItem","setEditItems","stateData","setStateData","checkOnClick","e","index","target","checked","preFetch","tradieId","cancelJob","location","state","response","page","success","data","console","log","handleSubmit","path","key","Object","keys","length","jobId","history","push","filter","find","item","invitationId","map","tradeName","jobName","fromDate","toDate","jobDescription","substring","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport milestonesPlaceholder from '../../assets/images/Job milestones-preview.png';\nimport { renderTimeWithCustomFormat } from '../../utils/common';\nimport { ChooseJob, InviteForJob, invitedJobIds, CancelInviteForJob } from '../../redux/jobs/actions';\nimport { withRouter } from 'react-router-dom';\n\nconst ChooseTheJob = (props: any) => {\n    const [editItem, setEditItems] = useState<{ [index: string]: any }>({});\n    const [stateData, setStateData] = useState([]);\n\n    const checkOnClick = (e: any, index: any) => {\n        if(editItem[index]){\n            setEditItems({});\n            return\n        }\n        setEditItems(() => ({ [index]: e.target.checked }));\n    }\n\n    useEffect(() => {\n        preFetch();\n    }, [])\n\n    const preFetch = async () => {\n        const { tradieId, cancelJob } = props?.location?.state;\n        if (cancelJob) {\n            let response = await invitedJobIds({ tradieId, page: 1 });\n            if (response?.success) {\n                setStateData(response.data);\n            }\n        } else {\n            let response = await ChooseJob({ page: 1 });\n            if (response?.success) {\n                setStateData(response.data);\n            }\n        }\n    }\n\n    useEffect(() => {\n        console.log('Here!=====>', { editItem });\n    }, [editItem]);\n\n    const handleSubmit = async () => {\n        const { tradieId, path, cancelJob } = props?.location?.state;\n        let key: any = '';\n        if (Object.keys(editItem).length) {\n            key = Object.keys(editItem)[0];\n        }\n\n        let data: any = { tradieId: tradieId, jobId: key }\n        if (!cancelJob) {\n            let response = await InviteForJob(data);\n            if (response.success) {\n                props.history.push('/choose-the-job-success');\n            }\n        } else {\n            let filter: any = stateData.find((item: any) => item.jobId === key);\n            if (filter?.invitationId) {\n                data['invitationId'] = filter?.invitationId;\n                let response = await CancelInviteForJob(data);\n                if (response.success) {\n                    props.history.push(`/tradie-info${path}`);\n                }\n            }\n        }\n    }\n\n    const {  path, cancelJob } = props?.location?.state;\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n                    <div className=\"form_field\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n\n                                <React.Fragment>\n                                    <div className=\"relate\">\n                                        <button\n                                            className=\"back\"\n                                            onClick={() => {\n                                                props.history.push(`/tradie-info${path}`)\n                                            }}\n                                        >\n                                        </button>\n                                        <span className=\"title\">\n                                            {'Choose the job'}\n                                        </span>\n                                    </div>\n                                </React.Fragment>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"flex_row\">\n                        <div className=\"flex_col_sm_5\">\n                            <ul className={`milestones`}>\n                                {stateData?.length > 0 ?\n                                    stateData.map((item: any, index: any) => (\n                                        <li key={index}>\n                                            <div className=\"checkbox_wrap agree_check\">\n                                                <input\n                                                    checked={editItem[item?.jobId] == true ? true : false}\n                                                    onChange={(e: any) => { checkOnClick(e, item?.jobId) }}\n                                                    className=\"filter-type filled-in\"\n                                                    type=\"checkbox\"\n                                                    id={`milestone${index}`} />\n                                                <label\n                                                    htmlFor={`milestone${index}`}>\n                                                    {`${item?.tradeName}`}\n                                                </label>\n                                                <div className=\"info\">\n                                                    <span>{item?.jobName}</span>\n                                                    <span>\n                                                        {renderTimeWithCustomFormat(\n                                                            item?.fromDate,\n                                                            item?.toDate,\n                                                            '',\n                                                            ['DD MMM', 'DD MMM YY']\n                                                        )}\n                                                    </span>\n                                                    <span>\n                                                        {`${item?.jobDescription.substring(0, 120)} ${item?.jobDescription?.length > 120 ? '...' : ''}`}</span>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    )) : (\n                                        <figure className=\"placeholder_img\">\n                                            <img\n                                                src={milestonesPlaceholder}\n                                                alt=\"milestones-placeholder\"\n                                            />\n                                        </figure>\n                                    )}\n\n\n                                <div style={{ marginTop: '50px' }} className=\"form_field\">\n                                    <button\n                                        onClick={handleSubmit}\n                                        className={`fill_btn full_btn btn-effect ${!Object.keys(editItem).length ? 'disable_btn' : ''}`}>\n                                        {`${cancelJob ? 'Cancel' : ''} Invite `}\n                                    </button>\n                                </div>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ChooseTheJob);\n"]},"metadata":{},"sourceType":"module"}