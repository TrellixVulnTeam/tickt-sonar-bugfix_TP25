{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDetailsPageBuilder/jobDetailsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Constants from '../../utils/constants';\nimport { getHomeJobDetails, getHomeSaveJob, jobDetailsBuilder, postHomeApplyJob } from '../../redux/homeSearch/actions';\nimport { // postAskQuestion,\n// deleteQuestion,\n// updateQuestion,\ngetQuestionsList, answerQuestion, updateAnswer, deleteAnswer, handleCancelReply } from '../../redux/jobs/actions';\nimport Modal from '@material-ui/core/Modal';\nimport cancel from \"../../assets/images/ic-cancel.png\";\nimport dummy from '../../assets/images/u_placeholder.jpg';\nimport jobDummyImage from '../../assets/images/ic-placeholder-detail.png';\nimport question from '../../assets/images/ic-question.png';\nimport leftIcon from '../../assets/images/ic-back-arrow-line.png';\nimport rightIcon from '../../assets/images/ic-next-arrow-line.png';\nimport approved from '../../assets/images/approved.png';\nimport waiting from '../../assets/images/exclamation.png';\nimport { renderTime } from '../../utils/common';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport editIconBlue from '../../assets/images/ic-edit-blue.png';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { deleteOpenJob } from '../../redux/jobs/actions'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react';\nimport { JobCancelReasons } from '../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = {\n  items: 1,\n  nav: true,\n  navText: [`<div class='nav-btn prev-slide'> <img src=\"${leftIcon}\"> </div>`, `<div class='nav-btn next-slide'> <img src=\"${rightIcon}\"> </div>`],\n  rewind: true,\n  autoplay: false,\n  slideBy: 1,\n  dots: true,\n  dotsEach: true,\n  dotData: true,\n  responsive: {\n    0: {\n      items: 1\n    },\n    600: {\n      items: 1\n    },\n    1000: {\n      items: 1\n    }\n  }\n};\nconst defaultQuestionValues = {\n  askQuestionsClicked: false,\n  showAllQuestionsClicked: false,\n  submitQuestionsClicked: false,\n  deleteQuestionsClicked: false,\n  updateQuestionsClicked: false,\n  questionsClickedType: '',\n  confirmationClicked: false,\n  showAnswerButton: true,\n  questionId: '',\n  answerId: '',\n  questionData: '',\n  answerShownHideList: [],\n  showHideAnswer: {},\n  questionIndex: null\n};\n\nconst JobDetailsPage = props => {\n  _s();\n\n  var _props$location3, _jobDetailsData$photo, _jobDetailsData$chang, _jobDetailsData$jobMi, _jobDetailsData$jobTy, _jobDetailsData$jobTy2, _jobDetailsData$speci, _jobDetailsData$poste2, _jobDetailsData$poste3, _jobDetailsData$poste6, _jobDetailsData$poste7, _jobDetailsData$poste8, _jobDetailsData$poste9, _jobDetailsData$poste10;\n\n  const [errors, setErrors] = useState({});\n  const [jobDetailsData, setJobDetailsData] = useState('');\n  const [questionList, setQuestionList] = useState([]);\n  const [questionListPageNo, setQuestionListPageNo] = useState(1);\n  const [questionsData, setQuestionsData] = useState(defaultQuestionValues);\n  const [toggler, setToggler] = useState(false);\n  const [showEditBtn, setEditBtn] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [tradieId, setTradieId] = useState('');\n  const [toggleDelete, setToggleDelete] = useState(false);\n  const [jobAcceptModal, setJobAcceptModal] = useState(false);\n  const [jobRejectModal, setJobRejectModal] = useState(false);\n  const [pendingRequestClicked, setPendingRequestClicked] = useState(false);\n  const [jobData, setJobData] = useState({});\n  const [replyText, setReplyText] = useState('');\n  useEffect(() => {\n    (async () => {\n      await preFetch();\n    })();\n  }, []);\n\n  const preFetch = async () => {\n    var _props$history, _props$history$locati;\n\n    let location_search = (props === null || props === void 0 ? void 0 : (_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.search).substring(1); //window.atob()\n\n    const params = new URLSearchParams(location_search);\n\n    if (params.get('edit')) {\n      setEditBtn(prev => true);\n    }\n\n    if (params.get('jobId') && params.get('tradeId') && params.get('specializationId')) {\n      const res1 = await getHomeJobDetails({\n        jobId: params.get('jobId'),\n        tradeId: params.get('tradeId'),\n        specializationId: params.get('specializationId')\n      });\n\n      if (res1.success) {\n        setJobDetailsData(res1.data);\n      }\n    } else {\n      if (params.get('jobId')) {\n        let res = await jobDetailsBuilder({\n          jobId: params.get('jobId')\n        });\n        console.log({\n          res\n        }, '---->');\n\n        if (res.success) {\n          setJobDetailsData(res.data);\n        }\n      }\n    }\n\n    if (params.get('tradieId')) {\n      const id = params.get('tradieId');\n      setTradieId(id ? id : '');\n    }\n\n    fetchQuestionsList();\n  };\n\n  const fetchQuestionsList = async isTrue => {\n    var _props$location;\n\n    let location_search = (props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search).substring(1); //window.atob()\n\n    const params = new URLSearchParams(location_search);\n    const questionData = {\n      jobId: params.get('jobId'),\n      page: 1\n    };\n    const res2 = await getQuestionsList(questionData);\n\n    if (res2.success) {\n      var _res2$data;\n\n      if (params.get('openQList') === \"true\") {\n        setQuestionsData(prevData => ({ ...prevData,\n          showAllQuestionsClicked: true\n        }));\n      }\n\n      console.log({\n        res2\n      }, 'question-list');\n      let data_elements = (res2 === null || res2 === void 0 ? void 0 : (_res2$data = res2.data) === null || _res2$data === void 0 ? void 0 : _res2$data.list) || (res2 === null || res2 === void 0 ? void 0 : res2.data);\n      setQuestionList(data_elements);\n    }\n\n    if (isTrue) {\n      setQuestionsData(prevData => ({ ...prevData,\n        submitQuestionsClicked: false,\n        askQuestionsClicked: false,\n        showAllQuestionsClicked: true,\n        confirmationClicked: false,\n        questionsClickedType: '',\n        deleteQuestionsClicked: false,\n        updateQuestionsClicked: false,\n        questionId: '',\n        answerId: '',\n        questionData: '',\n        showQuestionAnswer: false,\n        questionIndex: null\n      }));\n    }\n  };\n\n  const applyJobClicked = async () => {\n    var _jobDetailsData$poste;\n\n    const data = {\n      jobId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.jobId,\n      builderId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste = jobDetailsData.postedBy) === null || _jobDetailsData$poste === void 0 ? void 0 : _jobDetailsData$poste.builderId,\n      tradeId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.tradeId,\n      specializationId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.specializationId\n    };\n    const res = await postHomeApplyJob(data);\n\n    if (res.success) {\n      props.history.push('job-applied-successfully');\n    }\n  };\n\n  const saveJobClicked = () => {\n    const data = {\n      jobId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.jobId,\n      tradeId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.tradeId,\n      specializationId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.specializationId,\n      isSave: !(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.isSaved)\n    };\n    getHomeSaveJob(data);\n    setJobDetailsData(prevData => ({ ...prevData,\n      isSaved: !prevData.isSaved\n    }));\n  };\n\n  const modalCloseHandler = modalType => {\n    setQuestionsData(prevData => ({ ...prevData,\n      [modalType]: false,\n      deleteQuestionsClicked: false,\n      answerShownHideList: []\n    }));\n    setErrors({});\n  };\n\n  const loadMoreQuestionHandler = async () => {\n    var _props$location2;\n\n    // will handle the pagination later\n    let location_search = (props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.search).substring(1); // window.atob()\n\n    const params = new URLSearchParams(location_search);\n    const data = {\n      jobId: params.get('jobId'),\n      page: questionListPageNo + 1\n    };\n    const res = await getQuestionsList(data);\n\n    if (res.success) {\n      var _res$data;\n\n      console.log({\n        res\n      }, 'question-list');\n      let data_elements = (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.list) || (res === null || res === void 0 ? void 0 : res.data);\n      setQuestionList(prevData => [...prevData, ...data_elements]);\n      setQuestionListPageNo(data.page);\n    }\n  };\n\n  const validateForm = type => {\n    var _questionsData$questi;\n\n    if (type == 'deleteQuestion') return true;\n    const newErrors = {};\n\n    if (!((_questionsData$questi = questionsData.questionData.trim()) === null || _questionsData$questi === void 0 ? void 0 : _questionsData$questi.length)) {\n      newErrors.questionData = Constants.errorStrings.askQuestion;\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const submitQuestionHandler = async type => {\n    console.log('Here!------->', {\n      questionsData\n    });\n\n    if (['askQuestion', 'deleteQuestion', 'updateQuestion'].includes(type)) {\n      if (!validateForm(type)) {\n        return;\n      }\n\n      var response;\n      var data;\n\n      if (type === 'askQuestion') {\n        data = {\n          jobId: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.jobId,\n          answer: questionsData.questionData,\n          questionId: questionsData.questionId\n        };\n        response = await answerQuestion(data); // answer question\n      } else if (type === 'deleteQuestion') {\n        data = {\n          questionId: questionsData.questionId,\n          answerId: questionsData.answerId\n        };\n        response = await deleteAnswer(data); // delete answer\n      } else if (type === 'updateQuestion') {\n        data = {\n          questionId: questionsData.questionId,\n          answerId: questionsData.answerId,\n          answer: questionsData.questionData\n        };\n        response = await updateAnswer(data); // update answer\n      }\n\n      if (response.success) {\n        fetchQuestionsList(true);\n\n        if (type === 'deleteQuestion') {\n          questionHandler('showAnswerClicked', questionsData.questionId);\n        }\n      }\n    }\n  };\n\n  const questionHandler = (type, questionId, question, questionIndex, answerId) => {\n    if (type == 'submitAskQuestion' && validateForm('askQuestion')) {\n      setQuestionsData(prevData => ({ ...prevData,\n        submitQuestionsClicked: true,\n        confirmationClicked: true\n      }));\n    } else if (type == 'askQuestion') {\n      setQuestionsData(prevData => ({ ...prevData,\n        questionId: questionId,\n        askQuestionsClicked: true,\n        showAllQuestionsClicked: false,\n        questionsClickedType: type,\n        answerId: ''\n      }));\n    } else if (type == 'deleteQuestion') {\n      setQuestionsData(prevData => ({ ...prevData,\n        confirmationClicked: true,\n        deleteQuestionsClicked: true,\n        questionId: questionId,\n        questionsClickedType: type,\n        questionIndex: questionIndex,\n        answerId: answerId\n      }));\n    } else if (type == 'updateQuestion') {\n      setQuestionsData(prevData => ({ ...prevData,\n        askQuestionsClicked: true,\n        updateQuestionsClicked: true,\n        questionId: questionId,\n        answerId: answerId,\n        questionsClickedType: type,\n        showAllQuestionsClicked: false,\n        questionData: question\n      }));\n    } else if (type == 'questionCancelBtnClicked') {\n      setQuestionsData(prevData => ({ ...prevData,\n        askQuestionsClicked: false,\n        updateQuestionsClicked: false,\n        deleteQuestionsClicked: false,\n        showAllQuestionsClicked: true,\n        questionData: '',\n        questionsClickedType: '',\n        questionId: '',\n        answerId: ''\n      }));\n      setErrors({});\n    } else if (type == 'hideAnswerClicked') {\n      // const newData = [...questionsData.answerShownHideList].filter(id => id !== questionId);\n      // setQuestionsData((prevData: any) => ({ ...prevData, answerShownHideList: newData }));\n      let item_ = {};\n      let question_id = questionId;\n      item_ = questionsData === null || questionsData === void 0 ? void 0 : questionsData.showHideAnswer;\n\n      if (item_[question_id] === undefined) {\n        item_[question_id] = true;\n      } else {\n        item_[question_id] = !item_[question_id];\n      }\n\n      setQuestionsData(prevData => ({ ...prevData,\n        showHideAnswer: item_\n      }));\n    } else if (type == 'showAnswerClicked') {\n      // const newData = [...questionsData.answerShownHideList];\n      // newData.push(questionId);\n      // setQuestionsData((prevData: any) => ({ ...prevData, answerShownHideList: newData }));\n      let item_ = {};\n      let question_id = questionId;\n      item_ = questionsData === null || questionsData === void 0 ? void 0 : questionsData.showHideAnswer;\n\n      if (item_[question_id] === undefined) {\n        item_[question_id] = !item_[question_id];\n      } else {\n        item_[question_id] = !item_[question_id];\n      }\n\n      setQuestionsData(prevData => ({ ...prevData,\n        showHideAnswer: item_\n      }));\n    }\n  };\n\n  const handleChange = (e, type) => {\n    if (e.target.value.trim().length <= 250) {\n      setQuestionsData(prevData => ({ ...prevData,\n        [type]: e.target.value\n      }));\n    }\n  };\n\n  const renderBuilderAvatar = item => {\n    let postedBy = jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.postedBy; // console.log({ jobDetailsData })\n\n    if (item === \"image\") {\n      if (postedBy && Array.isArray(postedBy) && postedBy[0] && postedBy[0].builderImage) {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: postedBy[0].builderImage || dummy,\n          alt: \"traide-img\",\n          onError: e => {\n            var _e$target, _e$target2;\n\n            if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n              e.target.onerror = null;\n            }\n\n            if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n              e.target.src = dummy;\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dummy,\n          alt: \"traide-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this);\n      }\n    }\n\n    if (item === \"name\") {\n      if (postedBy && Array.isArray(postedBy) && postedBy[0] && postedBy[0].firstName) {\n        return postedBy[0].firstName;\n      }\n    }\n  };\n\n  let paramStatus = '';\n  let paramJobId = '';\n  let activeType = '';\n  let isPastJob = false;\n  let hideDispute = null;\n\n  if ((_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : _props$location3.search) {\n    var _props$location4;\n\n    let location_search = (props === null || props === void 0 ? void 0 : (_props$location4 = props.location) === null || _props$location4 === void 0 ? void 0 : _props$location4.search).substring(1); //window.atob()\n\n    const params = new URLSearchParams(location_search);\n\n    if (params.get('status')) {\n      paramStatus = params.get('status');\n    }\n\n    if (params.get('jobId')) {\n      paramJobId = params.get('jobId');\n    }\n\n    if (params.get('job')) {\n      isPastJob = true;\n    }\n\n    if (params.get('activeType')) {\n      activeType = params.get('activeType');\n    }\n\n    if (params.get('hide_dipute')) {\n      hideDispute = params.get('hide_dipute');\n    }\n  }\n\n  console.log({\n    activeType,\n    hideDispute\n  });\n  console.log({\n    paramStatus\n  });\n\n  const renderByStatus = ({\n    status\n  }) => {\n    if (status) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [status === \"APPROVED\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: approved,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 47\n        }, this), status === \"NEEDS APPROVAL\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: waiting,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 53\n        }, this), status]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.status) === \"APPROVED\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: approved,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 63\n        }, this), (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.status) === \"NEEDS APPROVAL\" && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: waiting,\n          alt: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 69\n        }, this), jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.status]\n      }, void 0, true);\n    }\n  };\n\n  const handleCancelJob = async (type, job_detail) => {\n    if (type == 1) {\n      setJobAcceptModal(true);\n      setJobRejectModal(false);\n    } else {\n      setJobAcceptModal(false);\n      setJobRejectModal(true);\n    }\n\n    setJobData({\n      \"jobId\": job_detail === null || job_detail === void 0 ? void 0 : job_detail.jobId,\n      \"status\": type,\n      \"note\": type === 1 ? \"this is accepted\" : \"this is rejected\"\n    });\n  };\n\n  const operationCancelJob = async () => {\n    let data = jobData;\n\n    if (data === null || data === void 0 ? void 0 : data.status) {\n      data['note'] = replyText;\n    } // if (!data?.note) {\n    //     delete data?.note;\n    // }\n\n\n    let response = await handleCancelReply(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      if ((data === null || data === void 0 ? void 0 : data.status) === 1) {\n        props.history.push('/request-monitored/ccr');\n      } else {\n        props.history.push('/request-monitored/cc/bb');\n      } // await preFetch();\n\n    }\n  };\n\n  const renderFilteredItems = itemsMedia => {\n    let sources = [];\n    let types = [];\n\n    if (itemsMedia && Array.isArray(itemsMedia) && itemsMedia.length) {\n      itemsMedia.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n          sources.push(item.link);\n          types.push('video');\n        }\n\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push('image');\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  let itemsMedia = [];\n\n  if (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$photo = jobDetailsData.photos) === null || _jobDetailsData$photo === void 0 ? void 0 : _jobDetailsData$photo.length) {\n    var _jobDetailsData$photo2;\n\n    itemsMedia = jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$photo2 = jobDetailsData.photos) === null || _jobDetailsData$photo2 === void 0 ? void 0 : _jobDetailsData$photo2.filter(itemP => itemP.mediaType !== 3 && itemP.mediaType !== 4);\n  }\n\n  const {\n    sources,\n    types\n  } = renderFilteredItems(itemsMedia);\n\n  const deleteJob = async jobId => {\n    await deleteOpenJob({\n      jobId\n    });\n    props.history.push(`/jobs?active=${activeType}`);\n  }; // let CASE_1 = jobDetailsData?.isCancelJobRequest;\n  // let CASE_2 = paramStatus === 'CANCELLED' &&\n  //     jobDetailsData?.reasonForCancelJobRequest > 0;\n  // let CASE_3 = paramStatus === 'Pending dispute' &&\n  //     jobDetailsData?.changeRequestDeclineReason?.length > 0;\n\n\n  let CASE_1 = jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.isCancelJobRequest;\n  let CASE_2 = (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.reasonForCancelJobRequest) ? jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.reasonForCancelJobRequest : false;\n  let CASE_3 = (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$chang = jobDetailsData.changeRequestDeclineReason) === null || _jobDetailsData$chang === void 0 ? void 0 : _jobDetailsData$chang.length) ? jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.changeRequestDeclineReason : false;\n  console.log({\n    paramStatus\n  }, 'paramStatus'); // line no 550. \"open\"  is excluded from array.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [['active'].includes(activeType) ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot_menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: editIconBlue,\n            alt: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit_menu\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: activeType == \"active\" && /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    props.history.push(`/jobs?active=${activeType}&jobId=${paramJobId}&editMilestone=true`);\n                  },\n                  className: \"icon edit_line\",\n                  children: 'Edit Milestone'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 45\n                }, this), hideDispute === \"false\" && /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    props.history.push(`/jobs?active=${activeType}&jobId=${paramJobId}&lodgeDispute=true`);\n                  },\n                  className: \"icon lodge\",\n                  children: 'Lodge dispute'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    props.history.push(`/jobs?active=${activeType}&jobId=${paramJobId}&cancelJob=true`);\n                  },\n                  className: \"icon delete\",\n                  children: 'Cancel job'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(Dialog, {\n          open: toggleDelete,\n          onClose: () => {\n            setToggleDelete(prev => !prev);\n          },\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"alert-dialog-title\",\n            children: \"Are you sure you want to delete the job ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                deleteJob(paramJobId);\n              },\n              color: \"primary\",\n              autoFocus: true,\n              children: 'Yes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setToggleDelete(prev => !prev);\n              },\n              color: \"primary\",\n              children: 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n          toggler: toggler,\n          slide: selectedSlide,\n          sources: sources,\n          types: types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vid_img_wrapper pt-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8 relative\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => {\n                  if (activeType) {\n                    props.history.push(`/jobs?active=${activeType}`);\n                  } else {\n                    var _props$history2;\n\n                    (_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : _props$history2.goBack();\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"vid_img_thumb\",\n                children: /*#__PURE__*/_jsxDEV(OwlCarousel, {\n                  className: \"owl-theme\",\n                  ...options,\n                  children: itemsMedia.length ? itemsMedia.map((image, index) => {\n                    console.log({\n                      image\n                    }, '---?');\n                    return (image === null || image === void 0 ? void 0 : image.mediaType) === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      onClick: () => {\n                        setToggler(prev => !prev);\n                        setSelectSlide(index + 1);\n                      },\n                      alt: \"\",\n                      src: (image === null || image === void 0 ? void 0 : image.link) ? image === null || image === void 0 ? void 0 : image.link : jobDummyImage\n                    }, `${image}${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 53\n                    }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n                      onClick: () => {\n                        setToggler(prev => !prev);\n                        setSelectSlide(index + 1);\n                      },\n                      src: image === null || image === void 0 ? void 0 : image.link,\n                      style: {\n                        height: '410px',\n                        width: '800px'\n                      }\n                    }, `${image}${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 681,\n                      columnNumber: 53\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"\",\n                    src: jobDummyImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 691,\n                    columnNumber: 50\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_4 relative\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail_card\",\n                children: [console.log({\n                  jobDetailsData,\n                  paramStatus\n                }), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title line-3\",\n                  title: jobDetailsData.jobName,\n                  children: jobDetailsData.jobName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tagg\",\n                  children: \"Job details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"job_info\",\n                  children: !isPastJob ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon clock\",\n                      children: jobDetailsData.duration\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 730,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon dollar\",\n                      children: jobDetailsData.amount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon location line-1\",\n                      title: jobDetailsData.locationName,\n                      children: jobDetailsData.locationName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon calendar\",\n                      children: (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.time) ? jobDetailsData.time : renderTime(jobDetailsData.fromDate, jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.toDate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon calendar\",\n                      children: (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.time) ? jobDetailsData.time : renderTime(jobDetailsData.fromDate, jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.toDate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon dollar\",\n                      children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.amount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon location line-1\",\n                      title: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.locationName,\n                      children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.locationName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 755,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"job_status\",\n                      children: paramStatus\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 756,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 37\n                }, this), console.log({\n                  changeRequestDeclineReason: jobDetailsData.changeRequestDeclineReason,\n                  isCancelJobRequest: jobDetailsData.isCancelJobRequest,\n                  isChangeRequest: jobDetailsData.isChangeRequest,\n                  isPublishedAgain: jobDetailsData.isPublishedAgain,\n                  reasonForCancelJobRequest: jobDetailsData.reasonForCancelJobRequest,\n                  reasonNoteForCancelJobRequestjob: jobDetailsData.reasonNoteForCancelJobRequest,\n                  rejectReasonNoteForCancelJobRequest: jobDetailsData.rejectReasonNoteForCancelJobRequest\n                }), (CASE_1 || CASE_2 || CASE_3) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"declined_info hvr-ripple-out\",\n                  onClick: () => {\n                    setPendingRequestClicked(true);\n                  },\n                  children: (CASE_1 || CASE_2 || CASE_3) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: `1 pending request(s)`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 772,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  className: \"ques_ans_modal\",\n                  open: pendingRequestClicked,\n                  onClose: () => setPendingRequestClicked(false),\n                  \"aria-labelledby\": \"simple-modal-title\",\n                  \"aria-describedby\": \"simple-modal-description\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom_wh\",\n                    \"data-aos\": \"zoom-in\",\n                    \"data-aos-delay\": \"30\",\n                    \"data-aos-duration\": \"1000\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"heading\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sub_title\",\n                        children: CASE_1 && `Pending Request(s)`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 805,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"close_btn\",\n                        onClick: () => setPendingRequestClicked(false),\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: cancel,\n                          alt: \"cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 811,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 808,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 804,\n                      columnNumber: 45\n                    }, this), CASE_1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chang_req_card mt-sm\",\n                      style: {\n                        paddingTop: '10px',\n                        paddingBottom: '20px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sub_title\",\n                        children: \"Job cancellation request\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 816,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-2\",\n                        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                          children: JobCancelReasons(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.reasonForCancelJobRequest)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 818,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.reasonNoteForCancelJobRequest\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 821,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 817,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_btn btn-effect\",\n                        onClick: () => {\n                          handleCancelJob(1, jobDetailsData);\n                        },\n                        children: 'Accept'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 825,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_grey_btn btn-effect\",\n                        onClick: () => {\n                          handleCancelJob(2, jobDetailsData);\n                        },\n                        children: 'Reject'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 832,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 49\n                    }, this), (CASE_2 || CASE_3) && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"sub_title\",\n                      children: 'Reason(s)'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 49\n                    }, this), CASE_2 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chang_req_card mb-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sub_title\",\n                        children: `Job cancelled reason`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 848,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-2\",\n                        children: JobCancelReasons(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.reasonForCancelJobRequest)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 851,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-2\",\n                        children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.reasonNoteForCancelJobRequest\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 854,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 847,\n                      columnNumber: 49\n                    }, this), CASE_3 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chang_req_card mb-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sub_title\",\n                        children: [\" \", `Job cancelled decline reason`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 861,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-2\",\n                        children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.changeRequestDeclineReason\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 862,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 860,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 799,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 37\n                }, this), (paramStatus === 'EXPIRED' || paramStatus === 'expired') && !(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.isPublishedAgain) && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fill_btn full_btn btn-effect mt-sm\",\n                  onClick: () => props.history.push(`/post-new-job?jobId=${paramJobId}`),\n                  children: \"Publish again\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  className: \"custom_modal\",\n                  open: jobRejectModal,\n                  onClose: () => {\n                    setJobRejectModal(false);\n                  },\n                  \"aria-labelledby\": \"simple-modal-title\",\n                  \"aria-describedby\": \"simple-modal-description\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom_wh profile_modal\",\n                    \"data-aos\": \"zoom-in\",\n                    \"data-aos-delay\": \"30\",\n                    \"data-aos-duration\": \"1000\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"heading\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sub_title\",\n                        children: `Your reply to job cancellation`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 889,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"close_btn\",\n                        onClick: () => {\n                          setJobRejectModal(false);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: cancel,\n                          alt: \"cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 895,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 890,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 888,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form_field\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form_label\",\n                        children: `Let the tradie and Tickt know if you accept or reject cancelling for this job.`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 899,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text_field\",\n                        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                          placeholder: `I disagree with this cancelling`,\n                          maxLength: 250,\n                          value: replyText,\n                          onChange: e => {\n                            setReplyText(e.target.value);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 901,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"char_count\",\n                          children: `${replyText === null || replyText === void 0 ? void 0 : replyText.length}/250`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 907,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 900,\n                        columnNumber: 49\n                      }, this), (replyText === null || replyText === void 0 ? void 0 : replyText.length) > 250 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"error_msg\",\n                        children: errors.replyCancelReason\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 909,\n                        columnNumber: 77\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 898,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bottom_btn custom_btn\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_btn full_btn btn-effect\",\n                        onClick: () => {\n                          operationCancelJob();\n                        },\n                        children: 'Send'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 912,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_grey_btn btn-effect\",\n                        onClick: () => {\n                          setJobRejectModal(false);\n                          setJobData({});\n                          setPendingRequestClicked(true);\n                        },\n                        children: 'Cancel'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 919,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 911,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Modal, {\n                  className: \"custom_modal\",\n                  open: jobAcceptModal,\n                  onClose: () => {\n                    setJobAcceptModal(false);\n                  },\n                  \"aria-labelledby\": \"simple-modal-title\",\n                  \"aria-describedby\": \"simple-modal-description\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom_wh confirmation\",\n                    \"data-aos\": \"zoom-in\",\n                    \"data-aos-delay\": \"30\",\n                    \"data-aos-duration\": \"1000\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"heading\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"xs_sub_title\",\n                        children: `Accept Job Cancellation Request`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 943,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"close_btn\",\n                        onClick: () => {\n                          setJobAcceptModal(false);\n                          setPendingRequestClicked(false);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: cancel,\n                          alt: \"cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 950,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 944,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 942,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"modal_message\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Are you sure you still want to proceed?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 954,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 953,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dialog_actions\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_btn btn-effect\",\n                        onClick: () => {\n                          operationCancelJob();\n                        },\n                        children: \"Yes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 957,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_grey_btn btn-effect\",\n                        onClick: () => {\n                          setJobAcceptModal(false);\n                          setJobData({});\n                          setPendingRequestClicked(true);\n                        },\n                        children: \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 962,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 956,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 941,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sub_title\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"commn_para\",\n                  children: jobDetailsData.details\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: [\"Job Milestones\", /*#__PURE__*/_jsxDEV(\"b\", {\n                  className: \"ft_normal\",\n                  children: [\" \", `${jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.milestoneNumber} `, `of ${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.totalMilestones) || ''}`, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job_progress_wrap\",\n                id: \"scroll-progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress_wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"approval_info\",\n                    id: \"digit-progress\",\n                    children: renderByStatus({\n                      status: paramStatus\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1014,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"progress_bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"done_progress\",\n                      id: \"progress-bar\",\n                      type: \"range\",\n                      min: \"0\",\n                      value: (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.milestoneNumber) > 0 ? (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.milestoneNumber) / (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.totalMilestones) * 100 : 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1018,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1017,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1013,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"job_milestone\",\n                children: jobDetailsData && (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$jobMi = jobDetailsData.jobMilestonesData) === null || _jobDetailsData$jobMi === void 0 ? void 0 : _jobDetailsData$jobMi.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: `${index + 1}. ${item === null || item === void 0 ? void 0 : item.milestoneName}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1033,\n                      columnNumber: 49\n                    }, this), console.log({\n                      item\n                    }), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: renderTime(item === null || item === void 0 ? void 0 : item.fromDate, item === null || item === void 0 ? void 0 : item.toDate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1035,\n                      columnNumber: 49\n                    }, this)]\n                  }, item.milestoneId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1032,\n                    columnNumber: 45\n                  }, this);\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"fill_grey_btn ques_btn\",\n                onClick: () => setQuestionsData(prevData => ({ ...prevData,\n                  showAllQuestionsClicked: true\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: question,\n                  alt: \"question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1046,\n                  columnNumber: 37\n                }, this), `${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.questionsCount) || '0'} ${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.questionsCount) === 1 ? 'question' : 'questions'}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1006,\n              columnNumber: 29\n            }, this), questionsData.showAllQuestionsClicked && /*#__PURE__*/_jsxDEV(Modal, {\n              className: \"ques_ans_modal\",\n              open: questionsData.showAllQuestionsClicked,\n              onClose: () => {\n                modalCloseHandler('showAllQuestionsClicked');\n              },\n              \"aria-labelledby\": \"simple-modal-title\",\n              \"aria-describedby\": \"simple-modal-description\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom_wh\",\n                  \"data-aos\": \"zoom-in\",\n                  \"data-aos-delay\": \"30\",\n                  \"data-aos-duration\": \"1000\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"heading\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"sub_title\",\n                      children: `${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.questionsCount) || 0} ${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.questionsCount) === 1 ? 'question' : 'questions'}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1064,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"close_btn\",\n                      onClick: () => modalCloseHandler('showAllQuestionsClicked'),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: cancel,\n                        alt: \"cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1069,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1068,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1063,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inner_wrap\",\n                    children: [questionList === null || questionList === void 0 ? void 0 : questionList.map((item, index) => {\n                      var _item$questionData2, _item$questionData5, _questionData$answerD, _questionData$answerD2, _questionData$answerD3, _questionData$answerD4;\n\n                      const {\n                        questionData\n                      } = item;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"question_ans_card\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user_detail\",\n                            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                              className: \"user_img\",\n                              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                src: (questionData === null || questionData === void 0 ? void 0 : questionData.userImage) || dummy,\n                                alt: \"user-img\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1080,\n                                columnNumber: 73\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1079,\n                              columnNumber: 69\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"details\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"user_name\",\n                                children: questionData === null || questionData === void 0 ? void 0 : questionData.userName\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1083,\n                                columnNumber: 73\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"date\",\n                                children: questionData === null || questionData === void 0 ? void 0 : questionData.date\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1084,\n                                columnNumber: 73\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1082,\n                              columnNumber: 69\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1078,\n                            columnNumber: 65\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: questionData === null || questionData === void 0 ? void 0 : questionData.question\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1087,\n                            columnNumber: 65\n                          }, this), console.log({\n                            questionList\n                          }), Object.keys(questionsData === null || questionsData === void 0 ? void 0 : questionsData.showHideAnswer).length && (questionsData === null || questionsData === void 0 ? void 0 : questionsData.showHideAnswer[questionData === null || questionData === void 0 ? void 0 : questionData.questionId]) ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => {\n                              var _item$questionData;\n\n                              return questionHandler('showAnswerClicked', item === null || item === void 0 ? void 0 : (_item$questionData = item.questionData) === null || _item$questionData === void 0 ? void 0 : _item$questionData.questionId);\n                            },\n                            className: \"show_hide_ans link\",\n                            children: 'Hide answer'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1115,\n                            columnNumber: 69\n                          }, this) : Object.keys(item === null || item === void 0 ? void 0 : (_item$questionData2 = item.questionData) === null || _item$questionData2 === void 0 ? void 0 : _item$questionData2.answerData).length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => {\n                              var _item$questionData3;\n\n                              return questionHandler('hideAnswerClicked', item === null || item === void 0 ? void 0 : (_item$questionData3 = item.questionData) === null || _item$questionData3 === void 0 ? void 0 : _item$questionData3.questionId);\n                            },\n                            className: \"show_hide_ans link\",\n                            children: 'Show answer'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1121,\n                            columnNumber: 69\n                          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => {\n                              var _item$questionData4;\n\n                              return questionHandler('askQuestion', item === null || item === void 0 ? void 0 : (_item$questionData4 = item.questionData) === null || _item$questionData4 === void 0 ? void 0 : _item$questionData4.questionId);\n                            },\n                            className: \"show_hide_ans link\",\n                            children: 'Answer'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1127,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1077,\n                          columnNumber: 61\n                        }, this), Object.keys(questionsData === null || questionsData === void 0 ? void 0 : questionsData.showHideAnswer).length && (questionsData === null || questionsData === void 0 ? void 0 : questionsData.showHideAnswer[questionData === null || questionData === void 0 ? void 0 : questionData.questionId]) && Object.keys(item === null || item === void 0 ? void 0 : (_item$questionData5 = item.questionData) === null || _item$questionData5 === void 0 ? void 0 : _item$questionData5.answerData).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"question_ans_card answer\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"user_detail\",\n                            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                              className: \"user_img\",\n                              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                src: (questionData === null || questionData === void 0 ? void 0 : (_questionData$answerD = questionData.answerData) === null || _questionData$answerD === void 0 ? void 0 : _questionData$answerD.userImage) || dummy,\n                                alt: \"user-img\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1140,\n                                columnNumber: 77\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1139,\n                              columnNumber: 73\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"details\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"user_name\",\n                                children: questionData === null || questionData === void 0 ? void 0 : (_questionData$answerD2 = questionData.answerData) === null || _questionData$answerD2 === void 0 ? void 0 : _questionData$answerD2.userName\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1146,\n                                columnNumber: 77\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"date\",\n                                children: questionData === null || questionData === void 0 ? void 0 : (_questionData$answerD3 = questionData.answerData) === null || _questionData$answerD3 === void 0 ? void 0 : _questionData$answerD3.date\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1147,\n                                columnNumber: 77\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1145,\n                              columnNumber: 73\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1138,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                            children: questionData === null || questionData === void 0 ? void 0 : (_questionData$answerD4 = questionData.answerData) === null || _questionData$answerD4 === void 0 ? void 0 : _questionData$answerD4.answer\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1150,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => {\n                              var _item$questionData6, _item$questionData7, _item$questionData7$a, _item$questionData8, _item$questionData8$a;\n\n                              return questionHandler('updateQuestion', item === null || item === void 0 ? void 0 : (_item$questionData6 = item.questionData) === null || _item$questionData6 === void 0 ? void 0 : _item$questionData6.questionId, item === null || item === void 0 ? void 0 : (_item$questionData7 = item.questionData) === null || _item$questionData7 === void 0 ? void 0 : (_item$questionData7$a = _item$questionData7.answerData) === null || _item$questionData7$a === void 0 ? void 0 : _item$questionData7$a.answer, null, item === null || item === void 0 ? void 0 : (_item$questionData8 = item.questionData) === null || _item$questionData8 === void 0 ? void 0 : (_item$questionData8$a = _item$questionData8.answerData) === null || _item$questionData8$a === void 0 ? void 0 : _item$questionData8$a.answerId);\n                            },\n                            className: \"show_hide_ans link\",\n                            children: \"Edit\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1151,\n                            columnNumber: 69\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            onClick: () => {\n                              var _item$questionData9, _item$questionData10, _item$questionData10$;\n\n                              return questionHandler('deleteQuestion', item === null || item === void 0 ? void 0 : (_item$questionData9 = item.questionData) === null || _item$questionData9 === void 0 ? void 0 : _item$questionData9.questionId, '', index, item === null || item === void 0 ? void 0 : (_item$questionData10 = item.questionData) === null || _item$questionData10 === void 0 ? void 0 : (_item$questionData10$ = _item$questionData10.answerData) === null || _item$questionData10$ === void 0 ? void 0 : _item$questionData10$.answerId);\n                            },\n                            className: \"show_hide_ans link\",\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1154,\n                            columnNumber: 69\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1137,\n                          columnNumber: 65\n                        }, this) : '']\n                      }, questionData === null || questionData === void 0 ? void 0 : questionData.questionId, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1076,\n                        columnNumber: 57\n                      }, this);\n                    }), (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.questionsCount) > questionList.length && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"fill_grey_btn load_more\",\n                        onClick: loadMoreQuestionHandler,\n                        children: \"View more\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1162,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1161,\n                      columnNumber: 106\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1072,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1062,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 33\n            }, this), questionsData.askQuestionsClicked && /*#__PURE__*/_jsxDEV(Modal, {\n              className: \"ques_ans_modal\",\n              open: questionsData.askQuestionsClicked,\n              onClose: () => modalCloseHandler('askQuestionsClicked'),\n              \"aria-labelledby\": \"simple-modal-title\",\n              \"aria-describedby\": \"simple-modal-description\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom_wh ask_ques\",\n                \"data-aos\": \"zoom-in\",\n                \"data-aos-delay\": \"30\",\n                \"data-aos-duration\": \"1000\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"heading\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sub_title\",\n                    children: questionsData.updateQuestionsClicked ? 'Edit Answer' : `Answer`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1184,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"close_btn\",\n                    onClick: () => modalCloseHandler('askQuestionsClicked'),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: cancel,\n                      alt: \"cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1190,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1187,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1183,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Your answer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1194,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                      placeholder: \"Text\",\n                      value: questionsData.questionData,\n                      onChange: e => handleChange(e, 'questionData')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1196,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"char_count\",\n                      children: `${questionsData.questionData.trim().length}/250`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1197,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1195,\n                    columnNumber: 45\n                  }, this), !!errors.questionData && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors.questionData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1199,\n                    columnNumber: 71\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1193,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bottom_btn custom_btn\",\n                  children: [questionsData.updateQuestionsClicked ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"fill_btn full_btn\",\n                    onClick: () => submitQuestionHandler('updateQuestion'),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1202,\n                    columnNumber: 85\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"fill_btn full_btn\",\n                    onClick: () => questionHandler('submitAskQuestion'),\n                    children: \"Send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1203,\n                    columnNumber: 51\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"fill_grey_btn\",\n                    onClick: () => questionHandler('questionCancelBtnClicked'),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1204,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1201,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1178,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 33\n            }, this), questionsData.confirmationClicked && /*#__PURE__*/_jsxDEV(Modal, {\n              className: \"custom_modal\",\n              open: questionsData.confirmationClicked,\n              onClose: () => modalCloseHandler('confirmationClicked'),\n              \"aria-labelledby\": \"simple-modal-title\",\n              \"aria-describedby\": \"simple-modal-description\",\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"custom_wh confirmation\",\n                  \"data-aos\": \"zoom-in\",\n                  \"data-aos-delay\": \"30\",\n                  \"data-aos-duration\": \"1000\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"heading\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"xs_sub_title\",\n                      children: `${questionsData.deleteQuestionsClicked ? 'Delete' : 'Post'} Answer Confirmation`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1221,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"close_btn\",\n                      onClick: () => modalCloseHandler('confirmationClicked'),\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: cancel,\n                        alt: \"cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1223,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1222,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1220,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"modal_message\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: `Are you sure you want to ${questionsData.deleteQuestionsClicked ? 'delete' : 'post'} a answer?`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1227,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1226,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dialog_actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"fill_btn\",\n                      onClick: () => submitQuestionHandler(questionsData.questionsClickedType),\n                      children: \"Yes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1230,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"fill_grey_btn\",\n                      onClick: () => modalCloseHandler('confirmationClicked'),\n                      children: \"No\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1231,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1229,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1219,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex_col_sm_12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sub_title\",\n                    children: \"Job type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1240,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"job_categories\",\n                    children: /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                        className: \"type_icon\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          alt: \"\",\n                          src: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$jobTy = jobDetailsData.jobType) === null || _jobDetailsData$jobTy === void 0 ? void 0 : _jobDetailsData$jobTy.jobTypeImage\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1244,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1243,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"name\",\n                        children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$jobTy2 = jobDetailsData.jobType) === null || _jobDetailsData$jobTy2 === void 0 ? void 0 : _jobDetailsData$jobTy2.jobTypeName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1246,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1242,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1239,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex_col_sm_12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sub_title\",\n                    children: 'Specialisations needed'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1253,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tags_wrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$speci = jobDetailsData.specializationData) === null || _jobDetailsData$speci === void 0 ? void 0 : _jobDetailsData$speci.map(item => {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: item.specializationName\n                        }, item.specializationId, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1259,\n                          columnNumber: 60\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1257,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1252,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1237,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Posted by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `tradie_card posted_by`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user_wrap\",\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: `u_img`,\n                      children: (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste2 = jobDetailsData.postedBy) === null || _jobDetailsData$poste2 === void 0 ? void 0 : _jobDetailsData$poste2.hasOwnProperty('builderImage')) ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste3 = jobDetailsData.postedBy) === null || _jobDetailsData$poste3 === void 0 ? void 0 : _jobDetailsData$poste3.builderImage) || dummy,\n                        alt: \"traide-img\",\n                        onError: e => {\n                          var _e$target3, _e$target4;\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.onerror) {\n                            e.target.onerror = null;\n                          }\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.src) {\n                            e.target.src = dummy;\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1294,\n                        columnNumber: 53\n                      }, this) : Array.isArray(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : jobDetailsData.postedBy) ? renderBuilderAvatar(\"image\") : /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: dummy,\n                        alt: \"traide-img\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1307,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1292,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"name\",\n                        onClick: () => {\n                          var _jobDetailsData$poste4;\n\n                          if (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste4 = jobDetailsData.postedBy) === null || _jobDetailsData$poste4 === void 0 ? void 0 : _jobDetailsData$poste4.builderName) {\n                            var _props$history3, _jobDetailsData$poste5;\n\n                            props === null || props === void 0 ? void 0 : (_props$history3 = props.history) === null || _props$history3 === void 0 ? void 0 : _props$history3.push(`/builder-info?builderId=${jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste5 = jobDetailsData.postedBy) === null || _jobDetailsData$poste5 === void 0 ? void 0 : _jobDetailsData$poste5.builderId}`);\n                          }\n                        },\n                        children: (jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste6 = jobDetailsData.postedBy) === null || _jobDetailsData$poste6 === void 0 ? void 0 : _jobDetailsData$poste6.builderName) || renderBuilderAvatar(\"name\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1314,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"rating\",\n                        children: `${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste7 = jobDetailsData.postedBy) === null || _jobDetailsData$poste7 === void 0 ? void 0 : _jobDetailsData$poste7.ratings) ? jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste8 = jobDetailsData.postedBy) === null || _jobDetailsData$poste8 === void 0 ? void 0 : _jobDetailsData$poste8.ratings : '0'}, ${(jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste9 = jobDetailsData.postedBy) === null || _jobDetailsData$poste9 === void 0 ? void 0 : _jobDetailsData$poste9.reviews) ? jobDetailsData === null || jobDetailsData === void 0 ? void 0 : (_jobDetailsData$poste10 = jobDetailsData.postedBy) === null || _jobDetailsData$poste10 === void 0 ? void 0 : _jobDetailsData$poste10.reviews : '0'} reviews`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1324,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1313,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1291,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1272,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1271,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 559,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobDetailsPage, \"vVpJJ4E2kdHKTQS2u8ajdg50djI=\");\n\n_c = JobDetailsPage;\nexport default JobDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDetailsPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDetailsPageBuilder/jobDetailsPage.tsx"],"names":["React","useState","useEffect","Constants","getHomeJobDetails","getHomeSaveJob","jobDetailsBuilder","postHomeApplyJob","getQuestionsList","answerQuestion","updateAnswer","deleteAnswer","handleCancelReply","Modal","cancel","dummy","jobDummyImage","question","leftIcon","rightIcon","approved","waiting","renderTime","OwlCarousel","editIconBlue","Button","Dialog","DialogActions","DialogTitle","deleteOpenJob","FsLightbox","JobCancelReasons","options","items","nav","navText","rewind","autoplay","slideBy","dots","dotsEach","dotData","responsive","defaultQuestionValues","askQuestionsClicked","showAllQuestionsClicked","submitQuestionsClicked","deleteQuestionsClicked","updateQuestionsClicked","questionsClickedType","confirmationClicked","showAnswerButton","questionId","answerId","questionData","answerShownHideList","showHideAnswer","questionIndex","JobDetailsPage","props","errors","setErrors","jobDetailsData","setJobDetailsData","questionList","setQuestionList","questionListPageNo","setQuestionListPageNo","questionsData","setQuestionsData","toggler","setToggler","showEditBtn","setEditBtn","selectedSlide","setSelectSlide","tradieId","setTradieId","toggleDelete","setToggleDelete","jobAcceptModal","setJobAcceptModal","jobRejectModal","setJobRejectModal","pendingRequestClicked","setPendingRequestClicked","jobData","setJobData","replyText","setReplyText","preFetch","location_search","history","location","search","substring","params","URLSearchParams","get","prev","res1","jobId","tradeId","specializationId","success","data","res","console","log","id","fetchQuestionsList","isTrue","page","res2","prevData","data_elements","list","showQuestionAnswer","applyJobClicked","builderId","postedBy","push","saveJobClicked","isSave","isSaved","modalCloseHandler","modalType","loadMoreQuestionHandler","validateForm","type","newErrors","trim","length","errorStrings","askQuestion","Object","keys","submitQuestionHandler","includes","response","answer","questionHandler","item_","question_id","undefined","handleChange","e","target","value","renderBuilderAvatar","item","Array","isArray","builderImage","onerror","src","firstName","paramStatus","paramJobId","activeType","isPastJob","hideDispute","renderByStatus","status","handleCancelJob","job_detail","operationCancelJob","renderFilteredItems","itemsMedia","sources","types","forEach","mediaType","link","photos","filter","itemP","deleteJob","CASE_1","isCancelJobRequest","CASE_2","reasonForCancelJobRequest","CASE_3","changeRequestDeclineReason","goBack","map","image","index","height","width","jobName","duration","amount","locationName","time","fromDate","toDate","isChangeRequest","isPublishedAgain","reasonNoteForCancelJobRequestjob","reasonNoteForCancelJobRequest","rejectReasonNoteForCancelJobRequest","paddingTop","paddingBottom","replyCancelReason","details","milestoneNumber","totalMilestones","jobMilestonesData","milestoneName","milestoneId","questionsCount","userImage","userName","date","answerData","jobType","jobTypeImage","jobTypeName","specializationData","specializationName","hasOwnProperty","builderName","ratings","reviews"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Constants from '../../utils/constants';\nimport {\n    getHomeJobDetails,\n    getHomeSaveJob,\n    jobDetailsBuilder,\n    postHomeApplyJob\n} from '../../redux/homeSearch/actions';\nimport { getTradieQuestionList } from '../../redux/jobs/actions';\nimport {\n    // postAskQuestion,\n    // deleteQuestion,\n    // updateQuestion,\n    getQuestionsList,\n    answerQuestion,\n    updateAnswer,\n    deleteAnswer,\n    handleCancelReply\n} from '../../redux/jobs/actions';\nimport Modal from '@material-ui/core/Modal';\nimport storageService from '../../utils/storageService';\n\nimport cancel from \"../../assets/images/ic-cancel.png\";\nimport dummy from '../../assets/images/u_placeholder.jpg';\nimport jobDummyImage from '../../assets/images/ic-placeholder-detail.png';\nimport question from '../../assets/images/ic-question.png';\nimport leftIcon from '../../assets/images/ic-back-arrow-line.png'\nimport rightIcon from '../../assets/images/ic-next-arrow-line.png'\nimport moment from 'moment';\nimport approved from '../../assets/images/approved.png';\nimport waiting from '../../assets/images/exclamation.png';\n\nimport { renderTime } from '../../utils/common';\n\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\n\nimport editIconBlue from '../../assets/images/ic-edit-blue.png';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { deleteOpenJob } from '../../redux/jobs/actions';\n\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\nimport { setShowToast } from '../../redux/common/actions';\n\nimport { JobCancelReasons } from '../../utils/common';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\ninterface PropsType {\n    history: any,\n    location: any,\n}\n\nconst options = {\n    items: 1,\n    nav: true,\n    navText: [`<div class='nav-btn prev-slide'> <img src=\"${leftIcon}\"> </div>`, `<div class='nav-btn next-slide'> <img src=\"${rightIcon}\"> </div>`],\n    rewind: true,\n    autoplay: false,\n    slideBy: 1,\n    dots: true,\n    dotsEach: true,\n    dotData: true,\n    responsive: {\n        0: {\n            items: 1,\n        },\n        600: {\n            items: 1,\n        },\n        1000: {\n            items: 1,\n        },\n    },\n};\n\n\nconst defaultQuestionValues = {\n    askQuestionsClicked: false,\n    showAllQuestionsClicked: false,\n    submitQuestionsClicked: false,\n    deleteQuestionsClicked: false,\n    updateQuestionsClicked: false,\n    questionsClickedType: '',\n    confirmationClicked: false,\n    showAnswerButton: true,\n    questionId: '',\n    answerId: '',\n    questionData: '',\n    answerShownHideList: [],\n    showHideAnswer: {},\n    questionIndex: null\n}\n\nconst JobDetailsPage = (props: PropsType) => {\n    const [errors, setErrors] = useState<any>({});\n    const [jobDetailsData, setJobDetailsData] = useState<any>('');\n    const [questionList, setQuestionList] = useState<Array<any>>([]);\n    const [questionListPageNo, setQuestionListPageNo] = useState<number>(1);\n    const [questionsData, setQuestionsData] = useState<any>(defaultQuestionValues)\n\n    const [toggler, setToggler] = useState(false);\n    const [showEditBtn, setEditBtn] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState(1);\n    const [tradieId, setTradieId] = useState<string>('');\n\n    const [toggleDelete, setToggleDelete] = useState(false);\n\n    const [jobAcceptModal, setJobAcceptModal] = useState(false);\n    const [jobRejectModal, setJobRejectModal] = useState(false);\n\n    const [pendingRequestClicked, setPendingRequestClicked] = useState(false);\n\n    const [jobData, setJobData] = useState({});\n    const [replyText, setReplyText] = useState('');\n\n    useEffect(() => {\n        (async () => {\n            await preFetch();\n        })();\n    }, [])\n\n    const preFetch = async () => {\n        let location_search = (props?.history?.location?.search).substring(1) //window.atob()\n        const params = new URLSearchParams(location_search);\n\n        if (params.get('edit')) {\n            setEditBtn((prev: any) => true);\n        }\n\n        if (params.get('jobId') && params.get('tradeId') && params.get('specializationId')) {\n            const res1 = await getHomeJobDetails({\n                jobId: params.get('jobId'),\n                tradeId: params.get('tradeId'),\n                specializationId: params.get('specializationId')\n            });\n            if (res1.success) {\n                setJobDetailsData(res1.data);\n            }\n        } else {\n            if (params.get('jobId')) {\n                let res = await jobDetailsBuilder({ jobId: params.get('jobId') });\n                console.log({ res }, '---->')\n                if (res.success) {\n                    setJobDetailsData(res.data);\n                }\n            }\n        }\n        if (params.get('tradieId')) {\n            const id: string | null = params.get('tradieId');\n            setTradieId(id ? id : '');\n        }\n        fetchQuestionsList();\n    }\n\n\n    const fetchQuestionsList = async (isTrue?: boolean) => {\n        let location_search = (props?.location?.search).substring(1); //window.atob()\n        const params = new URLSearchParams(location_search);\n        const questionData: any = {\n            jobId: params.get('jobId'),\n            page: 1\n        }\n        const res2 = await getQuestionsList(questionData);\n        if (res2.success) {\n            if (params.get('openQList') === \"true\") {\n                setQuestionsData((prevData: any) => ({ ...prevData, showAllQuestionsClicked: true }));\n            }\n            console.log({ res2 }, 'question-list')\n            let data_elements = res2?.data?.list || res2?.data;\n            setQuestionList(data_elements);\n        }\n\n        if (isTrue) {\n            setQuestionsData((prevData: any) => ({\n                ...prevData,\n                submitQuestionsClicked: false,\n                askQuestionsClicked: false,\n                showAllQuestionsClicked: true,\n                confirmationClicked: false,\n                questionsClickedType: '',\n                deleteQuestionsClicked: false,\n                updateQuestionsClicked: false,\n                questionId: '',\n                answerId: '',\n                questionData: '',\n                showQuestionAnswer: false,\n                questionIndex: null\n            }));\n        }\n    }\n\n    const applyJobClicked = async () => {\n        const data = {\n            jobId: jobDetailsData?.jobId,\n            builderId: jobDetailsData?.postedBy?.builderId,\n            tradeId: jobDetailsData?.tradeId,\n            specializationId: jobDetailsData?.specializationId\n        }\n        const res = await postHomeApplyJob(data);\n        if (res.success) {\n            props.history.push('job-applied-successfully');\n        }\n    }\n\n    const saveJobClicked = () => {\n        const data = {\n            jobId: jobDetailsData?.jobId,\n            tradeId: jobDetailsData?.tradeId,\n            specializationId: jobDetailsData?.specializationId,\n            isSave: !jobDetailsData?.isSaved\n        }\n        getHomeSaveJob(data);\n        setJobDetailsData((prevData: any) => ({ ...prevData, isSaved: !prevData.isSaved }))\n    }\n\n    const modalCloseHandler = (modalType: string) => {\n        setQuestionsData((prevData: any) => ({ ...prevData, [modalType]: false, deleteQuestionsClicked: false, answerShownHideList: [] }));\n        setErrors({});\n    }\n\n    const loadMoreQuestionHandler = async () => {\n        // will handle the pagination later\n        let location_search = (props?.location?.search).substring(1);// window.atob()\n        const params = new URLSearchParams(location_search);\n        const data: any = {\n            jobId: params.get('jobId'),\n            page: questionListPageNo + 1\n        }\n        const res = await getQuestionsList(data);\n        if (res.success) {\n            console.log({ res }, 'question-list')\n            let data_elements = res?.data?.list || res?.data;\n            setQuestionList((prevData: any) => ([...prevData, ...data_elements]));\n            setQuestionListPageNo(data.page);\n        }\n    }\n\n    const validateForm = (type: string) => {\n        if (type == 'deleteQuestion') return true;\n        const newErrors: any = {};\n        if (!questionsData.questionData.trim()?.length) {\n            newErrors.questionData = Constants.errorStrings.askQuestion;\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const submitQuestionHandler = async (type: string) => {\n        console.log('Here!------->', { questionsData })\n        if (['askQuestion', 'deleteQuestion', 'updateQuestion'].includes(type)) {\n            if (!validateForm(type)) {\n                return;\n            }\n            var response: any;\n            var data: any;\n            if (type === 'askQuestion') {\n                data = {\n                    jobId: jobDetailsData?.jobId,\n                    answer: questionsData.questionData,\n                    questionId: questionsData.questionId,\n                }\n                response = await answerQuestion(data); // answer question\n            } else if (type === 'deleteQuestion') {\n                data = {\n                    questionId: questionsData.questionId,\n                    answerId: questionsData.answerId\n                }\n                response = await deleteAnswer(data); // delete answer\n            } else if (type === 'updateQuestion') {\n                data = {\n                    questionId: questionsData.questionId,\n                    answerId: questionsData.answerId,\n                    answer: questionsData.questionData\n                }\n                response = await updateAnswer(data); // update answer\n            }\n\n            if (response.success) {\n                fetchQuestionsList(true);\n                if (type === 'deleteQuestion') {\n                    questionHandler('showAnswerClicked', questionsData.questionId)\n                }\n            }\n\n        }\n    }\n\n    const questionHandler = (type: string, questionId?: string, question?: string, questionIndex?: any, answerId?: any) => {\n\n        if (type == 'submitAskQuestion' && validateForm('askQuestion')) {\n            setQuestionsData((prevData: any) => ({\n                ...prevData,\n                submitQuestionsClicked: true,\n                confirmationClicked: true,\n            }));\n        } else if (type == 'askQuestion') {\n            setQuestionsData((prevData: any) => ({\n                ...prevData,\n                questionId: questionId,\n                askQuestionsClicked: true,\n                showAllQuestionsClicked: false,\n                questionsClickedType: type,\n                answerId: ''\n            }));\n        } else if (type == 'deleteQuestion') {\n            setQuestionsData((prevData: any) => ({\n                ...prevData,\n                confirmationClicked: true,\n                deleteQuestionsClicked: true,\n                questionId: questionId,\n                questionsClickedType: type,\n                questionIndex: questionIndex,\n                answerId: answerId\n            }));\n        } else if (type == 'updateQuestion') {\n            setQuestionsData((prevData: any) => ({\n                ...prevData,\n                askQuestionsClicked: true,\n                updateQuestionsClicked: true,\n                questionId: questionId,\n                answerId: answerId,\n                questionsClickedType: type,\n                showAllQuestionsClicked: false,\n                questionData: question\n            }));\n        } else if (type == 'questionCancelBtnClicked') {\n            setQuestionsData((prevData: any) => ({\n                ...prevData,\n                askQuestionsClicked: false,\n                updateQuestionsClicked: false,\n                deleteQuestionsClicked: false,\n                showAllQuestionsClicked: true,\n                questionData: '',\n                questionsClickedType: '',\n                questionId: '',\n                answerId: ''\n            }));\n            setErrors({});\n        } else if (type == 'hideAnswerClicked') {\n            // const newData = [...questionsData.answerShownHideList].filter(id => id !== questionId);\n            // setQuestionsData((prevData: any) => ({ ...prevData, answerShownHideList: newData }));\n\n            let item_: any = {};\n            let question_id: any = questionId;\n            item_ = questionsData?.showHideAnswer;\n            if (item_[question_id] === undefined) {\n                item_[question_id] = true;\n            } else {\n                item_[question_id] = !item_[question_id];\n            }\n\n            setQuestionsData((prevData: any) => ({ ...prevData, showHideAnswer: item_ }));\n\n        } else if (type == 'showAnswerClicked') {\n            // const newData = [...questionsData.answerShownHideList];\n            // newData.push(questionId);\n            // setQuestionsData((prevData: any) => ({ ...prevData, answerShownHideList: newData }));\n\n            let item_: any = {};\n            let question_id: any = questionId;\n            item_ = questionsData?.showHideAnswer;\n            if (item_[question_id] === undefined) {\n                item_[question_id] = !item_[question_id];\n            } else {\n                item_[question_id] = !item_[question_id];\n            }\n\n            setQuestionsData((prevData: any) => ({ ...prevData, showHideAnswer: item_ }));\n        }\n    }\n\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>, type: string) => {\n        if (e.target.value.trim().length <= 250) {\n            setQuestionsData((prevData: any) => ({ ...prevData, [type]: e.target.value }))\n        }\n    }\n\n\n    const renderBuilderAvatar = (item: any) => {\n        let postedBy: any = jobDetailsData?.postedBy;\n        // console.log({ jobDetailsData })\n        if (item === \"image\") {\n            if (postedBy && Array.isArray(postedBy) && postedBy[0] && postedBy[0].builderImage) {\n                return (\n                    <img\n                        src={postedBy[0].builderImage || dummy}\n                        alt=\"traide-img\"\n                        onError={(e: any) => {\n                            if (e?.target?.onerror) {\n                                e.target.onerror = null;\n                            }\n                            if (e?.target?.src) {\n                                e.target.src = dummy;\n                            }\n                        }}\n                    />\n                )\n            } else {\n                return (\n                    <img\n                        src={dummy}\n                        alt=\"traide-img\"\n                    />\n                )\n            }\n        }\n        if (item === \"name\") {\n            if (postedBy && Array.isArray(postedBy) && postedBy[0] && postedBy[0].firstName) {\n                return postedBy[0].firstName;\n            }\n        }\n    }\n\n    let paramStatus: any = '';\n    let paramJobId: any = '';\n    let activeType: any = '';\n    let isPastJob: boolean = false;\n    let hideDispute: any = null;\n    if (props.location?.search) {\n        let location_search = (props?.location?.search).substring(1); //window.atob()\n        const params = new URLSearchParams(location_search);\n        if (params.get('status')) {\n            paramStatus = params.get('status');\n        }\n        if (params.get('jobId')) {\n            paramJobId = params.get('jobId');\n        }\n        if (params.get('job')) {\n            isPastJob = true;\n        }\n        if (params.get('activeType')) {\n            activeType = params.get('activeType');\n        }\n\n        if (params.get('hide_dipute')) {\n            hideDispute = params.get('hide_dipute');\n        }\n    }\n    console.log({ activeType, hideDispute })\n\n    console.log({ paramStatus })\n    const renderByStatus = ({ status }: any) => {\n        if (status) {\n            return (\n                <>\n                    {status === \"APPROVED\" && <img src={approved} alt=\"icon\" />}\n                    {status === \"NEEDS APPROVAL\" && <img src={waiting} alt=\"icon\" />}\n                    {status}\n                </>\n            )\n        } else {\n            return (\n                <>\n                    {jobDetailsData?.status === \"APPROVED\" && <img src={approved} alt=\"icon\" />}\n                    {jobDetailsData?.status === \"NEEDS APPROVAL\" && <img src={waiting} alt=\"icon\" />}\n                    {jobDetailsData?.status}\n                </>\n            )\n        }\n\n    }\n\n    const handleCancelJob = async (type: any, job_detail: any) => {\n        if (type == 1) {\n            setJobAcceptModal(true);\n            setJobRejectModal(false);\n        } else {\n            setJobAcceptModal(false);\n            setJobRejectModal(true);\n        }\n\n        setJobData({\n            \"jobId\": job_detail?.jobId,\n            \"status\": type,\n            \"note\": type === 1 ? \"this is accepted\" : \"this is rejected\"\n        });\n    }\n\n    const operationCancelJob = async () => {\n        let data: any = jobData;\n        if (data?.status) {\n            data['note'] = replyText;\n        }\n\n        // if (!data?.note) {\n        //     delete data?.note;\n        // }\n\n        let response = await handleCancelReply(data);\n        if (response?.success) {\n            if (data?.status === 1) {\n                props.history.push('/request-monitored/ccr');\n            } else {\n                props.history.push('/request-monitored/cc/bb');\n            }\n            // await preFetch();\n        }\n    }\n\n\n    const renderFilteredItems = (itemsMedia: any) => {\n        let sources: any = [];\n        let types: any = [];\n\n        if (itemsMedia && Array.isArray(itemsMedia) && itemsMedia.length) {\n            itemsMedia.forEach((item: any) => {\n                if (item?.mediaType === 2) {\n                    sources.push(item.link);\n                    types.push('video');\n                }\n                if (item?.mediaType === 1) {\n                    sources.push(item.link);\n                    types.push('image');\n                }\n            })\n        }\n\n        return { sources, types };\n    }\n    let itemsMedia: any = [];\n    if (jobDetailsData?.photos?.length) {\n        itemsMedia = jobDetailsData?.photos?.filter((itemP: any) => itemP.mediaType !== 3 && itemP.mediaType !== 4);\n    }\n    const { sources, types } = renderFilteredItems(itemsMedia);\n\n\n    const deleteJob = async (jobId: any) => {\n        await deleteOpenJob({ jobId });\n        props.history.push(`/jobs?active=${activeType}`)\n    }\n\n    // let CASE_1 = jobDetailsData?.isCancelJobRequest;\n    // let CASE_2 = paramStatus === 'CANCELLED' &&\n    //     jobDetailsData?.reasonForCancelJobRequest > 0;\n    // let CASE_3 = paramStatus === 'Pending dispute' &&\n    //     jobDetailsData?.changeRequestDeclineReason?.length > 0;\n\n    let CASE_1 = jobDetailsData?.isCancelJobRequest;\n    let CASE_2 = jobDetailsData?.reasonForCancelJobRequest ? jobDetailsData?.reasonForCancelJobRequest : false;\n    let CASE_3 = jobDetailsData?.changeRequestDeclineReason?.length ? jobDetailsData?.changeRequestDeclineReason : false;\n\n\n    console.log({ paramStatus,\n     }, 'paramStatus')\n\n    // line no 550. \"open\"  is excluded from array.\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n                    {['active'].includes(activeType) ? (\n                        <span className=\"dot_menu\">\n                            <img src={editIconBlue} alt=\"edit\" />\n                            <div className=\"edit_menu\">\n                                <ul>\n                                    {/* {activeType == \"open\" && (\n                                        <React.Fragment>\n                                            <li\n                                                onClick={() => {\n                                                    setShowToast(true, 'Under Development');\n                                                    // props.history.push(`/post-new-job?update=true&jobId=${paramJobId}`)\n                                                }}\n                                                className=\"icon edit_line\">Edit</li>\n                                            <li\n                                                onClick={() => {\n                                                    setToggleDelete((prev: any) => !prev);\n                                                }}\n                                                className=\"icon delete\">Delete</li>\n                                        </React.Fragment>\n                                    )} */}\n                                    {activeType == \"active\" && (\n                                        <React.Fragment>\n                                            <li\n                                                onClick={() => {\n                                                    props.history.push(`/jobs?active=${activeType}&jobId=${paramJobId}&editMilestone=true`)\n                                                }}\n                                                className=\"icon edit_line\">\n                                                {'Edit Milestone'}\n                                            </li>\n                                            {hideDispute === \"false\" && (\n                                                <li\n                                                    onClick={() => {\n                                                        props.history.push(`/jobs?active=${activeType}&jobId=${paramJobId}&lodgeDispute=true`)\n                                                    }}\n                                                    className=\"icon lodge\">\n                                                    {'Lodge dispute'}\n                                                </li>\n                                            )}\n                                            <li\n                                                onClick={() => {\n                                                    props.history.push(`/jobs?active=${activeType}&jobId=${paramJobId}&cancelJob=true`)\n                                                }}\n                                                className=\"icon delete\">\n                                                {'Cancel job'}\n                                            </li>\n                                        </React.Fragment>\n                                    )}\n                                </ul>\n                            </div>\n                        </span>\n                    ) : null}\n                    <Dialog\n                        open={toggleDelete}\n                        onClose={() => {\n                            setToggleDelete((prev: any) => !prev);\n                        }}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\">\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {\"Are you sure you want to delete the job ?\"}\n                        </DialogTitle>\n                        <DialogActions>\n                            <Button\n                                onClick={() => {\n                                    deleteJob(paramJobId);\n                                }}\n                                color=\"primary\"\n                                autoFocus>\n                                {'Yes'}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    setToggleDelete((prev: any) => !prev);\n                                }}\n                                color=\"primary\">\n                                {'No'}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    <FsLightbox\n                        toggler={toggler}\n                        slide={selectedSlide}\n                        sources={sources}\n                        types={types}\n                    />\n\n                    <div className=\"vid_img_wrapper pt-20\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_8 relative\">\n                                <button\n                                    className=\"back\"\n                                    onClick={() => {\n                                        if (activeType) {\n                                            props.history.push(`/jobs?active=${activeType}`)\n                                        } else {\n                                            props.history?.goBack()\n                                        }\n                                    }}>\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_8\">\n                                <figure className=\"vid_img_thumb\">\n                                    <OwlCarousel className='owl-theme' {...options}>\n                                        {itemsMedia.length ?\n                                            itemsMedia.map((image: any, index: number) => {\n                                                console.log({ image }, '---?')\n                                                return image?.mediaType === 1 ? (\n                                                    <img\n                                                        key={`${image}${index}`}\n                                                        onClick={() => {\n                                                            setToggler((prev: any) => !prev);\n                                                            setSelectSlide(index + 1);\n                                                        }}\n                                                        alt=\"\"\n                                                        src={image?.link ? image?.link : jobDummyImage}\n                                                    />) : (\n                                                    <video\n                                                        key={`${image}${index}`}\n                                                        onClick={() => {\n                                                            setToggler((prev: any) => !prev);\n                                                            setSelectSlide(index + 1);\n                                                        }}\n                                                        src={image?.link}\n                                                        style={{ height: '410px', width: '800px' }}\n                                                    />\n                                                )\n                                            }) : <img alt=\"\" src={jobDummyImage} />}\n                                    </OwlCarousel>\n                                </figure>\n                            </div>\n\n\n\n                            <div className=\"flex_col_sm_4 relative\">\n\n                                <div className=\"detail_card\">\n                                    {console.log({ jobDetailsData, paramStatus })}\n                                    {/* {paramStatus === 'CANCELLED' &&\n                                        jobDetailsData?.reasonForCancelJobRequest > 0 &&\n                                        <div className=\"chang_req_card mb-sm\">\n                                            <span className=\"sub_title\">Job cancelled</span>\n                                            <p className=\"commn_para line-2\">\n                                                {JobCancelReasons(jobDetailsData?.reasonForCancelJobRequest)}\n                                            </p>\n                                            <p className=\"commn_para line-2\">\n                                                {jobDetailsData?.reasonNoteForCancelJobRequest}\n                                            </p>\n                                        </div>} */}\n\n                                    {/* {paramStatus === 'Pending dispute' &&\n                                        jobDetailsData?.changeRequestDeclineReason?.length > 0 &&\n                                        <div className=\"chang_req_card mb-sm\">\n                                            <span className=\"sub_title\">Job cancelled reason</span>\n                                            <p className=\"commn_para line-2\">\n                                                {jobDetailsData?.changeRequestDeclineReason}\n                                            </p>\n                                         </div>} */}\n\n\n                                    <span className=\"title line-3\" title={jobDetailsData.jobName}>{jobDetailsData.jobName}</span>\n                                    <span className=\"tagg\">Job details</span>\n                                    <div className=\"job_info\">\n                                        {!isPastJob ? (\n                                            <ul>\n\n                                                <li className=\"icon clock\">{jobDetailsData.duration}</li>\n                                                <li className=\"icon dollar\">{jobDetailsData.amount}</li>\n                                                <li className=\"icon location line-1\" title={jobDetailsData.locationName}>{jobDetailsData.locationName}</li>\n                                                <li className=\"icon calendar\">\n                                                    {jobDetailsData?.time ?\n                                                        jobDetailsData.time :\n                                                        renderTime(\n                                                            jobDetailsData.fromDate,\n                                                            jobDetailsData?.toDate\n                                                        )\n                                                    }\n                                                </li>\n                                            </ul>\n                                        ) : (\n                                            <ul>\n                                                <li className=\"icon calendar\">\n                                                    {jobDetailsData?.time ?\n                                                        jobDetailsData.time :\n                                                        renderTime(\n                                                            jobDetailsData.fromDate,\n                                                            jobDetailsData?.toDate\n                                                        )\n                                                    }\n                                                </li>\n                                                <li className=\"icon dollar\">{jobDetailsData?.amount}</li>\n                                                <li className=\"icon location line-1\" title={jobDetailsData?.locationName}>{jobDetailsData?.locationName}</li>\n                                                <li className=\"job_status\">{paramStatus}</li>\n                                                {/* <li className=\"job_status\">{jobDetailsData?.status}</li> */}\n                                            </ul>\n                                        )}\n                                    </div>\n                                    {console.log({\n                                        changeRequestDeclineReason: jobDetailsData.changeRequestDeclineReason,\n                                        isCancelJobRequest: jobDetailsData.isCancelJobRequest,\n                                        isChangeRequest: jobDetailsData.isChangeRequest,\n                                        isPublishedAgain: jobDetailsData.isPublishedAgain,\n                                        reasonForCancelJobRequest: jobDetailsData.reasonForCancelJobRequest,\n                                        reasonNoteForCancelJobRequestjob: jobDetailsData.reasonNoteForCancelJobRequest,\n                                        rejectReasonNoteForCancelJobRequest: jobDetailsData.rejectReasonNoteForCancelJobRequest\n                                    })}\n\n                                    {(CASE_1 || CASE_2 || CASE_3) && (\n                                        <div\n                                            className=\"declined_info hvr-ripple-out\"\n                                            onClick={() => {\n                                                setPendingRequestClicked(true)\n                                            }}>\n\n                                            {(CASE_1 || CASE_2 || CASE_3) && (\n                                                <span>{`1 pending request(s)`}</span>\n                                            )}\n\n                                            {/* {CASE_2 && (\n                                                <span>{`2 pending request(s)`}</span>\n                                            )}\n\n                                            {CASE_3 && (\n                                                <span>{`3 pending request(s)`}</span>\n                                            )} */}\n                                        </div>\n                                    )}\n\n                                    <Modal\n                                        className=\"ques_ans_modal\"\n                                        open={pendingRequestClicked}\n                                        onClose={() => setPendingRequestClicked(false)}\n                                        aria-labelledby=\"simple-modal-title\"\n                                        aria-describedby=\"simple-modal-description\"\n                                    >\n                                        <div\n                                            className=\"custom_wh\"\n                                            data-aos=\"zoom-in\"\n                                            data-aos-delay=\"30\"\n                                            data-aos-duration=\"1000\">\n                                            <div className=\"heading\">\n                                                <span className=\"sub_title\">\n                                                    {CASE_1 && `Pending Request(s)`}\n                                                </span>\n                                                <button\n                                                    className=\"close_btn\"\n                                                    onClick={() => setPendingRequestClicked(false)}>\n                                                    <img src={cancel} alt=\"cancel\" />\n                                                </button>\n                                            </div>\n                                            {CASE_1 &&\n                                                <div className=\"chang_req_card mt-sm\" style={{paddingTop:'10px', paddingBottom:'20px'}}>\n                                                    <span className=\"sub_title\">Job cancellation request</span>\n                                                    <p className=\"commn_para line-2\">\n                                                        <li>\n                                                            {JobCancelReasons(jobDetailsData?.reasonForCancelJobRequest)}\n                                                        </li>\n                                                        <li>\n                                                            {jobDetailsData?.reasonNoteForCancelJobRequest}\n                                                        </li>\n                                                    </p>\n                                                    <button\n                                                        className=\"fill_btn btn-effect\"\n                                                        onClick={() => {\n                                                            handleCancelJob(1, jobDetailsData)\n                                                        }}>\n                                                        {'Accept'}\n                                                    </button>\n                                                    <button className=\"fill_grey_btn btn-effect\"\n                                                        onClick={() => {\n                                                            handleCancelJob(2, jobDetailsData)\n                                                        }}>\n                                                        {'Reject'}\n                                                    </button>\n                                                </div>}\n\n                                            {(CASE_2 || CASE_3) && (\n                                                <span className=\"sub_title\">\n                                                    {'Reason(s)'}\n                                                </span>\n                                            )}\n\n                                            {CASE_2 &&\n                                                <div className=\"chang_req_card mb-sm\">\n                                                    <span className=\"sub_title\">\n                                                        {`Job cancelled reason`}\n                                                    </span>\n                                                    <p className=\"commn_para line-2\">\n                                                        {JobCancelReasons(jobDetailsData?.reasonForCancelJobRequest)}\n                                                    </p>\n                                                    <p className=\"commn_para line-2\">\n                                                        {jobDetailsData?.reasonNoteForCancelJobRequest}\n                                                    </p>\n                                                </div>}\n\n                                            {CASE_3 &&\n                                                <div className=\"chang_req_card mb-sm\">\n                                                    <span className=\"sub_title\"> {`Job cancelled decline reason`}</span>\n                                                    <p className=\"commn_para line-2\">\n                                                        {jobDetailsData?.changeRequestDeclineReason}\n                                                    </p>\n                                                </div>}\n\n                                        </div>\n                                    </Modal>\n\n                                    {((paramStatus === 'EXPIRED' || paramStatus === 'expired') && !jobDetailsData?.isPublishedAgain) && (\n                                        <button\n                                            className=\"fill_btn full_btn btn-effect mt-sm\"\n                                            onClick={() => props.history.push(`/post-new-job?jobId=${paramJobId}`)}>\n                                            Publish again\n                                        </button>\n                                    )}\n\n                                    <Modal\n                                        className=\"custom_modal\"\n                                        open={jobRejectModal}\n                                        onClose={() => {\n                                            setJobRejectModal(false)\n                                        }}\n                                        aria-labelledby=\"simple-modal-title\"\n                                        aria-describedby=\"simple-modal-description\"\n                                    >\n                                        <div className=\"custom_wh profile_modal\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                                            <div className=\"heading\">\n                                                <span className=\"sub_title\">{`Your reply to job cancellation`}</span>\n                                                <button\n                                                    className=\"close_btn\"\n                                                    onClick={() => {\n                                                        setJobRejectModal(false)\n                                                    }}>\n                                                    <img src={cancel} alt=\"cancel\" />\n                                                </button>\n                                            </div>\n                                            <div className=\"form_field\">\n                                                <label className=\"form_label\">{`Let the tradie and Tickt know if you accept or reject cancelling for this job.`}</label>\n                                                <div className=\"text_field\">\n                                                    <textarea\n                                                        placeholder={`I disagree with this cancelling`}\n                                                        maxLength={250}\n                                                        value={replyText}\n                                                        onChange={(e: any) => { setReplyText(e.target.value) }}\n                                                    />\n                                                    <span className=\"char_count\">{`${replyText?.length}/250`}</span>\n                                                </div>\n                                                {replyText?.length > 250 && <span className=\"error_msg\">{errors.replyCancelReason}</span>}\n                                            </div>\n                                            <div className=\"bottom_btn custom_btn\">\n                                                <button\n                                                    className=\"fill_btn full_btn btn-effect\"\n                                                    onClick={() => {\n                                                        operationCancelJob();\n                                                    }}>\n                                                    {'Send'}\n                                                </button>\n                                                <button\n                                                    className=\"fill_grey_btn btn-effect\"\n                                                    onClick={() => {\n                                                        setJobRejectModal(false);\n                                                        setJobData({});\n                                                        setPendingRequestClicked(true);\n                                                    }}>\n                                                    {'Cancel'}\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </Modal>\n\n                                    <Modal\n                                        className=\"custom_modal\"\n                                        open={jobAcceptModal}\n                                        onClose={() => {\n                                            setJobAcceptModal(false);\n                                        }}\n                                        aria-labelledby=\"simple-modal-title\"\n                                        aria-describedby=\"simple-modal-description\"\n                                    >\n                                        <div className=\"custom_wh confirmation\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                                            <div className=\"heading\">\n                                                <span className=\"xs_sub_title\">{`Accept Job Cancellation Request`}</span>\n                                                <button\n                                                    className=\"close_btn\"\n                                                    onClick={() => {\n                                                        setJobAcceptModal(false);\n                                                        setPendingRequestClicked(false)\n                                                    }}>\n                                                    <img src={cancel} alt=\"cancel\" />\n                                                </button>\n                                            </div>\n                                            <div className=\"modal_message\">\n                                                <p>Are you sure you still want to proceed?</p>\n                                            </div>\n                                            <div className=\"dialog_actions\">\n                                                <button\n                                                    className=\"fill_btn btn-effect\"\n                                                    onClick={() => {\n                                                        operationCancelJob();\n                                                    }}>Yes</button>\n                                                <button className=\"fill_grey_btn btn-effect\"\n                                                    onClick={() => {\n                                                        setJobAcceptModal(false);\n                                                        setJobData({});\n                                                        setPendingRequestClicked(true)\n                                                    }}>No</button>\n                                            </div>\n                                        </div>\n                                    </Modal>\n\n                                    {/* {jobDetailsData?.isCancelJobRequest &&\n                                        <div className=\"chang_req_card mt-sm\">\n                                            <span className=\"sub_title\">Job cancellation request</span>\n                                            <p className=\"commn_para\">\n                                                {JobCancelReasons(jobDetailsData?.reasonForCancelJobRequest)}\n                                            </p>\n                                            {jobDetailsData?.reasonNoteForCancelJobRequest && <p className=\"commn_para\">{jobDetailsData?.reasonNoteForCancelJobRequest}</p>}\n                                            <button\n                                                onClick={() => {\n                                                    handleCancelJob(1, jobDetailsData)\n                                                }}\n                                                className=\"fill_btn btn-effect\">\n                                                {'Accept'}\n                                            </button>\n                                            <button\n                                                onClick={() => {\n                                                    handleCancelJob(2, jobDetailsData)\n                                                }}\n                                                className=\"fill_grey_btn btn-effect\">\n                                                {'Reject'}\n                                            </button>\n                                        </div>} */}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_8\">\n                                <div className=\"description\">\n                                    <span className=\"sub_title\">Details</span>\n                                    <p className=\"commn_para\">{jobDetailsData.details}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_4\">\n                                <span className=\"sub_title\">Job Milestones\n                                    {/* <b>{`Job Milestones ${jobDetailsData?.milestoneNumber} `}</b>{`of ${jobDetailsData?.totalMilestones}`} */}\n                                    <b className=\"ft_normal\"> {`${jobDetailsData?.milestoneNumber} `}{`of ${jobDetailsData?.totalMilestones || ''}`} </b>\n                                </span>\n\n                                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                    <div className=\"progress_wrapper\">\n                                        <span className=\"approval_info\" id=\"digit-progress\">\n                                            {renderByStatus({ status: paramStatus })}\n                                        </span>\n                                        <span className=\"progress_bar\">\n                                            <input\n                                                className=\"done_progress\"\n                                                id=\"progress-bar\"\n                                                type=\"range\"\n                                                min=\"0\"\n                                                value={jobDetailsData?.milestoneNumber > 0 ? jobDetailsData?.milestoneNumber / jobDetailsData?.totalMilestones * 100 : 0}\n                                            />\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <ul className=\"job_milestone\">\n                                    {jobDetailsData && jobDetailsData?.jobMilestonesData?.map((item: any, index: number) => {\n                                        return (\n                                            <li key={item.milestoneId}>\n                                                <span>{`${index + 1}. ${item?.milestoneName}`}</span>\n                                                {console.log({ item })}\n                                                <span>{renderTime(item?.fromDate, item?.toDate)}</span>\n                                                {/* <span>{item?.fromDate?.length && !item?.toDate?.length ?\n                                                    `${moment(item?.fromDate).format('MMM DD')}` :\n                                                    item?.fromDate?.length && item?.toDate?.length ?\n                                                        `${moment(item?.fromDate).format('MMM DD ')}-${moment(item?.toDate).format(' DD')}` : ''\n                                                }</span> */}\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                                <button className=\"fill_grey_btn ques_btn\" onClick={() => setQuestionsData((prevData: any) => ({ ...prevData, showAllQuestionsClicked: true }))}>\n                                    <img src={question} alt=\"question\" />\n                                    {`${jobDetailsData?.questionsCount || '0'} ${jobDetailsData?.questionsCount === 1 ? 'question' : 'questions'}`}\n                                </button>\n                            </div>\n                            {/* show all questions modal */}\n                            {questionsData.showAllQuestionsClicked &&\n                                <Modal\n                                    className=\"ques_ans_modal\"\n                                    open={questionsData.showAllQuestionsClicked}\n                                    onClose={() => {\n                                        modalCloseHandler('showAllQuestionsClicked')\n                                    }}\n                                    aria-labelledby=\"simple-modal-title\"\n                                    aria-describedby=\"simple-modal-description\"\n                                >\n                                    <>\n                                        <div className=\"custom_wh\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                                            <div className=\"heading\">\n                                                <span\n                                                    className=\"sub_title\">\n                                                    {`${jobDetailsData?.questionsCount || 0} ${jobDetailsData?.questionsCount === 1 ? 'question' : 'questions'}`}\n                                                </span>\n                                                <button className=\"close_btn\" onClick={() => modalCloseHandler('showAllQuestionsClicked')}>\n                                                    <img src={cancel} alt=\"cancel\" />\n                                                </button>\n                                            </div>\n                                            <div className=\"inner_wrap\">\n                                                {questionList?.map((item: any, index: number) => {\n                                                    const { questionData } = item;\n                                                    return (\n                                                        <div key={questionData?.questionId}>\n                                                            <div className=\"question_ans_card\">\n                                                                <div className=\"user_detail\">\n                                                                    <figure className=\"user_img\">\n                                                                        <img src={questionData?.userImage || dummy} alt=\"user-img\" />\n                                                                    </figure>\n                                                                    <div className=\"details\">\n                                                                        <span className=\"user_name\">{questionData?.userName}</span>\n                                                                        <span className=\"date\">{questionData?.date}</span>\n                                                                    </div>\n                                                                </div>\n                                                                <p>{questionData?.question}</p>\n                                                                {console.log({ questionList })}\n                                                                {/* {Object.keys(questionData?.answerData).length > 0 &&\n                                                                    !(questionsData.answerShownHideList.includes(questionData?.questionId)) ?\n                                                                    <span\n                                                                        className=\"show_hide_ans link\"\n                                                                        onClick={() => questionHandler('showAnswerClicked', questionData?.questionId)}>\n                                                                        {'Show answer'}\n                                                                    </span>: (\n                                                                        <span\n                                                                        className=\"show_hide_ans link\">\n                                                                            {'Answer'}\n                                                                        </span>\n                                                                    )} */}\n                                                                {/* {questionData?.isModifiable &&\n                                                                    <span\n                                                                        className=\"action link\"\n                                                                        onClick={() => questionHandler('updateQuestion', questionData?.questionId, questionData?.question)}>\n                                                                        {'Edit'}\n                                                                    </span>}\n                                                                {questionData?.isModifiable &&\n                                                                    <span\n                                                                        className=\"action link\"\n                                                                        onClick={() => questionHandler('deleteQuestion', questionData?.questionId, '', index)}>\n                                                                        {'Delete'}\n                                                                    </span>} */}\n                                                                {Object.keys(questionsData?.showHideAnswer).length &&\n                                                                    questionsData?.showHideAnswer[questionData?.questionId] ? (\n                                                                    <span\n                                                                        onClick={() => questionHandler('showAnswerClicked', item?.questionData?.questionId)}\n                                                                        className=\"show_hide_ans link\">\n                                                                        {'Hide answer'}\n                                                                    </span>\n                                                                ) : Object.keys(item?.questionData?.answerData).length ? (\n                                                                    <span\n                                                                        onClick={() => questionHandler('hideAnswerClicked', item?.questionData?.questionId)}\n                                                                        className=\"show_hide_ans link\">\n                                                                        {'Show answer'}\n                                                                    </span>\n                                                                ) : (\n                                                                    <span\n                                                                        onClick={() => questionHandler('askQuestion', item?.questionData?.questionId)}\n                                                                        className=\"show_hide_ans link\">\n                                                                        {'Answer'}\n                                                                    </span>\n                                                                )}\n                                                            </div>\n                                                            {Object.keys(questionsData?.showHideAnswer).length &&\n                                                                questionsData?.showHideAnswer[questionData?.questionId] &&\n                                                                Object.keys(item?.questionData?.answerData).length ?\n                                                                <div className=\"question_ans_card answer\">\n                                                                    <div className=\"user_detail\">\n                                                                        <figure className=\"user_img\">\n                                                                            <img\n                                                                                src={questionData?.answerData?.userImage || dummy}\n                                                                                alt=\"user-img\"\n                                                                            />\n                                                                        </figure>\n                                                                        <div className=\"details\">\n                                                                            <span className=\"user_name\">{questionData?.answerData?.userName}</span>\n                                                                            <span className=\"date\">{questionData?.answerData?.date}</span>\n                                                                        </div>\n                                                                    </div>\n                                                                    <p>{questionData?.answerData?.answer}</p>\n                                                                    <span\n                                                                        onClick={() => questionHandler('updateQuestion', item?.questionData?.questionId, item?.questionData?.answerData?.answer, null, item?.questionData?.answerData?.answerId)}\n                                                                        className=\"show_hide_ans link\">Edit</span>\n                                                                    <span\n                                                                        onClick={() => questionHandler('deleteQuestion', item?.questionData?.questionId, '', index, item?.questionData?.answerData?.answerId)}\n                                                                        className=\"show_hide_ans link\">Delete</span>\n                                                                </div> : ''}\n                                                        </div>\n                                                    )\n                                                })}\n                                                {jobDetailsData?.questionsCount > questionList.length && <div className=\"text-center\">\n                                                    <button className=\"fill_grey_btn load_more\" onClick={loadMoreQuestionHandler}>View more</button>\n                                                </div>}\n                                            </div>\n                                        </div>\n                                    </>\n                                </Modal>\n                            }\n                            {/* show ask question modal */}\n                            {questionsData.askQuestionsClicked &&\n                                <Modal\n                                    className=\"ques_ans_modal\"\n                                    open={questionsData.askQuestionsClicked}\n                                    onClose={() => modalCloseHandler('askQuestionsClicked')}\n                                    aria-labelledby=\"simple-modal-title\"\n                                    aria-describedby=\"simple-modal-description\"\n                                >\n                                    <div\n                                        className=\"custom_wh ask_ques\"\n                                        data-aos=\"zoom-in\"\n                                        data-aos-delay=\"30\"\n                                        data-aos-duration=\"1000\">\n                                        <div className=\"heading\">\n                                            <span className=\"sub_title\">\n                                                {questionsData.updateQuestionsClicked ? 'Edit Answer' : `Answer`}\n                                            </span>\n                                            <button\n                                                className=\"close_btn\"\n                                                onClick={() => modalCloseHandler('askQuestionsClicked')}>\n                                                <img src={cancel} alt=\"cancel\" />\n                                            </button>\n                                        </div>\n                                        <div className=\"form_field\">\n                                            <label className=\"form_label\">Your answer</label>\n                                            <div className=\"text_field\">\n                                                <textarea placeholder=\"Text\" value={questionsData.questionData} onChange={(e) => handleChange(e, 'questionData')}></textarea>\n                                                <span className=\"char_count\">{`${questionsData.questionData.trim().length}/250`}</span>\n                                            </div>\n                                            {!!errors.questionData && <span className=\"error_msg\">{errors.questionData}</span>}\n                                        </div>\n                                        <div className=\"bottom_btn custom_btn\">\n                                            {questionsData.updateQuestionsClicked ? <button className=\"fill_btn full_btn\" onClick={() => submitQuestionHandler('updateQuestion')}>Save</button>\n                                                : <button className=\"fill_btn full_btn\" onClick={() => questionHandler('submitAskQuestion')}>Send</button>}\n                                            <button className=\"fill_grey_btn\" onClick={() => questionHandler('questionCancelBtnClicked')}>Cancel</button>\n                                        </div>\n                                    </div>\n                                </Modal>\n                            }\n                            {/* send confirmation yes/no modal */}\n                            {questionsData.confirmationClicked &&\n                                <Modal\n                                    className=\"custom_modal\"\n                                    open={questionsData.confirmationClicked}\n                                    onClose={() => modalCloseHandler('confirmationClicked')}\n                                    aria-labelledby=\"simple-modal-title\"\n                                    aria-describedby=\"simple-modal-description\"\n                                >\n                                    <>\n                                        <div className=\"custom_wh confirmation\" data-aos=\"zoom-in\" data-aos-delay=\"30\" data-aos-duration=\"1000\">\n                                            <div className=\"heading\">\n                                                <span className=\"xs_sub_title\">{`${questionsData.deleteQuestionsClicked ? 'Delete' : 'Post'} Answer Confirmation`}</span>\n                                                <button className=\"close_btn\" onClick={() => modalCloseHandler('confirmationClicked')}>\n                                                    <img src={cancel} alt=\"cancel\" />\n                                                </button>\n                                            </div>\n                                            <div className=\"modal_message\">\n                                                <p>{`Are you sure you want to ${questionsData.deleteQuestionsClicked ? 'delete' : 'post'} a answer?`}</p>\n                                            </div>\n                                            <div className=\"dialog_actions\">\n                                                <button className=\"fill_btn\" onClick={() => submitQuestionHandler(questionsData.questionsClickedType)}>Yes</button>\n                                                <button className=\"fill_grey_btn\" onClick={() => modalCloseHandler('confirmationClicked')}>No</button>\n                                            </div>\n                                        </div>\n                                    </>\n                                </Modal>\n                            }\n                            <div className=\"flex_col_sm_8\">\n                                <div className=\"flex_row\">\n                                    <div className=\"flex_col_sm_12\">\n                                        <span className=\"sub_title\">Job type</span>\n                                        <ul className=\"job_categories\">\n                                            <li>\n                                                <figure className=\"type_icon\">\n                                                    <img alt=\"\" src={jobDetailsData?.jobType?.jobTypeImage} />\n                                                </figure>\n                                                <span className=\"name\">{jobDetailsData?.jobType?.jobTypeName}</span>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"flex_row\">\n                                    <div className=\"flex_col_sm_12\">\n                                        <span className=\"sub_title\">\n                                            {'Specialisations needed'}\n                                        </span>\n                                        <div className=\"tags_wrap\">\n                                            <ul>\n                                                {jobDetailsData?.specializationData?.map((item: any) => {\n                                                    return <li key={item.specializationId}>{item.specializationName}</li>\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"section_wrapper\">\n                            <span className=\"sub_title\">Posted by</span>\n                            <div className=\"flex_row\">\n                                <div className=\"flex_col_sm_3\">\n                                    <div className={`tradie_card posted_by`}>\n                                        {/* <div className={`tradie_card posted_by ${activeType == \"active\" ? 'view_more' : ''}`}> */}\n                                        {/* {activeType == \"active\" && (\n                                            <span\n                                                className=\"chat circle\"\n                                                onClick={(e) => {\n                                                    e.preventDefault();\n                                                    props.history.push({\n                                                        pathname: `/chat`,\n                                                        state: {\n                                                            tradieId: tradieId,\n                                                            builderId: storageService.getItem('userInfo')?._id,\n                                                            jobId: jobDetailsData?.jobId,\n                                                            jobName: jobDetailsData?.jobName\n                                                        }\n                                                    })\n                                                }}>\n                                            </span>\n                                        )} */}\n                                        <div className=\"user_wrap\">\n                                            <figure className={`u_img`}>\n                                                {(jobDetailsData?.postedBy)?.hasOwnProperty('builderImage') ? (\n                                                    <img\n                                                        src={jobDetailsData?.postedBy?.builderImage || dummy}\n                                                        alt=\"traide-img\"\n                                                        onError={(e: any) => {\n                                                            if (e?.target?.onerror) {\n                                                                e.target.onerror = null;\n                                                            }\n                                                            if (e?.target?.src) {\n                                                                e.target.src = dummy;\n                                                            }\n                                                        }}\n                                                    />\n                                                ) : Array.isArray(jobDetailsData?.postedBy) ? renderBuilderAvatar(\"image\") : (\n                                                    <img\n                                                        src={dummy}\n                                                        alt=\"traide-img\"\n                                                    />\n                                                )}\n                                            </figure>\n                                            <div className='details'>\n                                                <span\n                                                    className=\"name\"\n                                                    onClick={() => {\n                                                        if (jobDetailsData?.postedBy?.builderName) {\n                                                            props?.history?.push(`/builder-info?builderId=${jobDetailsData?.postedBy?.builderId}`)\n                                                        }\n                                                    }}>\n                                                    {jobDetailsData?.postedBy?.builderName || renderBuilderAvatar(\"name\")}\n                                                </span>\n\n                                                <span className=\"rating\">\n                                                    {`${jobDetailsData?.postedBy?.ratings ? jobDetailsData?.postedBy?.ratings : '0'}, ${jobDetailsData?.postedBy?.reviews ? jobDetailsData?.postedBy?.reviews : '0'} reviews`}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default JobDetailsPage;\n"]},"metadata":{},"sourceType":"module"}