{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/openJobs.tsx\";\nimport React, { Component } from \"react\";\nimport approved from \"../../../assets/images/approved.png\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport { renderTime } from \"../../../utils/common\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OpenJobs extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.redirectToInfo = ({\n      jobId,\n      status\n    }) => {\n      let props = this.props;\n\n      if ((jobId === null || jobId === void 0 ? void 0 : jobId.length) && (status === null || status === void 0 ? void 0 : status.length)) {\n        let urlEncode = `?jobId=${jobId}&status=${status}&activeType=${props === null || props === void 0 ? void 0 : props.activeType}`;\n        this.props.history.push(`/job-detail?${urlEncode}`);\n      } else {\n        let urlEncode = `?jobId=${jobId}&status=${\"open\"}&activeType=${props === null || props === void 0 ? void 0 : props.activeType}`;\n        this.props.history.push(`/job-detail?${urlEncode}`);\n      }\n    };\n\n    this.setToggle = () => this.setState({\n      isToggleApplicants: !this.state.isToggleApplicants\n    });\n\n    this.state = {\n      isToggleApplicants: false,\n      quotesData: [],\n      toggleQuoteSort: true\n    };\n  }\n\n  render() {\n    var _props$history, _props$history$locati;\n\n    // props defined & render by params\n    const props = this.props;\n    const params = new URLSearchParams(props === null || props === void 0 ? void 0 : (_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.search);\n    const {\n      setJobLabel,\n      dataItems,\n      jobType,\n      isLoading\n    } = this.props;\n    let listData = dataItems;\n    let {\n      isToggleApplicants,\n      quotesData,\n      toggleQuoteSort\n    } = this.state;\n\n    if (isLoading) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: [jobType.charAt(0).toUpperCase() + jobType.slice(1), \" Jobs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row tradies_row\",\n        children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n          amount,\n          durations,\n          jobId,\n          jobName,\n          fromDate,\n          toDate,\n          milestoneNumber,\n          specializationId,\n          specializationName,\n          locationName,\n          status,\n          timeLeft,\n          total,\n          totalmem,\n          totalMilestones,\n          tradieListData,\n          tradeName,\n          quoteCount,\n          quoteJob,\n          tradieId,\n          location,\n          tradeSelectedUrl,\n          tradieImage\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradie_card\",\n            \"data-aos\": \"fade-in\",\n            \"data-aos-delay\": \"250\",\n            \"data-aos-duration\": \"1000\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                this.redirectToInfo({\n                  jobId,\n                  status\n                });\n              },\n              className: \"more_detail circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"u_img icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tradeSelectedUrl || jobTypePlaceholder,\n                  alt: \"traide-img\",\n                  onError: e => {\n                    var _e$target, _e$target2;\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                      e.target.onerror = null;\n                    }\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                      e.target.src = jobTypePlaceholder;\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: tradeName || \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"commn_para\",\n                  children: jobName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_info\",\n              children: quoteJob ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon dollar\",\n                  children: amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon calendar\",\n                  children: renderTime(fromDate, toDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: timeLeft\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon dollar\",\n                  children: amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon calendar\",\n                  children: renderTime(fromDate, toDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: timeLeft\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_progress_wrap\",\n              id: \"scroll-progress-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress_wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-digit\",\n                  id: \"digit-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: `Job Milestones ${milestoneNumber} `\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this), `of ${totalMilestones}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"approval_info\",\n                  children: [status === \"Approved\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: approved,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 31\n                  }, this), status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress_bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"done_progress\",\n                    id: \"progress-bar\",\n                    type: \"range\",\n                    min: \"0\",\n                    value: milestoneNumber / totalMilestones * 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 25\n              }, this), quoteJob ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  if ((quoteCount === null || quoteCount === void 0 ? void 0 : quoteCount.length) || quoteCount) {\n                    this.props.setJobLabel(\"listQuote\");\n                    this.props.history.replace(`/jobs?active=open&quote=true&jobId=${jobId}`);\n                  }\n                },\n                className: \"fill_grey_btn full_btn btn-effect\",\n                children: `${quoteCount} Quote${quoteCount === 1 ? \"\" : \"s\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 27\n              }, this) : null, !quoteJob && (tradieId === null || tradieId === void 0 ? void 0 : tradieId.length) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.setToggle();\n                  setJobLabel(\"applicantList\", jobId, 1, specializationId);\n                },\n                className: \"fill_grey_btn full_btn btn-effect\",\n                children: \"Applications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 27\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_record  m-t-vh\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"no_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: noDataFound,\n              alt: \"data not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this) // <div className=\"no_record  m-t-vh\">\n        //   <figure>\n        //     <figure className=\"no_img\">\n        //       <img src={newJobs} alt=\"data not found\" />\n        //     </figure>\n        //   </figure>\n        //   <span className=\"empty_screen_text\">\n        //     You don't have any open job yet\n        //   </span>\n        //   <button\n        //     className=\"empty_screen_button\"\n        //     onClick={() => props.history.push(\"/post-new-job\")}\n        //   >\n        //     Post a job\n        //   </button>\n        // </div>\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default OpenJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/openJobs.tsx"],"names":["React","Component","approved","jobTypePlaceholder","renderTime","noDataFound","OpenJobs","constructor","props","redirectToInfo","jobId","status","length","urlEncode","activeType","history","push","setToggle","setState","isToggleApplicants","state","quotesData","toggleQuoteSort","render","params","URLSearchParams","location","search","setJobLabel","dataItems","jobType","isLoading","listData","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","locationName","timeLeft","total","totalmem","totalMilestones","tradieListData","tradeName","quoteCount","quoteJob","tradieId","tradeSelectedUrl","tradieImage","e","target","onerror","src","replace"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport approved from \"../../../assets/images/approved.png\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport { renderTime } from \"../../../utils/common\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\n\ninterface Active {\n  amount: any;\n  durations: any;\n  jobId: any;\n  jobName: any;\n  fromDate: any;\n  toDate: any;\n  milestoneNumber: any;\n  specializationId: any;\n  specializationName: any;\n  status: any;\n  timeLeft: any;\n  total: any;\n  totalmem: any;\n  location: any;\n  locationName: any;\n  totalMilestones: any;\n  tradieListData: any;\n  quoteCount: any;\n  quoteJob: any;\n  tradeName: any;\n  tradieId: any;\n  tradeSelectedUrl: any;\n  tradieImage: any;\n}\ninterface State {\n  isToggleApplicants: boolean;\n  quotesData: any;\n  toggleQuoteSort: boolean;\n}\n\ninterface Props {\n  setJobLabel: any;\n  dataItems: any;\n  applicantsList?: any;\n  jobType: any;\n  history?: any;\n  isLoading: any;\n  activeType?: any;\n}\n\nclass OpenJobs extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isToggleApplicants: false,\n      quotesData: [],\n      toggleQuoteSort: true,\n    };\n  }\n\n  redirectToInfo = ({ jobId, status }: any) => {\n    let props: any = this.props;\n    if (jobId?.length && status?.length) {\n      let urlEncode: any = `?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`;\n      this.props.history.push(`/job-detail?${urlEncode}`);\n    } else {\n      let urlEncode: any = `?jobId=${jobId}&status=${\"open\"}&activeType=${\n        props?.activeType\n      }`;\n      this.props.history.push(`/job-detail?${urlEncode}`);\n    }\n  };\n\n  setToggle = () =>\n    this.setState({ isToggleApplicants: !this.state.isToggleApplicants });\n\n  render() {\n    // props defined & render by params\n    const props: any = this.props;\n    const params = new URLSearchParams(props?.history?.location?.search);\n\n    const { setJobLabel, dataItems, jobType, isLoading } =\n      this.props;\n    let listData: any = dataItems;\n    let { isToggleApplicants, quotesData, toggleQuoteSort } = this.state;\n\n    if (isLoading) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <span className=\"sub_title\">\n          {jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n          {/* {listData?.length} */}\n        </span>\n        <div className=\"flex_row tradies_row\">\n          {listData?.length\n            ? listData.map(\n                ({\n                  amount,\n                  durations,\n                  jobId,\n                  jobName,\n                  fromDate,\n                  toDate,\n                  milestoneNumber,\n                  specializationId,\n                  specializationName,\n                  locationName,\n                  status,\n                  timeLeft,\n                  total,\n                  totalmem,\n                  totalMilestones,\n                  tradieListData,\n                  tradeName,\n                  quoteCount,\n                  quoteJob,\n                  tradieId,\n                  location,\n                  tradeSelectedUrl,\n                  tradieImage,\n                }: Active) => (\n                  <div className=\"flex_col_sm_6\">\n                    <div\n                      className=\"tradie_card\"\n                      data-aos=\"fade-in\"\n                      data-aos-delay=\"250\"\n                      data-aos-duration=\"1000\"\n                    >\n                      <span\n                        onClick={() => {\n                          this.redirectToInfo({ jobId, status });\n                        }}\n                        className=\"more_detail circle\"\n                      ></span>\n                      <div className=\"user_wrap\">\n                        <figure className=\"u_img icon\">\n                          <img\n                            src={tradeSelectedUrl || jobTypePlaceholder}\n                            alt=\"traide-img\"\n                            onError={(e: any) => {\n                              if (e?.target?.onerror) {\n                                e.target.onerror = null;\n                              }\n                              if (e?.target?.src) {\n                                e.target.src = jobTypePlaceholder;\n                              }\n                            }}\n                          />\n                        </figure>\n                        <div className=\"details\">\n                          <span className=\"name\">{tradeName || \"0\"}</span>\n                          <p className=\"commn_para\">{jobName}</p>\n                        </div>\n                      </div>\n                      <div className=\"job_info\">\n                        {quoteJob ? (\n                          <ul>\n                            <li className=\"icon dollar\">{amount}</li>\n                            <li className=\"\"></li>\n                            <li className=\"icon calendar\">\n                              {renderTime(fromDate, toDate)}\n                            </li>\n                            <li>\n                              <span>{timeLeft}</span>\n                            </li>\n                          </ul>\n                        ) : (\n                          <ul>\n                            <li className=\"icon dollar\">{amount}</li>\n                            <li className=\"\">\n                              <span>{total}</span>\n                            </li>\n                            <li className=\"icon calendar\">\n                              {renderTime(fromDate, toDate)}\n                            </li>\n                            <li>\n                              <span>{timeLeft}</span>\n                            </li>\n                          </ul>\n                        )}\n                      </div>\n                      <div\n                        className=\"job_progress_wrap\"\n                        id=\"scroll-progress-bar\"\n                      >\n                        <div className=\"progress_wrapper\">\n                          <span className=\"completed-digit\" id=\"digit-progress\">\n                            <b>{`Job Milestones ${milestoneNumber} `}</b>\n                            {`of ${totalMilestones}`}\n                          </span>\n                          <span className=\"approval_info\">\n                            {status === \"Approved\" && (\n                              <img src={approved} alt=\"icon\" />\n                            )}\n                            {status}\n                          </span>\n                          <span className=\"progress_bar\">\n                            <input\n                              className=\"done_progress\"\n                              id=\"progress-bar\"\n                              type=\"range\"\n                              min=\"0\"\n                              value={(milestoneNumber / totalMilestones) * 100}\n                            />\n                          </span>\n                        </div>\n\n                        {quoteJob ? (\n                          <button\n                            onClick={() => {\n                              if (quoteCount?.length || quoteCount) {\n                                this.props.setJobLabel(\"listQuote\");\n                                this.props.history.replace(\n                                  `/jobs?active=open&quote=true&jobId=${jobId}`\n                                );\n                              }\n                            }}\n                            className=\"fill_grey_btn full_btn btn-effect\"\n                          >\n                            {`${quoteCount} Quote${\n                              quoteCount === 1 ? \"\" : \"s\"\n                            }`}\n                          </button>\n                        ) : null}\n                        {!quoteJob && tradieId?.length ? (\n                          <button\n                            onClick={() => {\n                              this.setToggle();\n                              setJobLabel(\n                                \"applicantList\",\n                                jobId,\n                                1,\n                                specializationId\n                              );\n                            }}\n                            className=\"fill_grey_btn full_btn btn-effect\"\n                          >\n                            {\"Applications\"}\n                          </button>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                )\n              )\n            : !isLoading && (\n                <div className=\"no_record  m-t-vh\">\n                  <figure className=\"no_img\">\n                    <img src={noDataFound} alt=\"data not found\" />\n                  </figure>\n                  <span>{\"No Data Found\"}</span>\n                </div>\n                // <div className=\"no_record  m-t-vh\">\n                //   <figure>\n                //     <figure className=\"no_img\">\n                //       <img src={newJobs} alt=\"data not found\" />\n                //     </figure>\n                //   </figure>\n\n                //   <span className=\"empty_screen_text\">\n                //     You don't have any open job yet\n                //   </span>\n                //   <button\n                //     className=\"empty_screen_button\"\n                //     onClick={() => props.history.push(\"/post-new-job\")}\n                //   >\n                //     Post a job\n                //   </button>\n                // </div>\n              )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OpenJobs;\n"]},"metadata":{},"sourceType":"module"}