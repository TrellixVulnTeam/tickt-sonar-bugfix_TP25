{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/confirmAndPay.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport masterIcon from \"../../../../assets/images/mastercard.svg\";\nimport visaIcon from \"../../../../assets/images/visacard.svg\";\nimport check from '../../../../assets/images/checked-2.png';\nimport PaymentDetails from './paymentDetails';\nimport { withRouter } from 'react-router-dom';\nimport dotMenu from '../../../../assets/images/menu-dot.png';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getCardList, deleteCard } from '../../../../redux/jobs/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmAndPay = props => {\n  _s();\n\n  const [toggle, setToggle] = useState(false);\n  const [selected, setSelected] = useState(0);\n  const [editItem, setEditItem] = useState('');\n  const [deleteToggle, setDeleteToggle] = useState(false);\n  const [paymentDetail, setPaymentDetail] = useState([]);\n\n  const setAfterFetch = filterItems => {\n    var _props$toggleDetails;\n\n    console.log('Here!', {\n      toggle: props === null || props === void 0 ? void 0 : props.toggleDetails\n    });\n\n    if (props === null || props === void 0 ? void 0 : (_props$toggleDetails = props.toggleDetails) === null || _props$toggleDetails === void 0 ? void 0 : _props$toggleDetails.toggle) {\n      var _props$toggleDetails2;\n\n      setToggle(true);\n      let data = props === null || props === void 0 ? void 0 : (_props$toggleDetails2 = props.toggleDetails) === null || _props$toggleDetails2 === void 0 ? void 0 : _props$toggleDetails2.data;\n      let exp_date = (data === null || data === void 0 ? void 0 : data.exp_month).toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false\n      });\n      let data_ = {\n        cardId: data === null || data === void 0 ? void 0 : data.cardId,\n        number: `${data === null || data === void 0 ? void 0 : data.last4}`,\n        cardholderName: data === null || data === void 0 ? void 0 : data.name,\n        date: `${exp_date}/${(data === null || data === void 0 ? void 0 : data.exp_year).toString().substring(2, 4)}`,\n        cvv: '000',\n        cardType: data === null || data === void 0 ? void 0 : data.funding,\n        fetched: true\n      };\n      setEditItem(data_);\n    }\n  };\n\n  const fetchMyAPI = useCallback(async () => {\n    let result = await getCardList();\n    let data = result.data;\n    let filterItems = [];\n\n    if (data === null || data === void 0 ? void 0 : data.length) {\n      filterItems = data.map(item => {\n        let exp_date = (item === null || item === void 0 ? void 0 : item.exp_month).toLocaleString('en-US', {\n          minimumIntegerDigits: 2,\n          useGrouping: false\n        });\n        return {\n          brand: item === null || item === void 0 ? void 0 : item.brand,\n          cardId: item === null || item === void 0 ? void 0 : item.cardId,\n          number: `${item === null || item === void 0 ? void 0 : item.last4}`,\n          cardholderName: item === null || item === void 0 ? void 0 : item.name,\n          date: `${exp_date}/${(item === null || item === void 0 ? void 0 : item.exp_year).toString().substring(2, 4)}`,\n          cvv: '000',\n          cardType: item === null || item === void 0 ? void 0 : item.funding,\n          fetched: true\n        };\n      });\n    }\n\n    setPaymentDetail(filterItems);\n    setAfterFetch(filterItems);\n  }, []);\n  useEffect(() => {\n    fetchMyAPI();\n  }, []);\n  useEffect(() => {\n    if (toggle == false) {\n      fetchMyAPI();\n    }\n  }, [toggle]);\n\n  const backToScreen = () => {\n    var _props$toggleDetails3;\n\n    setToggle(false);\n\n    if (props === null || props === void 0 ? void 0 : (_props$toggleDetails3 = props.toggleDetails) === null || _props$toggleDetails3 === void 0 ? void 0 : _props$toggleDetails3.data) {\n      props.backToScreen();\n    }\n  };\n\n  const setDetials = data => {\n    if (data === null || data === void 0 ? void 0 : data.index) {\n      paymentDetail[data === null || data === void 0 ? void 0 : data.index] = data;\n    } else {\n      setPaymentDetail(prev => [...prev, data]);\n    }\n  };\n\n  if (toggle) {\n    console.log({\n      editItem\n    });\n    return /*#__PURE__*/_jsxDEV(PaymentDetails, {\n      jobName: props === null || props === void 0 ? void 0 : props.jobName,\n      editItem: editItem,\n      backToScreen: backToScreen,\n      setDetials: setDetials,\n      hideExtra: props.hideExtra,\n      onSubmitAccept: props.onSubmitAccept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [!props.hideExtra ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.backToScreen();\n          },\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: !props.hideExtra ? `xs_sub_title` : 'xs_sub_title mb0',\n          children: props === null || props === void 0 ? void 0 : props.jobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: deleteToggle,\n          onClose: () => {\n            setDeleteToggle(prev => !prev);\n          },\n          \"aria-labelledby\": \"alert-dialog-title\",\n          \"aria-describedby\": \"alert-dialog-description\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"alert-dialog-title\",\n            children: \"Are you sure you want to delete ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: async e => {\n                e.preventDefault();\n                let result = await deleteCard({\n                  cardId: paymentDetail[selected].cardId\n                });\n\n                if (result.success) {\n                  setDeleteToggle(prev => !prev);\n                  fetchMyAPI();\n                }\n              },\n              color: \"primary\",\n              autoFocus: true,\n              children: 'Yes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setDeleteToggle(prev => !prev);\n              },\n              color: \"primary\",\n              children: 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), selected > -1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dot_menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: dotMenu,\n            alt: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit_menu\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  try {\n                    console.log({\n                      paymentDetail,\n                      selected\n                    });\n                    let item = paymentDetail.find((_, index) => {\n                      console.log({\n                        _,\n                        index\n                      });\n\n                      if (index == selected) {\n                        return _;\n                      }\n                    });\n                    item['index'] = selected;\n                    setEditItem(item);\n                    setToggle(true);\n                  } catch (err) {\n                    console.log(err);\n                  }\n                },\n                className: \"icon lodge\",\n                children: 'Edit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  setDeleteToggle(prev => !prev);\n                },\n                className: \"icon delete\",\n                children: 'Delete'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: !props.hideExtra ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: 'Confirm and pay'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: 'Payment Details'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb130\",\n        children: [(paymentDetail === null || paymentDetail === void 0 ? void 0 : paymentDetail.length) ? paymentDetail.map((item, index) => {\n          var _item$cardType, _item$cardType2, _item$number, _item$number2;\n\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelected(index);\n            },\n            className: \"card_btn full_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.brand == 'visa' ? visaIcon : masterIcon,\n              alt: \"card-icon\",\n              className: \"pos card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), `${(item === null || item === void 0 ? void 0 : (_item$cardType = item.cardType) === null || _item$cardType === void 0 ? void 0 : _item$cardType.charAt(0).toUpperCase()) + (item === null || item === void 0 ? void 0 : (_item$cardType2 = item.cardType) === null || _item$cardType2 === void 0 ? void 0 : _item$cardType2.slice(1))} Card`, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"show_label\",\n              children: [\"XXXX \", (item === null || item === void 0 ? void 0 : item.number).substring((item === null || item === void 0 ? void 0 : (_item$number = item.number) === null || _item$number === void 0 ? void 0 : _item$number.length) - 4, item === null || item === void 0 ? void 0 : (_item$number2 = item.number) === null || _item$number2 === void 0 ? void 0 : _item$number2.length)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), selected == index ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: check,\n              alt: \"check\",\n              className: \"pos check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this);\n        }) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setToggle(true);\n            setEditItem('');\n          },\n          className: \"fill_grey_btn full_btn btn-effect\",\n          children: (paymentDetail === null || paymentDetail === void 0 ? void 0 : paymentDetail.length) ? 'Add another card' : 'Add card'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), !props.hideExtra ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"payment_note\",\n            children: \"Tickt does not store your payment information.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para\",\n            children: \"Tickt does not handle payment for jobs, we only facilitate communication between tradespeople and builders. If you have problems receiving your payment, please contact your builder.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _props$dataItem, _props$dataItem$selec, _props$dataItem2, _props$dataItem2$item, _paymentDetail$select;\n\n            // this will submit the accept request.\n            let index = props === null || props === void 0 ? void 0 : (_props$dataItem = props.dataItem) === null || _props$dataItem === void 0 ? void 0 : (_props$dataItem$selec = _props$dataItem.selectedMilestoneIndex) === null || _props$dataItem$selec === void 0 ? void 0 : _props$dataItem$selec.index;\n            let milestoneAmount = props === null || props === void 0 ? void 0 : (_props$dataItem2 = props.dataItem) === null || _props$dataItem2 === void 0 ? void 0 : (_props$dataItem2$item = _props$dataItem2.itemDetails.milestones[index]) === null || _props$dataItem2$item === void 0 ? void 0 : _props$dataItem2$item.milestoneAmount;\n            console.log({\n              props,\n              milestoneAmount,\n              index\n            }, '-------->');\n            props.onSubmitAccept({\n              total: props.total,\n              cardId: (_paymentDetail$select = paymentDetail[selected]) === null || _paymentDetail$select === void 0 ? void 0 : _paymentDetail$select.cardId,\n              milestoneAmount\n            });\n          },\n          className: `fill_btn full_btn btn-effect ${!(paymentDetail === null || paymentDetail === void 0 ? void 0 : paymentDetail.length) ? 'disable_btn' : ''}`,\n          children: 'Continue'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"payment_note\",\n            children: \"Tickt does not store your payment information.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para\",\n            children: \"Tickt does not handle payment for jobs, we only facilitate communication between tradespeople and builders. If you have problems receiving your payment, please contact your builder.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConfirmAndPay, \"pCQYEkDqQtLSR75MEOCg8pJRH8o=\");\n\n_c = ConfirmAndPay;\nexport default _c2 = withRouter(ConfirmAndPay);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConfirmAndPay\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/confirmAndPay.tsx"],"names":["React","useEffect","useState","useCallback","check","PaymentDetails","withRouter","dotMenu","Button","Dialog","DialogActions","DialogTitle","getCardList","deleteCard","ConfirmAndPay","props","toggle","setToggle","selected","setSelected","editItem","setEditItem","deleteToggle","setDeleteToggle","paymentDetail","setPaymentDetail","setAfterFetch","filterItems","console","log","toggleDetails","data","exp_date","exp_month","toLocaleString","minimumIntegerDigits","useGrouping","data_","cardId","number","last4","cardholderName","name","date","exp_year","toString","substring","cvv","cardType","funding","fetched","fetchMyAPI","result","length","map","item","brand","backToScreen","setDetials","index","prev","jobName","hideExtra","onSubmitAccept","e","preventDefault","success","find","_","err","visaIcon","masterIcon","charAt","toUpperCase","slice","dataItem","selectedMilestoneIndex","milestoneAmount","itemDetails","milestones","total"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport masterIcon from '../../../../assets/images/mastercard.svg';\nimport visaIcon from '../../../../assets/images/visacard.svg';\nimport check from '../../../../assets/images/checked-2.png';\n\nimport PaymentDetails from './paymentDetails';\nimport Success from './suceess';\nimport { withRouter } from 'react-router-dom';\n\nimport dotMenu from '../../../../assets/images/menu-dot.png'\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getCardList, deleteCard } from '../../../../redux/jobs/actions'\n\n\n\nconst ConfirmAndPay = (props: any) => {\n    const [toggle, setToggle] = useState(false);\n    const [selected, setSelected] = useState(0);\n    const [editItem, setEditItem] = useState<any>('');\n    const [deleteToggle, setDeleteToggle] = useState(false);\n    const [paymentDetail, setPaymentDetail] = useState<any>([]);\n\n\n    const setAfterFetch = (filterItems: any) => {\n        console.log('Here!', {\n            toggle: props?.toggleDetails\n        })\n        if (props?.toggleDetails?.toggle) {\n            setToggle(true);\n            let data = props?.toggleDetails?.data;\n            let exp_date = (data?.exp_month).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\n            let data_: any = {\n                cardId: data?.cardId,\n                number: `${data?.last4}`,\n                cardholderName: data?.name,\n                date: `${exp_date}/${((data?.exp_year).toString()).substring(2, 4)}`,\n                cvv: '000',\n                cardType: data?.funding,\n                fetched: true\n            }\n\n            setEditItem(data_);\n        }\n    }\n\n    const fetchMyAPI = useCallback(async () => {\n        let result: any = await getCardList();\n        let data: any = result.data;\n        let filterItems: any = []\n        if (data?.length) {\n            filterItems = data.map((item: any) => {\n                let exp_date = (item?.exp_month).toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false })\n                return {\n                    brand: item?.brand,\n                    cardId: item?.cardId,\n                    number: `${item?.last4}`,\n                    cardholderName: item?.name,\n                    date: `${exp_date}/${((item?.exp_year).toString()).substring(2, 4)}`,\n                    cvv: '000',\n                    cardType: item?.funding,\n                    fetched: true\n                }\n            });\n        }\n        setPaymentDetail(filterItems);\n        setAfterFetch(filterItems)\n    }, [])\n\n\n    useEffect(() => {\n        fetchMyAPI();\n    }, [])\n\n    useEffect(() => {\n        if (toggle == false) {\n            fetchMyAPI();\n        }\n    }, [toggle]);\n\n    const backToScreen = () => {\n        setToggle(false);\n        if (props?.toggleDetails?.data) {\n            props.backToScreen();\n        }\n    }\n\n    const setDetials = (data: any) => {\n        if (data?.index) {\n            paymentDetail[data?.index] = data;\n        } else {\n            setPaymentDetail((prev: any) => ([...prev, data]))\n        }\n    }\n\n    if (toggle) {\n        console.log({\n            editItem\n        })\n        return (\n            <PaymentDetails\n                jobName={props?.jobName}\n                editItem={editItem}\n                backToScreen={backToScreen}\n                setDetials={setDetials}\n                hideExtra={props.hideExtra}\n                onSubmitAccept={props.onSubmitAccept}\n            />\n        )\n    }\n\n    return (\n        <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n                <div className=\"relate\">\n                    {!props.hideExtra ? (\n                        <button\n                            onClick={() => {\n                                props.backToScreen()\n                            }}\n                            className=\"back\"></button>\n                    ) : null}\n                    <span className={!props.hideExtra ? `xs_sub_title` : 'xs_sub_title mb0'}>\n                        {props?.jobName}\n                    </span>\n\n                    <Dialog\n                        open={deleteToggle}\n                        onClose={() => {\n                            setDeleteToggle((prev: any) => !prev)\n                        }}\n                        aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-title\">\n                            {\"Are you sure you want to delete ?\"}\n                        </DialogTitle>\n                        <DialogActions>\n                            <Button\n                                onClick={async (e) => {\n                                    e.preventDefault();\n                                    let result: any = await deleteCard({ cardId: paymentDetail[selected].cardId })\n                                    if (result.success) {\n                                        setDeleteToggle((prev: any) => !prev)\n                                        fetchMyAPI();\n                                    }\n                                }}\n                                color=\"primary\" autoFocus>\n                                {'Yes'}\n                            </Button>\n                            <Button\n                                onClick={() => {\n                                    setDeleteToggle((prev: any) => !prev)\n                                }}\n\n                                color=\"primary\">\n                                {'No'}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n\n                    {(selected > -1) ? (\n                        <span className=\"dot_menu\">\n                            <img src={dotMenu} alt=\"edit\" />\n                            <div className=\"edit_menu\">\n                                <ul>\n                                    <li\n                                        onClick={() => {\n                                            try {\n                                                console.log({\n                                                    paymentDetail,\n                                                    selected\n                                                })\n                                                let item = paymentDetail.find((_: any, index: any) => {\n                                                    console.log({ _, index })\n                                                    if (index == selected) {\n                                                        return _;\n                                                    }\n                                                });\n                                                item['index'] = selected;\n                                                setEditItem(item);\n                                                setToggle(true);\n                                            } catch (err) {\n                                                console.log(err);\n                                            }\n                                        }}\n                                        className=\"icon lodge\">{'Edit'}</li>\n                                    <li\n                                        onClick={() => {\n                                            setDeleteToggle((prev: any) => !prev);\n                                        }}\n                                        className=\"icon delete\">{'Delete'}</li>\n                                </ul>\n                            </div>\n                        </span>\n                    ) : null}\n                </div>\n                <div className=\"form_field\">\n                    {!props.hideExtra ? (\n                        <span className=\"sub_title\">\n                            {'Confirm and pay'}\n                        </span>\n                    ) : (\n                        <span className=\"sub_title\">\n                            {'Payment Details'}\n                        </span>\n                    )}\n                </div>\n                <div className=\"mb130\">\n                    {paymentDetail?.length ?\n                        paymentDetail.map((item: any, index: any) => (\n                            <button\n                                onClick={() => {\n                                    setSelected(index);\n                                }}\n                                className=\"card_btn full_btn\">\n                                <img src={item.brand == 'visa' ? visaIcon : masterIcon} alt=\"card-icon\" className=\"pos card\" />\n                                {/* {item?.cardholderName} */}\n                                {`${item?.cardType?.charAt(0).toUpperCase() + item?.cardType?.slice(1)} Card`}{' '}\n                                <span className=\"show_label\">\n                                    XXXX {(item?.number).substring(item?.number?.length - 4, item?.number?.length)}\n                                </span>\n                                {selected == index ? (\n                                    <img src={check} alt=\"check\" className=\"pos check\" />\n                                ) : null}\n                            </button>\n                        ))\n                        : null}\n\n                    <button\n                        onClick={() => {\n                            setToggle(true);\n                            setEditItem('')\n                        }}\n                        className=\"fill_grey_btn full_btn btn-effect\">\n                        {paymentDetail?.length ? 'Add another card' : 'Add card'}\n                    </button>\n                </div>\n                {!props.hideExtra ? (\n                    <React.Fragment>\n                        <div className=\"form_field\">\n                            <span className=\"payment_note\">\n                                Tickt does not store your payment information.\n                            </span>\n                            <p className=\"commn_para\">\n                                Tickt does not handle payment for jobs, we only facilitate\n                                communication between tradespeople and builders. If you have problems\n                                receiving your payment, please contact your builder.\n                            </p>\n                        </div>\n\n                        <button\n                            onClick={() => {\n                                // this will submit the accept request.\n                                let index = props?.dataItem?.selectedMilestoneIndex?.index;\n                                let milestoneAmount = props?.dataItem?.itemDetails.milestones[index]?.milestoneAmount;\n                                console.log({\n                                    props,\n                                    milestoneAmount,\n                                    index\n                                }, '-------->');\n                                props.onSubmitAccept({\n                                    total: props.total,\n                                    cardId: paymentDetail[selected]?.cardId,\n                                    milestoneAmount\n                                });\n                            }}\n                            className={`fill_btn full_btn btn-effect ${!paymentDetail?.length ? 'disable_btn' : ''}`}>\n                            {'Continue'}\n                        </button>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <div className=\"form_field\">\n                            <span className=\"payment_note\">\n                                Tickt does not store your payment information.\n                            </span>\n                            <p className=\"commn_para\">\n                                Tickt does not handle payment for jobs, we only facilitate\n                                communication between tradespeople and builders. If you have problems\n                                receiving your payment, please contact your builder.\n                            </p>\n                        </div>\n                    </React.Fragment>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ConfirmAndPay);\n"]},"metadata":{},"sourceType":"module"}