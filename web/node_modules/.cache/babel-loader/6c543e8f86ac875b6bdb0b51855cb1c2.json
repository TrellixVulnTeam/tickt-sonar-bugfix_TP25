{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/jobDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport question from '../../../assets/images/ic-question.png';\nimport editIconBlue from '../../../assets/images/ic-edit-blue.png';\nimport leftIcon from '../../../assets/images/ic-back-arrow-line.png';\nimport rightIcon from '../../../assets/images/ic-next-arrow-line.png';\nimport { createPostJob, publishJobAgain, publishOpenJobAgain } from '../../../redux/jobs/actions';\nimport moment from 'moment';\nimport jobDummyImage from '../../../assets/images/ic-placeholder-detail.png';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport docThumbnail from '../../../assets/images/add-document.png';\nimport { renderTimeWithFormat } from '../../../utils/common';\nimport { useHistory } from \"react-router-dom\";\nimport { moengage, mixPanel } from '../../../services/analyticsTools';\nimport { MoEConstants } from '../../../utils/constants'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isDevelopment = process.env.NODE_ENV === \"development\" ? true : false;\nconst options = {\n  items: 1,\n  nav: true,\n  navText: [`<div class='nav-btn prev-slide'> <img src=\"${leftIcon}\"> </div>`, `<div class='nav-btn next-slide'> <img src=\"${rightIcon}\"> </div>`],\n  rewind: true,\n  autoplay: false,\n  slideBy: 1,\n  dots: true,\n  dotsEach: true,\n  dotData: true,\n  responsive: {\n    0: {\n      items: 1\n    },\n    600: {\n      items: 1\n    },\n    1000: {\n      items: 1\n    }\n  }\n};\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\nconst videoFormats = [\"mp4\", \"wmv\", \"avi\"];\nconst docformats = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst JobDetails = ({\n  data,\n  milestones,\n  categories,\n  builderProfile,\n  jobTypes,\n  stepCompleted,\n  updateDetailScreen,\n  handleStepForward,\n  handleStepComplete,\n  clearParentStates,\n  handleStepBack,\n  jobId\n}) => {\n  _s();\n\n  var _data_clone$urls3, _data$urls2, _data$urls3, _categorySelected$job, _categorySelected$job2, _categorySelected$cat, _categorySelected$cat2;\n\n  const [categorySelected, setSelected] = useState({\n    category: {},\n    job_type: {}\n  });\n  const [isEnablePopup, setPopUp] = useState(false);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [fsSlideListner, setFsSlideListner] = useState({});\n  const history = useHistory();\n  const tradeListRedux = useSelector(state => state.auth.tradeListData);\n\n  const findSelectedCategory = () => {\n    var _data$categories, _data$job_type, _data$specialization;\n\n    let preSelectedItem = null;\n    let preSelectedJobType = null;\n    let preSelectedSpecialization = null;\n\n    if ((data === null || data === void 0 ? void 0 : data.categories) && (data === null || data === void 0 ? void 0 : (_data$categories = data.categories) === null || _data$categories === void 0 ? void 0 : _data$categories.length)) {\n      preSelectedItem = data === null || data === void 0 ? void 0 : data.categories[0];\n    }\n\n    if ((data === null || data === void 0 ? void 0 : data.job_type) && (data === null || data === void 0 ? void 0 : (_data$job_type = data.job_type) === null || _data$job_type === void 0 ? void 0 : _data$job_type.length)) {\n      preSelectedJobType = data === null || data === void 0 ? void 0 : data.job_type[0];\n    }\n\n    if ((data === null || data === void 0 ? void 0 : data.specialization) && (data === null || data === void 0 ? void 0 : (_data$specialization = data.specialization) === null || _data$specialization === void 0 ? void 0 : _data$specialization.length)) {\n      preSelectedSpecialization = data === null || data === void 0 ? void 0 : data.specialization;\n    }\n\n    if ((categories === null || categories === void 0 ? void 0 : categories.length) && preSelectedItem && preSelectedJobType) {\n      var _filterItem$specialis;\n\n      let filterItem = categories.find(item => item._id === preSelectedItem);\n      let filter_specialization = [];\n\n      if ((filterItem === null || filterItem === void 0 ? void 0 : filterItem.specialisations) && (filterItem === null || filterItem === void 0 ? void 0 : (_filterItem$specialis = filterItem.specialisations) === null || _filterItem$specialis === void 0 ? void 0 : _filterItem$specialis.length)) {\n        var _filterItem$specialis2;\n\n        filter_specialization = filterItem === null || filterItem === void 0 ? void 0 : (_filterItem$specialis2 = filterItem.specialisations) === null || _filterItem$specialis2 === void 0 ? void 0 : _filterItem$specialis2.filter(item => {\n          if (preSelectedSpecialization.includes(item._id)) {\n            return item;\n          }\n        });\n      }\n\n      let filterJobType = jobTypes.find(item => item._id === preSelectedJobType);\n\n      if (filterJobType || filter_specialization) {\n        setSelected({\n          category: filter_specialization,\n          // specialisations\n          job_type: filterJobType\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateDetailScreen(null);\n\n    if (categorySelected !== undefined && categorySelected !== null && !Object.keys(categorySelected === null || categorySelected === void 0 ? void 0 : categorySelected.category).length || categorySelected !== undefined && categorySelected !== null && !Object.keys(categorySelected === null || categorySelected === void 0 ? void 0 : categorySelected.job_type).length) {\n      findSelectedCategory();\n    }\n  }, [categories, jobTypes, stepCompleted]);\n  useEffect(() => {\n    var _data$urls, _Object$keys;\n\n    let fsSlideObj = {};\n    let slideCount = 1;\n\n    if (data === null || data === void 0 ? void 0 : (_data$urls = data.urls) === null || _data$urls === void 0 ? void 0 : _data$urls.length) {\n      data === null || data === void 0 ? void 0 : data.urls.forEach((item, index) => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1 || (item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n          fsSlideObj[`${index}`] = slideCount++;\n        }\n      });\n    }\n\n    if (((_Object$keys = Object.keys(fsSlideObj)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) setFsSlideListner(fsSlideObj);\n  }, [data.urls]);\n\n  const forwardScreenStep = (id, data) => {\n    updateDetailScreen({\n      currentScreen: id,\n      data\n    });\n    handleStepForward(id);\n  };\n\n  const filterFileName = link => {\n    if (link === null || link === void 0 ? void 0 : link.length) {\n      let arrItems = link.split('/');\n      return arrItems[(arrItems === null || arrItems === void 0 ? void 0 : arrItems.length) - 1];\n    }\n  };\n\n  const handlePost = async e => {\n    var _history$location, _data_clone$urls, _response;\n\n    e.preventDefault();\n    let data_clone = data;\n    let milestones_clone = milestones;\n    const params = new URLSearchParams((_history$location = history.location) === null || _history$location === void 0 ? void 0 : _history$location.search);\n    const update = params.get('update') || '';\n    let filter_milestones = milestones_clone.filter((item, index) => {\n      if (Object.keys(item).length) {\n        var _item$to_date, _item$from_date;\n\n        if (!(item === null || item === void 0 ? void 0 : (_item$to_date = item.to_date) === null || _item$to_date === void 0 ? void 0 : _item$to_date.length)) {\n          item === null || item === void 0 ? true : delete item.to_date;\n        }\n\n        if (!(item === null || item === void 0 ? void 0 : (_item$from_date = item.from_date) === null || _item$from_date === void 0 ? void 0 : _item$from_date.length) || (item === null || item === void 0 ? void 0 : item.from_date) === \"Invalid date\") {\n          item === null || item === void 0 ? true : delete item.from_date;\n        }\n\n        item['order'] = index + 1;\n        return item;\n      }\n    });\n    data_clone['milestones'] = filter_milestones;\n    let from_date = data_clone === null || data_clone === void 0 ? void 0 : data_clone.from_date;\n    let to_date = data_clone === null || data_clone === void 0 ? void 0 : data_clone.to_date;\n    console.log({\n      from_date,\n      to_date\n    });\n\n    if (!data_clone.isSingleDayJob && moment(from_date).isSame(moment(to_date))) {\n      data_clone === null || data_clone === void 0 ? true : delete data_clone.to_date;\n    }\n\n    if (!(to_date === null || to_date === void 0 ? void 0 : to_date.length)) {\n      data_clone === null || data_clone === void 0 ? true : delete data_clone.to_date;\n    }\n\n    if (!(data_clone === null || data_clone === void 0 ? void 0 : (_data_clone$urls = data_clone.urls) === null || _data_clone$urls === void 0 ? void 0 : _data_clone$urls.length)) {\n      data_clone === null || data_clone === void 0 ? true : delete data_clone.urls;\n    } else {\n      let urls_ = data_clone === null || data_clone === void 0 ? void 0 : data_clone.urls;\n      let filteredItems = [];\n\n      if (urls_ && Array.isArray(urls_) && (urls_ === null || urls_ === void 0 ? void 0 : urls_.length)) {\n        filteredItems = urls_.map(item_dt => {\n          if (item_dt === null || item_dt === void 0 ? void 0 : item_dt.base64) {\n            item_dt === null || item_dt === void 0 ? true : delete item_dt.base64;\n          }\n\n          return item_dt;\n        });\n        data_clone['urls'] = filteredItems;\n      }\n    }\n\n    if (jobId) {\n      data_clone.jobId = jobId;\n    }\n\n    const createJob = jobId ? publishJobAgain : createPostJob;\n    let response = null;\n    if (data_clone.isJobRepublish) delete data_clone.isJobRepublish;\n    delete data_clone.isSingleDayJob;\n    if (data_clone.quoteJob == '1' && data_clone.amount) delete data_clone.amount;\n\n    if (update) {\n      delete data_clone.editJob;\n      if (data_clone.to_date === \"Invalid date\" || data_clone.to_date === \"\") delete data_clone.to_date;\n      response = await publishOpenJobAgain(data_clone);\n    } else {\n      response = await createJob(data_clone);\n\n      if (jobId) {\n        moengage.moE_SendEvent(MoEConstants.REPUBLISHED_JOB, {\n          timeStamp: moengage.getCurrentTimeStamp()\n        });\n        mixPanel.mixP_SendEvent(MoEConstants.REPUBLISHED_JOB, {\n          timeStamp: moengage.getCurrentTimeStamp()\n        });\n      } else {\n        var _tradeListRedux$find, _data_clone$milestone;\n\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n          category: (_tradeListRedux$find = tradeListRedux.find(i => i._id === (data_clone === null || data_clone === void 0 ? void 0 : data_clone.categories[0]))) === null || _tradeListRedux$find === void 0 ? void 0 : _tradeListRedux$find.trade_name,\n          location: data_clone === null || data_clone === void 0 ? void 0 : data_clone.location_name,\n          'Number of milestones': data_clone === null || data_clone === void 0 ? void 0 : (_data_clone$milestone = data_clone.milestones) === null || _data_clone$milestone === void 0 ? void 0 : _data_clone$milestone.length,\n          'start date': data_clone === null || data_clone === void 0 ? void 0 : data_clone.from_date,\n          ...((data_clone === null || data_clone === void 0 ? void 0 : data_clone.to_date) && {\n            'end date': data_clone === null || data_clone === void 0 ? void 0 : data_clone.to_date\n          })\n        };\n        moengage.moE_SendEvent(MoEConstants.POSTED_A_JOB, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.POSTED_A_JOB, mData);\n      }\n    }\n\n    if ((_response = response) === null || _response === void 0 ? void 0 : _response.success) {\n      clearParentStates();\n      handleStepForward(12);\n    } // console.log({data: data_clone, filter_milestones });\n\n  };\n\n  let data_clone = data;\n\n  const renderFilteredItems = () => {\n    var _data_clone$urls2;\n\n    let sources = [];\n    let types = [];\n\n    if (data_clone === null || data_clone === void 0 ? void 0 : (_data_clone$urls2 = data_clone.urls) === null || _data_clone$urls2 === void 0 ? void 0 : _data_clone$urls2.length) {\n      data_clone === null || data_clone === void 0 ? void 0 : data_clone.urls.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n          sources.push(item.link);\n          types.push('video');\n        }\n\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push('image');\n        }\n\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 3) {\n          sources.push(docThumbnail);\n          types.push('image');\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const renderTime = data => {\n    let format = 'YYYY-MM-DD';\n    let current_date = moment().startOf('day').toDate();\n    let start_date = moment(data === null || data === void 0 ? void 0 : data.from_date, format).isValid() ? moment(data === null || data === void 0 ? void 0 : data.from_date, format).startOf('day').toDate() : false;\n    let end_date = moment(data === null || data === void 0 ? void 0 : data.to_date, format).isValid() ? moment(data === null || data === void 0 ? void 0 : data.to_date, format).startOf('day').toDate() : false;\n    let result = null;\n\n    if (start_date && end_date) {\n      if (moment(start_date).isSame(moment(end_date))) {\n        end_date = false;\n      }\n\n      if (moment(start_date).isSame(moment(current_date))) {\n        result = 'Today';\n      }\n\n      if (moment(start_date).isAfter(moment(current_date))) {\n        let days_diff = moment(start_date).diff(moment(current_date), 'days');\n        result = `${days_diff} days`;\n      }\n    }\n\n    if (start_date && !end_date) {\n      if (moment(start_date).isSame(moment(current_date))) {\n        result = 'Today';\n      }\n\n      if (moment(start_date).isAfter(moment(current_date))) {\n        let days_diff = moment(start_date).diff(moment(current_date), 'days');\n        result = `${days_diff} days`;\n      }\n    }\n\n    if (start_date) {\n      if (moment(start_date).isAfter(moment(current_date))) {\n        let days_diff = moment(start_date).diff(moment(current_date), 'days');\n        result = `${days_diff} days`;\n      }\n    }\n\n    return result;\n  };\n\n  const format = 'MM-DD-YYYY';\n  const {\n    sources,\n    types\n  } = renderFilteredItems();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(FsLightbox, {\n          toggler: toggler,\n          slide: selectedSlide,\n          sources: sources,\n          types: types,\n          onClose: () => {\n            setSelectSlide(1);\n          }\n        }, sources === null || sources === void 0 ? void 0 : sources.length, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vid_img_wrapper pt-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8 relative\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleStepBack,\n                className: \"back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"vid_img_thumb\",\n                children: (data_clone === null || data_clone === void 0 ? void 0 : (_data_clone$urls3 = data_clone.urls) === null || _data_clone$urls3 === void 0 ? void 0 : _data_clone$urls3.length) ? /*#__PURE__*/_jsxDEV(OwlCarousel, {\n                  className: \"owl-theme\",\n                  ...options,\n                  children: (data === null || data === void 0 ? void 0 : (_data$urls2 = data.urls) === null || _data$urls2 === void 0 ? void 0 : _data$urls2.length) ? data === null || data === void 0 ? void 0 : (_data$urls3 = data.urls) === null || _data$urls3 === void 0 ? void 0 : _data$urls3.map((image, index) => {\n                    console.log({\n                      image,\n                      mediaType: image === null || image === void 0 ? void 0 : image.mediaType\n                    }, '---?');\n                    return (image === null || image === void 0 ? void 0 : image.mediaType) === 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      onClick: () => {\n                        setToggler(prev => !prev);\n                        setSelectSlide(fsSlideListner[`${index}`]);\n                      },\n                      title: filterFileName(image.link),\n                      alt: \"\",\n                      src: (image === null || image === void 0 ? void 0 : image.link) ? image === null || image === void 0 ? void 0 : image.link : jobDummyImage\n                    }, `${image}${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 57\n                    }, this) : (image === null || image === void 0 ? void 0 : image.mediaType) === 2 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                      onClick: () => {\n                        setToggler(prev => !prev);\n                        setSelectSlide(fsSlideListner[`${index}`]);\n                      },\n                      title: filterFileName(image.link),\n                      src: image === null || image === void 0 ? void 0 : image.link,\n                      style: {\n                        height: '400px',\n                        width: '800px'\n                      }\n                    }, `${image}${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 61\n                    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                      onClick: () => {\n                        let url = `/doc-view?url=${image.link}`; //\n\n                        window.open(url, '_blank');\n                      },\n                      title: filterFileName(image.link),\n                      alt: \"\",\n                      src: docThumbnail\n                    }, `${image}${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 57\n                    }, this);\n                  }) : /*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"\",\n                    src: jobDummyImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: jobDummyImage,\n                  alt: \"item-url\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_4 relative\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail_card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title line-3 pr-20\",\n                  title: data === null || data === void 0 ? void 0 : data.jobName,\n                  children: [data === null || data === void 0 ? void 0 : data.jobName, /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      forwardScreenStep(1);\n                    },\n                    className: \"edit_icon\",\n                    title: \"Edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: editIconBlue,\n                      alt: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tagg\",\n                  children: \"Job details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"job_info\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon calendar\",\n                      children: renderTime(data)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 45\n                    }, this), data.quoteJob == 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon dollar\",\n                      children: [\"$\", data === null || data === void 0 ? void 0 : data.amount, \" \", (data === null || data === void 0 ? void 0 : data.pay_type) === \"Fixed price\" ? 'f/p' : 'p/h', \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 68\n                    }, this), data.quoteJob == 1 && /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon dollar\",\n                      children: \"For Quoting\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 68\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon location line-1\",\n                      title: data === null || data === void 0 ? void 0 : data.location_name,\n                      children: data === null || data === void 0 ? void 0 : data.location_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handlePost,\n                  className: \"fill_btn full_btn btn-effect mt-15\",\n                  children: jobId ? 'Republish job' : 'Post job'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sub_title\",\n                  children: ['Job Description', /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      forwardScreenStep(1);\n                    },\n                    className: \"edit_icon\",\n                    title: \"Edit\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: editIconBlue,\n                      alt: \"edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"commn_para\",\n                  children: data === null || data === void 0 ? void 0 : data.job_description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_4\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: ['Job milestones', /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => {\n                    forwardScreenStep(6);\n                  },\n                  className: \"edit_icon\",\n                  title: \"Edit\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: editIconBlue,\n                    alt: \"edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"job_milestone\",\n                children: (milestones === null || milestones === void 0 ? void 0 : milestones.length) ? milestones.map((item, index) => (item === null || item === void 0 ? void 0 : item.milestone_name) && /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: `${index + 1}. ${item === null || item === void 0 ? void 0 : item.milestone_name}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: renderTimeWithFormat(item === null || item === void 0 ? void 0 : item.from_date, item === null || item === void 0 ? void 0 : item.to_date, format)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 45\n                }, this)) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  cursor: 'default'\n                },\n                className: \"fill_grey_btn ques_btn btn-effect\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: question,\n                  alt: \"question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 37\n                }, this), '0 questions']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex_col_sm_12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sub_title\",\n                    children: ['Job type', /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => {\n                        forwardScreenStep(2);\n                      },\n                      className: \"edit_icon\",\n                      title: \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: editIconBlue,\n                        alt: \"edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 466,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"job_categories\",\n                    children: /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                        className: \"type_icon\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: categorySelected === null || categorySelected === void 0 ? void 0 : (_categorySelected$job = categorySelected.job_type) === null || _categorySelected$job === void 0 ? void 0 : _categorySelected$job.image,\n                          alt: \"icon\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 472,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 471,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"name\",\n                        children: categorySelected === null || categorySelected === void 0 ? void 0 : (_categorySelected$job2 = categorySelected.job_type) === null || _categorySelected$job2 === void 0 ? void 0 : _categorySelected$job2.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 474,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex_col_sm_12\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sub_title\",\n                    children: ['Specialisations needed', /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => {\n                        forwardScreenStep(2);\n                      },\n                      className: \"edit_icon\",\n                      title: \"Edit\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: editIconBlue,\n                        alt: \"edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 483,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 482,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tags_wrap\",\n                    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: (categorySelected === null || categorySelected === void 0 ? void 0 : (_categorySelected$cat = categorySelected.category) === null || _categorySelected$cat === void 0 ? void 0 : _categorySelected$cat.length) ? categorySelected === null || categorySelected === void 0 ? void 0 : (_categorySelected$cat2 = categorySelected.category) === null || _categorySelected$cat2 === void 0 ? void 0 : _categorySelected$cat2.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: item === null || item === void 0 ? void 0 : item.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 57\n                      }, this)) : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Posted by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    history.push(`/builder-info?builderId=${builderProfile === null || builderProfile === void 0 ? void 0 : builderProfile.userId}`);\n                  },\n                  className: \"tradie_card posted_by \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user_wrap\",\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"u_img\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: (builderProfile === null || builderProfile === void 0 ? void 0 : builderProfile.userImage) || dummy,\n                        alt: \"traide-img\",\n                        onError: e => {\n                          var _e$target, _e$target2;\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                            e.target.onerror = null;\n                          }\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                            e.target.src = dummy;\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"name\",\n                        children: builderProfile === null || builderProfile === void 0 ? void 0 : builderProfile.userName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"rating\",\n                        children: [(builderProfile === null || builderProfile === void 0 ? void 0 : builderProfile.rating) || '0', \" | \", (builderProfile === null || builderProfile === void 0 ? void 0 : builderProfile.reviews) || '0', \" reviews\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 528,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobDetails, \"HCBAZ5z2hVXfa49F/6BWzfXlkY8=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = JobDetails;\nexport default JobDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/jobDetails.tsx"],"names":["React","useEffect","useState","useSelector","dummy","question","editIconBlue","leftIcon","rightIcon","createPostJob","publishJobAgain","publishOpenJobAgain","moment","jobDummyImage","OwlCarousel","docThumbnail","renderTimeWithFormat","useHistory","moengage","mixPanel","MoEConstants","FsLightbox","isDevelopment","process","env","NODE_ENV","options","items","nav","navText","rewind","autoplay","slideBy","dots","dotsEach","dotData","responsive","imageFormats","videoFormats","docformats","JobDetails","data","milestones","categories","builderProfile","jobTypes","stepCompleted","updateDetailScreen","handleStepForward","handleStepComplete","clearParentStates","handleStepBack","jobId","categorySelected","setSelected","category","job_type","isEnablePopup","setPopUp","toggler","setToggler","selectedSlide","setSelectSlide","fsSlideListner","setFsSlideListner","history","tradeListRedux","state","auth","tradeListData","findSelectedCategory","preSelectedItem","preSelectedJobType","preSelectedSpecialization","length","specialization","filterItem","find","item","_id","filter_specialization","specialisations","filter","includes","filterJobType","undefined","Object","keys","fsSlideObj","slideCount","urls","forEach","index","mediaType","forwardScreenStep","id","currentScreen","filterFileName","link","arrItems","split","handlePost","e","preventDefault","data_clone","milestones_clone","params","URLSearchParams","location","search","update","get","filter_milestones","to_date","from_date","console","log","isSingleDayJob","isSame","urls_","filteredItems","Array","isArray","map","item_dt","base64","createJob","response","isJobRepublish","quoteJob","amount","editJob","moE_SendEvent","REPUBLISHED_JOB","timeStamp","getCurrentTimeStamp","mixP_SendEvent","mData","i","trade_name","location_name","POSTED_A_JOB","success","renderFilteredItems","sources","types","push","renderTime","format","current_date","startOf","toDate","start_date","isValid","end_date","result","isAfter","days_diff","diff","image","prev","height","width","url","window","open","jobName","pay_type","job_description","milestone_name","cursor","name","userId","userImage","target","onerror","src","userName","rating","reviews"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport question from '../../../assets/images/ic-question.png';\nimport editIconBlue from '../../../assets/images/ic-edit-blue.png';\nimport leftIcon from '../../../assets/images/ic-back-arrow-line.png'\nimport rightIcon from '../../../assets/images/ic-next-arrow-line.png'\nimport { createPostJob, publishJobAgain, publishOpenJobAgain } from '../../../redux/jobs/actions';\nimport moment from 'moment';\nimport jobDummyImage from '../../../assets/images/ic-placeholder-detail.png';\nimport OwlCarousel from 'react-owl-carousel';\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\n\nimport docThumbnail from '../../../assets/images/add-document.png'\n\nimport { renderTime, renderTimeWithFormat } from '../../../utils/common';\nimport { useHistory } from \"react-router-dom\";\nimport { moengage, mixPanel } from '../../../services/analyticsTools';\nimport { MoEConstants } from '../../../utils/constants';\n\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\nconst isDevelopment = process.env.NODE_ENV === \"development\" ? true : false;\ninterface Proptypes {\n    data: any;\n    milestones: any;\n    builderProfile: any;\n    stepCompleted: Boolean;\n    categories: any;\n    jobTypes: any;\n    handleStepComplete: (data: any) => void;\n    handleStepForward: (data: any) => void;\n    handleStepBack: () => void;\n    clearParentStates: () => void;\n    updateDetailScreen: (data: any) => void;\n    jobId: string;\n}\n\nconst options = {\n    items: 1,\n    nav: true,\n    navText: [`<div class='nav-btn prev-slide'> <img src=\"${leftIcon}\"> </div>`, `<div class='nav-btn next-slide'> <img src=\"${rightIcon}\"> </div>`],\n    rewind: true,\n    autoplay: false,\n    slideBy: 1,\n    dots: true,\n    dotsEach: true,\n    dotData: true,\n    responsive: {\n        0: {\n            items: 1,\n        },\n        600: {\n            items: 1,\n        },\n        1000: {\n            items: 1,\n        },\n    },\n};\n\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\nconst videoFormats: Array<any> = [\"mp4\", \"wmv\", \"avi\"];\nconst docformats: Array<any> = [\"pdf\", \"doc\", \"docx\", \"msword\"];\n\nconst JobDetails = ({\n    data,\n    milestones,\n    categories,\n    builderProfile,\n    jobTypes,\n    stepCompleted,\n    updateDetailScreen,\n    handleStepForward,\n    handleStepComplete,\n    clearParentStates,\n    handleStepBack,\n    jobId,\n}: Proptypes) => {\n    const [categorySelected, setSelected] = useState<{ [index: string]: any }>({ category: {}, job_type: {} });\n    const [isEnablePopup, setPopUp] = useState(false);\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState(1);\n    const [fsSlideListner, setFsSlideListner] = useState<any>({});\n\n    const history = useHistory();\n    const tradeListRedux = useSelector((state: any) => state.auth.tradeListData)\n\n    const findSelectedCategory = () => {\n        let preSelectedItem: any = null;\n        let preSelectedJobType: any = null;\n        let preSelectedSpecialization: any = null\n\n        if (data?.categories && data?.categories?.length) {\n            preSelectedItem = data?.categories[0];\n        }\n\n        if (data?.job_type && data?.job_type?.length) {\n            preSelectedJobType = data?.job_type[0];\n        }\n\n        if (data?.specialization && data?.specialization?.length) {\n            preSelectedSpecialization = data?.specialization;\n        }\n\n        if (categories?.length && preSelectedItem && preSelectedJobType) {\n            let filterItem = categories.find((item: any) => item._id === preSelectedItem);\n            let filter_specialization = [];\n            if (filterItem?.specialisations && filterItem?.specialisations?.length) {\n                filter_specialization = filterItem?.specialisations?.filter((item: any) => {\n                    if (preSelectedSpecialization.includes(item._id)) {\n                        return item;\n                    }\n                })\n            }\n\n            let filterJobType = jobTypes.find((item: any) => item._id === preSelectedJobType);\n            if (filterJobType || filter_specialization) {\n                setSelected({\n                    category: filter_specialization, // specialisations\n                    job_type: filterJobType\n                })\n            }\n        }\n    }\n\n    useEffect(() => {\n        updateDetailScreen(null);\n        if ((categorySelected !== undefined &&\n            categorySelected !== null &&\n            !Object.keys(categorySelected?.category).length) || (categorySelected !== undefined && categorySelected !== null && !Object.keys(categorySelected?.job_type).length)) {\n            findSelectedCategory();\n        }\n    }, [categories, jobTypes, stepCompleted])\n\n    useEffect(() => {\n        let fsSlideObj: any = {};\n        let slideCount = 1;\n\n        if (data?.urls?.length) {\n            data?.urls.forEach((item: any, index: number) => {\n                if (item?.mediaType === 1 || item?.mediaType === 2) {\n                    fsSlideObj[`${index}`] = slideCount++;\n                }\n            });\n        }\n        if (Object.keys(fsSlideObj)?.length > 0) setFsSlideListner(fsSlideObj);\n    }, [data.urls]);\n\n    const forwardScreenStep = (id: any, data?: any) => {\n        updateDetailScreen({ currentScreen: id, data });\n        handleStepForward(id);\n    }\n\n    const filterFileName = (link: any) => {\n        if (link?.length) {\n            let arrItems = link.split('/');\n            return arrItems[arrItems?.length - 1];\n        }\n    }\n\n    const handlePost = async (e: any) => {\n        e.preventDefault();\n        let data_clone: any = data;\n        let milestones_clone: any = milestones;\n        const params = new URLSearchParams(history.location?.search);\n        const update: any = params.get('update') || '';\n        let filter_milestones = milestones_clone.filter((item: any, index: any) => {\n            if (Object.keys(item).length) {\n                if (!item?.to_date?.length) {\n                    delete item?.to_date;\n                }\n\n                if (!item?.from_date?.length || item?.from_date === \"Invalid date\") {\n                    delete item?.from_date;\n                }\n                item['order'] = index + 1;\n                return item;\n            }\n        });\n\n        data_clone['milestones'] = filter_milestones;\n        let from_date = data_clone?.from_date;\n        let to_date = data_clone?.to_date;\n        console.log({ from_date, to_date })\n        if (!data_clone.isSingleDayJob && moment(from_date).isSame(moment(to_date))) {\n            delete data_clone?.to_date;\n        }\n\n        if (!to_date?.length) {\n            delete data_clone?.to_date;\n        }\n\n        if (!data_clone?.urls?.length) {\n            delete data_clone?.urls\n        } else {\n            let urls_: any = data_clone?.urls;\n            let filteredItems: any = [];\n            if (urls_ && Array.isArray(urls_) && urls_?.length) {\n                filteredItems = urls_.map((item_dt: any) => {\n                    if (item_dt?.base64) {\n                        delete item_dt?.base64;\n                    }\n                    return item_dt;\n                });\n                data_clone['urls'] = filteredItems;\n            }\n        }\n\n        if (jobId) {\n            data_clone.jobId = jobId;\n        }\n\n        const createJob = jobId ? publishJobAgain : createPostJob;\n\n        let response: any = null;\n        if (data_clone.isJobRepublish) delete data_clone.isJobRepublish;\n        delete data_clone.isSingleDayJob;\n        if (data_clone.quoteJob == '1' && data_clone.amount) delete data_clone.amount;\n        if (update) {\n            delete data_clone.editJob;\n            if (data_clone.to_date === \"Invalid date\" || data_clone.to_date === \"\") delete data_clone.to_date;\n            response = await publishOpenJobAgain(data_clone);\n        } else {\n            response = await createJob(data_clone);\n            if (jobId) {\n                moengage.moE_SendEvent(MoEConstants.REPUBLISHED_JOB, { timeStamp: moengage.getCurrentTimeStamp() });\n                mixPanel.mixP_SendEvent(MoEConstants.REPUBLISHED_JOB, { timeStamp: moengage.getCurrentTimeStamp() });\n            } else {\n                const mData = {\n                    timeStamp: moengage.getCurrentTimeStamp(),\n                    category: tradeListRedux.find((i: any) => i._id === data_clone?.categories[0])?.trade_name,\n                    location: data_clone?.location_name,\n                    'Number of milestones': data_clone?.milestones?.length,\n                    'start date': data_clone?.from_date,\n                    ...(data_clone?.to_date && { 'end date': data_clone?.to_date }),\n                };\n                moengage.moE_SendEvent(MoEConstants.POSTED_A_JOB, mData);\n                mixPanel.mixP_SendEvent(MoEConstants.POSTED_A_JOB, mData);\n            }\n        }\n        if (response?.success) {\n            clearParentStates();\n            handleStepForward(12);\n        }\n        // console.log({data: data_clone, filter_milestones });\n    }\n\n    let data_clone: any = data;\n\n\n    const renderFilteredItems = () => {\n        let sources: any = [];\n        let types: any = [];\n\n        if (data_clone?.urls?.length) {\n            data_clone?.urls.forEach((item: any) => {\n                if (item?.mediaType === 2) {\n                    sources.push(item.link);\n                    types.push('video');\n                }\n                if (item?.mediaType === 1) {\n                    sources.push(item.link);\n                    types.push('image');\n                }\n                if (item?.mediaType === 3) {\n                    sources.push(docThumbnail);\n                    types.push('image');\n                }\n            })\n        }\n\n        return { sources, types };\n    }\n\n    const renderTime = (data: any) => {\n        let format = 'YYYY-MM-DD';\n        let current_date = moment().startOf('day').toDate();\n        let start_date = moment(data?.from_date, format).isValid() ? moment(data?.from_date, format).startOf('day').toDate() : false;\n        let end_date = moment(data?.to_date, format).isValid() ? moment(data?.to_date, format).startOf('day').toDate() : false;\n        let result = null;\n\n        if (start_date && end_date) {\n            if (moment(start_date).isSame(moment(end_date))) {\n                end_date = false;\n            }\n\n            if (moment(start_date).isSame(moment(current_date))) {\n                result = 'Today';\n            }\n\n            if (moment(start_date).isAfter(moment(current_date))) {\n                let days_diff = moment(start_date).diff(moment(current_date), 'days');\n                result = `${days_diff} days`;\n            }\n        }\n\n        if (start_date && !end_date) {\n            if (moment(start_date).isSame(moment(current_date))) {\n                result = 'Today';\n            }\n\n            if (moment(start_date).isAfter(moment(current_date))) {\n                let days_diff = moment(start_date).diff(moment(current_date), 'days');\n                result = `${days_diff} days`;\n            }\n        }\n\n        if (start_date) {\n            if (moment(start_date).isAfter(moment(current_date))) {\n                let days_diff = moment(start_date).diff(moment(current_date), 'days');\n                result = `${days_diff} days`;\n            }\n        }\n\n        return result;\n    }\n\n    const format = 'MM-DD-YYYY';\n    const { sources, types } = renderFilteredItems();\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n\n                    <FsLightbox\n                        toggler={toggler}\n                        slide={selectedSlide}\n                        sources={sources}\n                        types={types}\n                        key={sources?.length}\n                        onClose={() => {\n                            setSelectSlide(1)\n                        }}\n                    />\n\n                    <div className=\"vid_img_wrapper pt-20\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_8 relative\">\n                                <button\n                                    onClick={handleStepBack}\n                                    className=\"back\"></button>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_8\">\n                                <figure className=\"vid_img_thumb\">\n                                    {data_clone?.urls?.length ? (\n                                        <OwlCarousel className='owl-theme' {...options}>\n                                            {/* {renderByFileFormat(data)} */}\n                                            {data?.urls?.length ?\n                                                data?.urls?.map((image: any, index: number) => {\n                                                    console.log({\n                                                        image,\n                                                        mediaType: image?.mediaType\n                                                    }, '---?')\n                                                    return image?.mediaType === 1 ? (\n                                                        <img\n                                                            key={`${image}${index}`}\n                                                            onClick={() => {\n                                                                setToggler((prev: any) => !prev);\n                                                                setSelectSlide(fsSlideListner[`${index}`]);\n                                                            }}\n                                                            title={filterFileName(image.link)}\n                                                            alt=\"\"\n                                                            src={image?.link ? image?.link : jobDummyImage}\n                                                        />) : image?.mediaType === 2 ? (\n                                                            <video\n                                                                key={`${image}${index}`}\n                                                                onClick={() => {\n                                                                    setToggler((prev: any) => !prev);\n                                                                    setSelectSlide(fsSlideListner[`${index}`]);\n                                                                }}\n                                                                title={filterFileName(image.link)}\n                                                                src={image?.link}\n                                                                style={{ height: '400px', width: '800px' }}\n                                                            />\n                                                        ) : (\n                                                        <img\n                                                            key={`${image}${index}`}\n                                                            onClick={() => {\n                                                                let url = `/doc-view?url=${image.link}`//\n                                                                window.open(url, '_blank');\n                                                            }}\n                                                            title={filterFileName(image.link)}\n                                                            alt=\"\"\n                                                            src={docThumbnail}\n                                                        />)\n                                                }) : <img alt=\"\" src={jobDummyImage} />}\n                                        </OwlCarousel>\n                                    ) : (\n                                        <img src={jobDummyImage} alt=\"item-url\" />\n                                    )}\n                                </figure>\n                            </div>\n                            <div className=\"flex_col_sm_4 relative\">\n                                <div className=\"detail_card\">\n                                    <span className=\"title line-3 pr-20\" title={data?.jobName}>{data?.jobName}\n                                        <span onClick={() => { forwardScreenStep(1) }} className=\"edit_icon\" title=\"Edit\">\n                                            <img src={editIconBlue} alt=\"edit\" />\n                                        </span>\n                                    </span>\n                                    <span className=\"tagg\">Job details</span>\n                                    <div className=\"job_info\">\n                                        <ul>\n                                            <li className=\"icon calendar\">\n                                                {renderTime(data)}\n                                            </li>\n                                            {data.quoteJob == 0 && <li className=\"icon dollar\">${data?.amount} {data?.pay_type === \"Fixed price\" ? 'f/p' : 'p/h'} </li>}\n                                            {data.quoteJob == 1 && <li className=\"icon dollar\">For Quoting</li>}\n                                            <li className=\"icon location line-1\" title={data?.location_name}>{data?.location_name}</li>\n                                        </ul>\n                                    </div>\n                                    <button\n                                        onClick={handlePost}\n                                        className=\"fill_btn full_btn btn-effect mt-15\">{jobId ? 'Republish job' : 'Post job'}</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_8\">\n                                <div className=\"description\">\n                                    <span className=\"sub_title\">\n                                        {'Job Description'}\n                                        <span onClick={() => { forwardScreenStep(1) }} className=\"edit_icon\" title=\"Edit\">\n                                            <img src={editIconBlue} alt=\"edit\" />\n                                        </span>\n                                    </span>\n                                    <p className=\"commn_para\">\n                                        {data?.job_description}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_4\">\n                                <span className=\"sub_title\">{'Job milestones'}\n                                    <span onClick={() => { forwardScreenStep(6) }} className=\"edit_icon\" title=\"Edit\">\n                                        <img src={editIconBlue} alt=\"edit\" />\n                                    </span>\n                                </span>\n                                <ul className=\"job_milestone\">\n                                    {milestones?.length ?\n                                        milestones.map((item: any, index: any) => item?.milestone_name && (\n                                            <li>\n                                                <span>{`${index + 1}. ${item?.milestone_name}`}</span>\n                                                <span>{renderTimeWithFormat(item?.from_date, item?.to_date, format)}</span>\n                                            </li>\n                                        ))\n                                        : null}\n                                </ul>\n                                <button\n                                    style={{ cursor: 'default' }}\n                                    className=\"fill_grey_btn ques_btn btn-effect\">\n                                    <img src={question} alt=\"question\" />\n                                    {'0 questions'}\n                                </button>\n                            </div>\n\n                            <div className=\"flex_col_sm_8\">\n                                <div className=\"flex_row\">\n                                    <div className=\"flex_col_sm_12\">\n                                        <span className=\"sub_title\">{'Job type'}\n                                            <span onClick={() => { forwardScreenStep(2) }} className=\"edit_icon\" title=\"Edit\">\n                                                <img src={editIconBlue} alt=\"edit\" />\n                                            </span>\n                                        </span>\n                                        <ul className=\"job_categories\">\n                                            <li>\n                                                <figure className=\"type_icon\">\n                                                    <img src={categorySelected?.job_type?.image} alt=\"icon\" />\n                                                </figure>\n                                                <span className=\"name\">{categorySelected?.job_type?.name}</span>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"flex_row\">\n                                    <div className=\"flex_col_sm_12\">\n                                        <span className=\"sub_title\">{'Specialisations needed'}\n                                            <span onClick={() => { forwardScreenStep(2) }} className=\"edit_icon\" title=\"Edit\">\n                                                <img src={editIconBlue} alt=\"edit\" />\n                                            </span>\n                                        </span>\n                                        <div className=\"tags_wrap\">\n                                            <ul>\n                                                {categorySelected?.category?.length ?\n                                                    categorySelected?.category?.map((item: any) => (\n                                                        <li>{item?.name}</li>\n                                                    ))\n                                                    : null}\n\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"section_wrapper\">\n                            <span className=\"sub_title\">Posted by</span>\n                            <div className=\"flex_row\">\n                                <div className=\"flex_col_sm_3\">\n                                    <div\n                                        onClick={() => {\n                                            history.push(`/builder-info?builderId=${builderProfile?.userId}`);\n                                        }}\n                                        className=\"tradie_card posted_by \">\n                                        {/* <span className=\"chat circle\"></span> */}\n                                        <div className=\"user_wrap\">\n                                            <figure className=\"u_img\">\n                                                <img\n                                                    src={builderProfile?.userImage || dummy}\n                                                    alt=\"traide-img\"\n                                                    onError={(e: any) => {\n                                                        if (e?.target?.onerror) {\n                                                            e.target.onerror = null;\n                                                        }\n                                                        if (e?.target?.src) {\n                                                            e.target.src = dummy;\n                                                        }\n                                                    }}\n                                                />\n                                            </figure>\n                                            <div className=\"details\">\n                                                <span className=\"name\">{builderProfile?.userName}</span>\n                                                <span className=\"rating\">{builderProfile?.rating || '0'} | {builderProfile?.reviews || '0'} reviews</span>\n                                                {/* <span className=\"prof\">Project Manager</span> */}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default JobDetails;\n"]},"metadata":{},"sourceType":"module"}