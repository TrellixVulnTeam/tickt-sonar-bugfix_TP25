{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/createAccount.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { checkEmailId } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport SocialAuth from \"../../../common/auth/socialAuth\";\nimport { setShowToast } from '../../../redux/common/actions';\nimport Urls from '../../../network/Urls';\nimport { urlFor } from '../../../network/Urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAccount = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [signupData, setSignupData] = useState({\n    firstName: props.data.firstName,\n    email: props.data.email,\n    tnc: false\n  });\n\n  const changeHandler = e => {\n    setSignupData(prevData => ({ ...prevData,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const tncHandler = () => {\n    setSignupData(prevData => ({ ...prevData,\n      tnc: !prevData.tnc\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!signupData.firstName) {\n      newErrors.firstName = Constants.errorStrings.fullNameEmpty;\n    } else {\n      const nameRegex = new RegExp(regex.fullname);\n\n      if (!nameRegex.test(signupData.firstName.trim())) {\n        newErrors.firstName = Constants.errorStrings.fullNameErr;\n      }\n    }\n\n    if (!signupData.email) {\n      newErrors.email = Constants.errorStrings.emailEmpty;\n    } else {\n      const emailRegex = new RegExp(regex.email);\n\n      if (!emailRegex.test(signupData.email)) {\n        newErrors.email = Constants.errorStrings.emailErr;\n      }\n    }\n\n    if (!signupData.tnc) {\n      newErrors.tnc = Constants.errorStrings.tncEmpty;\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const phoneViewHandler = e => {\n    e.preventDefault();\n\n    if (props.showModal) {\n      props.modalUpdateSteps(0);\n      return;\n    }\n\n    props.history.push('/login');\n  };\n\n  const onSubmit = async e => {\n    const data = { ...signupData\n    };\n    delete data.tnc;\n    e.preventDefault();\n\n    if (validateForm()) {\n      const res = await checkEmailId(signupData.email);\n      (res === null || res === void 0 ? void 0 : res.isProfileCompleted) && setShowToast(true, res.message);\n\n      if (!res.isProfileCompleted && res.success) {\n        props.updateSteps(props.step + 1, data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Full Name\",\n            value: signupData.firstName,\n            name: \"firstName\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), !!errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"detect_input\",\n            name: \"email\",\n            value: signupData.email,\n            placeholder: \"Enter Email Address\",\n            onChange: changeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), !!errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox_wrap agree_check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"filter-type filled-in\",\n            type: \"checkbox\",\n            name: \"tnc\",\n            id: \"tnc\",\n            checked: signupData.tnc,\n            onChange: tncHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tnc\",\n            children: \"I agree to \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => window.open(urlFor(Urls.privacyPolicyWeb), \"_blank\"),\n            rel: \"noopener\",\n            className: \"link\",\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"and\",\n            children: \"\\xA0and\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: () => window.open(urlFor(Urls.tncWeb), \"_blank\"),\n            rel: \"noopener\",\n            className: \"link m-l-30\",\n            children: \"Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), !!errors.tnc && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg m-t\",\n          children: errors.tnc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"fill_btn btn-effect\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"show_label text-center\",\n        children: \"or continue with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SocialAuth, {\n        onNewAccount: props.onNewAccount,\n        history: props.history,\n        userType: props.data.user_type,\n        showModal: props.showModal,\n        setShowModal: props.setShowModal,\n        modalUpdateSteps: props.modalUpdateSteps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field hide text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reg\",\n          children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            onClick: phoneViewHandler,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateAccount, \"f2+ulFnPBRmleQXHFl2NO+ekw8s=\");\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/createAccount.tsx"],"names":["useState","checkEmailId","Constants","regex","SocialAuth","setShowToast","Urls","urlFor","CreateAccount","props","errors","setErrors","signupData","setSignupData","firstName","data","email","tnc","changeHandler","e","prevData","target","name","value","tncHandler","validateForm","newErrors","errorStrings","fullNameEmpty","nameRegex","RegExp","fullname","test","trim","fullNameErr","emailEmpty","emailRegex","emailErr","tncEmpty","Object","keys","length","phoneViewHandler","preventDefault","showModal","modalUpdateSteps","history","push","onSubmit","res","isProfileCompleted","message","success","updateSteps","step","window","open","privacyPolicyWeb","tncWeb","onNewAccount","user_type","setShowModal"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { checkEmailId } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport SocialAuth from \"../../../common/auth/socialAuth\";\nimport { setShowToast } from '../../../redux/common/actions';\nimport Urls from '../../../network/Urls';\nimport { urlFor } from '../../../network/Urls';\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void,\n    step: number,\n    history?: any,\n    data: any,\n    onNewAccount: Function,\n    showModal?: boolean,\n    modalUpdateSteps: (data: any) => void,\n    setShowModal: (data: any) => void,\n}\n\nconst CreateAccount = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [signupData, setSignupData] = useState<any>({\n        firstName: props.data.firstName,\n        email: props.data.email,\n        tnc: false,\n    })\n\n    const changeHandler = (e: any) => {\n        setSignupData((prevData: any) => ({ ...prevData, [e.target.name]: e.target.value }))\n    }\n\n    const tncHandler = () => {\n        setSignupData((prevData: any) => ({ ...prevData, tnc: !prevData.tnc }))\n    }\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!signupData.firstName) {\n            newErrors.firstName = Constants.errorStrings.fullNameEmpty;\n        } else {\n            const nameRegex = new RegExp(regex.fullname);\n            if (!nameRegex.test(signupData.firstName.trim())) {\n                newErrors.firstName = Constants.errorStrings.fullNameErr\n            }\n        }\n        if (!signupData.email) {\n            newErrors.email = Constants.errorStrings.emailEmpty;\n        } else {\n            const emailRegex = new RegExp(regex.email);\n            if (!emailRegex.test(signupData.email)) {\n                newErrors.email = Constants.errorStrings.emailErr;\n            }\n        }\n        if (!signupData.tnc) {\n            newErrors.tnc = Constants.errorStrings.tncEmpty;\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const phoneViewHandler = (e: any) => {\n        e.preventDefault();\n        if(props.showModal){\n            props.modalUpdateSteps(0)\n            return;\n        }\n        props.history.push('/login')\n    }\n\n    const onSubmit = async (e: any) => {\n        const data = { ...signupData };\n        delete data.tnc;\n        e.preventDefault();\n        if (validateForm()) {\n            const res: any = await checkEmailId(signupData.email)\n            res?.isProfileCompleted && setShowToast(true, res.message);\n            if (!res.isProfileCompleted && res.success) {\n                props.updateSteps(props.step + 1, data)\n            }\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Full Name</label>\n                    <div className=\"text_field\">\n                        <input placeholder=\"Enter Full Name\" value={signupData.firstName} name=\"firstName\" onChange={changeHandler} />\n                    </div>\n                    {!!errors.firstName && <span className=\"error_msg\">{errors.firstName}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Email</label>\n                    <div className=\"text_field\">\n                        <input className=\"detect_input\" name=\"email\" value={signupData.email}\n                            placeholder=\"Enter Email Address\" onChange={changeHandler} />\n                    </div>\n                    {!!errors.email && <span className=\"error_msg\">{errors.email}</span>}\n                </div>\n\n\n                <div className=\"form_field\">\n                    <div className=\"checkbox_wrap agree_check\">\n                        <input className=\"filter-type filled-in\" type=\"checkbox\" name=\"tnc\" id=\"tnc\"\n                            checked={signupData.tnc} onChange={tncHandler} />\n                        <label htmlFor=\"tnc\">I agree to </label>\n                        <a onClick={() => window.open(urlFor(Urls.privacyPolicyWeb), \"_blank\")} rel=\"noopener\" className=\"link\">Privacy Policy</a>\n                        <label className=\"and\">&nbsp;and&nbsp;</label>\n                        <a onClick={() => window.open(urlFor(Urls.tncWeb), \"_blank\")}  rel=\"noopener\" className=\"link m-l-30\">Terms &amp; Conditions</a>\n                    </div>\n                    {!!errors.tnc && <span className=\"error_msg m-t\">{errors.tnc}</span>}\n                </div>\n                <div className=\"form_field\">\n                    <button type=\"submit\" className=\"fill_btn btn-effect\">Sign up</button>\n                </div>\n                <span className=\"show_label text-center\">or continue with</span>\n                <SocialAuth onNewAccount={props.onNewAccount}\n                    history={props.history}\n                    userType={props.data.user_type}\n                    showModal={props.showModal}\n                    setShowModal={props.setShowModal}\n                    modalUpdateSteps={props.modalUpdateSteps}\n                />\n                <div className=\"form_field hide text-center\">\n                    <span className=\"reg\">Have an account? <a className=\"link\" onClick={phoneViewHandler}>\n                        Login</a></span>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default CreateAccount\n"]},"metadata":{},"sourceType":"module"}