{"ast":null,"code":"import _classCallCheck from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import approved from\"../../../assets/images/approved.png\";import jobTypePlaceholder from\"../../../assets/images/job-type-placeholder.png\";import{renderTime}from\"../../../utils/common\";import noDataFound from\"../../../assets/images/no-search-data.png\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var OpenJobs=/*#__PURE__*/function(_Component){_inherits(OpenJobs,_Component);var _super=_createSuper(OpenJobs);function OpenJobs(_props){var _this;_classCallCheck(this,OpenJobs);_this=_super.call(this,_props);_this.redirectToInfo=function(_ref){var jobId=_ref.jobId,status=_ref.status;var props=_this.props;if((jobId===null||jobId===void 0?void 0:jobId.length)&&(status===null||status===void 0?void 0:status.length)){// let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`)\nvar urlEncode=\"?jobId=\".concat(jobId,\"&status=\").concat(status,\"&activeType=\").concat(props===null||props===void 0?void 0:props.activeType);_this.props.history.push(\"/job-detail?\".concat(urlEncode));}else{// let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`)\nvar _urlEncode=\"?jobId=\".concat(jobId,\"&status=\",\"open\",\"&activeType=\").concat(props===null||props===void 0?void 0:props.activeType);_this.props.history.push(\"/job-detail?\".concat(_urlEncode));}};_this.setToggle=function(){return _this.setState({isToggleApplicants:!_this.state.isToggleApplicants});};_this.state={isToggleApplicants:false,quotesData:[],toggleQuoteSort:true};return _this;}_createClass(OpenJobs,[{key:\"componentDidMount\",value:function componentDidMount(){// this.preFetchForQuotes();\n}},{key:\"render\",value:function render(){var _props$history,_props$history$locati,_this2=this;// props defined & render by params\nvar props=this.props;var params=new URLSearchParams(props===null||props===void 0?void 0:(_props$history=props.history)===null||_props$history===void 0?void 0:(_props$history$locati=_props$history.location)===null||_props$history$locati===void 0?void 0:_props$history$locati.search);var quotes_param=params.get(\"quotes\");var viewQuotesParam=params.get(\"viewQuotes\");var jobId=params.get(\"jobId\");var _this$props=this.props,setJobLabel=_this$props.setJobLabel,dataItems=_this$props.dataItems,applicantsList=_this$props.applicantsList,jobType=_this$props.jobType,isLoading=_this$props.isLoading;var listData=dataItems;var _this$state=this.state,isToggleApplicants=_this$state.isToggleApplicants,quotesData=_this$state.quotesData,toggleQuoteSort=_this$state.toggleQuoteSort;if(isLoading){return null;}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"sub_title\",children:[jobType.charAt(0).toUpperCase()+jobType.slice(1),\" Jobs\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(listData===null||listData===void 0?void 0:listData.length)?listData.map(function(_ref2){var amount=_ref2.amount,durations=_ref2.durations,jobId=_ref2.jobId,jobName=_ref2.jobName,fromDate=_ref2.fromDate,toDate=_ref2.toDate,milestoneNumber=_ref2.milestoneNumber,specializationId=_ref2.specializationId,specializationName=_ref2.specializationName,locationName=_ref2.locationName,status=_ref2.status,timeLeft=_ref2.timeLeft,total=_ref2.total,totalmem=_ref2.totalmem,totalMilestones=_ref2.totalMilestones,tradieListData=_ref2.tradieListData,tradeName=_ref2.tradeName,quoteCount=_ref2.quoteCount,quoteJob=_ref2.quoteJob,tradieId=_ref2.tradieId,location=_ref2.location,tradeSelectedUrl=_ref2.tradeSelectedUrl,tradieImage=_ref2.tradieImage;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){_this2.redirectToInfo({jobId:jobId,status:status});},className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img icon\",children:/*#__PURE__*/_jsx(\"img\",{src:tradeSelectedUrl||jobTypePlaceholder,alt:\"traide-img\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=jobTypePlaceholder;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:tradeName||\"0\"}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:jobName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:quoteJob?/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\"}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]}):/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:total})}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"job_progress_wrap\",id:\"scroll-progress-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress_wrapper\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"completed-digit\",id:\"digit-progress\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Job Milestones \".concat(milestoneNumber,\" \")}),\"of \".concat(totalMilestones)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"approval_info\",children:[status===\"Approved\"&&/*#__PURE__*/_jsx(\"img\",{src:approved,alt:\"icon\"}),status]}),/*#__PURE__*/_jsx(\"span\",{className:\"progress_bar\",children:/*#__PURE__*/_jsx(\"input\",{className:\"done_progress\",id:\"progress-bar\",type:\"range\",min:\"0\",value:milestoneNumber/totalMilestones*100})})]}),quoteJob?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if((quoteCount===null||quoteCount===void 0?void 0:quoteCount.length)||quoteCount){_this2.props.setJobLabel(\"listQuote\");_this2.props.history.replace(\"/jobs?active=open&quote=true&jobId=\".concat(jobId));}},className:\"fill_grey_btn full_btn btn-effect\",children:\"\".concat(quoteCount,\" Quote\").concat(quoteCount===1?\"\":\"s\")}):null,!quoteJob&&(tradieId===null||tradieId===void 0?void 0:tradieId.length)?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){_this2.setToggle();setJobLabel(\"applicantList\",jobId,1,specializationId);},className:\"fill_grey_btn full_btn btn-effect\",children:\"Applications\"}):null]})]})});}):!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noDataFound,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"No Data Found\"})]})// <div className=\"no_record  m-t-vh\">\n//   <figure>\n//     <figure className=\"no_img\">\n//       <img src={newJobs} alt=\"data not found\" />\n//     </figure>\n//   </figure>\n//   <span className=\"empty_screen_text\">\n//     You don't have any open job yet\n//   </span>\n//   <button\n//     className=\"empty_screen_button\"\n//     onClick={() => props.history.push(\"/post-new-job\")}\n//   >\n//     Post a job\n//   </button>\n// </div>\n})]});}}]);return OpenJobs;}(Component);export default OpenJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/openJobs.tsx"],"names":["React","Component","approved","jobTypePlaceholder","renderTime","noDataFound","OpenJobs","props","redirectToInfo","jobId","status","length","urlEncode","activeType","history","push","setToggle","setState","isToggleApplicants","state","quotesData","toggleQuoteSort","params","URLSearchParams","location","search","quotes_param","get","viewQuotesParam","setJobLabel","dataItems","applicantsList","jobType","isLoading","listData","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","locationName","timeLeft","total","totalmem","totalMilestones","tradieListData","tradeName","quoteCount","quoteJob","tradieId","tradeSelectedUrl","tradieImage","e","target","onerror","src","replace"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport approved from \"../../../assets/images/approved.png\";\nimport ApplicantsList from \"./applicantsList\";\nimport { withRouter } from \"react-router-dom\";\nimport newJobs from \"../../../assets/images/newJobs.png\";\nimport jobTypePlaceholder from \"../../../assets/images/job-type-placeholder.png\";\nimport moment from \"moment\";\nimport { renderTime } from \"../../../utils/common\";\nimport ListQuotes from \"./quoteJobs/ListQuotes\";\nimport ViewQuote from \"./quoteJobs/viewQuote\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\nimport { quoteByJobId } from \"../../../redux/quotes/actions\";\n\ninterface Active {\n  amount: any;\n  durations: any;\n  jobId: any;\n  jobName: any;\n  fromDate: any;\n  toDate: any;\n  milestoneNumber: any;\n  specializationId: any;\n  specializationName: any;\n  status: any;\n  timeLeft: any;\n  total: any;\n  totalmem: any;\n  location: any;\n  locationName: any;\n  totalMilestones: any;\n  tradieListData: any;\n  quoteCount: any;\n  quoteJob: any;\n  tradeName: any;\n  tradieId: any;\n  tradeSelectedUrl: any;\n  tradieImage: any;\n}\ninterface State {\n  isToggleApplicants: boolean;\n  quotesData: any;\n  toggleQuoteSort: boolean;\n}\n\ninterface Props {\n  setJobLabel: any;\n  dataItems: any;\n  applicantsList?: any;\n  jobType: any;\n  history?: any;\n  isLoading: any;\n  activeType?: any;\n}\n\nclass OpenJobs extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isToggleApplicants: false,\n      quotesData: [],\n      toggleQuoteSort: true,\n    };\n  }\n\n  redirectToInfo = ({ jobId, status }: any) => {\n    let props: any = this.props;\n    if (jobId?.length && status?.length) {\n      // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`)\n      let urlEncode: any = `?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`;\n      this.props.history.push(`/job-detail?${urlEncode}`);\n    } else {\n      // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`)\n      let urlEncode: any = `?jobId=${jobId}&status=${\"open\"}&activeType=${\n        props?.activeType\n      }`;\n      this.props.history.push(`/job-detail?${urlEncode}`);\n    }\n  };\n\n  componentDidMount() {\n    // this.preFetchForQuotes();\n  }\n\n  setToggle = () =>\n    this.setState({ isToggleApplicants: !this.state.isToggleApplicants });\n\n  render() {\n    // props defined & render by params\n    const props: any = this.props;\n    const params = new URLSearchParams(props?.history?.location?.search);\n    const quotes_param: any = params.get(\"quotes\");\n    const viewQuotesParam: any = params.get(\"viewQuotes\");\n    const jobId: any = params.get(\"jobId\");\n\n    const { setJobLabel, dataItems, applicantsList, jobType, isLoading } =\n      this.props;\n    let listData: any = dataItems;\n    let { isToggleApplicants, quotesData, toggleQuoteSort } = this.state;\n\n    if (isLoading) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <span className=\"sub_title\">\n          {jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n          {/* {listData?.length} */}\n        </span>\n        <div className=\"flex_row tradies_row\">\n          {listData?.length\n            ? listData.map(\n                ({\n                  amount,\n                  durations,\n                  jobId,\n                  jobName,\n                  fromDate,\n                  toDate,\n                  milestoneNumber,\n                  specializationId,\n                  specializationName,\n                  locationName,\n                  status,\n                  timeLeft,\n                  total,\n                  totalmem,\n                  totalMilestones,\n                  tradieListData,\n                  tradeName,\n                  quoteCount,\n                  quoteJob,\n                  tradieId,\n                  location,\n                  tradeSelectedUrl,\n                  tradieImage,\n                }: Active) => (\n                  <div className=\"flex_col_sm_6\">\n                    <div\n                      className=\"tradie_card\"\n                      data-aos=\"fade-in\"\n                      data-aos-delay=\"250\"\n                      data-aos-duration=\"1000\"\n                    >\n                      <span\n                        onClick={() => {\n                          this.redirectToInfo({ jobId, status });\n                        }}\n                        className=\"more_detail circle\"\n                      ></span>\n                      <div className=\"user_wrap\">\n                        <figure className=\"u_img icon\">\n                          <img\n                            src={tradeSelectedUrl || jobTypePlaceholder}\n                            alt=\"traide-img\"\n                            onError={(e: any) => {\n                              if (e?.target?.onerror) {\n                                e.target.onerror = null;\n                              }\n                              if (e?.target?.src) {\n                                e.target.src = jobTypePlaceholder;\n                              }\n                            }}\n                          />\n                        </figure>\n                        <div className=\"details\">\n                          <span className=\"name\">{tradeName || \"0\"}</span>\n                          <p className=\"commn_para\">{jobName}</p>\n                        </div>\n                      </div>\n                      <div className=\"job_info\">\n                        {quoteJob ? (\n                          <ul>\n                            <li className=\"icon dollar\">{amount}</li>\n                            <li className=\"\"></li>\n                            <li className=\"icon calendar\">\n                              {renderTime(fromDate, toDate)}\n                            </li>\n                            <li>\n                              <span>{timeLeft}</span>\n                            </li>\n                          </ul>\n                        ) : (\n                          <ul>\n                            <li className=\"icon dollar\">{amount}</li>\n                            <li className=\"\">\n                              <span>{total}</span>\n                            </li>\n                            <li className=\"icon calendar\">\n                              {renderTime(fromDate, toDate)}\n                            </li>\n                            <li>\n                              <span>{timeLeft}</span>\n                            </li>\n                          </ul>\n                        )}\n                      </div>\n                      <div\n                        className=\"job_progress_wrap\"\n                        id=\"scroll-progress-bar\"\n                      >\n                        <div className=\"progress_wrapper\">\n                          <span className=\"completed-digit\" id=\"digit-progress\">\n                            <b>{`Job Milestones ${milestoneNumber} `}</b>\n                            {`of ${totalMilestones}`}\n                          </span>\n                          <span className=\"approval_info\">\n                            {status === \"Approved\" && (\n                              <img src={approved} alt=\"icon\" />\n                            )}\n                            {status}\n                          </span>\n                          <span className=\"progress_bar\">\n                            <input\n                              className=\"done_progress\"\n                              id=\"progress-bar\"\n                              type=\"range\"\n                              min=\"0\"\n                              value={(milestoneNumber / totalMilestones) * 100}\n                            />\n                          </span>\n                        </div>\n\n                        {quoteJob ? (\n                          <button\n                            onClick={() => {\n                              if (quoteCount?.length || quoteCount) {\n                                this.props.setJobLabel(\"listQuote\");\n                                this.props.history.replace(\n                                  `/jobs?active=open&quote=true&jobId=${jobId}`\n                                );\n                              }\n                            }}\n                            className=\"fill_grey_btn full_btn btn-effect\"\n                          >\n                            {`${quoteCount} Quote${\n                              quoteCount === 1 ? \"\" : \"s\"\n                            }`}\n                          </button>\n                        ) : null}\n                        {!quoteJob && tradieId?.length ? (\n                          <button\n                            onClick={() => {\n                              this.setToggle();\n                              setJobLabel(\n                                \"applicantList\",\n                                jobId,\n                                1,\n                                specializationId\n                              );\n                            }}\n                            className=\"fill_grey_btn full_btn btn-effect\"\n                          >\n                            {\"Applications\"}\n                          </button>\n                        ) : null}\n                      </div>\n                    </div>\n                  </div>\n                )\n              )\n            : !isLoading && (\n                <div className=\"no_record  m-t-vh\">\n                  <figure className=\"no_img\">\n                    <img src={noDataFound} alt=\"data not found\" />\n                  </figure>\n                  <span>{\"No Data Found\"}</span>\n                </div>\n                // <div className=\"no_record  m-t-vh\">\n                //   <figure>\n                //     <figure className=\"no_img\">\n                //       <img src={newJobs} alt=\"data not found\" />\n                //     </figure>\n                //   </figure>\n\n                //   <span className=\"empty_screen_text\">\n                //     You don't have any open job yet\n                //   </span>\n                //   <button\n                //     className=\"empty_screen_button\"\n                //     onClick={() => props.history.push(\"/post-new-job\")}\n                //   >\n                //     Post a job\n                //   </button>\n                // </div>\n              )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default OpenJobs;\n"]},"metadata":{},"sourceType":"module"}