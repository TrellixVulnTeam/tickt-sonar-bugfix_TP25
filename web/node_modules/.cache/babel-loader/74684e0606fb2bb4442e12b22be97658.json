{"ast":null,"code":"export const thumbnailExtract = ({\n  videoId,\n  canvasId\n}) => {\n  let _VIDEO = document.querySelector(videoId),\n      _CANVAS = document.querySelector(canvasId),\n      _CANVAS_CTX = _CANVAS.getContext(\"2d\"); // Video metadata is loaded\n\n\n  _VIDEO.addEventListener('loadedmetadata', function () {\n    // Set canvas dimensions same as video dimensions\n    _CANVAS.width = _VIDEO.videoWidth;\n    _CANVAS.height = _VIDEO.videoHeight;\n  }); // Video playback position is changed\n\n\n  document.querySelector(videoId).addEventListener('timeupdate', function () {// You are now ready to grab the thumbnail from the <canvas> element\n  }); // Placing the current frame image of the video in the canvas\n\n  _CANVAS_CTX.drawImage(_VIDEO, 0, 0, _VIDEO.videoWidth, _VIDEO.videoHeight);\n\n  var img = new Image();\n  img.crossOrigin = \"anonymous\";\n  img.src = _CANVAS === null || _CANVAS === void 0 ? void 0 : _CANVAS.toDataURL();\n  console.log({\n    src: img\n  });\n  return img.src;\n};","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/thumbnail.js"],"names":["thumbnailExtract","videoId","canvasId","_VIDEO","document","querySelector","_CANVAS","_CANVAS_CTX","getContext","addEventListener","width","videoWidth","height","videoHeight","drawImage","img","Image","crossOrigin","src","toDataURL","console","log"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA2B;AACvD,MAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuBJ,OAAvB,CAAb;AAAA,MACIK,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAuBH,QAAvB,CADd;AAAA,MAEIK,WAAW,GAAGD,OAAO,CAACE,UAAR,CAAmB,IAAnB,CAFlB,CADuD,CAKvD;;;AACAL,EAAAA,MAAM,CAACM,gBAAP,CAAwB,gBAAxB,EAA0C,YAAY;AAClD;AACAH,IAAAA,OAAO,CAACI,KAAR,GAAgBP,MAAM,CAACQ,UAAvB;AACAL,IAAAA,OAAO,CAACM,MAAR,GAAiBT,MAAM,CAACU,WAAxB;AACH,GAJD,EANuD,CAYvD;;;AACAT,EAAAA,QAAQ,CAACC,aAAT,CAAuBJ,OAAvB,EAAgCQ,gBAAhC,CAAiD,YAAjD,EAA+D,YAAY,CACvE;AACH,GAFD,EAbuD,CAiBvD;;AACAF,EAAAA,WAAW,CAACO,SAAZ,CAAsBX,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCA,MAAM,CAACQ,UAA3C,EAAuDR,MAAM,CAACU,WAA9D;;AAEA,MAAIE,GAAG,GAAG,IAAIC,KAAJ,EAAV;AACAD,EAAAA,GAAG,CAACE,WAAJ,GAAkB,WAAlB;AACAF,EAAAA,GAAG,CAACG,GAAJ,GAAUZ,OAAV,aAAUA,OAAV,uBAAUA,OAAO,CAAEa,SAAT,EAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AACRH,IAAAA,GAAG,EAAEH;AADG,GAAZ;AAGA,SAAOA,GAAG,CAACG,GAAX;AACH,CA3BM","sourcesContent":["export const thumbnailExtract = ({ videoId, canvasId }) => {\n    let _VIDEO = document.querySelector(videoId),\n        _CANVAS = document.querySelector(canvasId),\n        _CANVAS_CTX = _CANVAS.getContext(\"2d\");\n\n    // Video metadata is loaded\n    _VIDEO.addEventListener('loadedmetadata', function () {\n        // Set canvas dimensions same as video dimensions\n        _CANVAS.width = _VIDEO.videoWidth;\n        _CANVAS.height = _VIDEO.videoHeight;\n    });\n\n    // Video playback position is changed\n    document.querySelector(videoId).addEventListener('timeupdate', function () {\n        // You are now ready to grab the thumbnail from the <canvas> element\n    });\n\n    // Placing the current frame image of the video in the canvas\n    _CANVAS_CTX.drawImage(_VIDEO, 0, 0, _VIDEO.videoWidth, _VIDEO.videoHeight);\n\n    var img = new Image();\n    img.crossOrigin = \"anonymous\"\n    img.src = _CANVAS?.toDataURL()\n    console.log({\n        src: img\n    })\n    return img.src;\n}"]},"metadata":{},"sourceType":"module"}