{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/activeQuoteJob/activeQuoteOuter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ActiveQuoteMark from '../activeQuoteJob/activeQuoteMark';\nimport { getHomeJobDetails } from '../../../../redux/homeSearch/actions';\nimport storageService from '../../../../utils/storageService';\nimport dummy from '../../../../assets/images/u_placeholder.jpg';\nimport more from '../../../../assets/images/icon-direction-right.png';\nimport noDataFound from \"../../../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActiveQuoteOuter = props => {\n  _s();\n\n  var _props$location, _props$location$state, _props$location$state2, _props$location2, _props$location2$stat, _props$location2$stat2, _props$location3, _props$location3$stat, _props$location3$stat2;\n\n  const [dataItems, setDataItems] = useState({});\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [isLoad, setIsLoad] = useState(true);\n  useEffect(() => {\n    preFetch();\n  }, []);\n  let jobId = (_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : (_props$location$state2 = _props$location$state.jobData) === null || _props$location$state2 === void 0 ? void 0 : _props$location$state2.jobId;\n  let tradeId = (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : (_props$location2$stat = _props$location2.state) === null || _props$location2$stat === void 0 ? void 0 : (_props$location2$stat2 = _props$location2$stat.jobData) === null || _props$location2$stat2 === void 0 ? void 0 : _props$location2$stat2.tradeId;\n  let specializationId = (_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : (_props$location3$stat = _props$location3.state) === null || _props$location3$stat === void 0 ? void 0 : (_props$location3$stat2 = _props$location3$stat.jobData) === null || _props$location3$stat2 === void 0 ? void 0 : _props$location3$stat2.specializationId;\n\n  const preFetch = async () => {\n    let data = {};\n    data.jobId = jobId;\n    data.tradeId = tradeId;\n    data.specializationId = specializationId;\n    let result = await getHomeJobDetails(data);\n\n    if (result.success) {\n      setDataItems(result === null || result === void 0 ? void 0 : result.data);\n    }\n  };\n\n  const dataFetched = val => {\n    setIsDataFetched(val);\n    setIsLoad(false);\n  };\n\n  const postedBy = (dataItems === null || dataItems === void 0 ? void 0 : dataItems.postedBy) || {};\n  const {\n    builderId,\n    builderImage,\n    builderName,\n    jobName,\n    ratings,\n    reviews\n  } = postedBy;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: [/*#__PURE__*/_jsxDEV(ActiveQuoteMark, { ...props,\n        jobId: jobId,\n        dataFetched: dataFetched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), isDataFetched ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_6 col_ruler\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: \"Posted by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card posted_by \",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"javascript:void(0)\",\n            className: \"chat circle\",\n            onClick: e => {\n              var _storageService$getIt;\n\n              e.preventDefault();\n              props.history.push({\n                pathname: `/chat`,\n                state: {\n                  tradieId: (_storageService$getIt = storageService.getItem('userInfo')) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id,\n                  builderId: builderId,\n                  jobId: jobId,\n                  jobName: jobName\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            onClick: () => {\n              props.history.push(`/builder-info?builderId=${builderId}`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: builderImage || dummy,\n                alt: \"traide-img\",\n                onError: e => {\n                  var _e$target, _e$target2;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                    e.target.src = dummy;\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: builderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rating\",\n                children: [ratings, \" | \", reviews, \" reviews\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relate\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: 'Job details'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edit_icon\",\n            title: \"More\",\n            onClick: () => props.history.push(`/job-details-page?jobId=${jobId}&redirect_from=jobs`),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: more,\n              alt: \"more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }, this) : !props.loading && !isLoad && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record  m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noDataFound,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No Data Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActiveQuoteOuter, \"qoCpO2Ktf1EJSvoHjC8L2Y4788M=\");\n\n_c = ActiveQuoteOuter;\nexport default ActiveQuoteOuter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveQuoteOuter\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/activeQuoteJob/activeQuoteOuter.tsx"],"names":["useEffect","useState","ActiveQuoteMark","getHomeJobDetails","storageService","dummy","more","noDataFound","ActiveQuoteOuter","props","dataItems","setDataItems","isDataFetched","setIsDataFetched","isLoad","setIsLoad","preFetch","jobId","location","state","jobData","tradeId","specializationId","data","result","success","dataFetched","val","postedBy","builderId","builderImage","builderName","jobName","ratings","reviews","e","preventDefault","history","push","pathname","tradieId","getItem","_id","target","onerror","src","loading"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAOC,KAAP,MAAkB,6CAAlB;AACA,OAAOC,IAAP,MAAiB,oDAAjB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAgB;AAAA;;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAM,EAAN,CAA1C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAU,KAAV,CAAlD;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIC,KAAK,sBAAGR,KAAK,CAACS,QAAT,6EAAG,gBAAgBC,KAAnB,oFAAG,sBAAuBC,OAA1B,2DAAG,uBAAgCH,KAA5C;AACA,MAAII,OAAO,uBAAGZ,KAAK,CAACS,QAAT,8EAAG,iBAAgBC,KAAnB,oFAAG,sBAAuBC,OAA1B,2DAAG,uBAAgCC,OAA9C;AACA,MAAIC,gBAAgB,uBAAGb,KAAK,CAACS,QAAT,8EAAG,iBAAgBC,KAAnB,oFAAG,sBAAuBC,OAA1B,2DAAG,uBAAgCE,gBAAvD;;AAEA,QAAMN,QAAQ,GAAG,YAAY;AACzB,QAAIO,IAAS,GAAG,EAAhB;AACAA,IAAAA,IAAI,CAACN,KAAL,GAAaA,KAAb;AACAM,IAAAA,IAAI,CAACF,OAAL,GAAeA,OAAf;AACAE,IAAAA,IAAI,CAACD,gBAAL,GAAwBA,gBAAxB;AACA,QAAIE,MAAW,GAAG,MAAMrB,iBAAiB,CAACoB,IAAD,CAAzC;;AACA,QAAIC,MAAM,CAACC,OAAX,EAAoB;AAChBd,MAAAA,YAAY,CAACa,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAED,IAAT,CAAZ;AACH;AACJ,GATD;;AAWA,QAAMG,WAAW,GAAIC,GAAD,IAAkB;AAClCd,IAAAA,gBAAgB,CAACc,GAAD,CAAhB;AACAZ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAHD;;AAKA,QAAMa,QAAa,GAAG,CAAAlB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEkB,QAAX,KAAuB,EAA7C;AACA,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA,OAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA;AANE,MAOFN,QAPJ;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,eAAD,OACQnB,KADR;AAEI,QAAA,KAAK,EAAEQ,KAFX;AAGI,QAAA,WAAW,EAAES;AAHjB;AAAA;AAAA;AAAA;AAAA,cADJ,EAMKd,aAAa,gBAAI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACd;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADc,eAEd;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACI;AAAG,YAAA,IAAI,EAAC,oBAAR;AAA6B,YAAA,SAAS,EAAC,aAAvC;AACI,YAAA,OAAO,EAAGuB,CAAD,IAAO;AAAA;;AACZA,cAAAA,CAAC,CAACC,cAAF;AACA3B,cAAAA,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAmB;AACfC,gBAAAA,QAAQ,EAAG,OADI;AAEfpB,gBAAAA,KAAK,EAAE;AACHqB,kBAAAA,QAAQ,2BAAEpC,cAAc,CAACqC,OAAf,CAAuB,UAAvB,CAAF,0DAAE,sBAAoCC,GAD3C;AAEHb,kBAAAA,SAAS,EAAEA,SAFR;AAGHZ,kBAAAA,KAAK,EAAEA,KAHJ;AAIHe,kBAAAA,OAAO,EAAEA;AAJN;AAFQ,eAAnB;AASH;AAZL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAK,YAAA,SAAS,EAAC,WAAf;AACI,YAAA,OAAO,EAAE,MAAM;AACXvB,cAAAA,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAoB,2BAA0BT,SAAU,EAAxD;AACH,aAHL;AAAA,oCAII;AAAQ,cAAA,SAAS,EAAC,OAAlB;AAAA,qCACI;AACI,gBAAA,GAAG,EAAEC,YAAY,IAAIzB,KADzB;AAEI,gBAAA,GAAG,EAAC,YAFR;AAGI,gBAAA,OAAO,EAAG8B,CAAD,IAAY;AAAA;;AACjB,sBAAIA,CAAJ,aAAIA,CAAJ,oCAAIA,CAAC,CAAEQ,MAAP,8CAAI,UAAWC,OAAf,EAAwB;AACpBT,oBAAAA,CAAC,CAACQ,MAAF,CAASC,OAAT,GAAmB,IAAnB;AACH;;AACD,sBAAIT,CAAJ,aAAIA,CAAJ,qCAAIA,CAAC,CAAEQ,MAAP,+CAAI,WAAWE,GAAf,EAAoB;AAChBV,oBAAAA,CAAC,CAACQ,MAAF,CAASE,GAAT,GAAexC,KAAf;AACH;AACJ;AAVL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAkBI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCACI;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,0BAAwB0B;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,SAAS,EAAC,QAAhB;AAAA,2BAA0BE,OAA1B,SAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFc,eAwCd;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,sBACK;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AACI,YAAA,SAAS,EAAC,WADd;AAEI,YAAA,KAAK,EAAC,MAFV;AAGI,YAAA,OAAO,EAAE,MACLzB,KAAK,CAAC4B,OAAN,CAAcC,IAAd,CAAoB,2BAA0BrB,KAAM,qBAApD,CAJR;AAAA,mCAKI;AAAK,cAAA,GAAG,EAAEX,IAAV;AAAgB,cAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxCc;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,GAoDJ,CAACG,KAAK,CAACqC,OAAP,IAAkB,CAAChC,MAAnB,iBACN;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEP,WAAV;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3DR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuEH,CA9GD;;GAAMC,gB;;KAAAA,gB;AAgHN,eAAeA,gBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport ActiveQuoteMark from '../activeQuoteJob/activeQuoteMark';\nimport { getHomeJobDetails } from '../../../../redux/homeSearch/actions';\nimport storageService from '../../../../utils/storageService';\n\nimport dummy from '../../../../assets/images/u_placeholder.jpg';\nimport more from '../../../../assets/images/icon-direction-right.png';\nimport noDataFound from \"../../../../assets/images/no-search-data.png\";\n\nconst ActiveQuoteOuter = (props: any) => {\n    const [dataItems, setDataItems] = useState<any>({});\n    const [isDataFetched, setIsDataFetched] = useState<boolean>(false);\n    const [isLoad, setIsLoad] = useState(true);\n\n    useEffect(() => {\n        preFetch();\n    }, []);\n\n    let jobId = props.location?.state?.jobData?.jobId;\n    let tradeId = props.location?.state?.jobData?.tradeId;\n    let specializationId = props.location?.state?.jobData?.specializationId;\n\n    const preFetch = async () => {\n        let data: any = {};\n        data.jobId = jobId;\n        data.tradeId = tradeId;\n        data.specializationId = specializationId;\n        let result: any = await getHomeJobDetails(data);\n        if (result.success) {\n            setDataItems(result?.data);\n        }\n    }\n\n    const dataFetched = (val: boolean) => {\n        setIsDataFetched(val);\n        setIsLoad(false);\n    }\n\n    const postedBy: any = dataItems?.postedBy || {};\n    const {\n        builderId,\n        builderImage,\n        builderName,\n        jobName,\n        ratings,\n        reviews\n    } = postedBy;\n\n    return (\n        <div className=\"detail_col\">\n            <div className=\"flex_row\">\n                <ActiveQuoteMark\n                    {...props}\n                    jobId={jobId}\n                    dataFetched={dataFetched}\n                />\n                {isDataFetched ? (<div className=\"flex_col_sm_6 col_ruler\">\n                    <span className=\"sub_title\">Posted by</span>\n                    <div className=\"tradie_card posted_by \">\n                        <a href=\"javascript:void(0)\" className=\"chat circle\"\n                            onClick={(e) => {\n                                e.preventDefault();\n                                props.history.push({\n                                    pathname: `/chat`,\n                                    state: {\n                                        tradieId: storageService.getItem('userInfo')?._id,\n                                        builderId: builderId,\n                                        jobId: jobId,\n                                        jobName: jobName\n                                    }\n                                })\n                            }} />\n                        <div className=\"user_wrap\"\n                            onClick={() => {\n                                props.history.push(`/builder-info?builderId=${builderId}`)\n                            }}>\n                            <figure className=\"u_img\">\n                                <img\n                                    src={builderImage || dummy}\n                                    alt=\"traide-img\"\n                                    onError={(e: any) => {\n                                        if (e?.target?.onerror) {\n                                            e.target.onerror = null;\n                                        }\n                                        if (e?.target?.src) {\n                                            e.target.src = dummy;\n                                        }\n                                    }}\n                                />\n                            </figure>\n                            <div className=\"details\">\n                                <span className=\"name\">{builderName}</span>\n                                <span className=\"rating\">{ratings} | {reviews} reviews</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"relate\">\n                        <span className=\"sub_title\">\n                            {'Job details'}\n                        </span>\n                        <span\n                            className=\"edit_icon\"\n                            title=\"More\"\n                            onClick={() =>\n                                props.history.push(`/job-details-page?jobId=${jobId}&redirect_from=jobs`)}>\n                            <img src={more} alt=\"more\" />\n                        </span>\n                    </div>\n                </div>) : !props.loading && !isLoad && (\n                    <div className=\"no_record  m-t-vh\">\n                        <figure className=\"no_img\">\n                            <img src={noDataFound} alt=\"data not found\" />\n                        </figure>\n                        <span>No Data Found</span>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n};\n\nexport default ActiveQuoteOuter;\n"]},"metadata":{},"sourceType":"module"}