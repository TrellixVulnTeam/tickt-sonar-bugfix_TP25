{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/personalInformation.tsx\";\nimport React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Modal from \"@material-ui/core/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport Constants from \"../../../../utils/constants\";\nimport regex from \"../../../../utils/regex\";\nimport { portfolioModal } from \"../../../builderInfo/builderInfo\";\nimport ChangeEmailModal from \"./changeEmailModal/changeEmailModal\";\nimport { tradieUpdateProfileDetails, tradieUpdateBasicDetails, tradieUpdatePassword, tradieAddPortfolioJob, tradieUpdatePortfolioJob, tradieDeletePortfolioJob, tradieChangeEmail } from \"../../../../redux/profile/actions\";\nimport { onFileUpload } from \"../../../../redux/auth/actions\";\nimport { setShowToast } from \"../../../../redux/common/actions\";\nimport portfolioPlaceholder from \"../../../../assets/images/portfolio-placeholder.jpg\";\nimport dotMenu from \"../../../../assets/images/menu-dot.png\";\nimport dummy from \"../../../../assets/images/u_placeholder.jpg\";\nimport cameraBlack from \"../../../../assets/images/camera-black.png\";\nimport editIconBlue from \"../../../../assets/images/ic-edit-blue.png\";\nimport profilePlaceholder from \"../../../../assets/images/ic-placeholder-detail.png\";\nimport cancel from \"../../../../assets/images/ic-cancel.png\";\nimport remove from \"../../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../../assets/images/add-image.png\";\nimport addMediaLrg from \"../../../../assets/images/add-image-lg.png\";\nimport spherePlaceholder from \"../../../../assets/images/ic_categories_placeholder.svg\";\nimport eyeIconClose from \"../../../../assets/images/icon-eye-closed.png\";\nimport eyeIconOpen from \"../../../../assets/images/icon-eye-open.png\";\nimport removeFile from \"../../../../assets/images/icon-close-1.png\";\nimport jpegFile from \"../../../../assets/images/jpeg.png\";\nimport jpgFile from \"../../../../assets/images/jpg.png\";\nimport pngFile from \"../../../../assets/images/png.png\";\nimport pdfFile from \"../../../../assets/images/pdf.png\";\nimport docFile from \"../../../../assets/images/doc.png\";\nimport viewProfile from \"../../../../assets/images/view.png\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport storageService from \"../../../../utils/storageService\";\nimport { validateABN } from \"../../../../utils/common\"; //@ts-ignore\n\nimport Skeleton from \"react-loading-skeleton\";\nimport { updateChatUserDetails } from \"../../../../services/firebase\";\nimport { moengage, mixPanel } from \"../../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class PersonalInformation extends Component {\n  constructor(props) {\n    super(props);\n    this.userType = void 0;\n\n    this.toggleSidebar = () => this.setState({\n      isToggleSidebar: !this.state.isToggleSidebar\n    });\n\n    this.tradeHandler = (item, name) => {\n      const id = item === null || item === void 0 ? void 0 : item._id;\n      console.log(item, \"item-------------------\");\n\n      if (name === \"trade\") {\n        if (this.state.trade.length && this.state.trade[0] == id) {\n          this.setState({\n            trade: [],\n            tradeData: [],\n            specialization: [],\n            allSpecializationSelected: false\n          });\n        } else {\n          this.setState({\n            trade: [id],\n            tradeData: [{\n              tradeId: id,\n              tradeName: item === null || item === void 0 ? void 0 : item.trade_name,\n              tradeSelectedUrl: item === null || item === void 0 ? void 0 : item.selected_url\n            }],\n            specialization: [],\n            allSpecializationSelected: false\n          });\n        }\n      } else if (name === \"specializationId\") {\n        this.setState(state => {\n          var newData = [...state.specialization];\n          var newSpecsData = [...state.specializationData];\n\n          if (state.allSpecializationSelected) {\n            newData = [];\n            newSpecsData = [];\n          }\n\n          const itemIndex = newData.indexOf(id);\n\n          if (newData.indexOf(id) < 0) {\n            newData.push(id);\n            newSpecsData.push({\n              specializationId: id,\n              specializationName: item === null || item === void 0 ? void 0 : item.name\n            });\n          } else {\n            newData.splice(itemIndex, 1);\n            newSpecsData.splice(itemIndex, 1);\n          }\n\n          return {\n            specialization: newData,\n            specializationData: newSpecsData,\n            allSpecializationSelected: false\n          };\n        });\n      } else if (name === \"All Clicked\") {\n        if (this.state.allSpecializationSelected) {\n          this.setState({\n            allSpecializationSelected: false,\n            specialization: [],\n            specializationData: []\n          });\n        } else {\n          const newSpecialization = item.map(({\n            _id\n          }) => _id);\n          const newSpecializationData = item.map(({\n            _id,\n            name\n          }) => {\n            return {\n              specializationId: _id,\n              specializationName: name\n            };\n          });\n          this.setState({\n            allSpecializationSelected: true,\n            specialization: newSpecialization,\n            specializationData: newSpecializationData\n          });\n        }\n      } else if (name === \"Clear All\") {\n        this.setState({\n          allSpecializationSelected: false,\n          trade: [],\n          tradeData: [],\n          specialization: [],\n          specializationData: []\n        });\n      }\n    };\n\n    this.submitAreasOfTrade = () => {\n      const newData = { ...this.state.profileViewData\n      };\n      newData.areasOfSpecialization.tradeData = this.state.tradeData;\n      newData.areasOfSpecialization.specializationData = this.state.specializationData;\n      console.log(newData, \"newdata-----------\");\n      this.setState({\n        profileViewData: newData,\n        areasOfSpecsModalClicked: false,\n        isProfileViewDataChanged: true\n      });\n    };\n\n    this.onFileChange = async (e, type, id) => {\n      var _newFile$name, _uploadFileName, _uploadFileName2, _newFile$type, _newFile$type$split$;\n\n      const formData = new FormData();\n      const newFile = e.target.files[0];\n      var uploadFileName = newFile === null || newFile === void 0 ? void 0 : (_newFile$name = newFile.name) === null || _newFile$name === void 0 ? void 0 : _newFile$name.split(\".\");\n      (_uploadFileName = uploadFileName) === null || _uploadFileName === void 0 ? void 0 : _uploadFileName.pop();\n      uploadFileName = (_uploadFileName2 = uploadFileName) === null || _uploadFileName2 === void 0 ? void 0 : _uploadFileName2.join(\".\");\n      var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n      const docTypes = [\"jpeg\", \"jpg\", \"png\", \"pdf\", \"msword\", \"doc\", \"docx\", \"vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n      const docTypes2 = [\"jpeg\", \"jpg\", \"png\"];\n      var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024;\n\n      if (type === \"profileImage\" || type === \"addJobPhotos\") {\n        if (docTypes2.indexOf(fileType) < 0 || selectedFileSize > 10) {\n          alert(\"The file must be in proper format or size\");\n          return;\n        }\n      } else if (docTypes.indexOf(fileType) < 0 || selectedFileSize > 10) {\n        alert(\"The file must be in proper format or size\");\n        return;\n      }\n\n      formData.append(\"file\", newFile);\n\n      if (type === \"profileImage\") {\n        this.setState({\n          userImage: URL.createObjectURL(newFile),\n          formData: formData,\n          isProfileViewDataChanged: true\n        });\n      }\n\n      if (type === \"addJobPhotos\") {\n        const res = await onFileUpload(formData);\n\n        if (res.success) {\n          var _data$portfolioImage;\n\n          const data = { ...this.state.portfolioJobDetail\n          };\n          data === null || data === void 0 ? void 0 : (_data$portfolioImage = data.portfolioImage) === null || _data$portfolioImage === void 0 ? void 0 : _data$portfolioImage.push(res.imgUrl);\n          this.setState({\n            portfolioJobDetail: data\n          });\n        }\n      }\n\n      if (type === \"filledQualification\") {\n        const res = await onFileUpload(formData);\n\n        if (res.success) {\n          const newBasicData = { ...this.state.basicDetailsData\n          };\n          const newqualificationDoc = newBasicData === null || newBasicData === void 0 ? void 0 : newBasicData.qualificationDoc;\n          const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i.qualification_id === id);\n          item.url = res.imgUrl;\n          item.fileName = uploadFileName;\n          this.setState({\n            basicDetailsData: newBasicData,\n            isEditProfileModalChanged: true\n          });\n        }\n      }\n\n      if (type === \"remainingQualification\") {\n        const res = await onFileUpload(formData);\n\n        if (res.success) {\n          const data = [...this.state.remainingQualificationDoc];\n          const item = data === null || data === void 0 ? void 0 : data.find(i => i._id === id);\n          item.url = res.imgUrl;\n          item.fileName = uploadFileName;\n          this.setState({\n            remainingQualificationDoc: data,\n            isEditProfileModalChanged: true\n          });\n        }\n      }\n    };\n\n    this.validateBasicDetailsForm = () => {\n      var _this$state$basicDeta, _this$state$basicDeta2, _this$state$basicDeta3, _this$state$basicDeta5, _this$state$basicDeta7;\n\n      const newErrors = {};\n\n      if (!((_this$state$basicDeta = this.state.basicDetailsData) === null || _this$state$basicDeta === void 0 ? void 0 : _this$state$basicDeta.fullName)) {\n        newErrors.fullName = Constants.errorStrings.fullNameEmpty;\n      } else if (((_this$state$basicDeta2 = this.state.basicDetailsData) === null || _this$state$basicDeta2 === void 0 ? void 0 : (_this$state$basicDeta3 = _this$state$basicDeta2.fullName.trim()) === null || _this$state$basicDeta3 === void 0 ? void 0 : _this$state$basicDeta3.length) > 50) {\n        newErrors.fullName = \"Maximum 50 characters are allowed.\";\n      } else {\n        var _this$state$basicDeta4;\n\n        const nameRegex = new RegExp(regex.fullname);\n\n        if (!nameRegex.test((_this$state$basicDeta4 = this.state.basicDetailsData) === null || _this$state$basicDeta4 === void 0 ? void 0 : _this$state$basicDeta4.fullName.trim())) {\n          newErrors.fullName = Constants.errorStrings.fullNameErr;\n        }\n      }\n\n      if (!((_this$state$basicDeta5 = this.state.basicDetailsData) === null || _this$state$basicDeta5 === void 0 ? void 0 : _this$state$basicDeta5.mobileNumber)) {\n        newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n      } else {\n        var _this$state$basicDeta6;\n\n        const phoneRegex = new RegExp(regex.mobile);\n\n        if (!phoneRegex.test((_this$state$basicDeta6 = this.state.basicDetailsData) === null || _this$state$basicDeta6 === void 0 ? void 0 : _this$state$basicDeta6.mobileNumber)) {\n          newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr;\n        }\n      }\n\n      if (!((_this$state$basicDeta7 = this.state.basicDetailsData) === null || _this$state$basicDeta7 === void 0 ? void 0 : _this$state$basicDeta7.abn)) {\n        newErrors.abn = Constants.errorStrings.abnEmpty;\n      } else {\n        const abnRegex = new RegExp(regex.abn);\n\n        if (!abnRegex.test(this.state.basicDetailsData.abn.replaceAll(\" \", \"\"))) {\n          newErrors.abn = Constants.errorStrings.abnErr;\n        }\n\n        if (!validateABN(this.state.basicDetailsData.abn.replaceAll(\" \", \"\"))) {\n          newErrors.abn = Constants.errorStrings.abnErr;\n        }\n      }\n\n      if (this.userType === 1) {\n        var _this$state$basicDeta8, _this$state$basicDeta9, _Object$keys, _this$state$remaining, _Object$keys2;\n\n        const newQualificationDoc = (_this$state$basicDeta8 = this.state.basicDetailsData) === null || _this$state$basicDeta8 === void 0 ? void 0 : (_this$state$basicDeta9 = _this$state$basicDeta8.qualificationDoc) === null || _this$state$basicDeta9 === void 0 ? void 0 : _this$state$basicDeta9.find(({\n          url,\n          isSelected\n        }) => !(url === null || url === void 0 ? void 0 : url.length) && !(isSelected === null || isSelected === void 0 ? void 0 : isSelected.length));\n        console.log(newQualificationDoc, \"newQualificationDoc validation\");\n\n        if (!!newQualificationDoc && ((_Object$keys = Object.keys(newQualificationDoc)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) {\n          setShowToast(true, \"Please upload all selected documents\");\n          return;\n        }\n\n        const newRemainingDoc = (_this$state$remaining = this.state.remainingQualificationDoc) === null || _this$state$remaining === void 0 ? void 0 : _this$state$remaining.find(({\n          url,\n          isSelected\n        }) => !(url === null || url === void 0 ? void 0 : url.length) && (isSelected === null || isSelected === void 0 ? void 0 : isSelected.length));\n        console.log(newRemainingDoc, \"newRemainingDoc validation\");\n\n        if (!!newRemainingDoc && ((_Object$keys2 = Object.keys(newRemainingDoc)) === null || _Object$keys2 === void 0 ? void 0 : _Object$keys2.length) > 0) {\n          setShowToast(true, \"Please upload all selected documents\");\n          return;\n        }\n      } else {\n        var _this$state$basicDeta10, _this$state$basicDeta11, _this$state$basicDeta12, _this$state$basicDeta13, _this$state$basicDeta14, _this$state$basicDeta15;\n\n        if (!((_this$state$basicDeta10 = this.state.basicDetailsData) === null || _this$state$basicDeta10 === void 0 ? void 0 : _this$state$basicDeta10.companyName)) {\n          newErrors.companyName = Constants.errorStrings.companyNameEmpty;\n        } else if (((_this$state$basicDeta11 = this.state.basicDetailsData) === null || _this$state$basicDeta11 === void 0 ? void 0 : (_this$state$basicDeta12 = _this$state$basicDeta11.companyName.trim()) === null || _this$state$basicDeta12 === void 0 ? void 0 : _this$state$basicDeta12.length) > 50) {\n          newErrors.companyName = \"Maximum 50 characters are allowed.\";\n        } else {\n          const nameRegex = new RegExp(regex.fullname);\n\n          if (!nameRegex.test(this.state.basicDetailsData.companyName.trim())) {\n            newErrors.companyName = Constants.errorStrings.companyNameErr;\n          }\n        }\n\n        if (!((_this$state$basicDeta13 = this.state.basicDetailsData) === null || _this$state$basicDeta13 === void 0 ? void 0 : _this$state$basicDeta13.position)) {\n          newErrors.position = Constants.errorStrings.positionNameEmpty;\n        } else if (((_this$state$basicDeta14 = this.state.basicDetailsData) === null || _this$state$basicDeta14 === void 0 ? void 0 : (_this$state$basicDeta15 = _this$state$basicDeta14.position.trim()) === null || _this$state$basicDeta15 === void 0 ? void 0 : _this$state$basicDeta15.length) > 50) {\n          newErrors.position = \"Maximum 50 Characters Are Allowed.\";\n        } else {\n          const positionRegex = new RegExp(regex.fullname);\n\n          if (!positionRegex.test(this.state.basicDetailsData.position.trim())) {\n            newErrors.position = Constants.errorStrings.positionNameErr;\n          }\n        }\n      }\n\n      this.setState({\n        errors: newErrors\n      });\n      return !Object.keys(newErrors).length;\n    };\n\n    this.validatePasswordForm = () => {\n      const newErrors = {};\n\n      if (!this.state.password) {\n        newErrors.password = Constants.errorStrings.oldPassword;\n      }\n\n      if (!this.state.newPassword) {\n        newErrors.newPassword = \"New Password is required\";\n      } else {\n        const passwordRegex = new RegExp(regex.password);\n\n        if (!passwordRegex.test(this.state.newPassword.trim())) {\n          newErrors.newPassword = Constants.errorStrings.passwordError;\n        }\n      }\n\n      if (this.state.newPassword.trim() !== this.state.confirmNewPassword.trim()) {\n        newErrors.confirmNewPassword = Constants.errorStrings.confirmNewPassword;\n      }\n\n      this.setState({\n        errors: newErrors\n      });\n      return !Object.keys(newErrors).length;\n    };\n\n    this.validateChangeEmailForm = () => {\n      const newErrors = {};\n\n      if (!this.state.newEmail) {\n        newErrors.newEmail = \"New Email Address is required\";\n      } else {\n        var _this$state$basicDeta16;\n\n        const emailRegex = new RegExp(regex.email);\n\n        if (!emailRegex.test((_this$state$basicDeta16 = this.state.basicDetailsData) === null || _this$state$basicDeta16 === void 0 ? void 0 : _this$state$basicDeta16.email)) {\n          newErrors.newEmail = Constants.errorStrings.emailErr;\n        }\n      }\n\n      if (!this.state.password) {\n        newErrors.currentPassword = \"Current Password is required\";\n      } else {\n        const passwordRegex = new RegExp(regex.password);\n\n        if (!passwordRegex.test(this.state.password.trim())) {\n          newErrors.currentPassword = Constants.errorStrings.passwordError;\n        }\n      }\n\n      this.setState({\n        errors: newErrors\n      });\n      return !Object.keys(newErrors).length;\n    };\n\n    this.changeHandler = e => {\n      const newBasicDetails = { ...this.state.basicDetailsData\n      };\n      newBasicDetails[`${e.target.name}`] = e.target.value;\n      this.setState({\n        basicDetailsData: newBasicDetails,\n        isEditProfileModalChanged: true\n      });\n    };\n\n    this.submitBasicProfileDetails = async () => {\n      if (this.validateBasicDetailsForm()) {\n        var _ref, _this$state$basicDeta17, _this$state$remaining2;\n\n        const basicDetails = { ...this.state.basicDetailsData\n        };\n        const filledQualification = this.userType === 1 ? (_ref = [...((_this$state$basicDeta17 = this.state.basicDetailsData) === null || _this$state$basicDeta17 === void 0 ? void 0 : _this$state$basicDeta17.qualificationDoc)]) === null || _ref === void 0 ? void 0 : _ref.map(({\n          url,\n          qualification_id\n        }) => (url === null || url === void 0 ? void 0 : url.length) && {\n          qualification_id: qualification_id,\n          url: url\n        }) : [];\n        const newFilledQualification = filledQualification === null || filledQualification === void 0 ? void 0 : filledQualification.filter(i => {\n          var _Object$keys3;\n\n          return i && ((_Object$keys3 = Object.keys(i)) === null || _Object$keys3 === void 0 ? void 0 : _Object$keys3.length) > 0;\n        });\n        const remainingQualification = (_this$state$remaining2 = this.state.remainingQualificationDoc) === null || _this$state$remaining2 === void 0 ? void 0 : _this$state$remaining2.map(({\n          _id,\n          url\n        }) => (url === null || url === void 0 ? void 0 : url.length) && {\n          qualification_id: _id,\n          url: url\n        });\n        const newRemainingQualification = remainingQualification === null || remainingQualification === void 0 ? void 0 : remainingQualification.filter(i => {\n          var _Object$keys4;\n\n          return i && ((_Object$keys4 = Object.keys(i)) === null || _Object$keys4 === void 0 ? void 0 : _Object$keys4.length) > 0;\n        });\n        const builderData = {\n          companyName: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.companyName,\n          position: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.position\n        };\n        const data = {\n          fullName: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.fullName,\n          mobileNumber: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.mobileNumber,\n          email: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.email,\n          abn: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.abn,\n          qualificationDoc: this.userType === 1 ? [...newFilledQualification, ...newRemainingQualification] : undefined,\n          ...(this.userType === 1 ? {} : builderData),\n          ...(this.userType === 1 && {\n            businessName: basicDetails === null || basicDetails === void 0 ? void 0 : basicDetails.businessName\n          })\n        };\n        const res = await tradieUpdateBasicDetails(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          this.props.cleanTradieBasicDetails();\n          updateChatUserDetails(\"userName\", data.fullName);\n          basicDetails.qualificationDoc = this.userType === 1 ? data.qualificationDoc : [];\n          this.setState(prevState => ({\n            profileModalClicked: false,\n            addQualificationClicked: false,\n            remainingQualificationDoc: [],\n            basicDetailsData: basicDetails,\n            isEditProfileModalChanged: false\n          }));\n          this.props.getTradieBasicDetails();\n          this.userType === 1 ? this.props.callTradieProfileData() : this.props.getProfileBuilder();\n        }\n      }\n    };\n\n    this.passwordHandler = e => {\n      this.setState(prevState => ({ ...prevState,\n        [e.target.name]: e.target.value\n      }));\n    };\n\n    this.updatePasswordHandler = async () => {\n      if (this.validatePasswordForm()) {\n        const data = {\n          user_type: storageService.getItem(\"userType\"),\n          oldPassword: this.state.password,\n          newPassword: this.state.newPassword\n        };\n        const res = await tradieUpdatePassword(data);\n\n        if (res.success) {\n          this.props.history.push(\"/change-password-success\"); // this.passwordModalCloseHandler();\n        }\n      }\n    };\n\n    this.passwordModalCloseHandler = () => {\n      this.setState({\n        profileModalClicked: true,\n        passwordModalClicked: false,\n        password: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n        showPassword: false,\n        showNewPassword: false,\n        showConfirmNewPassword: false,\n        errors: {}\n      });\n    };\n\n    this.changeEmailModalCloseHandler = () => {\n      this.setState({\n        profileModalClicked: true,\n        changeEmailModalClicked: false,\n        password: \"\",\n        newEmail: \"\",\n        showPassword: false,\n        errors: {}\n      });\n    };\n\n    this.submitPortfolioJobs = async () => {\n      if (this.state.addPortfolioJob) {\n        const portfolioJobDetail = this.state.portfolioJobDetail;\n        const data = {\n          jobName: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobName,\n          jobDescription: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription,\n          url: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioImage\n        };\n        const res = await tradieAddPortfolioJob(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          moengage.moE_SendEvent(MoEConstants.ADDED_PORTFOLIO, {\n            timeStamp: moengage.getCurrentTimeStamp()\n          });\n          mixPanel.mixP_SendEvent(MoEConstants.ADDED_PORTFOLIO, {\n            timeStamp: moengage.getCurrentTimeStamp()\n          });\n          const data = { ...this.state.profileViewData\n          };\n          data.portfolio.push(res === null || res === void 0 ? void 0 : res.data);\n          this.setState({\n            portfolioJobDetail: \"\",\n            profileViewData: data,\n            portfolioJobClicked: false,\n            isAddEditPortfolioModal: false,\n            addPortfolioJob: false,\n            portfolioJobIndex: null\n          });\n        }\n      }\n\n      if (this.state.editPortfolioJob) {\n        const portfolioJobDetail = this.state.portfolioJobDetail;\n        const data = {\n          portfolioId: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioId,\n          jobName: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobName,\n          jobDescription: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription,\n          url: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioImage\n        };\n        const res = await tradieUpdatePortfolioJob(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          const index = this.state.portfolioJobIndex;\n          const newProfileData = { ...this.state.profileViewData\n          };\n          const newPortfolio = newProfileData === null || newProfileData === void 0 ? void 0 : newProfileData.portfolio;\n          newPortfolio.splice(index, 1, portfolioJobDetail);\n          this.setState({\n            // portfolioJobDetail: '',\n            profileViewData: newProfileData,\n            portfolioJobClicked: true,\n            isAddEditPortfolioModal: false,\n            editPortfolioJob: false,\n            portfolioJobIndex: null\n          });\n          return;\n        }\n      }\n\n      if (this.state.deletePortfolioJob) {\n        const portfolioJobDetail = this.state.portfolioJobDetail;\n        const index = this.state.portfolioJobIndex;\n        const newProfileData = { ...this.state.profileViewData\n        };\n        const newPortfolio = newProfileData === null || newProfileData === void 0 ? void 0 : newProfileData.portfolio;\n        newPortfolio.splice(index, 1);\n        const res = await tradieDeletePortfolioJob(portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioId);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          this.setState({\n            portfolioJobDetail: \"\",\n            profileViewData: newProfileData,\n            portfolioJobClicked: false,\n            isAddEditPortfolioModal: false,\n            deletePortfolioJob: false,\n            confirmationModalClicked: false,\n            portfolioJobIndex: null\n          });\n          return;\n        }\n      }\n    };\n\n    this.closeAddEditPortofolioModal = () => {\n      this.setState(prevState => ({\n        isAddEditPortfolioModal: false,\n        portfolioJobClicked: prevState.addPortfolioJob ? false : true,\n        addPortfolioJob: false\n      }));\n    };\n\n    this.addNewPortfolioJob = () => {\n      this.setState({\n        addPortfolioJob: true,\n        isAddEditPortfolioModal: true,\n        portfolioJobDetail: {\n          jobName: \"\",\n          jobDescription: \"\",\n          portfolioImage: []\n        }\n      });\n    };\n\n    this.addInfoAboutYou = () => {\n      this.setState(prevState => {\n        var _prevState$profileVie, _prevState$profileVie2;\n\n        return {\n          aboutModalClicked: true,\n          about: (prevState === null || prevState === void 0 ? void 0 : (_prevState$profileVie = prevState.profileViewData) === null || _prevState$profileVie === void 0 ? void 0 : _prevState$profileVie.about) || (prevState === null || prevState === void 0 ? void 0 : (_prevState$profileVie2 = prevState.profileViewData) === null || _prevState$profileVie2 === void 0 ? void 0 : _prevState$profileVie2.aboutCompany) || \"\"\n        };\n      });\n    };\n\n    this.submitUpdateProfile = async () => {\n      var _this$state$profileVi, _this$state$profileVi2, _this$state$basicDeta18, _this$state$profileVi3, _this$state$profileVi4, _this$state$profileVi5, _this$state$profileVi6, _this$state$profileVi7, _this$state$profileVi8, _this$state$profileVi9, _this$state$profileVi10, _this$state$profileVi11, _this$state$profileVi12;\n\n      const newSpecialization = [...((_this$state$profileVi = this.state.profileViewData) === null || _this$state$profileVi === void 0 ? void 0 : (_this$state$profileVi2 = _this$state$profileVi.areasOfSpecialization) === null || _this$state$profileVi2 === void 0 ? void 0 : _this$state$profileVi2.specializationData)];\n      var newSpecializationData = newSpecialization === null || newSpecialization === void 0 ? void 0 : newSpecialization.map(({\n        specializationId\n      }) => (specializationId === null || specializationId === void 0 ? void 0 : specializationId.length) > 0 && specializationId);\n      const data = {\n        fullName: (_this$state$basicDeta18 = this.state.basicDetailsData) === null || _this$state$basicDeta18 === void 0 ? void 0 : _this$state$basicDeta18.fullName,\n        userImage: ((_this$state$profileVi3 = this.state.profileViewData) === null || _this$state$profileVi3 === void 0 ? void 0 : _this$state$profileVi3.tradieImage) || ((_this$state$profileVi4 = this.state.profileViewData) === null || _this$state$profileVi4 === void 0 ? void 0 : _this$state$profileVi4.builderImage),\n        trade: [(_this$state$profileVi5 = this.state.profileViewData) === null || _this$state$profileVi5 === void 0 ? void 0 : (_this$state$profileVi6 = _this$state$profileVi5.areasOfSpecialization) === null || _this$state$profileVi6 === void 0 ? void 0 : (_this$state$profileVi7 = _this$state$profileVi6.tradeData[0]) === null || _this$state$profileVi7 === void 0 ? void 0 : _this$state$profileVi7.tradeId],\n        specialization: newSpecializationData,\n        about: this.userType === 1 ? ((_this$state$profileVi8 = this.state.profileViewData) === null || _this$state$profileVi8 === void 0 ? void 0 : _this$state$profileVi8.about) || \"\" : undefined,\n        position: this.userType === 1 ? undefined : (_this$state$profileVi9 = this.state.profileViewData) === null || _this$state$profileVi9 === void 0 ? void 0 : _this$state$profileVi9.position,\n        companyName: this.userType === 1 ? undefined : (_this$state$profileVi10 = this.state.profileViewData) === null || _this$state$profileVi10 === void 0 ? void 0 : _this$state$profileVi10.companyName,\n        aboutCompany: this.userType === 1 ? undefined : ((_this$state$profileVi11 = this.state.profileViewData) === null || _this$state$profileVi11 === void 0 ? void 0 : _this$state$profileVi11.about) || ((_this$state$profileVi12 = this.state.profileViewData) === null || _this$state$profileVi12 === void 0 ? void 0 : _this$state$profileVi12.aboutCompany)\n      };\n\n      if (this.state.formData) {\n        const res1 = await onFileUpload(this.state.formData);\n\n        if (res1 === null || res1 === void 0 ? void 0 : res1.success) {\n          data.userImage = res1 === null || res1 === void 0 ? void 0 : res1.imgUrl;\n        }\n      }\n\n      const res2 = await tradieUpdateProfileDetails(data);\n\n      if (res2 === null || res2 === void 0 ? void 0 : res2.success) {\n        var _this$state$profileVi13;\n\n        if (this.state.formData) {\n          updateChatUserDetails(\"userImage\", data.userImage);\n        }\n\n        this.setState({\n          formData: null,\n          isProfileViewDataChanged: false\n        });\n        this.userType === 1 ? this.props.callTradieProfileData() : this.props.getProfileBuilder();\n\n        if (this.userType === 2 && this.state.about && ((_this$state$profileVi13 = this.state.profileViewData) === null || _this$state$profileVi13 === void 0 ? void 0 : _this$state$profileVi13.companyName) !== this.state.about) {\n          moengage.moE_SendEvent(MoEConstants.ADDED_INFO_ABOUT_COMPANY, {\n            timeStamp: moengage.getCurrentTimeStamp()\n          });\n          mixPanel.mixP_SendEvent(MoEConstants.ADDED_INFO_ABOUT_COMPANY, {\n            timeStamp: moengage.getCurrentTimeStamp()\n          });\n        }\n      }\n    };\n\n    this.changeEmailHandler = async () => {\n      if (this.validateChangeEmailForm()) {\n        var _this$state$basicDeta19;\n\n        const data = {\n          currentEmail: (_this$state$basicDeta19 = this.state.basicDetailsData) === null || _this$state$basicDeta19 === void 0 ? void 0 : _this$state$basicDeta19.email,\n          newEmail: this.state.newEmail,\n          password: this.state.password,\n          user_type: storageService.getItem(\"userType\")\n        };\n        const res = await tradieChangeEmail(data);\n\n        if (res === null || res === void 0 ? void 0 : res.success) {}\n      }\n    };\n\n    this.removeQualificationFileHandler = (e, id, type) => {\n      e.stopPropagation();\n\n      if (type === \"filledQualification\") {\n        const newBasicData = { ...this.state.basicDetailsData\n        };\n        const newqualificationDoc = newBasicData === null || newBasicData === void 0 ? void 0 : newBasicData.qualificationDoc;\n        const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i.qualification_id === id);\n        item.url = \"\";\n        item.fileName = \"\";\n        newBasicData.qualificationDoc = newqualificationDoc;\n        this.setState({\n          basicDetailsData: newBasicData\n        });\n      }\n\n      if (type === \"remainingQualification\") {\n        const data = [...this.state.remainingQualificationDoc];\n        const item = data === null || data === void 0 ? void 0 : data.find(i => i._id === id);\n        item.url = \"\";\n        item.fileName = \"\";\n        this.setState({\n          remainingQualificationDoc: data\n        });\n      }\n    };\n\n    this.changeQualificationHandler = (id, type) => {\n      if (type === \"filledQualification\") {\n        const newBasicData = { ...this.state.basicDetailsData\n        };\n        const newqualificationDoc = newBasicData === null || newBasicData === void 0 ? void 0 : newBasicData.qualificationDoc;\n        const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i.qualification_id === id);\n        const itemIndex = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.indexOf(item);\n\n        if (item.isSelected) {\n          newqualificationDoc.splice(itemIndex, 1, {\n            qualification_id: id,\n            url: \"\"\n          });\n        } else {\n          newqualificationDoc.splice(itemIndex, 1, {\n            qualification_id: id,\n            url: \"\",\n            isSelected: \"isSelected\"\n          });\n        }\n\n        newBasicData.qualificationDoc = newqualificationDoc;\n        this.setState({\n          basicDetailsData: newBasicData\n        });\n      }\n\n      if (type === \"remainingQualification\") {\n        const newqualificationDoc = [...this.state.remainingQualificationDoc];\n        const item = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.find(i => i._id === id);\n        const itemIndex = newqualificationDoc === null || newqualificationDoc === void 0 ? void 0 : newqualificationDoc.indexOf(item);\n\n        if (item.isSelected) {\n          newqualificationDoc.splice(itemIndex, 1, {\n            _id: id,\n            url: \"\",\n            name: item.name\n          });\n        } else {\n          newqualificationDoc.splice(itemIndex, 1, {\n            _id: id,\n            url: \"\",\n            name: item.name,\n            isSelected: \"isSelected\"\n          });\n        }\n\n        this.setState({\n          remainingQualificationDoc: newqualificationDoc\n        });\n      }\n    };\n\n    this.qualificationFileDetails = url => {\n      var fileArray = url.replace(/^.*[\\\\\\/]/, \"\").split(\".\");\n      const type = fileArray[1].toLowerCase();\n\n      switch (type) {\n        case \"jpeg\":\n          return {\n            fileName: fileArray[0],\n            fileType: jpegFile\n          };\n\n        case \"jpg\":\n          return {\n            fileName: fileArray[0],\n            fileType: jpgFile\n          };\n\n        case \"png\":\n          return {\n            fileName: fileArray[0],\n            fileType: pngFile\n          };\n\n        case \"pdf\":\n          return {\n            fileName: fileArray[0],\n            fileType: pdfFile\n          };\n\n        case \"doc\":\n          return {\n            fileName: fileArray[0],\n            fileType: docFile\n          };\n\n        case \"docx\":\n          return {\n            fileName: fileArray[0],\n            fileType: docFile\n          };\n\n        default:\n          return null;\n      }\n    };\n\n    this.editProfileCloseHandler = () => {\n      this.setState(prevState => ({\n        profileModalClicked: false,\n        basicDetailsData: this.props.tradieBasicDetailsData ? this.props.tradieBasicDetailsData : {},\n        addQualificationClicked: false,\n        remainingQualificationDoc: [],\n        errors: {}\n      }));\n    };\n\n    this.state = {\n      errors: {},\n      isToggleSidebar: false,\n      profileModalClicked: false,\n      areasOfSpecsModalClicked: false,\n      aboutModalClicked: false,\n      portfolioJobClicked: false,\n      isAddEditPortfolioModal: false,\n      passwordModalClicked: false,\n      trade: [],\n      tradeData: [],\n      specialization: [],\n      specializationData: [],\n      allSpecializationSelected: false,\n      about: \"\",\n      userImage: \"\",\n      password: \"\",\n      showPassword: false,\n      newPassword: \"\",\n      showNewPassword: false,\n      confirmNewPassword: \"\",\n      showConfirmNewPassword: false,\n      formData: null,\n      basicDetailsData: {},\n      profileViewData: {},\n      localProfileView: \"\",\n      portfolioJobDetail: \"\",\n      addPortfolioJob: false,\n      editPortfolioJob: false,\n      deletePortfolioJob: false,\n      portfolioJobIndex: null,\n      confirmationModalClicked: false,\n      changeEmailModalClicked: false,\n      isProfileViewDataChanged: false,\n      isEditProfileModalChanged: false,\n      newEmail: \"\",\n      addQualificationClicked: false,\n      localQualificationDoc: [],\n      remainingQualificationDoc: []\n    };\n    this.userType = storageService.getItem(\"userType\");\n  }\n\n  componentDidMount() {\n    this.props.getTradieProfileView();\n    this.props.getTradieBasicDetails();\n\n    if (!this.props.tradeListData.length) {\n      this.props.callTradeList();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanTradieProfileViewData();\n    this.props.cleanTradieBasicDetails();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    var _prevState$localQuali, _prevState$remainingQ;\n\n    console.log(nextProps, \"nextProps--------------\", prevState, \"prevState-------------\");\n\n    if (nextProps.tradieProfileViewData && Object.keys(prevState.profileViewData).length === 0 && !_.isEqual(nextProps.tradieProfileViewData, prevState.profileViewData)) {\n      var _nextProps$tradieProf, _nextProps$tradieProf2;\n\n      return {\n        profileViewData: nextProps.tradieProfileViewData,\n        userImage: ((_nextProps$tradieProf = nextProps.tradieProfileViewData) === null || _nextProps$tradieProf === void 0 ? void 0 : _nextProps$tradieProf.tradieImage) || ((_nextProps$tradieProf2 = nextProps.tradieProfileViewData) === null || _nextProps$tradieProf2 === void 0 ? void 0 : _nextProps$tradieProf2.builderImage)\n      };\n    }\n\n    if (nextProps.tradieBasicDetailsData && Object.keys(prevState.basicDetailsData).length === 0 && !_.isEqual(nextProps.tradieBasicDetailsData, prevState.basicDetailsData)) {\n      return {\n        basicDetailsData: nextProps.tradieBasicDetailsData\n      };\n    }\n\n    if (storageService.getItem(\"userType\") === 1 && nextProps.tradeListData && (!((_prevState$localQuali = prevState.localQualificationDoc) === null || _prevState$localQuali === void 0 ? void 0 : _prevState$localQuali.length) || !((_prevState$remainingQ = prevState.remainingQualificationDoc) === null || _prevState$remainingQ === void 0 ? void 0 : _prevState$remainingQ.length)) && nextProps.tradieBasicDetailsData) {\n      var _2, _$qualifications, _nextProps$tradieBasi, _nextProps$tradieBasi2;\n\n      const data = (_2 = [...nextProps.tradeListData][0]) === null || _2 === void 0 ? void 0 : (_$qualifications = _2.qualifications) === null || _$qualifications === void 0 ? void 0 : _$qualifications.map(item => {\n        var _item$name;\n\n        return ((_item$name = item.name) === null || _item$name === void 0 ? void 0 : _item$name.length) && {\n          _id: item._id,\n          name: item.name\n        };\n      });\n      const alreadyFilledQualificationDoc = (_nextProps$tradieBasi = nextProps.tradieBasicDetailsData) === null || _nextProps$tradieBasi === void 0 ? void 0 : (_nextProps$tradieBasi2 = _nextProps$tradieBasi.qualificationDoc) === null || _nextProps$tradieBasi2 === void 0 ? void 0 : _nextProps$tradieBasi2.map(({\n        qualification_id\n      }) => (qualification_id === null || qualification_id === void 0 ? void 0 : qualification_id.length) && qualification_id);\n      const remainingQualificationDoc = data === null || data === void 0 ? void 0 : data.filter(({\n        _id\n      }) => !(alreadyFilledQualificationDoc === null || alreadyFilledQualificationDoc === void 0 ? void 0 : alreadyFilledQualificationDoc.includes(_id)));\n      console.log(remainingQualificationDoc, \"remainingQualificationDoc\", alreadyFilledQualificationDoc, \"alreadyFilledQualificationDoc\");\n      return {\n        localQualificationDoc: data ? data : [],\n        remainingQualificationDoc: remainingQualificationDoc ? remainingQualificationDoc : []\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    var _props$tradeListData$, _this$props$tradiePro, _this$props$builderPr, _this$props$tradiePro2, _this$props$builderPr2, _storageService$getIt, _basicDetailsData$qua, _basicDetailsData$qua2, _basicDetailsData$qua3, _this$state$basicDeta20, _profileViewData$port, _profileViewData$port2, _profileViewData$port3, _profileViewData$port4, _portfolioJobDetail$p, _portfolioJobDetail$p2, _portfolioJobDetail$p3, _portfolioJobDetail$p4, _portfolioJobDetail$j, _portfolioJobDetail$j2, _portfolioJobDetail$p5;\n\n    let props = this.props;\n    console.log(this.state, \"state--------------\", props, \"props------------\");\n    let {\n      errors,\n      profileModalClicked,\n      areasOfSpecsModalClicked,\n      aboutModalClicked,\n      isAddEditPortfolioModal,\n      portfolioJobClicked,\n      passwordModalClicked,\n      basicDetailsData,\n      trade,\n      specialization,\n      allSpecializationSelected,\n      about,\n      userImage,\n      profileViewData,\n      password,\n      showPassword,\n      newPassword,\n      showNewPassword,\n      confirmNewPassword,\n      showConfirmNewPassword,\n      portfolioJobDetail,\n      addPortfolioJob,\n      confirmationModalClicked,\n      changeEmailModalClicked,\n      isProfileViewDataChanged,\n      isEditProfileModalChanged,\n      addQualificationClicked,\n      localQualificationDoc,\n      remainingQualificationDoc\n    } = this.state;\n    const tradeList = props.tradeListData;\n    const isSkeletonLoading = props.isSkeletonLoading;\n    const specializationList = (_props$tradeListData$ = props.tradeListData.find(({\n      _id\n    }) => _id === trade[0])) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.specialisations;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row f_col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload_profile_pic\",\n            children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 240\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"user_img\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userImage ? userImage : dummy,\n                alt: \"Profile-pic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"camera\",\n                htmlFor: \"upload_profile_pic\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cameraBlack,\n                  alt: \"camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1004,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\" // accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                ,\n                accept: \"image/png,image/jpg,image/jpeg\",\n                style: {\n                  display: \"none\"\n                },\n                id: \"upload_profile_pic\",\n                onChange: e => this.onFileChange(e, \"profileImage\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title_view_wrap\",\n            children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title line-2\",\n              title: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.fullName,\n              children: [basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.fullName, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edit_icon\",\n                title: \"Edit\",\n                onClick: () => this.setState({\n                  profileModalClicked: true\n                }),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: editIconBlue,\n                  alt: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1023,\n              columnNumber: 17\n            }, this), isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"javascript:void(0)\",\n              className: \"view_profile\",\n              onClick: () => {\n                props.cleanTradieProfileViewData();\n                props.history.push(`/${this.userType === 1 ? \"tradie\" : \"builder\"}-info?${this.userType === 1 ? \"trade\" : \"builder\"}Id=${basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.userId}`);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: viewProfile,\n                alt: \"view-profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 19\n              }, this), \"View public profile\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tagg\",\n            children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 36\n            }, this) : basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_4 w85per\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job_progress_wrap\",\n                id: \"scroll-progress-bar\",\n                children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  count: 2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress_wrapper\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: \"Complete your profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1069,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"approval_info\",\n                    children: this.userType === 1 ? (_this$props$tradiePro = this.props.tradieProfileData) === null || _this$props$tradiePro === void 0 ? void 0 : _this$props$tradiePro.profileCompleted : (_this$props$builderPr = this.props.builderProfile) === null || _this$props$builderPr === void 0 ? void 0 : _this$props$builderPr.profileCompleted\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1070,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"progress_bar\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"done_progress\",\n                      id: \"progress-bar\",\n                      type: \"range\",\n                      min: \"0\",\n                      value: parseInt(this.userType === 1 ? (_this$props$tradiePro2 = this.props.tradieProfileData) === null || _this$props$tradiePro2 === void 0 ? void 0 : _this$props$tradiePro2.profileCompleted : (_this$props$builderPr2 = this.props.builderProfile) === null || _this$props$builderPr2 === void 0 ? void 0 : _this$props$builderPr2.profileCompleted)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1076,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1075,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1068,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1064,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"review_job\",\n            children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon reviews\",\n                children: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.ratings) || \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review_count\",\n                children: `${(profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.reviewsCount) || \"0\"} reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 17\n            }, this), isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1108,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon job\",\n                children: profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.jobCompletedCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"review_count\",\n                children: \" jobs completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: profileModalClicked,\n        onClose: this.editProfileCloseHandler,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh profile_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: this.editProfileCloseHandler,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_wrappr\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter Full Name\",\n                    name: \"fullName\",\n                    value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.fullName,\n                    onChange: this.changeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1148,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 19\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.fullName) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1157,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Mobile Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field f_spacebw\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: `+61 ${basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.mobileNumber}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1163,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1162,\n                  columnNumber: 19\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.mobileNumber) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.mobileNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1173,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field f_spacebw\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1180,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1178,\n                  columnNumber: 19\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1176,\n                columnNumber: 17\n              }, this), ((_storageService$getIt = storageService.getItem(\"userInfo\")) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt.accountType) === \"normal\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field f_spacebw\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  onClick: () => this.setState({\n                    changeEmailModalClicked: true,\n                    profileModalClicked: false\n                  }),\n                  children: [\" \", \"Change Email\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"link\",\n                  onClick: () => this.setState({\n                    passwordModalClicked: true,\n                    profileModalClicked: false\n                  }),\n                  children: \"Change Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 19\n              }, this), this.userType === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Business Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter Business Name\",\n                    name: \"businessName\",\n                    value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.businessName,\n                    onChange: this.changeHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1221,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1220,\n                  columnNumber: 21\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.businessName) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.businessName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1230,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 19\n              }, this), this.userType === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Australian Business Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1236,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.abn,\n                    displayType: \"input\",\n                    type: \"tel\",\n                    placeholder: \"51 824 753 556\",\n                    format: \"## ### ### ###\",\n                    isNumericString: true,\n                    onValueChange: values => {\n                      const {\n                        formattedValue,\n                        value\n                      } = values;\n                      const newBasicDetails = { ...this.state.basicDetailsData\n                      };\n                      newBasicDetails.abn = value;\n                      this.setState({\n                        basicDetailsData: newBasicDetails,\n                        isEditProfileModalChanged: true\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1240,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1239,\n                  columnNumber: 21\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.abn) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.abn\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1261,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 19\n              }, this), this.userType === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: [\"Qualification documents\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1268,\n                  columnNumber: 21\n                }, this), (basicDetailsData === null || basicDetailsData === void 0 ? void 0 : (_basicDetailsData$qua = basicDetailsData.qualificationDoc) === null || _basicDetailsData$qua === void 0 ? void 0 : _basicDetailsData$qua.length) > 0 && localQualificationDoc.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : (_basicDetailsData$qua2 = basicDetailsData.qualificationDoc) === null || _basicDetailsData$qua2 === void 0 ? void 0 : _basicDetailsData$qua2.map(({\n                    qualification_id,\n                    url,\n                    isSelected,\n                    fileName\n                  }) => {\n                    var _localQualificationDo;\n\n                    const qualificationName = (_localQualificationDo = localQualificationDoc.find(({\n                      _id\n                    }) => _id === qualification_id)) === null || _localQualificationDo === void 0 ? void 0 : _localQualificationDo.name;\n                    const docDetails = url && this.qualificationFileDetails(url);\n                    return /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"f_spacebw mt-15\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"checkbox_wrap agree_check\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            className: \"filter-type filled-in\",\n                            type: \"checkbox\",\n                            checked: !!isSelected ? false : true,\n                            name: qualificationName,\n                            id: qualificationName,\n                            onChange: () => this.changeQualificationHandler(qualification_id, \"filledQualification\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1301,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: qualificationName,\n                            children: qualificationName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1314,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1300,\n                          columnNumber: 37\n                        }, this), url ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"file_upload_box\",\n                          onClick: () => window.open(`${window.location.origin}/doc-view?url=${url}&header=true`, \"_blank\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"close\",\n                            onClick: e => this.removeQualificationFileHandler(e, qualification_id, \"filledQualification\"),\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: removeFile\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1338,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1328,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"file_icon\",\n                            children: /*#__PURE__*/_jsxDEV(\"img\", {\n                              src: docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileType\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1341,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1340,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"file_details\",\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"name\",\n                              children: fileName ? fileName : docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1344,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1343,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1319,\n                          columnNumber: 39\n                        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"upload_doc\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: `upload_btn ${isSelected ? \"disable\" : \"\"}`,\n                            htmlFor: qualificationName + \"upload\",\n                            children: \"Upload\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1353,\n                            columnNumber: 41\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"file\",\n                            className: \"none\",\n                            id: qualificationName + \"upload\",\n                            accept: \"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                            disabled: !!isSelected ? true : false,\n                            onChange: e => this.onFileChange(e, \"filledQualification\", qualification_id)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1361,\n                            columnNumber: 41\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1352,\n                          columnNumber: 39\n                        }, this)]\n                      }, qualification_id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1296,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false);\n                  })\n                }, void 0, false), addQualificationClicked && (remainingQualificationDoc === null || remainingQualificationDoc === void 0 ? void 0 : remainingQualificationDoc.length) > 0 && (remainingQualificationDoc === null || remainingQualificationDoc === void 0 ? void 0 : remainingQualificationDoc.map(({\n                  _id,\n                  name,\n                  url,\n                  isSelected,\n                  fileName\n                }) => {\n                  const docDetails = url && this.qualificationFileDetails(url);\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"f_spacebw mt-15\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"checkbox_wrap agree_check\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          className: \"filter-type filled-in\",\n                          type: \"checkbox\",\n                          checked: !!isSelected ? true : false,\n                          name: name,\n                          id: name,\n                          onChange: () => this.changeQualificationHandler(_id, \"remainingQualification\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1407,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: name,\n                          children: name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1420,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1406,\n                        columnNumber: 33\n                      }, this), url ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"file_upload_box\",\n                        onClick: () => window.open(`${window.location.origin}/doc-view?url=${url}&header=true`, \"_blank\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"close\",\n                          onClick: e => this.removeQualificationFileHandler(e, _id, \"remainingQualification\"),\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: removeFile\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1442,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1432,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"file_icon\",\n                          children: /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: docDetails === null || docDetails === void 0 ? void 0 : docDetails.fileType\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1445,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1444,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"file_details\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"name\",\n                            children: fileName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1449,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1447,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1423,\n                        columnNumber: 35\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"upload_doc\",\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: `upload_btn ${!isSelected ? \"disable\" : \"\"}`,\n                          htmlFor: name + \"upload\",\n                          children: \"Upload\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1454,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"file\",\n                          className: \"none\",\n                          id: name + \"upload\",\n                          accept: \"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n                          disabled: !!isSelected ? false : true,\n                          onChange: e => this.onFileChange(e, \"remainingQualification\", _id)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1462,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1453,\n                        columnNumber: 35\n                      }, this)]\n                    }, _id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1405,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false);\n                }))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1267,\n                columnNumber: 19\n              }, this), this.userType === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Company Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1488,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Company Name\",\n                      name: \"companyName\",\n                      value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.companyName,\n                      onChange: this.changeHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1490,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1489,\n                    columnNumber: 23\n                  }, this), !!(errors === null || errors === void 0 ? void 0 : errors.companyName) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.companyName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1499,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1487,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Your Position\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1503,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Your Position\",\n                      name: \"position\",\n                      value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.position,\n                      onChange: this.changeHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1505,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1504,\n                    columnNumber: 23\n                  }, this), !!(errors === null || errors === void 0 ? void 0 : errors.position) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1514,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1502,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: \"Australian Business Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1518,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text_field\",\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      value: basicDetailsData === null || basicDetailsData === void 0 ? void 0 : basicDetailsData.abn,\n                      displayType: \"input\",\n                      type: \"tel\",\n                      placeholder: \"51 824 753 556\",\n                      format: \"## ### ### ###\",\n                      isNumericString: true,\n                      onValueChange: values => {\n                        const {\n                          formattedValue,\n                          value\n                        } = values;\n                        const newBasicDetails = { ...this.state.basicDetailsData\n                        };\n                        newBasicDetails.abn = value;\n                        this.setState({\n                          basicDetailsData: newBasicDetails,\n                          isEditProfileModalChanged: true\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1523,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1521,\n                    columnNumber: 23\n                  }, this), !!(errors === null || errors === void 0 ? void 0 : errors.abn) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error_msg\",\n                    children: errors === null || errors === void 0 ? void 0 : errors.abn\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1544,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1517,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 15\n            }, this), this.userType === 1 && (basicDetailsData === null || basicDetailsData === void 0 ? void 0 : (_basicDetailsData$qua3 = basicDetailsData.qualificationDoc) === null || _basicDetailsData$qua3 === void 0 ? void 0 : _basicDetailsData$qua3.length) < 6 && !addQualificationClicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fill_grey_btn full_btn btn-effect\",\n                  onClick: () => this.setState({\n                    addQualificationClicked: true\n                  }),\n                  children: [\"Add qualification documents\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1556,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1555,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info_note\",\n                children: \"Don\\u2019t worry, nobody will see it. This is for verification only!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1565,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${isEditProfileModalChanged ? \"\" : \"disable_btn\"}`,\n              onClick: this.submitBasicProfileDetails,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1573,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1572,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: passwordModalClicked,\n        onClose: this.passwordModalCloseHandler,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh profile_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: this.passwordModalCloseHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1600,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md_heading\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sub_title\",\n                  children: \"Change password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1605,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1604,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: this.passwordModalCloseHandler,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1612,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1608,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_wrappr\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Old Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1618,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: showPassword ? \"text\" : \"password\",\n                    className: \"detect_input\",\n                    placeholder: \"Enter Password\",\n                    name: \"password\",\n                    value: password,\n                    onChange: this.passwordHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1620,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detect_icon\",\n                    onClick: () => this.setState(prevState => ({\n                      showPassword: !prevState.showPassword\n                    })),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: showPassword ? eyeIconOpen : eyeIconClose,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1636,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1628,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1619,\n                  columnNumber: 19\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1643,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1617,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1647,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: showNewPassword ? \"text\" : \"password\",\n                    className: \"detect_input\",\n                    placeholder: \"Enter New Password\",\n                    name: \"newPassword\",\n                    value: newPassword,\n                    onChange: this.passwordHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1649,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detect_icon\",\n                    onClick: () => this.setState(prevState => ({\n                      showNewPassword: !prevState.showNewPassword\n                    })),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: showNewPassword ? eyeIconOpen : eyeIconClose,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1665,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1657,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1648,\n                  columnNumber: 19\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.newPassword) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.newPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1672,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1646,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Confirm New Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1676,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: showConfirmNewPassword ? \"text\" : \"password\",\n                    className: \"detect_input\",\n                    placeholder: \"Enter Confirm New Password\",\n                    name: \"confirmNewPassword\",\n                    value: confirmNewPassword,\n                    onChange: this.passwordHandler\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1678,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detect_icon\",\n                    onClick: () => this.setState(prevState => ({\n                      showConfirmNewPassword: !prevState.showConfirmNewPassword\n                    })),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: showConfirmNewPassword ? eyeIconOpen : eyeIconClose,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1695,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1686,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1677,\n                  columnNumber: 19\n                }, this), !!(errors === null || errors === void 0 ? void 0 : errors.confirmNewPassword) && !(errors === null || errors === void 0 ? void 0 : errors.newPassword) && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.confirmNewPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1704,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1675,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1616,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${password && newPassword && confirmNewPassword ? \"\" : \"disable_btn\"}`,\n              onClick: this.updatePasswordHandler,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1712,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1711,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1592,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChangeEmailModal, {\n        history: props.history,\n        isChangeEmailModalClicked: changeEmailModalClicked,\n        currentEmail: (_this$state$basicDeta20 = this.state.basicDetailsData) === null || _this$state$basicDeta20 === void 0 ? void 0 : _this$state$basicDeta20.email,\n        changeEmailModalCloseHandler: this.changeEmailModalCloseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1736,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: [\"Areas of specialisation\", this.userType === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edit_icon\",\n            title: \"Edit\",\n            onClick: () => this.setState({\n              areasOfSpecsModalClicked: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editIconBlue,\n              alt: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1748,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1741,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1738,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: areasOfSpecsModalClicked,\n        onClose: () => this.setState({\n          areasOfSpecsModalClicked: false\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh filter_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"What is your trade?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1769,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: () => this.setState({\n                areasOfSpecsModalClicked: false\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1776,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1770,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: \"Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1782,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1781,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select_sphere\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: tradeList === null || tradeList === void 0 ? void 0 : tradeList.map(({\n                  _id,\n                  trade_name,\n                  selected_url,\n                  specialisations\n                }) => {\n                  const active = trade[0] === _id;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: active ? \"active\" : \"\",\n                    onClick: () => this.tradeHandler({\n                      _id,\n                      trade_name,\n                      selected_url\n                    }, \"trade\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: selected_url ? selected_url : spherePlaceholder,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1811,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1810,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"name\",\n                      children: trade_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1818,\n                      columnNumber: 27\n                    }, this)]\n                  }, _id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1800,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1785,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1784,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: \"Specialisation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1826,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1825,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags_wrap\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [(specializationList === null || specializationList === void 0 ? void 0 : specializationList.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: allSpecializationSelected ? \"selected\" : \"\",\n                  onClick: () => this.tradeHandler(specializationList, \"All Clicked\"),\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1831,\n                  columnNumber: 21\n                }, this), specializationList === null || specializationList === void 0 ? void 0 : specializationList.map(({\n                  _id,\n                  name\n                }) => {\n                  const active = (specialization === null || specialization === void 0 ? void 0 : specialization.indexOf(_id)) >= 0;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: active && !allSpecializationSelected ? \"selected\" : \"\",\n                    onClick: () => this.tradeHandler({\n                      _id,\n                      name\n                    }, \"specializationId\"),\n                    children: name\n                  }, _id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1844,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1829,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1780,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: `link ${trade.length && specialization.length ? \"\" : \"disable_link\"}`,\n              onClick: () => this.tradeHandler(\"Clear All\", \"Clear All\"),\n              children: \"Clear All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1864,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${trade.length && specialization.length ? \"\" : \"disable_btn\"}`,\n              onClick: this.submitAreasOfTrade,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1872,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1762,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1755,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: [isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1886,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: [\"About \", this.userType === 2 && \"company\", ((profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) || (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.aboutCompany)) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edit_icon\",\n            title: \"Edit\",\n            onClick: this.addInfoAboutYou,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editIconBlue,\n              alt: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1896,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1891,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 13\n        }, this), !(profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) && !(profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.aboutCompany) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_grey_btn full_btn btn-effect\",\n          onClick: this.addInfoAboutYou,\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1907,\n            columnNumber: 17\n          }, this) : `Add info about ${this.userType === 1 ? \"you\" : \"company\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1902,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commn_para\",\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1915,\n            columnNumber: 15\n          }, this) : (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) || (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.aboutCompany)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1913,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1884,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: aboutModalClicked,\n        onClose: () => this.setState({\n          about: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) ? profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about : \"\",\n          aboutModalClicked: false,\n          errors: {}\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh profile_modal\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: [\"About \", this.userType === 2 && \"company\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1942,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: () => this.setState({\n                about: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) ? profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about : \"\",\n                aboutModalClicked: false,\n                errors: {}\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1955,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1945,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1941,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: this.userType === 1 ? \"Description\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1959,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Enter Description\",\n                maxLength: 250,\n                value: about,\n                onChange: ({\n                  target: {\n                    value\n                  }\n                }) => this.setState({\n                  about: value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1963,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char_count\",\n                children: `${about.length}/250`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1973,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1962,\n              columnNumber: 15\n            }, this), !!errors.about && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors.about\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1976,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1958,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: () => {\n                let err = {};\n\n                if (about.trim().length < 1) {\n                  err.about = \"Description is required\";\n                  this.setState({\n                    errors: err\n                  });\n                } else {\n                  const newData = { ...profileViewData\n                  };\n                  newData.about = about;\n                  this.setState({\n                    profileViewData: newData,\n                    aboutModalClicked: false,\n                    isProfileViewDataChanged: true\n                  });\n                }\n              },\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1980,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn btn-effect\",\n              onClick: () => this.setState({\n                about: (profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about) ? profileViewData === null || profileViewData === void 0 ? void 0 : profileViewData.about : \"\",\n                aboutModalClicked: false,\n                errors: {}\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2000,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1979,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1935,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1922,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2018,\n            columnNumber: 34\n          }, this) : \"Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2017,\n          columnNumber: 11\n        }, this), (profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port = profileViewData.portfolio) === null || _profileViewData$port === void 0 ? void 0 : _profileViewData$port.length) === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_grey_btn full_btn btn-effect\",\n          onClick: this.addNewPortfolioJob,\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2025,\n            columnNumber: 36\n          }, this) : \"Add portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2021,\n          columnNumber: 13\n        }, this), isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2029,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"portfolio_wrappr\",\n          children: [profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port2 = profileViewData.portfolio) === null || _profileViewData$port2 === void 0 ? void 0 : _profileViewData$port2.map(({\n            jobDescription,\n            jobName,\n            portfolioId,\n            portfolioImage\n          }, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"media\",\n              onClick: () => this.setState({\n                portfolioJobClicked: true,\n                portfolioJobDetail: {\n                  jobDescription,\n                  jobName,\n                  portfolioId,\n                  portfolioImage\n                },\n                portfolioJobIndex: index\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"portfolio_img\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: portfolioImage[0] ? portfolioImage[0] : profilePlaceholder,\n                  alt: \"portfolio-images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2065,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"xs_sub_title\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"line-3\",\n                    title: jobName,\n                    children: jobName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2074,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2073,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2064,\n                columnNumber: 23\n              }, this)\n            }, portfolioId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2048,\n              columnNumber: 21\n            }, this);\n          }), (profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port3 = profileViewData.portfolio) === null || _profileViewData$port3 === void 0 ? void 0 : _profileViewData$port3.length) < 6 && (profileViewData === null || profileViewData === void 0 ? void 0 : (_profileViewData$port4 = profileViewData.portfolio) === null || _profileViewData$port4 === void 0 ? void 0 : _profileViewData$port4.length) > 0 && /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload_media\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: addMediaLrg,\n              alt: \"add\",\n              onClick: this.addNewPortfolioJob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2087,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2086,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2031,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2016,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: portfolioJobClicked,\n        onClose: () => this.setState({\n          portfolioJobClicked: false\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh portfolio_preview\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: /*#__PURE__*/_jsxDEV(Carousel, {\n                responsive: portfolioModal,\n                showDots: true,\n                infinite: true,\n                autoPlay: true,\n                arrows: false,\n                className: \"portfolio_wrappr\",\n                children: (portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p === void 0 ? void 0 : _portfolioJobDetail$p.length) > 0 ? portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p2 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p2 === void 0 ? void 0 : _portfolioJobDetail$p2.map(image => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"media\",\n                    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"portfolio_img\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: image ? image : portfolioPlaceholder,\n                        alt: \"portfolio-images\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2129,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"back bk_white\",\n                        title: \"Back\",\n                        onClick: () => this.setState({\n                          portfolioJobClicked: false\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2133,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2128,\n                      columnNumber: 27\n                    }, this)\n                  }, portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.portfolioId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2124,\n                    columnNumber: 25\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"\",\n                  src: portfolioPlaceholder\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot_menu\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: dotMenu,\n                  alt: \"menu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2151,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit_menu\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon edit\",\n                      onClick: () => this.setState({\n                        isAddEditPortfolioModal: true,\n                        portfolioJobClicked: false,\n                        editPortfolioJob: true\n                      }),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2155,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"icon delete\",\n                      onClick: () => this.setState({\n                        deletePortfolioJob: true,\n                        confirmationModalClicked: true\n                      }),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2167,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2154,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: \"Job Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"job_content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2098,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: confirmationModalClicked,\n        onClose: () => this.setState({\n          confirmationModalClicked: false,\n          portfolioJobIndex: null\n        }),\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh confirmation\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xs_sub_title\",\n              children: \"Delete Portfolio Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: () => this.setState({\n                confirmationModalClicked: false,\n                portfolioJobIndex: null\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal_message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Are you sure you want to delete portfolio job?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dialog_actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn btn-effect\",\n              onClick: this.submitPortfolioJobs,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn btn-effect\",\n              onClick: () => this.setState({\n                confirmationModalClicked: false,\n                portfolioJobIndex: null\n              }),\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"custom_modal\",\n        open: isAddEditPortfolioModal,\n        onClose: this.closeAddEditPortofolioModal,\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_wh\",\n          \"data-aos\": \"zoom-in\",\n          \"data-aos-delay\": \"30\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heading\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: this.closeAddEditPortofolioModal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md_heading\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"sub_title\",\n                  children: \"Portfolio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"info_note\",\n                  children: storageService.getItem(\"userType\") === 1 ? \"Tradespeople who have a portfolio with photos get job faster.\" : \"Showcase your work and attract the best talent to your jobs.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2268,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close_btn\",\n              onClick: this.closeAddEditPortofolioModal,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2279,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner_wrappr\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: \"Job Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter Job Name\",\n                    value: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobName,\n                    maxLength: 100,\n                    onChange: e => {\n                      const data = { ...portfolioJobDetail\n                      };\n                      data.jobName = e.target.value;\n                      this.setState({\n                        portfolioJobDetail: data\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2287,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2286,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: `Job Description ${this.userType === 2 ? `(optional)` : \"\"}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2301,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    placeholder: \"Enter Job Description\",\n                    value: portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : portfolioJobDetail.jobDescription,\n                    maxLength: 250,\n                    onChange: e => {\n                      const data = { ...portfolioJobDetail\n                      };\n                      data.jobDescription = e.target.value;\n                      this.setState({\n                        portfolioJobDetail: data\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2305,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload_img_video\",\n              children: [portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p3 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p3 === void 0 ? void 0 : _portfolioJobDetail$p3.map((image, index) => {\n                return /*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"img_video\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: image ? image : dummy,\n                    \"async-src\": image ? image : dummy,\n                    decoding: \"async\",\n                    loading: \"lazy\",\n                    alt: \"portfolio-images\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2327,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: remove,\n                    alt: \"remove\",\n                    className: \"remove\",\n                    onClick: () => {\n                      var _data$portfolioImage2;\n\n                      const data = { ...portfolioJobDetail\n                      };\n                      data === null || data === void 0 ? void 0 : (_data$portfolioImage2 = data.portfolioImage) === null || _data$portfolioImage2 === void 0 ? void 0 : _data$portfolioImage2.splice(index, 1);\n                      this.setState({\n                        portfolioJobDetail: data\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2334,\n                    columnNumber: 25\n                  }, this)]\n                }, image, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2326,\n                  columnNumber: 23\n                }, this);\n              }), (portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p4 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p4 === void 0 ? void 0 : _portfolioJobDetail$p4.length) < 6 && addPortfolioJob && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"upload_media\",\n                  htmlFor: \"upload_img_video\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: addMedia,\n                    alt: \"add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2356,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2352,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/png,image/jpg,image/jpeg\",\n                  style: {\n                    display: \"none\"\n                  },\n                  id: \"upload_img_video\",\n                  onChange: e => this.onFileChange(e, \"addJobPhotos\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2359,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${(portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$j = portfolioJobDetail.jobName) === null || _portfolioJobDetail$j === void 0 ? void 0 : _portfolioJobDetail$j.trim()) && (this.userType === 2 ? true : portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$j2 = portfolioJobDetail.jobDescription) === null || _portfolioJobDetail$j2 === void 0 ? void 0 : _portfolioJobDetail$j2.trim()) && (this.userType === 2 ? true : portfolioJobDetail === null || portfolioJobDetail === void 0 ? void 0 : (_portfolioJobDetail$p5 = portfolioJobDetail.portfolioImage) === null || _portfolioJobDetail$p5 === void 0 ? void 0 : _portfolioJobDetail$p5.length) ? \"\" : \"disable_btn\"}`,\n              onClick: this.submitPortfolioJobs,\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn btn-effect\",\n              onClick: this.closeAddEditPortofolioModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2387,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `fill_btn full_btn btn-effect ${isProfileViewDataChanged ? \"\" : \"disable_btn\"}`,\n          onClick: this.submitUpdateProfile,\n          children: isSkeletonLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2404,\n            columnNumber: 34\n          }, this) : \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default PersonalInformation;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/personalInformation.tsx"],"names":["React","Component","_","Modal","NumberFormat","Constants","regex","portfolioModal","ChangeEmailModal","tradieUpdateProfileDetails","tradieUpdateBasicDetails","tradieUpdatePassword","tradieAddPortfolioJob","tradieUpdatePortfolioJob","tradieDeletePortfolioJob","tradieChangeEmail","onFileUpload","setShowToast","portfolioPlaceholder","dotMenu","dummy","cameraBlack","editIconBlue","profilePlaceholder","cancel","remove","addMedia","addMediaLrg","eyeIconClose","eyeIconOpen","removeFile","jpegFile","jpgFile","pngFile","pdfFile","docFile","viewProfile","Carousel","storageService","validateABN","Skeleton","updateChatUserDetails","moengage","mixPanel","MoEConstants","PersonalInformation","constructor","props","userType","toggleSidebar","setState","isToggleSidebar","state","tradeHandler","item","name","id","_id","console","log","trade","length","tradeData","specialization","allSpecializationSelected","tradeId","tradeName","trade_name","tradeSelectedUrl","selected_url","newData","newSpecsData","specializationData","itemIndex","indexOf","push","specializationId","specializationName","splice","newSpecialization","map","newSpecializationData","submitAreasOfTrade","profileViewData","areasOfSpecialization","areasOfSpecsModalClicked","isProfileViewDataChanged","onFileChange","e","type","formData","FormData","newFile","target","files","uploadFileName","split","pop","join","fileType","toLowerCase","docTypes","docTypes2","selectedFileSize","size","alert","append","userImage","URL","createObjectURL","res","success","data","portfolioJobDetail","portfolioImage","imgUrl","newBasicData","basicDetailsData","newqualificationDoc","qualificationDoc","find","i","qualification_id","url","fileName","isEditProfileModalChanged","remainingQualificationDoc","validateBasicDetailsForm","newErrors","fullName","errorStrings","fullNameEmpty","trim","nameRegex","RegExp","fullname","test","fullNameErr","mobileNumber","phoneNumberEmpty","phoneRegex","mobile","phoneNumberErr","abn","abnEmpty","abnRegex","replaceAll","abnErr","newQualificationDoc","isSelected","Object","keys","newRemainingDoc","companyName","companyNameEmpty","companyNameErr","position","positionNameEmpty","positionRegex","positionNameErr","errors","validatePasswordForm","password","oldPassword","newPassword","passwordRegex","passwordError","confirmNewPassword","validateChangeEmailForm","newEmail","emailRegex","email","emailErr","currentPassword","changeHandler","newBasicDetails","value","submitBasicProfileDetails","basicDetails","filledQualification","newFilledQualification","filter","remainingQualification","newRemainingQualification","builderData","undefined","businessName","cleanTradieBasicDetails","prevState","profileModalClicked","addQualificationClicked","getTradieBasicDetails","callTradieProfileData","getProfileBuilder","passwordHandler","updatePasswordHandler","user_type","getItem","history","passwordModalCloseHandler","passwordModalClicked","showPassword","showNewPassword","showConfirmNewPassword","changeEmailModalCloseHandler","changeEmailModalClicked","submitPortfolioJobs","addPortfolioJob","jobName","jobDescription","moE_SendEvent","ADDED_PORTFOLIO","timeStamp","getCurrentTimeStamp","mixP_SendEvent","portfolio","portfolioJobClicked","isAddEditPortfolioModal","portfolioJobIndex","editPortfolioJob","portfolioId","index","newProfileData","newPortfolio","deletePortfolioJob","confirmationModalClicked","closeAddEditPortofolioModal","addNewPortfolioJob","addInfoAboutYou","aboutModalClicked","about","aboutCompany","submitUpdateProfile","tradieImage","builderImage","res1","res2","ADDED_INFO_ABOUT_COMPANY","changeEmailHandler","currentEmail","removeQualificationFileHandler","stopPropagation","changeQualificationHandler","qualificationFileDetails","fileArray","replace","editProfileCloseHandler","tradieBasicDetailsData","localProfileView","localQualificationDoc","componentDidMount","getTradieProfileView","tradeListData","callTradeList","componentWillUnmount","cleanTradieProfileViewData","getDerivedStateFromProps","nextProps","tradieProfileViewData","isEqual","qualifications","alreadyFilledQualificationDoc","includes","render","tradeList","isSkeletonLoading","specializationList","specialisations","display","userId","tradieProfileData","profileCompleted","builderProfile","parseInt","ratings","reviewsCount","jobCompletedCount","accountType","values","formattedValue","qualificationName","docDetails","window","open","location","origin","active","spherePlaceholder","err","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,SACEC,0BADF,EAEEC,wBAFF,EAGEC,oBAHF,EAIEC,qBAJF,EAKEC,wBALF,EAMEC,wBANF,EAOEC,iBAPF,QAQO,mCARP;AASA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,YAAT,QAA6B,kCAA7B;AAEA,OAAOC,oBAAP,MAAiC,qDAAjC;AAEA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,KAAP,MAAkB,6CAAlB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,kBAAP,MAA+B,qDAA/B;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;;AAGA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,qCAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,qCAAnC;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AA2DA,OAAO,MAAMC,mBAAN,SAAkC5C,SAAlC,CAA0D;AAG/D6C,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AADsB,SAFhBC,QAEgB;;AAAA,SA0HxBC,aA1HwB,GA0HR,MACd,KAAKC,QAAL,CAAc;AAAEC,MAAAA,eAAe,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAA/B,KAAd,CA3HsB;;AAAA,SA6HxBE,YA7HwB,GA6HT,CAACC,IAAD,EAAYC,IAAZ,KAA6B;AAC1C,YAAMC,EAAE,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,GAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,yBAAlB;;AACA,UAAIC,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAI,KAAKH,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,IAA2B,KAAKT,KAAL,CAAWQ,KAAX,CAAiB,CAAjB,KAAuBJ,EAAtD,EAA0D;AACxD,eAAKN,QAAL,CAAc;AACZU,YAAAA,KAAK,EAAE,EADK;AAEZE,YAAAA,SAAS,EAAE,EAFC;AAGZC,YAAAA,cAAc,EAAE,EAHJ;AAIZC,YAAAA,yBAAyB,EAAE;AAJf,WAAd;AAMD,SAPD,MAOO;AACL,eAAKd,QAAL,CAAc;AACZU,YAAAA,KAAK,EAAE,CAACJ,EAAD,CADK;AAEZM,YAAAA,SAAS,EAAE,CACT;AACEG,cAAAA,OAAO,EAAET,EADX;AAEEU,cAAAA,SAAS,EAAEZ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEa,UAFnB;AAGEC,cAAAA,gBAAgB,EAAEd,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEe;AAH1B,aADS,CAFC;AASZN,YAAAA,cAAc,EAAE,EATJ;AAUZC,YAAAA,yBAAyB,EAAE;AAVf,WAAd;AAYD;AACF,OAtBD,MAsBO,IAAIT,IAAI,KAAK,kBAAb,EAAiC;AACtC,aAAKL,QAAL,CAAeE,KAAD,IAAgB;AAC5B,cAAIkB,OAAO,GAAG,CAAC,GAAGlB,KAAK,CAACW,cAAV,CAAd;AACA,cAAIQ,YAAY,GAAG,CAAC,GAAGnB,KAAK,CAACoB,kBAAV,CAAnB;;AACA,cAAIpB,KAAK,CAACY,yBAAV,EAAqC;AACnCM,YAAAA,OAAO,GAAG,EAAV;AACAC,YAAAA,YAAY,GAAG,EAAf;AACD;;AACD,gBAAME,SAAS,GAAGH,OAAO,CAACI,OAAR,CAAgBlB,EAAhB,CAAlB;;AACA,cAAIc,OAAO,CAACI,OAAR,CAAgBlB,EAAhB,IAAsB,CAA1B,EAA6B;AAC3Bc,YAAAA,OAAO,CAACK,IAAR,CAAanB,EAAb;AACAe,YAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBC,cAAAA,gBAAgB,EAAEpB,EADF;AAEhBqB,cAAAA,kBAAkB,EAAEvB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEC;AAFV,aAAlB;AAID,WAND,MAMO;AACLe,YAAAA,OAAO,CAACQ,MAAR,CAAeL,SAAf,EAA0B,CAA1B;AACAF,YAAAA,YAAY,CAACO,MAAb,CAAoBL,SAApB,EAA+B,CAA/B;AACD;;AACD,iBAAO;AACLV,YAAAA,cAAc,EAAEO,OADX;AAELE,YAAAA,kBAAkB,EAAED,YAFf;AAGLP,YAAAA,yBAAyB,EAAE;AAHtB,WAAP;AAKD,SAvBD;AAwBD,OAzBM,MAyBA,IAAIT,IAAI,KAAK,aAAb,EAA4B;AACjC,YAAI,KAAKH,KAAL,CAAWY,yBAAf,EAA0C;AACxC,eAAKd,QAAL,CAAc;AACZc,YAAAA,yBAAyB,EAAE,KADf;AAEZD,YAAAA,cAAc,EAAE,EAFJ;AAGZS,YAAAA,kBAAkB,EAAE;AAHR,WAAd;AAKD,SAND,MAMO;AACL,gBAAMO,iBAAiB,GAAGzB,IAAI,CAAC0B,GAAL,CAAS,CAAC;AAAEvB,YAAAA;AAAF,WAAD,KAA8BA,GAAvC,CAA1B;AACA,gBAAMwB,qBAAqB,GAAG3B,IAAI,CAAC0B,GAAL,CAC5B,CAAC;AAAEvB,YAAAA,GAAF;AAAOF,YAAAA;AAAP,WAAD,KAAkD;AAChD,mBAAO;AACLqB,cAAAA,gBAAgB,EAAEnB,GADb;AAELoB,cAAAA,kBAAkB,EAAEtB;AAFf,aAAP;AAID,WAN2B,CAA9B;AAQA,eAAKL,QAAL,CAAc;AACZc,YAAAA,yBAAyB,EAAE,IADf;AAEZD,YAAAA,cAAc,EAAEgB,iBAFJ;AAGZP,YAAAA,kBAAkB,EAAES;AAHR,WAAd;AAKD;AACF,OAvBM,MAuBA,IAAI1B,IAAI,KAAK,WAAb,EAA0B;AAC/B,aAAKL,QAAL,CAAc;AACZc,UAAAA,yBAAyB,EAAE,KADf;AAEZJ,UAAAA,KAAK,EAAE,EAFK;AAGZE,UAAAA,SAAS,EAAE,EAHC;AAIZC,UAAAA,cAAc,EAAE,EAJJ;AAKZS,UAAAA,kBAAkB,EAAE;AALR,SAAd;AAOD;AACF,KA/MuB;;AAAA,SAiNxBU,kBAjNwB,GAiNH,MAAM;AACzB,YAAMZ,OAAO,GAAG,EAAE,GAAG,KAAKlB,KAAL,CAAW+B;AAAhB,OAAhB;AACAb,MAAAA,OAAO,CAACc,qBAAR,CAA8BtB,SAA9B,GAA0C,KAAKV,KAAL,CAAWU,SAArD;AACAQ,MAAAA,OAAO,CAACc,qBAAR,CAA8BZ,kBAA9B,GACE,KAAKpB,KAAL,CAAWoB,kBADb;AAEAd,MAAAA,OAAO,CAACC,GAAR,CAAYW,OAAZ,EAAqB,oBAArB;AACA,WAAKpB,QAAL,CAAc;AACZiC,QAAAA,eAAe,EAAEb,OADL;AAEZe,QAAAA,wBAAwB,EAAE,KAFd;AAGZC,QAAAA,wBAAwB,EAAE;AAHd,OAAd;AAKD,KA5NuB;;AAAA,SA8NxBC,YA9NwB,GA8NT,OAAOC,CAAP,EAAeC,IAAf,EAA8BjC,EAA9B,KAA8C;AAAA;;AAC3D,YAAMkC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,YAAMC,OAAO,GAAGJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,CAAhB;AACA,UAAIC,cAAc,GAAGH,OAAH,aAAGA,OAAH,wCAAGA,OAAO,CAAErC,IAAZ,kDAAG,cAAeyC,KAAf,CAAqB,GAArB,CAArB;AACA,yBAAAD,cAAc,UAAd,0DAAgBE,GAAhB;AACAF,MAAAA,cAAc,uBAAGA,cAAH,qDAAG,iBAAgBG,IAAhB,CAAqB,GAArB,CAAjB;AACA,UAAIC,QAAQ,GAAGP,OAAH,aAAGA,OAAH,wCAAGA,OAAO,CAAEH,IAAZ,0EAAG,cAAeO,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAH,yDAAG,qBAA8BI,WAA9B,EAAf;AACA,YAAMC,QAAoB,GAAG,CAC3B,MAD2B,EAE3B,KAF2B,EAG3B,KAH2B,EAI3B,KAJ2B,EAK3B,QAL2B,EAM3B,KAN2B,EAO3B,MAP2B,EAQ3B,6DAR2B,CAA7B;AAUA,YAAMC,SAAqB,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAA9B;AACA,UAAIC,gBAAgB,GAAG,CAAAX,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEY,IAAT,IAAgB,IAAhB,GAAuB,IAA9C;;AACA,UAAIf,IAAI,KAAK,cAAT,IAA2BA,IAAI,KAAK,cAAxC,EAAwD;AACtD,YAAIa,SAAS,CAAC5B,OAAV,CAAkByB,QAAlB,IAA8B,CAA9B,IAAmCI,gBAAgB,GAAG,EAA1D,EAA8D;AAC5DE,UAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACD;AACF,OALD,MAKO,IAAIJ,QAAQ,CAAC3B,OAAT,CAAiByB,QAAjB,IAA6B,CAA7B,IAAkCI,gBAAgB,GAAG,EAAzD,EAA6D;AAClEE,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACD;;AACDf,MAAAA,QAAQ,CAACgB,MAAT,CAAgB,MAAhB,EAAwBd,OAAxB;;AACA,UAAIH,IAAI,KAAK,cAAb,EAA6B;AAC3B,aAAKvC,QAAL,CAAc;AACZyD,UAAAA,SAAS,EAAEC,GAAG,CAACC,eAAJ,CAAoBjB,OAApB,CADC;AAEZF,UAAAA,QAAQ,EAAEA,QAFE;AAGZJ,UAAAA,wBAAwB,EAAE;AAHd,SAAd;AAKD;;AACD,UAAIG,IAAI,KAAK,cAAb,EAA6B;AAC3B,cAAMqB,GAAG,GAAG,MAAM9F,YAAY,CAAC0E,QAAD,CAA9B;;AACA,YAAIoB,GAAG,CAACC,OAAR,EAAiB;AAAA;;AACf,gBAAMC,IAAS,GAAG,EAAE,GAAG,KAAK5D,KAAL,CAAW6D;AAAhB,WAAlB;AACAD,UAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEE,cAAN,8EAAsBvC,IAAtB,CAA2BmC,GAAG,CAACK,MAA/B;AACA,eAAKjE,QAAL,CAAc;AAAE+D,YAAAA,kBAAkB,EAAED;AAAtB,WAAd;AACD;AACF;;AACD,UAAIvB,IAAI,KAAK,qBAAb,EAAoC;AAClC,cAAMqB,GAAG,GAAG,MAAM9F,YAAY,CAAC0E,QAAD,CAA9B;;AACA,YAAIoB,GAAG,CAACC,OAAR,EAAiB;AACf,gBAAMK,YAAiB,GAAG,EAAE,GAAG,KAAKhE,KAAL,CAAWiE;AAAhB,WAA1B;AACA,gBAAMC,mBAA+B,GAAGF,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEG,gBAAtD;AACA,gBAAMjE,IAAI,GAAGgE,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAEE,IAArB,CACVC,CAAD,IAAOA,CAAC,CAACC,gBAAF,KAAuBlE,EADnB,CAAb;AAGAF,UAAAA,IAAI,CAACqE,GAAL,GAAWb,GAAG,CAACK,MAAf;AACA7D,UAAAA,IAAI,CAACsE,QAAL,GAAgB7B,cAAhB;AACA,eAAK7C,QAAL,CAAc;AACZmE,YAAAA,gBAAgB,EAAED,YADN;AAEZS,YAAAA,yBAAyB,EAAE;AAFf,WAAd;AAID;AACF;;AACD,UAAIpC,IAAI,KAAK,wBAAb,EAAuC;AACrC,cAAMqB,GAAG,GAAG,MAAM9F,YAAY,CAAC0E,QAAD,CAA9B;;AACA,YAAIoB,GAAG,CAACC,OAAR,EAAiB;AACf,gBAAMC,IAAgB,GAAG,CAAC,GAAG,KAAK5D,KAAL,CAAW0E,yBAAf,CAAzB;AACA,gBAAMxE,IAAI,GAAG0D,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAAChE,GAAF,KAAUD,EAA5B,CAAb;AACAF,UAAAA,IAAI,CAACqE,GAAL,GAAWb,GAAG,CAACK,MAAf;AACA7D,UAAAA,IAAI,CAACsE,QAAL,GAAgB7B,cAAhB;AACA,eAAK7C,QAAL,CAAc;AACZ4E,YAAAA,yBAAyB,EAAEd,IADf;AAEZa,YAAAA,yBAAyB,EAAE;AAFf,WAAd;AAID;AACF;AACF,KAvSuB;;AAAA,SAySxBE,wBAzSwB,GAySG,MAAM;AAAA;;AAC/B,YAAMC,SAAc,GAAG,EAAvB;;AACA,UAAI,2BAAC,KAAK5E,KAAL,CAAWiE,gBAAZ,0DAAC,sBAA6BY,QAA9B,CAAJ,EAA4C;AAC1CD,QAAAA,SAAS,CAACC,QAAV,GAAqB5H,SAAS,CAAC6H,YAAV,CAAuBC,aAA5C;AACD,OAFD,MAEO,IAAI,gCAAK/E,KAAL,CAAWiE,gBAAX,4GAA6BY,QAA7B,CAAsCG,IAAtC,oFAA8CvE,MAA9C,IAAuD,EAA3D,EAA+D;AACpEmE,QAAAA,SAAS,CAACC,QAAV,GAAqB,oCAArB;AACD,OAFM,MAEA;AAAA;;AACL,cAAMI,SAAS,GAAG,IAAIC,MAAJ,CAAWhI,KAAK,CAACiI,QAAjB,CAAlB;;AACA,YAAI,CAACF,SAAS,CAACG,IAAV,2BAAe,KAAKpF,KAAL,CAAWiE,gBAA1B,2DAAe,uBAA6BY,QAA7B,CAAsCG,IAAtC,EAAf,CAAL,EAAmE;AACjEJ,UAAAA,SAAS,CAACC,QAAV,GAAqB5H,SAAS,CAAC6H,YAAV,CAAuBO,WAA5C;AACD;AACF;;AAED,UAAI,4BAAC,KAAKrF,KAAL,CAAWiE,gBAAZ,2DAAC,uBAA6BqB,YAA9B,CAAJ,EAAgD;AAC9CV,QAAAA,SAAS,CAACU,YAAV,GAAyBrI,SAAS,CAAC6H,YAAV,CAAuBS,gBAAhD;AACD,OAFD,MAEO;AAAA;;AACL,cAAMC,UAAU,GAAG,IAAIN,MAAJ,CAAWhI,KAAK,CAACuI,MAAjB,CAAnB;;AACA,YAAI,CAACD,UAAU,CAACJ,IAAX,2BAAgB,KAAKpF,KAAL,CAAWiE,gBAA3B,2DAAgB,uBAA6BqB,YAA7C,CAAL,EAAiE;AAC/DV,UAAAA,SAAS,CAACU,YAAV,GAAyBrI,SAAS,CAAC6H,YAAV,CAAuBY,cAAhD;AACD;AACF;;AAED,UAAI,4BAAC,KAAK1F,KAAL,CAAWiE,gBAAZ,2DAAC,uBAA6B0B,GAA9B,CAAJ,EAAuC;AACrCf,QAAAA,SAAS,CAACe,GAAV,GAAgB1I,SAAS,CAAC6H,YAAV,CAAuBc,QAAvC;AACD,OAFD,MAEO;AACL,cAAMC,QAAQ,GAAG,IAAIX,MAAJ,CAAWhI,KAAK,CAACyI,GAAjB,CAAjB;;AACA,YAAI,CAACE,QAAQ,CAACT,IAAT,CAAc,KAAKpF,KAAL,CAAWiE,gBAAX,CAA4B0B,GAA5B,CAAgCG,UAAhC,CAA2C,GAA3C,EAAgD,EAAhD,CAAd,CAAL,EAAyE;AACvElB,UAAAA,SAAS,CAACe,GAAV,GAAgB1I,SAAS,CAAC6H,YAAV,CAAuBiB,MAAvC;AACD;;AACD,YAAI,CAAC5G,WAAW,CAAC,KAAKa,KAAL,CAAWiE,gBAAX,CAA4B0B,GAA5B,CAAgCG,UAAhC,CAA2C,GAA3C,EAAgD,EAAhD,CAAD,CAAhB,EAAuE;AACrElB,UAAAA,SAAS,CAACe,GAAV,GAAgB1I,SAAS,CAAC6H,YAAV,CAAuBiB,MAAvC;AACD;AACF;;AAED,UAAI,KAAKnG,QAAL,KAAkB,CAAtB,EAAyB;AAAA;;AACvB,cAAMoG,mBAAmB,6BACvB,KAAKhG,KAAL,CAAWiE,gBADY,qFACvB,uBAA6BE,gBADN,2DACvB,uBAA+CC,IAA/C,CACE,CAAC;AAAEG,UAAAA,GAAF;AAAO0B,UAAAA;AAAP,SAAD,KACE,EAAC1B,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAE9D,MAAN,KAAgB,EAACwF,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAExF,MAAb,CAFpB,CADF;AAKAH,QAAAA,OAAO,CAACC,GAAR,CAAYyF,mBAAZ,EAAiC,gCAAjC;;AACA,YACE,CAAC,CAACA,mBAAF,IACA,iBAAAE,MAAM,CAACC,IAAP,CAAYH,mBAAZ,+DAAkCvF,MAAlC,IAA2C,CAF7C,EAGE;AACA5C,UAAAA,YAAY,CAAC,IAAD,EAAO,sCAAP,CAAZ;AACA;AACD;;AAED,cAAMuI,eAAe,4BAAG,KAAKpG,KAAL,CAAW0E,yBAAd,0DAAG,sBAAsCN,IAAtC,CACtB,CAAC;AAAEG,UAAAA,GAAF;AAAO0B,UAAAA;AAAP,SAAD,KACE,EAAC1B,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAE9D,MAAN,MAAgBwF,UAAhB,aAAgBA,UAAhB,uBAAgBA,UAAU,CAAExF,MAA5B,CAFoB,CAAxB;AAIAH,QAAAA,OAAO,CAACC,GAAR,CAAY6F,eAAZ,EAA6B,4BAA7B;;AACA,YAAI,CAAC,CAACA,eAAF,IAAqB,kBAAAF,MAAM,CAACC,IAAP,CAAYC,eAAZ,iEAA8B3F,MAA9B,IAAuC,CAAhE,EAAmE;AACjE5C,UAAAA,YAAY,CAAC,IAAD,EAAO,sCAAP,CAAZ;AACA;AACD;AACF,OAxBD,MAwBO;AAAA;;AACL,YAAI,6BAAC,KAAKmC,KAAL,CAAWiE,gBAAZ,4DAAC,wBAA6BoC,WAA9B,CAAJ,EAA+C;AAC7CzB,UAAAA,SAAS,CAACyB,WAAV,GAAwBpJ,SAAS,CAAC6H,YAAV,CAAuBwB,gBAA/C;AACD,SAFD,MAEO,IAAI,iCAAKtG,KAAL,CAAWiE,gBAAX,+GAA6BoC,WAA7B,CAAyCrB,IAAzC,sFAAiDvE,MAAjD,IAA0D,EAA9D,EAAkE;AACvEmE,UAAAA,SAAS,CAACyB,WAAV,GAAwB,oCAAxB;AACD,SAFM,MAEA;AACL,gBAAMpB,SAAS,GAAG,IAAIC,MAAJ,CAAWhI,KAAK,CAACiI,QAAjB,CAAlB;;AACA,cAAI,CAACF,SAAS,CAACG,IAAV,CAAe,KAAKpF,KAAL,CAAWiE,gBAAX,CAA4BoC,WAA5B,CAAwCrB,IAAxC,EAAf,CAAL,EAAqE;AACnEJ,YAAAA,SAAS,CAACyB,WAAV,GAAwBpJ,SAAS,CAAC6H,YAAV,CAAuByB,cAA/C;AACD;AACF;;AACD,YAAI,6BAAC,KAAKvG,KAAL,CAAWiE,gBAAZ,4DAAC,wBAA6BuC,QAA9B,CAAJ,EAA4C;AAC1C5B,UAAAA,SAAS,CAAC4B,QAAV,GAAqBvJ,SAAS,CAAC6H,YAAV,CAAuB2B,iBAA5C;AACD,SAFD,MAEO,IAAI,iCAAKzG,KAAL,CAAWiE,gBAAX,+GAA6BuC,QAA7B,CAAsCxB,IAAtC,sFAA8CvE,MAA9C,IAAuD,EAA3D,EAA+D;AACpEmE,UAAAA,SAAS,CAAC4B,QAAV,GAAqB,oCAArB;AACD,SAFM,MAEA;AACL,gBAAME,aAAa,GAAG,IAAIxB,MAAJ,CAAWhI,KAAK,CAACiI,QAAjB,CAAtB;;AACA,cAAI,CAACuB,aAAa,CAACtB,IAAd,CAAmB,KAAKpF,KAAL,CAAWiE,gBAAX,CAA4BuC,QAA5B,CAAqCxB,IAArC,EAAnB,CAAL,EAAsE;AACpEJ,YAAAA,SAAS,CAAC4B,QAAV,GAAqBvJ,SAAS,CAAC6H,YAAV,CAAuB6B,eAA5C;AACD;AACF;AACF;;AAED,WAAK7G,QAAL,CAAc;AAAE8G,QAAAA,MAAM,EAAEhC;AAAV,OAAd;AACA,aAAO,CAACsB,MAAM,CAACC,IAAP,CAAYvB,SAAZ,EAAuBnE,MAA/B;AACD,KA5XuB;;AAAA,SA8XxBoG,oBA9XwB,GA8XD,MAAM;AAC3B,YAAMjC,SAAc,GAAG,EAAvB;;AACA,UAAI,CAAC,KAAK5E,KAAL,CAAW8G,QAAhB,EAA0B;AACxBlC,QAAAA,SAAS,CAACkC,QAAV,GAAqB7J,SAAS,CAAC6H,YAAV,CAAuBiC,WAA5C;AACD;;AACD,UAAI,CAAC,KAAK/G,KAAL,CAAWgH,WAAhB,EAA6B;AAC3BpC,QAAAA,SAAS,CAACoC,WAAV,GAAwB,0BAAxB;AACD,OAFD,MAEO;AACL,cAAMC,aAAa,GAAG,IAAI/B,MAAJ,CAAWhI,KAAK,CAAC4J,QAAjB,CAAtB;;AACA,YAAI,CAACG,aAAa,CAAC7B,IAAd,CAAmB,KAAKpF,KAAL,CAAWgH,WAAX,CAAuBhC,IAAvB,EAAnB,CAAL,EAAwD;AACtDJ,UAAAA,SAAS,CAACoC,WAAV,GAAwB/J,SAAS,CAAC6H,YAAV,CAAuBoC,aAA/C;AACD;AACF;;AACD,UACE,KAAKlH,KAAL,CAAWgH,WAAX,CAAuBhC,IAAvB,OAAkC,KAAKhF,KAAL,CAAWmH,kBAAX,CAA8BnC,IAA9B,EADpC,EAEE;AACAJ,QAAAA,SAAS,CAACuC,kBAAV,GAA+BlK,SAAS,CAAC6H,YAAV,CAAuBqC,kBAAtD;AACD;;AACD,WAAKrH,QAAL,CAAc;AAAE8G,QAAAA,MAAM,EAAEhC;AAAV,OAAd;AACA,aAAO,CAACsB,MAAM,CAACC,IAAP,CAAYvB,SAAZ,EAAuBnE,MAA/B;AACD,KAlZuB;;AAAA,SAoZxB2G,uBApZwB,GAoZE,MAAM;AAC9B,YAAMxC,SAAc,GAAG,EAAvB;;AACA,UAAI,CAAC,KAAK5E,KAAL,CAAWqH,QAAhB,EAA0B;AACxBzC,QAAAA,SAAS,CAACyC,QAAV,GAAqB,+BAArB;AACD,OAFD,MAEO;AAAA;;AACL,cAAMC,UAAU,GAAG,IAAIpC,MAAJ,CAAWhI,KAAK,CAACqK,KAAjB,CAAnB;;AACA,YAAI,CAACD,UAAU,CAAClC,IAAX,4BAAgB,KAAKpF,KAAL,CAAWiE,gBAA3B,4DAAgB,wBAA6BsD,KAA7C,CAAL,EAA0D;AACxD3C,UAAAA,SAAS,CAACyC,QAAV,GAAqBpK,SAAS,CAAC6H,YAAV,CAAuB0C,QAA5C;AACD;AACF;;AAED,UAAI,CAAC,KAAKxH,KAAL,CAAW8G,QAAhB,EAA0B;AACxBlC,QAAAA,SAAS,CAAC6C,eAAV,GAA4B,8BAA5B;AACD,OAFD,MAEO;AACL,cAAMR,aAAa,GAAG,IAAI/B,MAAJ,CAAWhI,KAAK,CAAC4J,QAAjB,CAAtB;;AACA,YAAI,CAACG,aAAa,CAAC7B,IAAd,CAAmB,KAAKpF,KAAL,CAAW8G,QAAX,CAAoB9B,IAApB,EAAnB,CAAL,EAAqD;AACnDJ,UAAAA,SAAS,CAAC6C,eAAV,GAA4BxK,SAAS,CAAC6H,YAAV,CAAuBoC,aAAnD;AACD;AACF;;AAED,WAAKpH,QAAL,CAAc;AAAE8G,QAAAA,MAAM,EAAEhC;AAAV,OAAd;AACA,aAAO,CAACsB,MAAM,CAACC,IAAP,CAAYvB,SAAZ,EAAuBnE,MAA/B;AACD,KA1auB;;AAAA,SA4axBiH,aA5awB,GA4aPtF,CAAD,IAA4C;AAC1D,YAAMuF,eAAe,GAAG,EAAE,GAAG,KAAK3H,KAAL,CAAWiE;AAAhB,OAAxB;AACA0D,MAAAA,eAAe,CAAE,GAAEvF,CAAC,CAACK,MAAF,CAAStC,IAAK,EAAlB,CAAf,GAAsCiC,CAAC,CAACK,MAAF,CAASmF,KAA/C;AACA,WAAK9H,QAAL,CAAc;AACZmE,QAAAA,gBAAgB,EAAE0D,eADN;AAEZlD,QAAAA,yBAAyB,EAAE;AAFf,OAAd;AAID,KAnbuB;;AAAA,SAqbxBoD,yBArbwB,GAqbI,YAAY;AACtC,UAAI,KAAKlD,wBAAL,EAAJ,EAAqC;AAAA;;AACnC,cAAMmD,YAAY,GAAG,EAAE,GAAG,KAAK9H,KAAL,CAAWiE;AAAhB,SAArB;AACA,cAAM8D,mBAAmB,GACvB,KAAKnI,QAAL,KAAkB,CAAlB,WACI,CAAC,+BAAG,KAAKI,KAAL,CAAWiE,gBAAd,4DAAG,wBAA6BE,gBAAhC,CAAD,CADJ,yCACI,KAAoDvC,GAApD,CACE,CAAC;AACC2C,UAAAA,GADD;AAECD,UAAAA;AAFD,SAAD,KAOE,CAAAC,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAE9D,MAAL,KAAe;AAAE6D,UAAAA,gBAAgB,EAAEA,gBAApB;AAAsCC,UAAAA,GAAG,EAAEA;AAA3C,SARnB,CADJ,GAWI,EAZN;AAaA,cAAMyD,sBAAsB,GAAGD,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAEE,MAArB,CAC5B5D,CAAD;AAAA;;AAAA,iBAAYA,CAAC,IAAI,kBAAA6B,MAAM,CAACC,IAAP,CAAY9B,CAAZ,iEAAgB5D,MAAhB,IAAyB,CAA1C;AAAA,SAD6B,CAA/B;AAGA,cAAMyH,sBAAsB,6BAAG,KAAKlI,KAAL,CAAW0E,yBAAd,2DAAG,uBAAsC9C,GAAtC,CAC7B,CAAC;AAAEvB,UAAAA,GAAF;AAAOkE,UAAAA;AAAP,SAAD,KACE,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAE9D,MAAL,KAAe;AAAE6D,UAAAA,gBAAgB,EAAEjE,GAApB;AAAyBkE,UAAAA,GAAG,EAAEA;AAA9B,SAFY,CAA/B;AAIA,cAAM4D,yBAAyB,GAAGD,sBAAH,aAAGA,sBAAH,uBAAGA,sBAAsB,CAAED,MAAxB,CAC/B5D,CAAD;AAAA;;AAAA,iBAAYA,CAAC,IAAI,kBAAA6B,MAAM,CAACC,IAAP,CAAY9B,CAAZ,iEAAgB5D,MAAhB,IAAyB,CAA1C;AAAA,SADgC,CAAlC;AAIA,cAAM2H,WAAW,GAAG;AAClB/B,UAAAA,WAAW,EAAEyB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEzB,WADT;AAElBG,UAAAA,QAAQ,EAAEsB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEtB;AAFN,SAApB;AAKA,cAAM5C,IAAI,GAAG;AACXiB,UAAAA,QAAQ,EAAEiD,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEjD,QADb;AAEXS,UAAAA,YAAY,EAAEwC,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAExC,YAFjB;AAGXiC,UAAAA,KAAK,EAAEO,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEP,KAHV;AAIX5B,UAAAA,GAAG,EAAEmC,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEnC,GAJR;AAKXxB,UAAAA,gBAAgB,EACd,KAAKvE,QAAL,KAAkB,CAAlB,GACI,CAAC,GAAGoI,sBAAJ,EAA4B,GAAGG,yBAA/B,CADJ,GAEIE,SARK;AASX,cAAI,KAAKzI,QAAL,KAAkB,CAAlB,GAAsB,EAAtB,GAA2BwI,WAA/B,CATW;AAUX,cAAI,KAAKxI,QAAL,KAAkB,CAAlB,IAAuB;AACzB0I,YAAAA,YAAY,EAAER,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEQ;AADH,WAA3B;AAVW,SAAb;AAcA,cAAM5E,GAAG,GAAG,MAAMpG,wBAAwB,CAACsG,IAAD,CAA1C;;AACA,YAAIF,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEC,OAAT,EAAkB;AAChB,eAAKhE,KAAL,CAAW4I,uBAAX;AACAlJ,UAAAA,qBAAqB,CAAC,UAAD,EAAauE,IAAI,CAACiB,QAAlB,CAArB;AACAiD,UAAAA,YAAY,CAAC3D,gBAAb,GACE,KAAKvE,QAAL,KAAkB,CAAlB,GAAsBgE,IAAI,CAACO,gBAA3B,GAA8C,EADhD;AAEA,eAAKrE,QAAL,CAAe0I,SAAD,KAAqB;AACjCC,YAAAA,mBAAmB,EAAE,KADY;AAEjCC,YAAAA,uBAAuB,EAAE,KAFQ;AAGjChE,YAAAA,yBAAyB,EAAE,EAHM;AAIjCT,YAAAA,gBAAgB,EAAE6D,YAJe;AAKjCrD,YAAAA,yBAAyB,EAAE;AALM,WAArB,CAAd;AAOA,eAAK9E,KAAL,CAAWgJ,qBAAX;AACA,eAAK/I,QAAL,KAAkB,CAAlB,GACI,KAAKD,KAAL,CAAWiJ,qBAAX,EADJ,GAEI,KAAKjJ,KAAL,CAAWkJ,iBAAX,EAFJ;AAGD;AACF;AACF,KAtfuB;;AAAA,SAwfxBC,eAxfwB,GAwfL1G,CAAD,IAA4C;AAC5D,WAAKtC,QAAL,CAAe0I,SAAD,KAAqB,EACjC,GAAGA,SAD8B;AAEjC,SAACpG,CAAC,CAACK,MAAF,CAAStC,IAAV,GAAiBiC,CAAC,CAACK,MAAF,CAASmF;AAFO,OAArB,CAAd;AAID,KA7fuB;;AAAA,SA+fxBmB,qBA/fwB,GA+fA,YAAY;AAClC,UAAI,KAAKlC,oBAAL,EAAJ,EAAiC;AAC/B,cAAMjD,IAAI,GAAG;AACXoF,UAAAA,SAAS,EAAE9J,cAAc,CAAC+J,OAAf,CAAuB,UAAvB,CADA;AAEXlC,UAAAA,WAAW,EAAE,KAAK/G,KAAL,CAAW8G,QAFb;AAGXE,UAAAA,WAAW,EAAE,KAAKhH,KAAL,CAAWgH;AAHb,SAAb;AAKA,cAAMtD,GAAG,GAAG,MAAMnG,oBAAoB,CAACqG,IAAD,CAAtC;;AACA,YAAIF,GAAG,CAACC,OAAR,EAAiB;AACf,eAAKhE,KAAL,CAAWuJ,OAAX,CAAmB3H,IAAnB,CAAwB,0BAAxB,EADe,CAEf;AACD;AACF;AACF,KA5gBuB;;AAAA,SA8gBxB4H,yBA9gBwB,GA8gBI,MAAM;AAChC,WAAKrJ,QAAL,CAAc;AACZ2I,QAAAA,mBAAmB,EAAE,IADT;AAEZW,QAAAA,oBAAoB,EAAE,KAFV;AAGZtC,QAAAA,QAAQ,EAAE,EAHE;AAIZE,QAAAA,WAAW,EAAE,EAJD;AAKZG,QAAAA,kBAAkB,EAAE,EALR;AAMZkC,QAAAA,YAAY,EAAE,KANF;AAOZC,QAAAA,eAAe,EAAE,KAPL;AAQZC,QAAAA,sBAAsB,EAAE,KARZ;AASZ3C,QAAAA,MAAM,EAAE;AATI,OAAd;AAWD,KA1hBuB;;AAAA,SA4hBxB4C,4BA5hBwB,GA4hBO,MAAM;AACnC,WAAK1J,QAAL,CAAc;AACZ2I,QAAAA,mBAAmB,EAAE,IADT;AAEZgB,QAAAA,uBAAuB,EAAE,KAFb;AAGZ3C,QAAAA,QAAQ,EAAE,EAHE;AAIZO,QAAAA,QAAQ,EAAE,EAJE;AAKZgC,QAAAA,YAAY,EAAE,KALF;AAMZzC,QAAAA,MAAM,EAAE;AANI,OAAd;AAQD,KAriBuB;;AAAA,SAuiBxB8C,mBAviBwB,GAuiBF,YAAY;AAChC,UAAI,KAAK1J,KAAL,CAAW2J,eAAf,EAAgC;AAC9B,cAAM9F,kBAAkB,GAAG,KAAK7D,KAAL,CAAW6D,kBAAtC;AACA,cAAMD,IAAI,GAAG;AACXgG,UAAAA,OAAO,EAAE/F,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE+F,OADlB;AAEXC,UAAAA,cAAc,EAAEhG,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEgG,cAFzB;AAGXtF,UAAAA,GAAG,EAAEV,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEC;AAHd,SAAb;AAKA,cAAMJ,GAAG,GAAG,MAAMlG,qBAAqB,CAACoG,IAAD,CAAvC;;AACA,YAAIF,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEC,OAAT,EAAkB;AAChBrE,UAAAA,QAAQ,CAACwK,aAAT,CAAuBtK,YAAY,CAACuK,eAApC,EAAqD;AACnDC,YAAAA,SAAS,EAAE1K,QAAQ,CAAC2K,mBAAT;AADwC,WAArD;AAGA1K,UAAAA,QAAQ,CAAC2K,cAAT,CAAwB1K,YAAY,CAACuK,eAArC,EAAsD;AACpDC,YAAAA,SAAS,EAAE1K,QAAQ,CAAC2K,mBAAT;AADyC,WAAtD;AAGA,gBAAMrG,IAAI,GAAG,EAAE,GAAG,KAAK5D,KAAL,CAAW+B;AAAhB,WAAb;AACA6B,UAAAA,IAAI,CAACuG,SAAL,CAAe5I,IAAf,CAAoBmC,GAApB,aAAoBA,GAApB,uBAAoBA,GAAG,CAAEE,IAAzB;AACA,eAAK9D,QAAL,CAAc;AACZ+D,YAAAA,kBAAkB,EAAE,EADR;AAEZ9B,YAAAA,eAAe,EAAE6B,IAFL;AAGZwG,YAAAA,mBAAmB,EAAE,KAHT;AAIZC,YAAAA,uBAAuB,EAAE,KAJb;AAKZV,YAAAA,eAAe,EAAE,KALL;AAMZW,YAAAA,iBAAiB,EAAE;AANP,WAAd;AAQD;AACF;;AACD,UAAI,KAAKtK,KAAL,CAAWuK,gBAAf,EAAiC;AAC/B,cAAM1G,kBAAkB,GAAG,KAAK7D,KAAL,CAAW6D,kBAAtC;AACA,cAAMD,IAAI,GAAG;AACX4G,UAAAA,WAAW,EAAE3G,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE2G,WADtB;AAEXZ,UAAAA,OAAO,EAAE/F,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE+F,OAFlB;AAGXC,UAAAA,cAAc,EAAEhG,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEgG,cAHzB;AAIXtF,UAAAA,GAAG,EAAEV,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEC;AAJd,SAAb;AAMA,cAAMJ,GAAG,GAAG,MAAMjG,wBAAwB,CAACmG,IAAD,CAA1C;;AACA,YAAIF,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEC,OAAT,EAAkB;AAChB,gBAAM8G,KAAK,GAAG,KAAKzK,KAAL,CAAWsK,iBAAzB;AACA,gBAAMI,cAAc,GAAG,EAAE,GAAG,KAAK1K,KAAL,CAAW+B;AAAhB,WAAvB;AACA,gBAAM4I,YAAY,GAAGD,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEP,SAArC;AACAQ,UAAAA,YAAY,CAACjJ,MAAb,CAAoB+I,KAApB,EAA2B,CAA3B,EAA8B5G,kBAA9B;AACA,eAAK/D,QAAL,CAAc;AACZ;AACAiC,YAAAA,eAAe,EAAE2I,cAFL;AAGZN,YAAAA,mBAAmB,EAAE,IAHT;AAIZC,YAAAA,uBAAuB,EAAE,KAJb;AAKZE,YAAAA,gBAAgB,EAAE,KALN;AAMZD,YAAAA,iBAAiB,EAAE;AANP,WAAd;AAQA;AACD;AACF;;AACD,UAAI,KAAKtK,KAAL,CAAW4K,kBAAf,EAAmC;AACjC,cAAM/G,kBAAkB,GAAG,KAAK7D,KAAL,CAAW6D,kBAAtC;AACA,cAAM4G,KAAK,GAAG,KAAKzK,KAAL,CAAWsK,iBAAzB;AACA,cAAMI,cAAc,GAAG,EAAE,GAAG,KAAK1K,KAAL,CAAW+B;AAAhB,SAAvB;AACA,cAAM4I,YAAY,GAAGD,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEP,SAArC;AACAQ,QAAAA,YAAY,CAACjJ,MAAb,CAAoB+I,KAApB,EAA2B,CAA3B;AACA,cAAM/G,GAAG,GAAG,MAAMhG,wBAAwB,CACxCmG,kBADwC,aACxCA,kBADwC,uBACxCA,kBAAkB,CAAE2G,WADoB,CAA1C;;AAGA,YAAI9G,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEC,OAAT,EAAkB;AAChB,eAAK7D,QAAL,CAAc;AACZ+D,YAAAA,kBAAkB,EAAE,EADR;AAEZ9B,YAAAA,eAAe,EAAE2I,cAFL;AAGZN,YAAAA,mBAAmB,EAAE,KAHT;AAIZC,YAAAA,uBAAuB,EAAE,KAJb;AAKZO,YAAAA,kBAAkB,EAAE,KALR;AAMZC,YAAAA,wBAAwB,EAAE,KANd;AAOZP,YAAAA,iBAAiB,EAAE;AAPP,WAAd;AASA;AACD;AACF;AACF,KAlnBuB;;AAAA,SAonBxBQ,2BApnBwB,GAonBM,MAAM;AAClC,WAAKhL,QAAL,CAAe0I,SAAD,KAAqB;AACjC6B,QAAAA,uBAAuB,EAAE,KADQ;AAEjCD,QAAAA,mBAAmB,EAAE5B,SAAS,CAACmB,eAAV,GAA4B,KAA5B,GAAoC,IAFxB;AAGjCA,QAAAA,eAAe,EAAE;AAHgB,OAArB,CAAd;AAKD,KA1nBuB;;AAAA,SA4nBxBoB,kBA5nBwB,GA4nBH,MAAM;AACzB,WAAKjL,QAAL,CAAc;AACZ6J,QAAAA,eAAe,EAAE,IADL;AAEZU,QAAAA,uBAAuB,EAAE,IAFb;AAGZxG,QAAAA,kBAAkB,EAAE;AAClB+F,UAAAA,OAAO,EAAE,EADS;AAElBC,UAAAA,cAAc,EAAE,EAFE;AAGlB/F,UAAAA,cAAc,EAAE;AAHE;AAHR,OAAd;AASD,KAtoBuB;;AAAA,SAwoBxBkH,eAxoBwB,GAwoBN,MAAM;AACtB,WAAKlL,QAAL,CAAe0I,SAAD;AAAA;;AAAA,eAAqB;AACjCyC,UAAAA,iBAAiB,EAAE,IADc;AAEjCC,UAAAA,KAAK,EACH,CAAA1C,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAEzG,eAAX,gFAA4BmJ,KAA5B,MACA1C,SADA,aACAA,SADA,iDACAA,SAAS,CAAEzG,eADX,2DACA,uBAA4BoJ,YAD5B,KAEA;AAL+B,SAArB;AAAA,OAAd;AAOD,KAhpBuB;;AAAA,SAkpBxBC,mBAlpBwB,GAkpBF,YAAY;AAAA;;AAChC,YAAMzJ,iBAA6B,GAAG,CACpC,6BAAG,KAAK3B,KAAL,CAAW+B,eAAd,oFAAG,sBAA4BC,qBAA/B,2DAAG,uBAAmDZ,kBAAtD,CADoC,CAAtC;AAGA,UAAIS,qBAAiC,GAAGF,iBAAH,aAAGA,iBAAH,uBAAGA,iBAAiB,CAAEC,GAAnB,CACtC,CAAC;AAAEJ,QAAAA;AAAF,OAAD,KACE,CAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEf,MAAlB,IAA2B,CAA3B,IAAgCe,gBAFI,CAAxC;AAIA,YAAMoC,IAAI,GAAG;AACXiB,QAAAA,QAAQ,6BAAE,KAAK7E,KAAL,CAAWiE,gBAAb,4DAAE,wBAA6BY,QAD5B;AAEXtB,QAAAA,SAAS,EACP,gCAAKvD,KAAL,CAAW+B,eAAX,kFAA4BsJ,WAA5B,gCACA,KAAKrL,KAAL,CAAW+B,eADX,2DACA,uBAA4BuJ,YAD5B,CAHS;AAKX9K,QAAAA,KAAK,EAAE,2BACL,KAAKR,KAAL,CAAW+B,eADN,qFACL,uBAA4BC,qBADvB,qFACL,uBAAmDtB,SAAnD,CAA6D,CAA7D,CADK,2DACL,uBACIG,OAFC,CALI;AASXF,QAAAA,cAAc,EAAEkB,qBATL;AAUXqJ,QAAAA,KAAK,EACH,KAAKtL,QAAL,KAAkB,CAAlB,GACI,gCAAKI,KAAL,CAAW+B,eAAX,kFAA4BmJ,KAA5B,KAAqC,EADzC,GAEI7C,SAbK;AAcX7B,QAAAA,QAAQ,EACN,KAAK5G,QAAL,KAAkB,CAAlB,GAAsByI,SAAtB,6BAAkC,KAAKrI,KAAL,CAAW+B,eAA7C,2DAAkC,uBAA4ByE,QAfrD;AAgBXH,QAAAA,WAAW,EACT,KAAKzG,QAAL,KAAkB,CAAlB,GACIyI,SADJ,8BAEI,KAAKrI,KAAL,CAAW+B,eAFf,4DAEI,wBAA4BsE,WAnBvB;AAoBX8E,QAAAA,YAAY,EACV,KAAKvL,QAAL,KAAkB,CAAlB,GACIyI,SADJ,GAEI,iCAAKrI,KAAL,CAAW+B,eAAX,oFAA4BmJ,KAA5B,iCACA,KAAKlL,KAAL,CAAW+B,eADX,4DACA,wBAA4BoJ,YAD5B;AAvBK,OAAb;;AA0BA,UAAI,KAAKnL,KAAL,CAAWsC,QAAf,EAAyB;AACvB,cAAMiJ,IAAI,GAAG,MAAM3N,YAAY,CAAC,KAAKoC,KAAL,CAAWsC,QAAZ,CAA/B;;AACA,YAAIiJ,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAE5H,OAAV,EAAmB;AACjBC,UAAAA,IAAI,CAACL,SAAL,GAAiBgI,IAAjB,aAAiBA,IAAjB,uBAAiBA,IAAI,CAAExH,MAAvB;AACD;AACF;;AACD,YAAMyH,IAAI,GAAG,MAAMnO,0BAA0B,CAACuG,IAAD,CAA7C;;AACA,UAAI4H,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAE7H,OAAV,EAAmB;AAAA;;AACjB,YAAI,KAAK3D,KAAL,CAAWsC,QAAf,EAAyB;AACvBjD,UAAAA,qBAAqB,CAAC,WAAD,EAAcuE,IAAI,CAACL,SAAnB,CAArB;AACD;;AACD,aAAKzD,QAAL,CAAc;AACZwC,UAAAA,QAAQ,EAAE,IADE;AAEZJ,UAAAA,wBAAwB,EAAE;AAFd,SAAd;AAIA,aAAKtC,QAAL,KAAkB,CAAlB,GACI,KAAKD,KAAL,CAAWiJ,qBAAX,EADJ,GAEI,KAAKjJ,KAAL,CAAWkJ,iBAAX,EAFJ;;AAGA,YACE,KAAKjJ,QAAL,KAAkB,CAAlB,IACA,KAAKI,KAAL,CAAWkL,KADX,IAEA,iCAAKlL,KAAL,CAAW+B,eAAX,oFAA4BsE,WAA5B,MAA4C,KAAKrG,KAAL,CAAWkL,KAHzD,EAIE;AACA5L,UAAAA,QAAQ,CAACwK,aAAT,CAAuBtK,YAAY,CAACiM,wBAApC,EAA8D;AAC5DzB,YAAAA,SAAS,EAAE1K,QAAQ,CAAC2K,mBAAT;AADiD,WAA9D;AAGA1K,UAAAA,QAAQ,CAAC2K,cAAT,CAAwB1K,YAAY,CAACiM,wBAArC,EAA+D;AAC7DzB,YAAAA,SAAS,EAAE1K,QAAQ,CAAC2K,mBAAT;AADkD,WAA/D;AAGD;AACF;AACF,KAntBuB;;AAAA,SAqtBxByB,kBArtBwB,GAqtBH,YAAY;AAC/B,UAAI,KAAKtE,uBAAL,EAAJ,EAAoC;AAAA;;AAClC,cAAMxD,IAAI,GAAG;AACX+H,UAAAA,YAAY,6BAAE,KAAK3L,KAAL,CAAWiE,gBAAb,4DAAE,wBAA6BsD,KADhC;AAEXF,UAAAA,QAAQ,EAAE,KAAKrH,KAAL,CAAWqH,QAFV;AAGXP,UAAAA,QAAQ,EAAE,KAAK9G,KAAL,CAAW8G,QAHV;AAIXkC,UAAAA,SAAS,EAAE9J,cAAc,CAAC+J,OAAf,CAAuB,UAAvB;AAJA,SAAb;AAMA,cAAMvF,GAAG,GAAG,MAAM/F,iBAAiB,CAACiG,IAAD,CAAnC;;AACA,YAAIF,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEC,OAAT,EAAkB,CACjB;AACF;AACF,KAjuBuB;;AAAA,SAmuBxBiI,8BAnuBwB,GAmuBS,CAACxJ,CAAD,EAAShC,EAAT,EAAqBiC,IAArB,KAAsC;AACrED,MAAAA,CAAC,CAACyJ,eAAF;;AACA,UAAIxJ,IAAI,KAAK,qBAAb,EAAoC;AAClC,cAAM2B,YAAiB,GAAG,EAAE,GAAG,KAAKhE,KAAL,CAAWiE;AAAhB,SAA1B;AACA,cAAMC,mBAA+B,GAAGF,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEG,gBAAtD;AACA,cAAMjE,IAAI,GAAGgE,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAEE,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,gBAAF,KAAuBlE,EAAxD,CAAb;AACAF,QAAAA,IAAI,CAACqE,GAAL,GAAW,EAAX;AACArE,QAAAA,IAAI,CAACsE,QAAL,GAAgB,EAAhB;AACAR,QAAAA,YAAY,CAACG,gBAAb,GAAgCD,mBAAhC;AACA,aAAKpE,QAAL,CAAc;AAAEmE,UAAAA,gBAAgB,EAAED;AAApB,SAAd;AACD;;AACD,UAAI3B,IAAI,KAAK,wBAAb,EAAuC;AACrC,cAAMuB,IAAgB,GAAG,CAAC,GAAG,KAAK5D,KAAL,CAAW0E,yBAAf,CAAzB;AACA,cAAMxE,IAAI,GAAG0D,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAAChE,GAAF,KAAUD,EAA5B,CAAb;AACAF,QAAAA,IAAI,CAACqE,GAAL,GAAW,EAAX;AACArE,QAAAA,IAAI,CAACsE,QAAL,GAAgB,EAAhB;AACA,aAAK1E,QAAL,CAAc;AAAE4E,UAAAA,yBAAyB,EAAEd;AAA7B,SAAd;AACD;AACF,KArvBuB;;AAAA,SAuvBxBkI,0BAvvBwB,GAuvBK,CAAC1L,EAAD,EAAaiC,IAAb,KAA8B;AACzD,UAAIA,IAAI,KAAK,qBAAb,EAAoC;AAClC,cAAM2B,YAAiB,GAAG,EAAE,GAAG,KAAKhE,KAAL,CAAWiE;AAAhB,SAA1B;AACA,cAAMC,mBAA+B,GAAGF,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEG,gBAAtD;AACA,cAAMjE,IAAI,GAAGgE,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAEE,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,gBAAF,KAAuBlE,EAAxD,CAAb;AACA,cAAMiB,SAAS,GAAG6C,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAE5C,OAArB,CAA6BpB,IAA7B,CAAlB;;AACA,YAAIA,IAAI,CAAC+F,UAAT,EAAqB;AACnB/B,UAAAA,mBAAmB,CAACxC,MAApB,CAA2BL,SAA3B,EAAsC,CAAtC,EAAyC;AACvCiD,YAAAA,gBAAgB,EAAElE,EADqB;AAEvCmE,YAAAA,GAAG,EAAE;AAFkC,WAAzC;AAID,SALD,MAKO;AACLL,UAAAA,mBAAmB,CAACxC,MAApB,CAA2BL,SAA3B,EAAsC,CAAtC,EAAyC;AACvCiD,YAAAA,gBAAgB,EAAElE,EADqB;AAEvCmE,YAAAA,GAAG,EAAE,EAFkC;AAGvC0B,YAAAA,UAAU,EAAE;AAH2B,WAAzC;AAKD;;AACDjC,QAAAA,YAAY,CAACG,gBAAb,GAAgCD,mBAAhC;AACA,aAAKpE,QAAL,CAAc;AAAEmE,UAAAA,gBAAgB,EAAED;AAApB,SAAd;AACD;;AAED,UAAI3B,IAAI,KAAK,wBAAb,EAAuC;AACrC,cAAM6B,mBAA+B,GAAG,CACtC,GAAG,KAAKlE,KAAL,CAAW0E,yBADwB,CAAxC;AAGA,cAAMxE,IAAI,GAAGgE,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAEE,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAAChE,GAAF,KAAUD,EAA3C,CAAb;AACA,cAAMiB,SAAS,GAAG6C,mBAAH,aAAGA,mBAAH,uBAAGA,mBAAmB,CAAE5C,OAArB,CAA6BpB,IAA7B,CAAlB;;AACA,YAAIA,IAAI,CAAC+F,UAAT,EAAqB;AACnB/B,UAAAA,mBAAmB,CAACxC,MAApB,CAA2BL,SAA3B,EAAsC,CAAtC,EAAyC;AACvChB,YAAAA,GAAG,EAAED,EADkC;AAEvCmE,YAAAA,GAAG,EAAE,EAFkC;AAGvCpE,YAAAA,IAAI,EAAED,IAAI,CAACC;AAH4B,WAAzC;AAKD,SAND,MAMO;AACL+D,UAAAA,mBAAmB,CAACxC,MAApB,CAA2BL,SAA3B,EAAsC,CAAtC,EAAyC;AACvChB,YAAAA,GAAG,EAAED,EADkC;AAEvCmE,YAAAA,GAAG,EAAE,EAFkC;AAGvCpE,YAAAA,IAAI,EAAED,IAAI,CAACC,IAH4B;AAIvC8F,YAAAA,UAAU,EAAE;AAJ2B,WAAzC;AAMD;;AACD,aAAKnG,QAAL,CAAc;AAAE4E,UAAAA,yBAAyB,EAAER;AAA7B,SAAd;AACD;AACF,KAnyBuB;;AAAA,SAqyBxB6H,wBAryBwB,GAqyBIxH,GAAD,IAAc;AACvC,UAAIyH,SAAS,GAAGzH,GAAG,CAAC0H,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,EAA6BrJ,KAA7B,CAAmC,GAAnC,CAAhB;AACA,YAAMP,IAAI,GAAG2J,SAAS,CAAC,CAAD,CAAT,CAAahJ,WAAb,EAAb;;AACA,cAAQX,IAAR;AACE,aAAK,MAAL;AACE,iBAAO;AAAEmC,YAAAA,QAAQ,EAAEwH,SAAS,CAAC,CAAD,CAArB;AAA0BjJ,YAAAA,QAAQ,EAAEpE;AAApC,WAAP;;AACF,aAAK,KAAL;AACE,iBAAO;AAAE6F,YAAAA,QAAQ,EAAEwH,SAAS,CAAC,CAAD,CAArB;AAA0BjJ,YAAAA,QAAQ,EAAEnE;AAApC,WAAP;;AACF,aAAK,KAAL;AACE,iBAAO;AAAE4F,YAAAA,QAAQ,EAAEwH,SAAS,CAAC,CAAD,CAArB;AAA0BjJ,YAAAA,QAAQ,EAAElE;AAApC,WAAP;;AACF,aAAK,KAAL;AACE,iBAAO;AAAE2F,YAAAA,QAAQ,EAAEwH,SAAS,CAAC,CAAD,CAArB;AAA0BjJ,YAAAA,QAAQ,EAAEjE;AAApC,WAAP;;AACF,aAAK,KAAL;AACE,iBAAO;AAAE0F,YAAAA,QAAQ,EAAEwH,SAAS,CAAC,CAAD,CAArB;AAA0BjJ,YAAAA,QAAQ,EAAEhE;AAApC,WAAP;;AACF,aAAK,MAAL;AACE,iBAAO;AAAEyF,YAAAA,QAAQ,EAAEwH,SAAS,CAAC,CAAD,CAArB;AAA0BjJ,YAAAA,QAAQ,EAAEhE;AAApC,WAAP;;AACF;AACE,iBAAO,IAAP;AAdJ;AAgBD,KAxzBuB;;AAAA,SA0zBxBmN,uBA1zBwB,GA0zBE,MAAM;AAC9B,WAAKpM,QAAL,CAAe0I,SAAD,KAAqB;AACjCC,QAAAA,mBAAmB,EAAE,KADY;AAEjCxE,QAAAA,gBAAgB,EAAE,KAAKtE,KAAL,CAAWwM,sBAAX,GACd,KAAKxM,KAAL,CAAWwM,sBADG,GAEd,EAJ6B;AAKjCzD,QAAAA,uBAAuB,EAAE,KALQ;AAMjChE,QAAAA,yBAAyB,EAAE,EANM;AAOjCkC,QAAAA,MAAM,EAAE;AAPyB,OAArB,CAAd;AASD,KAp0BuB;;AAEtB,SAAK5G,KAAL,GAAa;AACX4G,MAAAA,MAAM,EAAE,EADG;AAEX7G,MAAAA,eAAe,EAAE,KAFN;AAGX0I,MAAAA,mBAAmB,EAAE,KAHV;AAIXxG,MAAAA,wBAAwB,EAAE,KAJf;AAKXgJ,MAAAA,iBAAiB,EAAE,KALR;AAMXb,MAAAA,mBAAmB,EAAE,KANV;AAOXC,MAAAA,uBAAuB,EAAE,KAPd;AAQXjB,MAAAA,oBAAoB,EAAE,KARX;AASX5I,MAAAA,KAAK,EAAE,EATI;AAUXE,MAAAA,SAAS,EAAE,EAVA;AAWXC,MAAAA,cAAc,EAAE,EAXL;AAYXS,MAAAA,kBAAkB,EAAE,EAZT;AAaXR,MAAAA,yBAAyB,EAAE,KAbhB;AAcXsK,MAAAA,KAAK,EAAE,EAdI;AAeX3H,MAAAA,SAAS,EAAE,EAfA;AAgBXuD,MAAAA,QAAQ,EAAE,EAhBC;AAiBXuC,MAAAA,YAAY,EAAE,KAjBH;AAkBXrC,MAAAA,WAAW,EAAE,EAlBF;AAmBXsC,MAAAA,eAAe,EAAE,KAnBN;AAoBXnC,MAAAA,kBAAkB,EAAE,EApBT;AAqBXoC,MAAAA,sBAAsB,EAAE,KArBb;AAsBXjH,MAAAA,QAAQ,EAAE,IAtBC;AAuBX2B,MAAAA,gBAAgB,EAAE,EAvBP;AAwBXlC,MAAAA,eAAe,EAAE,EAxBN;AAyBXqK,MAAAA,gBAAgB,EAAE,EAzBP;AA0BXvI,MAAAA,kBAAkB,EAAE,EA1BT;AA2BX8F,MAAAA,eAAe,EAAE,KA3BN;AA4BXY,MAAAA,gBAAgB,EAAE,KA5BP;AA6BXK,MAAAA,kBAAkB,EAAE,KA7BT;AA8BXN,MAAAA,iBAAiB,EAAE,IA9BR;AA+BXO,MAAAA,wBAAwB,EAAE,KA/Bf;AAgCXpB,MAAAA,uBAAuB,EAAE,KAhCd;AAiCXvH,MAAAA,wBAAwB,EAAE,KAjCf;AAkCXuC,MAAAA,yBAAyB,EAAE,KAlChB;AAmCX4C,MAAAA,QAAQ,EAAE,EAnCC;AAoCXqB,MAAAA,uBAAuB,EAAE,KApCd;AAqCX2D,MAAAA,qBAAqB,EAAE,EArCZ;AAsCX3H,MAAAA,yBAAyB,EAAE;AAtChB,KAAb;AAyCA,SAAK9E,QAAL,GAAgBV,cAAc,CAAC+J,OAAf,CAAuB,UAAvB,CAAhB;AACD;;AAEDqD,EAAAA,iBAAiB,GAAG;AAClB,SAAK3M,KAAL,CAAW4M,oBAAX;AACA,SAAK5M,KAAL,CAAWgJ,qBAAX;;AACA,QAAI,CAAC,KAAKhJ,KAAL,CAAW6M,aAAX,CAAyB/L,MAA9B,EAAsC;AACpC,WAAKd,KAAL,CAAW8M,aAAX;AACD;AACF;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAK/M,KAAL,CAAWgN,0BAAX;AACA,SAAKhN,KAAL,CAAW4I,uBAAX;AACD;;AAE8B,SAAxBqE,wBAAwB,CAACC,SAAD,EAAiBrE,SAAjB,EAAiC;AAAA;;AAC9DlI,IAAAA,OAAO,CAACC,GAAR,CACEsM,SADF,EAEE,yBAFF,EAGErE,SAHF,EAIE,wBAJF;;AAMA,QACEqE,SAAS,CAACC,qBAAV,IACA5G,MAAM,CAACC,IAAP,CAAYqC,SAAS,CAACzG,eAAtB,EAAuCtB,MAAvC,KAAkD,CADlD,IAEA,CAAC3D,CAAC,CAACiQ,OAAF,CAAUF,SAAS,CAACC,qBAApB,EAA2CtE,SAAS,CAACzG,eAArD,CAHH,EAIE;AAAA;;AACA,aAAO;AACLA,QAAAA,eAAe,EAAE8K,SAAS,CAACC,qBADtB;AAELvJ,QAAAA,SAAS,EACP,0BAAAsJ,SAAS,CAACC,qBAAV,gFAAiCzB,WAAjC,gCACAwB,SAAS,CAACC,qBADV,2DACA,uBAAiCxB,YADjC;AAHG,OAAP;AAMD;;AACD,QACEuB,SAAS,CAACV,sBAAV,IACAjG,MAAM,CAACC,IAAP,CAAYqC,SAAS,CAACvE,gBAAtB,EAAwCxD,MAAxC,KAAmD,CADnD,IAEA,CAAC3D,CAAC,CAACiQ,OAAF,CAAUF,SAAS,CAACV,sBAApB,EAA4C3D,SAAS,CAACvE,gBAAtD,CAHH,EAIE;AACA,aAAO;AACLA,QAAAA,gBAAgB,EAAE4I,SAAS,CAACV;AADvB,OAAP;AAGD;;AACD,QACEjN,cAAc,CAAC+J,OAAf,CAAuB,UAAvB,MAAuC,CAAvC,IACA4D,SAAS,CAACL,aADV,KAEC,2BAAChE,SAAS,CAAC6D,qBAAX,0DAAC,sBAAiC5L,MAAlC,KACC,2BAAC+H,SAAS,CAAC9D,yBAAX,0DAAC,sBAAqCjE,MAAtC,CAHF,KAIAoM,SAAS,CAACV,sBALZ,EAME;AAAA;;AACA,YAAMvI,IAAI,SAAG,CAAC,GAAGiJ,SAAS,CAACL,aAAd,EAA6B,CAA7B,CAAH,2DAAG,GAAiCQ,cAApC,qDAAG,iBAAiDpL,GAAjD,CACV1B,IAAD;AAAA;;AAAA,eAAe,eAAAA,IAAI,CAACC,IAAL,0DAAWM,MAAX,KAAqB;AAAEJ,UAAAA,GAAG,EAAEH,IAAI,CAACG,GAAZ;AAAiBF,UAAAA,IAAI,EAAED,IAAI,CAACC;AAA5B,SAApC;AAAA,OADW,CAAb;AAGA,YAAM8M,6BAAyC,4BAC7CJ,SAAS,CAACV,sBADmC,oFAC7C,sBAAkChI,gBADW,2DAC7C,uBAAoDvC,GAApD,CACE,CAAC;AAAE0C,QAAAA;AAAF,OAAD,KACE,CAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAE7D,MAAlB,KAA4B6D,gBAFhC,CADF;AAKA,YAAMI,yBAAyB,GAAGd,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEqE,MAAN,CAChC,CAAC;AAAE5H,QAAAA;AAAF,OAAD,KACE,EAAC4M,6BAAD,aAACA,6BAAD,uBAACA,6BAA6B,CAAEC,QAA/B,CAAwC7M,GAAxC,CAAD,CAF8B,CAAlC;AAIAC,MAAAA,OAAO,CAACC,GAAR,CACEmE,yBADF,EAEE,2BAFF,EAGEuI,6BAHF,EAIE,+BAJF;AAMA,aAAO;AACLZ,QAAAA,qBAAqB,EAAEzI,IAAI,GAAGA,IAAH,GAAU,EADhC;AAELc,QAAAA,yBAAyB,EAAEA,yBAAyB,GAChDA,yBADgD,GAEhD;AAJC,OAAP;AAMD;;AACD,WAAO,IAAP;AACD;;AA8sBDyI,EAAAA,MAAM,GAAG;AAAA;;AACP,QAAIxN,KAAU,GAAG,KAAKA,KAAtB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB,EAAwB,qBAAxB,EAA+CL,KAA/C,EAAsD,mBAAtD;AACA,QAAI;AACFiH,MAAAA,MADE;AAEF6B,MAAAA,mBAFE;AAGFxG,MAAAA,wBAHE;AAIFgJ,MAAAA,iBAJE;AAKFZ,MAAAA,uBALE;AAMFD,MAAAA,mBANE;AAOFhB,MAAAA,oBAPE;AAQFnF,MAAAA,gBARE;AASFzD,MAAAA,KATE;AAUFG,MAAAA,cAVE;AAWFC,MAAAA,yBAXE;AAYFsK,MAAAA,KAZE;AAaF3H,MAAAA,SAbE;AAcFxB,MAAAA,eAdE;AAeF+E,MAAAA,QAfE;AAgBFuC,MAAAA,YAhBE;AAiBFrC,MAAAA,WAjBE;AAkBFsC,MAAAA,eAlBE;AAmBFnC,MAAAA,kBAnBE;AAoBFoC,MAAAA,sBApBE;AAqBF1F,MAAAA,kBArBE;AAsBF8F,MAAAA,eAtBE;AAuBFkB,MAAAA,wBAvBE;AAwBFpB,MAAAA,uBAxBE;AAyBFvH,MAAAA,wBAzBE;AA0BFuC,MAAAA,yBA1BE;AA2BFiE,MAAAA,uBA3BE;AA4BF2D,MAAAA,qBA5BE;AA6BF3H,MAAAA;AA7BE,QA8BA,KAAK1E,KA9BT;AAgCA,UAAMoN,SAAc,GAAGzN,KAAK,CAAC6M,aAA7B;AACA,UAAMa,iBAAsB,GAAG1N,KAAK,CAAC0N,iBAArC;AACA,UAAMC,kBAAkB,4BAAG3N,KAAK,CAAC6M,aAAN,CAAoBpI,IAApB,CACzB,CAAC;AAAE/D,MAAAA;AAAF,KAAD,KAA8BA,GAAG,KAAKG,KAAK,CAAC,CAAD,CADlB,CAAH,0DAAG,sBAExB+M,eAFH;AAIA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,sBACGF,iBAAiB,gBAChB,QAAC,QAAD;AAAU,cAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADgB,gBAGhB;AAAQ,cAAA,SAAS,EAAC,UAAlB;AAAA,sCACE;AAAK,gBAAA,GAAG,EAAE9J,SAAS,GAAGA,SAAH,GAAevF,KAAlC;AAAyC,gBAAA,GAAG,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,gBAAA,SAAS,EAAC,QAAjB;AAA0B,gBAAA,OAAO,EAAC,oBAAlC;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAEC,WAAV;AAAuB,kBAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AACE,gBAAA,IAAI,EAAC,MADP,CAEE;AAFF;AAGE,gBAAA,MAAM,EAAC,gCAHT;AAIE,gBAAA,KAAK,EAAE;AAAEuP,kBAAAA,OAAO,EAAE;AAAX,iBAJT;AAKE,gBAAA,EAAE,EAAC,oBALL;AAME,gBAAA,QAAQ,EAAGpL,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,cAArB;AANnB;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAuBE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,uBACGiL,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBADgB,gBAGhB;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,cAAA,KAAK,EAAEpJ,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEY,QAF3B;AAAA,yBAIGZ,gBAJH,aAIGA,gBAJH,uBAIGA,gBAAgB,CAAEY,QAJrB,eAKE;AACE,gBAAA,SAAS,EAAC,WADZ;AAEE,gBAAA,KAAK,EAAC,MAFR;AAGE,gBAAA,OAAO,EAAE,MAAM,KAAK/E,QAAL,CAAc;AAAE2I,kBAAAA,mBAAmB,EAAE;AAAvB,iBAAd,CAHjB;AAAA,uCAKE;AAAK,kBAAA,GAAG,EAAEvK,YAAV;AAAwB,kBAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAkBGmP,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBADgB,gBAGhB;AACE,cAAA,IAAI,EAAC,oBADP;AAEE,cAAA,SAAS,EAAC,cAFZ;AAGE,cAAA,OAAO,EAAE,MAAM;AACb1N,gBAAAA,KAAK,CAACgN,0BAAN;AACAhN,gBAAAA,KAAK,CAACuJ,OAAN,CAAc3H,IAAd,CACG,IAAG,KAAK3B,QAAL,KAAkB,CAAlB,GAAsB,QAAtB,GAAiC,SAAU,SAC7C,KAAKA,QAAL,KAAkB,CAAlB,GAAsB,OAAtB,GAAgC,SACjC,MAAKqE,gBAFN,aAEMA,gBAFN,uBAEMA,gBAAgB,CAAEwJ,MAAO,EAHjC;AAKD,eAVH;AAAA,sCAYE;AAAK,gBAAA,GAAG,EAAEzO,WAAV;AAAuB,gBAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAwCE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBACGqO,iBAAiB,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,GAAkBpJ,gBAAlB,aAAkBA,gBAAlB,uBAAkBA,gBAAgB,CAAEuC;AADxD;AAAA;AAAA;AAAA;AAAA,kBAxCF,eA4CE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAmC,gBAAA,EAAE,EAAC,qBAAtC;AAAA,0BACG6G,iBAAiB,gBAChB,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,wBADgB,gBAGhB;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,0CACE;AAAM,oBAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAM,oBAAA,SAAS,EAAC,eAAhB;AAAA,8BACG,KAAKzN,QAAL,KAAkB,CAAlB,4BACG,KAAKD,KAAL,CAAW+N,iBADd,0DACG,sBAA8BC,gBADjC,4BAEG,KAAKhO,KAAL,CAAWiO,cAFd,0DAEG,sBAA2BD;AAHjC;AAAA;AAAA;AAAA;AAAA,0BAFF,eAOE;AAAM,oBAAA,SAAS,EAAC,cAAhB;AAAA,2CACE;AACE,sBAAA,SAAS,EAAC,eADZ;AAEE,sBAAA,EAAE,EAAC,cAFL;AAGE,sBAAA,IAAI,EAAC,OAHP;AAIE,sBAAA,GAAG,EAAC,GAJN;AAKE,sBAAA,KAAK,EAAEE,QAAQ,CACb,KAAKjO,QAAL,KAAkB,CAAlB,6BACI,KAAKD,KAAL,CAAW+N,iBADf,2DACI,uBAA8BC,gBADlC,6BAEI,KAAKhO,KAAL,CAAWiO,cAFf,2DAEI,uBAA2BD,gBAHlB;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5CF,eA4EE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,uBACGN,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBADgB,gBAGhB;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA,0BACG,CAAAtL,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE+L,OAAjB,KAA4B;AAD/B;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA,0BAAiC,GAC/B,CAAA/L,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEgM,YAAjB,KAAiC,GAClC;AAFD;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAaGV,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBADgB,gBAGhB;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA,0BACGtL,eADH,aACGA,eADH,uBACGA,eAAe,CAAEiM;AADpB;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA+HE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEvF,mBAFR;AAGE,QAAA,OAAO,EAAE,KAAKyD,uBAHhB;AAIE,2BAAgB,oBAJlB;AAKE,4BAAiB,0BALnB;AAAA,+BAOE;AACE,UAAA,SAAS,EAAC,yBADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,kCAME;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAE,KAAKA,uBAFhB;AAAA,qCAIE;AAAK,gBAAA,GAAG,EAAE9N,MAAV;AAAkB,gBAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAeE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,WAAW,EAAC,iBAFd;AAGE,oBAAA,IAAI,EAAC,UAHP;AAIE,oBAAA,KAAK,EAAE6F,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEY,QAJ3B;AAKE,oBAAA,QAAQ,EAAE,KAAK6C;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWG,CAAC,EAACd,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAE/B,QAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6B+B,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAE/B;AAArC;AAAA;AAAA;AAAA;AAAA,wBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAgBE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,sBAAf;AAAA,yCACE;AAAM,oBAAA,SAAS,EAAC,YAAhB;AAAA,8BAA+B,OAAMZ,gBAAP,aAAOA,gBAAP,uBAAOA,gBAAgB,CAAEqB,YAAa;AAApE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF,EAYG,CAAC,EAACsB,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEtB,YAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6BsB,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEtB;AAArC;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAgCE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,sBAAf;AAAA,yCAEE;AAAM,oBAAA,SAAS,EAAC,YAAhB;AAAA,8BACGrB,gBADH,aACGA,gBADH,uBACGA,gBAAgB,CAAEsD;AADrB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,wBAFF,EAQG,CAAC,EAACX,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEW,KAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6BX,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEW;AAArC;AAAA;AAAA;AAAA;AAAA,wBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhCF,EA4CG,0BAAArI,cAAc,CAAC+J,OAAf,CAAuB,UAAvB,iFAAoCgF,WAApC,MACC,QADD,iBAEC;AAAK,gBAAA,SAAS,EAAC,sBAAf;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,MADZ;AAEE,kBAAA,OAAO,EAAE,MACP,KAAKnO,QAAL,CAAc;AACZ2J,oBAAAA,uBAAuB,EAAE,IADb;AAEZhB,oBAAAA,mBAAmB,EAAE;AAFT,mBAAd,CAHJ;AAAA,6BASG,GATH;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAaE;AACE,kBAAA,SAAS,EAAC,MADZ;AAEE,kBAAA,OAAO,EAAE,MACP,KAAK3I,QAAL,CAAc;AACZsJ,oBAAAA,oBAAoB,EAAE,IADV;AAEZX,oBAAAA,mBAAmB,EAAE;AAFT,mBAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9CJ,EAyEG,KAAK7I,QAAL,KAAkB,CAAlB,iBACC;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,WAAW,EAAC,qBAFd;AAGE,oBAAA,IAAI,EAAC,cAHP;AAIE,oBAAA,KAAK,EAAEqE,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEqE,YAJ3B;AAKE,oBAAA,QAAQ,EAAE,KAAKZ;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF,EAWG,CAAC,EAACd,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAE0B,YAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6B1B,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAE0B;AAArC;AAAA;AAAA;AAAA;AAAA,wBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA1EJ,EA0FG,KAAK1I,QAAL,KAAkB,CAAlB,iBACC;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACE,QAAC,YAAD;AACE,oBAAA,KAAK,EAAEqE,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAE0B,GAD3B;AAEE,oBAAA,WAAW,EAAE,OAFf;AAGE,oBAAA,IAAI,EAAE,KAHR;AAIE,oBAAA,WAAW,EAAC,gBAJd;AAKE,oBAAA,MAAM,EAAC,gBALT;AAME,oBAAA,eAAe,EAAE,IANnB;AAOE,oBAAA,aAAa,EAAGuI,MAAD,IAAY;AACzB,4BAAM;AAAEC,wBAAAA,cAAF;AAAkBvG,wBAAAA;AAAlB,0BAA4BsG,MAAlC;AACA,4BAAMvG,eAAe,GAAG,EACtB,GAAG,KAAK3H,KAAL,CAAWiE;AADQ,uBAAxB;AAGA0D,sBAAAA,eAAe,CAAChC,GAAhB,GAAsBiC,KAAtB;AACA,2BAAK9H,QAAL,CAAc;AACZmE,wBAAAA,gBAAgB,EAAE0D,eADN;AAEZlD,wBAAAA,yBAAyB,EAAE;AAFf,uBAAd;AAID;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF,EAyBG,CAAC,EAACmC,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEjB,GAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6BiB,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEjB;AAArC;AAAA;AAAA;AAAA;AAAA,wBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3FJ,EA0HG,KAAK/F,QAAL,KAAkB,CAAlB,iBACC;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA,wDAC0B,GAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAKG,CAAAqE,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,qCAAAA,gBAAgB,CAAEE,gBAAlB,gFAAoC1D,MAApC,IAA6C,CAA7C,IACC4L,qBAAqB,CAAC5L,MAAtB,GAA+B,CADhC,iBAEG;AAAA,4BACGwD,gBADH,aACGA,gBADH,iDACGA,gBAAgB,CAAEE,gBADrB,2DACG,uBAAoCvC,GAApC,CACC,CAAC;AACC0C,oBAAAA,gBADD;AAECC,oBAAAA,GAFD;AAGC0B,oBAAAA,UAHD;AAICzB,oBAAAA;AAJD,mBAAD,KAUM;AAAA;;AACJ,0BAAM4J,iBAAyB,4BAC7B/B,qBAAqB,CAACjI,IAAtB,CACE,CAAC;AAAE/D,sBAAAA;AAAF,qBAAD,KACEA,GAAG,KAAKiE,gBAFZ,CAD6B,0DAC7B,sBAGGnE,IAJL;AAKA,0BAAMkO,UAAe,GACnB9J,GAAG,IAAI,KAAKwH,wBAAL,CAA8BxH,GAA9B,CADT;AAEA,wCACE;AAAA,6CACE;AACE,wBAAA,SAAS,EAAC,iBADZ;AAAA,gDAIE;AAAK,0BAAA,SAAS,EAAC,2BAAf;AAAA,kDACE;AACE,4BAAA,SAAS,EAAC,uBADZ;AAEE,4BAAA,IAAI,EAAC,UAFP;AAGE,4BAAA,OAAO,EAAE,CAAC,CAAC0B,UAAF,GAAe,KAAf,GAAuB,IAHlC;AAIE,4BAAA,IAAI,EAAEmI,iBAJR;AAKE,4BAAA,EAAE,EAAEA,iBALN;AAME,4BAAA,QAAQ,EAAE,MACR,KAAKtC,0BAAL,CACExH,gBADF,EAEE,qBAFF;AAPJ;AAAA;AAAA;AAAA;AAAA,kCADF,eAcE;AAAO,4BAAA,OAAO,EAAE8J,iBAAhB;AAAA,sCACGA;AADH;AAAA;AAAA;AAAA;AAAA,kCAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJF,EAsBG7J,GAAG,gBACF;AACE,0BAAA,SAAS,EAAC,iBADZ;AAEE,0BAAA,OAAO,EAAE,MACP+J,MAAM,CAACC,IAAP,CACG,GAAED,MAAM,CAACE,QAAP,CAAgBC,MAAO,iBAAgBlK,GAAI,cADhD,EAEE,QAFF,CAHJ;AAAA,kDASE;AACE,4BAAA,SAAS,EAAC,OADZ;AAEE,4BAAA,OAAO,EAAGnC,CAAD,IACP,KAAKwJ,8BAAL,CACExJ,CADF,EAEEkC,gBAFF,EAGE,qBAHF,CAHJ;AAAA,mDAUE;AAAK,8BAAA,GAAG,EAAE5F;AAAV;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,kCATF,eAqBE;AAAM,4BAAA,SAAS,EAAC,WAAhB;AAAA,mDACE;AAAK,8BAAA,GAAG,EAAE2P,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEtL;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kCArBF,eAwBE;AAAK,4BAAA,SAAS,EAAC,cAAf;AAAA,mDACE;AAAM,8BAAA,SAAS,EAAC,MAAhB;AAAA,wCACGyB,QAAQ,GACLA,QADK,GAEL6J,UAFK,aAELA,UAFK,uBAELA,UAAU,CAAE7J;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kCAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,gCADE,gBAkCF;AAAK,0BAAA,SAAS,EAAC,YAAf;AAAA,kDACE;AACE,4BAAA,SAAS,EAAG,cACVyB,UAAU,GAAG,SAAH,GAAe,EAC1B,EAHH;AAIE,4BAAA,OAAO,EAAEmI,iBAAiB,GAAG,QAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eASE;AACE,4BAAA,IAAI,EAAC,MADP;AAEE,4BAAA,SAAS,EAAC,MAFZ;AAGE,4BAAA,EAAE,EAAEA,iBAAiB,GAAG,QAH1B;AAIE,4BAAA,MAAM,EAAC,gJAJT;AAKE,4BAAA,QAAQ,EAAE,CAAC,CAACnI,UAAF,GAAe,IAAf,GAAsB,KALlC;AAME,4BAAA,QAAQ,EAAG7D,CAAD,IACR,KAAKD,YAAL,CACEC,CADF,EAEE,qBAFF,EAGEkC,gBAHF;AAPJ;AAAA;AAAA;AAAA;AAAA,kCATF;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxDJ;AAAA,yBAEOA,gBAFP;AAAA;AAAA;AAAA;AAAA;AADF,qCADF;AAsFD,mBAzGF;AADH,iCAPN,EAsHGoE,uBAAuB,IACtB,CAAAhE,yBAAyB,SAAzB,IAAAA,yBAAyB,WAAzB,YAAAA,yBAAyB,CAAEjE,MAA3B,IAAoC,CADrC,KAECiE,yBAFD,aAECA,yBAFD,uBAECA,yBAAyB,CAAE9C,GAA3B,CACE,CAAC;AACCvB,kBAAAA,GADD;AAECF,kBAAAA,IAFD;AAGCoE,kBAAAA,GAHD;AAIC0B,kBAAAA,UAJD;AAKCzB,kBAAAA;AALD,iBAAD,KAYM;AACJ,wBAAM6J,UAAe,GACnB9J,GAAG,IAAI,KAAKwH,wBAAL,CAA8BxH,GAA9B,CADT;AAEA,sCACE;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAC,iBAAf;AAAA,8CACE;AAAK,wBAAA,SAAS,EAAC,2BAAf;AAAA,gDACE;AACE,0BAAA,SAAS,EAAC,uBADZ;AAEE,0BAAA,IAAI,EAAC,UAFP;AAGE,0BAAA,OAAO,EAAE,CAAC,CAAC0B,UAAF,GAAe,IAAf,GAAsB,KAHjC;AAIE,0BAAA,IAAI,EAAE9F,IAJR;AAKE,0BAAA,EAAE,EAAEA,IALN;AAME,0BAAA,QAAQ,EAAE,MACR,KAAK2L,0BAAL,CACEzL,GADF,EAEE,wBAFF;AAPJ;AAAA;AAAA;AAAA;AAAA,gCADF,eAcE;AAAO,0BAAA,OAAO,EAAEF,IAAhB;AAAA,oCAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,gCAdF;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAiBGoE,GAAG,gBACF;AACE,wBAAA,SAAS,EAAC,iBADZ;AAEE,wBAAA,OAAO,EAAE,MACP+J,MAAM,CAACC,IAAP,CACG,GAAED,MAAM,CAACE,QAAP,CAAgBC,MAAO,iBAAgBlK,GAAI,cADhD,EAEE,QAFF,CAHJ;AAAA,gDASE;AACE,0BAAA,SAAS,EAAC,OADZ;AAEE,0BAAA,OAAO,EAAGnC,CAAD,IACP,KAAKwJ,8BAAL,CACExJ,CADF,EAEE/B,GAFF,EAGE,wBAHF,CAHJ;AAAA,iDAUE;AAAK,4BAAA,GAAG,EAAE3B;AAAV;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,gCATF,eAqBE;AAAM,0BAAA,SAAS,EAAC,WAAhB;AAAA,iDACE;AAAK,4BAAA,GAAG,EAAE2P,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEtL;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gCArBF,eAwBE;AAAK,0BAAA,SAAS,EAAC,cAAf;AAAA,iDAEE;AAAM,4BAAA,SAAS,EAAC,MAAhB;AAAA,sCAAwByB;AAAxB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gCAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,8BADE,gBA+BF;AAAK,wBAAA,SAAS,EAAC,YAAf;AAAA,gDACE;AACE,0BAAA,SAAS,EAAG,cACV,CAACyB,UAAD,GAAc,SAAd,GAA0B,EAC3B,EAHH;AAIE,0BAAA,OAAO,EAAE9F,IAAI,GAAG,QAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eASE;AACE,0BAAA,IAAI,EAAC,MADP;AAEE,0BAAA,SAAS,EAAC,MAFZ;AAGE,0BAAA,EAAE,EAAEA,IAAI,GAAG,QAHb;AAIE,0BAAA,MAAM,EAAC,gJAJT;AAKE,0BAAA,QAAQ,EAAE,CAAC,CAAC8F,UAAF,GAAe,KAAf,GAAuB,IALnC;AAME,0BAAA,QAAQ,EAAG7D,CAAD,IACR,KAAKD,YAAL,CACEC,CADF,EAEE,wBAFF,EAGE/B,GAHF;AAPJ;AAAA;AAAA;AAAA;AAAA,gCATF;AAAA;AAAA;AAAA;AAAA;AAAA,8BAhDJ;AAAA,uBAAsCA,GAAtC;AAAA;AAAA;AAAA;AAAA;AADF,mCADF;AA8ED,iBA9FH,CAFD,CAtHH;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3HJ,EAqVG,KAAKT,QAAL,KAAkB,CAAlB,iBACC;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,2CACE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,WAAW,EAAC,cAFd;AAGE,sBAAA,IAAI,EAAC,aAHP;AAIE,sBAAA,KAAK,EAAEqE,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEoC,WAJ3B;AAKE,sBAAA,QAAQ,EAAE,KAAKqB;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF,EAWG,CAAC,EAACd,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEP,WAAT,CAAD,iBACC;AAAM,oBAAA,SAAS,EAAC,WAAhB;AAAA,8BAA6BO,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEP;AAArC;AAAA;AAAA;AAAA;AAAA,0BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAgBE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,2CACE;AACE,sBAAA,IAAI,EAAC,MADP;AAEE,sBAAA,WAAW,EAAC,eAFd;AAGE,sBAAA,IAAI,EAAC,UAHP;AAIE,sBAAA,KAAK,EAAEpC,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEuC,QAJ3B;AAKE,sBAAA,QAAQ,EAAE,KAAKkB;AALjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAFF,EAWG,CAAC,EAACd,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEJ,QAAT,CAAD,iBACC;AAAM,oBAAA,SAAS,EAAC,WAAhB;AAAA,8BAA6BI,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEJ;AAArC;AAAA;AAAA;AAAA;AAAA,0BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBF,eA+BE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AAAO,oBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,2CAEE,QAAC,YAAD;AACE,sBAAA,KAAK,EAAEvC,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAE0B,GAD3B;AAEE,sBAAA,WAAW,EAAE,OAFf;AAGE,sBAAA,IAAI,EAAE,KAHR;AAIE,sBAAA,WAAW,EAAC,gBAJd;AAKE,sBAAA,MAAM,EAAC,gBALT;AAME,sBAAA,eAAe,EAAE,IANnB;AAOE,sBAAA,aAAa,EAAGuI,MAAD,IAAY;AACzB,8BAAM;AAAEC,0BAAAA,cAAF;AAAkBvG,0BAAAA;AAAlB,4BAA4BsG,MAAlC;AACA,8BAAMvG,eAAe,GAAG,EACtB,GAAG,KAAK3H,KAAL,CAAWiE;AADQ,yBAAxB;AAGA0D,wBAAAA,eAAe,CAAChC,GAAhB,GAAsBiC,KAAtB;AACA,6BAAK9H,QAAL,CAAc;AACZmE,0BAAAA,gBAAgB,EAAE0D,eADN;AAEZlD,0BAAAA,yBAAyB,EAAE;AAFf,yBAAd;AAID;AAjBH;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,0BAJF,EA0BG,CAAC,EAACmC,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEjB,GAAT,CAAD,iBACC;AAAM,oBAAA,SAAS,EAAC,WAAhB;AAAA,8BAA6BiB,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEjB;AAArC;AAAA;AAAA;AAAA;AAAA,0BA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBA/BF;AAAA,8BAtVJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAwZG,KAAK/F,QAAL,KAAkB,CAAlB,IACC,CAAAqE,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,sCAAAA,gBAAgB,CAAEE,gBAAlB,kFAAoC1D,MAApC,IAA6C,CAD9C,IAEC,CAACiI,uBAFF,iBAGG;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,mCADZ;AAEE,kBAAA,OAAO,EAAE,MACP,KAAK5I,QAAL,CAAc;AAAE4I,oBAAAA,uBAAuB,EAAE;AAA3B,mBAAd,CAHJ;AAAA,4DAM8B,GAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE;AAAM,gBAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA,4BA3ZN;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eA4bE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAG,gCACVjE,yBAAyB,GAAG,EAAH,GAAQ,aAClC,EAHH;AAIE,cAAA,OAAO,EAAE,KAAKoD,yBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5bF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cA/HF,eA+kBE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEuB,oBAFR;AAGE,QAAA,OAAO,EAAE,KAAKD,yBAHhB;AAIE,2BAAgB,oBAJlB;AAKE,4BAAiB,0BALnB;AAAA,+BAOE;AACE,UAAA,SAAS,EAAC,yBADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,kCAME;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,OAAO,EAAE,KAAKA;AAFhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,uCACE;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAE,KAAKA,yBAFhB;AAAA,qCAIE;AAAK,gBAAA,GAAG,EAAE/K,MAAV;AAAkB,gBAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAuBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAEiL,YAAY,GAAG,MAAH,GAAY,UADhC;AAEE,oBAAA,SAAS,EAAC,cAFZ;AAGE,oBAAA,WAAW,EAAC,gBAHd;AAIE,oBAAA,IAAI,EAAC,UAJP;AAKE,oBAAA,KAAK,EAAEvC,QALT;AAME,oBAAA,QAAQ,EAAE,KAAKgC;AANjB;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AACE,oBAAA,SAAS,EAAC,aADZ;AAEE,oBAAA,OAAO,EAAE,MACP,KAAKhJ,QAAL,CAAe0I,SAAD,KAAqB;AACjCa,sBAAAA,YAAY,EAAE,CAACb,SAAS,CAACa;AADQ,qBAArB,CAAd,CAHJ;AAAA,2CAQE;AACE,sBAAA,GAAG,EAAEA,YAAY,GAAG5K,WAAH,GAAiBD,YADpC;AAEE,sBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAyBG,CAAC,EAACoI,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEE,QAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6BF,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEE;AAArC;AAAA;AAAA;AAAA;AAAA,wBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eA8BE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAEwC,eAAe,GAAG,MAAH,GAAY,UADnC;AAEE,oBAAA,SAAS,EAAC,cAFZ;AAGE,oBAAA,WAAW,EAAC,oBAHd;AAIE,oBAAA,IAAI,EAAC,aAJP;AAKE,oBAAA,KAAK,EAAEtC,WALT;AAME,oBAAA,QAAQ,EAAE,KAAK8B;AANjB;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AACE,oBAAA,SAAS,EAAC,aADZ;AAEE,oBAAA,OAAO,EAAE,MACP,KAAKhJ,QAAL,CAAe0I,SAAD,KAAqB;AACjCc,sBAAAA,eAAe,EAAE,CAACd,SAAS,CAACc;AADK,qBAArB,CAAd,CAHJ;AAAA,2CAQE;AACE,sBAAA,GAAG,EAAEA,eAAe,GAAG7K,WAAH,GAAiBD,YADvC;AAEE,sBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAyBG,CAAC,EAACoI,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,WAAT,CAAD,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BAA6BJ,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAEI;AAArC;AAAA;AAAA;AAAA;AAAA,wBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9BF,eA2DE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,0CACE;AACE,oBAAA,IAAI,EAAEuC,sBAAsB,GAAG,MAAH,GAAY,UAD1C;AAEE,oBAAA,SAAS,EAAC,cAFZ;AAGE,oBAAA,WAAW,EAAC,4BAHd;AAIE,oBAAA,IAAI,EAAC,oBAJP;AAKE,oBAAA,KAAK,EAAEpC,kBALT;AAME,oBAAA,QAAQ,EAAE,KAAK2B;AANjB;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AACE,oBAAA,SAAS,EAAC,aADZ;AAEE,oBAAA,OAAO,EAAE,MACP,KAAKhJ,QAAL,CAAe0I,SAAD,KAAqB;AACjCe,sBAAAA,sBAAsB,EACpB,CAACf,SAAS,CAACe;AAFoB,qBAArB,CAAd,CAHJ;AAAA,2CASE;AACE,sBAAA,GAAG,EACDA,sBAAsB,GAAG9K,WAAH,GAAiBD,YAF3C;AAIE,sBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EA4BG,CAAC,EAACoI,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEO,kBAAT,CAAD,IAAgC,EAACP,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEI,WAAT,CAAhC,iBACC;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BACGJ,MADH,aACGA,MADH,uBACGA,MAAM,CAAEO;AADX;AAAA;AAAA;AAAA;AAAA,wBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAuHE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAG,gCACVL,QAAQ,IAAIE,WAAZ,IAA2BG,kBAA3B,GACI,EADJ,GAEI,aACL,EALH;AAME,cAAA,OAAO,EAAE,KAAK4B,qBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cA/kBF,eA6tBE,QAAC,gBAAD;AACE,QAAA,OAAO,EAAEpJ,KAAK,CAACuJ,OADjB;AAEE,QAAA,yBAAyB,EAAEO,uBAF7B;AAGE,QAAA,YAAY,6BAAE,KAAKzJ,KAAL,CAAWiE,gBAAb,4DAAE,wBAA6BsD,KAH7C;AAIE,QAAA,4BAA4B,EAAE,KAAKiC;AAJrC;AAAA;AAAA;AAAA;AAAA,cA7tBF,eAouBE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACG6D,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADgB,gBAGhB;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,qBACG,yBADH,EAEG,KAAKzN,QAAL,KAAkB,CAAlB,iBACC;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAC,MAFR;AAGE,YAAA,OAAO,EAAE,MACP,KAAKE,QAAL,CAAc;AAAEmC,cAAAA,wBAAwB,EAAE;AAA5B,aAAd,CAJJ;AAAA,mCAOE;AAAK,cAAA,GAAG,EAAE/D,YAAV;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cApuBF,eAyvBE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAE+D,wBAFR;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKnC,QAAL,CAAc;AAAEmC,UAAAA,wBAAwB,EAAE;AAA5B,SAAd,CAHjB;AAIE,2BAAgB,oBAJlB;AAKE,4BAAiB,0BALnB;AAAA,+BAOE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,kCAME;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAE,MACP,KAAKnC,QAAL,CAAc;AAAEmC,gBAAAA,wBAAwB,EAAE;AAA5B,eAAd,CAHJ;AAAA,qCAME;AAAK,gBAAA,GAAG,EAAE7D,MAAV;AAAkB,gBAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAkBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACE;AAAA,0BACGgP,SADH,aACGA,SADH,uBACGA,SAAS,CAAExL,GAAX,CACC,CAAC;AACCvB,kBAAAA,GADD;AAECU,kBAAAA,UAFD;AAGCE,kBAAAA,YAHD;AAICsM,kBAAAA;AAJD,iBAAD,KAUM;AACJ,wBAAMmB,MAAM,GAAGlO,KAAK,CAAC,CAAD,CAAL,KAAaH,GAA5B;AACA,sCACE;AAEE,oBAAA,SAAS,EAAEqO,MAAM,GAAG,QAAH,GAAc,EAFjC;AAGE,oBAAA,OAAO,EAAE,MACP,KAAKzO,YAAL,CACE;AAAEI,sBAAAA,GAAF;AAAOU,sBAAAA,UAAP;AAAmBE,sBAAAA;AAAnB,qBADF,EAEE,OAFF,CAJJ;AAAA,4CAUE;AAAA,6CACE;AACE,wBAAA,GAAG,EACDA,YAAY,GAAGA,YAAH,GAAkB0N,iBAFlC;AAIE,wBAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAVF,eAkBE;AAAM,sBAAA,SAAS,EAAC,MAAhB;AAAA,gCAAwB5N;AAAxB;AAAA;AAAA;AAAA;AAAA,4BAlBF;AAAA,qBACOV,GADP;AAAA;AAAA;AAAA;AAAA,0BADF;AAsBD,iBAnCF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eA6CE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA7CF,eAgDE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE;AAAA,2BACG,CAAAiN,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAE7M,MAApB,IAA6B,CAA7B,iBACC;AACE,kBAAA,SAAS,EAAEG,yBAAyB,GAAG,UAAH,GAAgB,EADtD;AAEE,kBAAA,OAAO,EAAE,MACP,KAAKX,YAAL,CAAkBqN,kBAAlB,EAAsC,aAAtC,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAWGA,kBAXH,aAWGA,kBAXH,uBAWGA,kBAAkB,CAAE1L,GAApB,CACC,CAAC;AAAEvB,kBAAAA,GAAF;AAAOF,kBAAAA;AAAP,iBAAD,KAAkD;AAChD,wBAAMuO,MAAM,GAAG,CAAA/N,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEW,OAAhB,CAAwBjB,GAAxB,MAAgC,CAA/C;AACA,sCACE;AAEE,oBAAA,SAAS,EACPqO,MAAM,IAAI,CAAC9N,yBAAX,GACI,UADJ,GAEI,EALR;AAOE,oBAAA,OAAO,EAAE,MACP,KAAKX,YAAL,CAAkB;AAAEI,sBAAAA,GAAF;AAAOF,sBAAAA;AAAP,qBAAlB,EAAiC,kBAAjC,CARJ;AAAA,8BAWGA;AAXH,qBACOE,GADP;AAAA;AAAA;AAAA;AAAA,0BADF;AAeD,iBAlBF,CAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAqGE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAG,QACVG,KAAK,CAACC,MAAN,IAAgBE,cAAc,CAACF,MAA/B,GAAwC,EAAxC,GAA6C,cAC9C,EAHH;AAIE,cAAA,OAAO,EAAE,MAAM,KAAKR,YAAL,CAAkB,WAAlB,EAA+B,WAA/B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AACE,cAAA,SAAS,EAAG,gCACVO,KAAK,CAACC,MAAN,IAAgBE,cAAc,CAACF,MAA/B,GAAwC,EAAxC,GAA6C,aAC9C,EAHH;AAIE,cAAA,OAAO,EAAE,KAAKqB,kBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAzvBF,eA03BE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,mBACGuL,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADgB,gBAGhB;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,+BACS,KAAKzN,QAAL,KAAkB,CAAlB,IAAuB,SADhC,EAEG,CAAC,CAAAmC,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEmJ,KAAjB,MAA0BnJ,eAA1B,aAA0BA,eAA1B,uBAA0BA,eAAe,CAAEoJ,YAA3C,CAAD,kBACC;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAC,MAFR;AAGE,YAAA,OAAO,EAAE,KAAKH,eAHhB;AAAA,mCAKE;AAAK,cAAA,GAAG,EAAE9M,YAAV;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAiBG,EAAC6D,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEmJ,KAAlB,KAA2B,EAACnJ,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEoJ,YAAlB,CAA3B,iBACC;AACE,UAAA,SAAS,EAAC,mCADZ;AAEE,UAAA,OAAO,EAAE,KAAKH,eAFhB;AAAA,oBAIGqC,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADgB,GAGf,kBAAiB,KAAKzN,QAAL,KAAkB,CAAlB,GAAsB,KAAtB,GAA8B,SAAU;AAP9D;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eA6BE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBACGyN,iBAAiB,gBAChB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADgB,GAGhB,CAAAtL,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEmJ,KAAjB,MAA0BnJ,eAA1B,aAA0BA,eAA1B,uBAA0BA,eAAe,CAAEoJ,YAA3C;AAJJ;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cA13BF,eAg6BE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEF,iBAFR;AAGE,QAAA,OAAO,EAAE,MACP,KAAKnL,QAAL,CAAc;AACZoL,UAAAA,KAAK,EAAE,CAAAnJ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEmJ,KAAjB,IAAyBnJ,eAAzB,aAAyBA,eAAzB,uBAAyBA,eAAe,CAAEmJ,KAA1C,GAAkD,EAD7C;AAEZD,UAAAA,iBAAiB,EAAE,KAFP;AAGZrE,UAAAA,MAAM,EAAE;AAHI,SAAd,CAJJ;AAUE,2BAAgB,oBAVlB;AAWE,4BAAiB,0BAXnB;AAAA,+BAaE;AACE,UAAA,SAAS,EAAC,yBADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,kCAME;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,mCACS,KAAKhH,QAAL,KAAkB,CAAlB,IAAuB,SADhC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAE,MACP,KAAKE,QAAL,CAAc;AACZoL,gBAAAA,KAAK,EAAE,CAAAnJ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEmJ,KAAjB,IAAyBnJ,eAAzB,aAAyBA,eAAzB,uBAAyBA,eAAe,CAAEmJ,KAA1C,GAAkD,EAD7C;AAEZD,gBAAAA,iBAAiB,EAAE,KAFP;AAGZrE,gBAAAA,MAAM,EAAE;AAHI,eAAd,CAHJ;AAAA,qCAUE;AAAK,gBAAA,GAAG,EAAExI,MAAV;AAAkB,gBAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAuBE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA,wBACG,KAAKwB,QAAL,KAAkB,CAAlB,GAAsB,aAAtB,GAAsC;AADzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AACE,gBAAA,WAAW,EAAC,mBADd;AAEE,gBAAA,SAAS,EAAE,GAFb;AAGE,gBAAA,KAAK,EAAEsL,KAHT;AAIE,gBAAA,QAAQ,EAAE,CAAC;AACTzI,kBAAAA,MAAM,EAAE;AAAEmF,oBAAAA;AAAF;AADC,iBAAD,KAIJ,KAAK9H,QAAL,CAAc;AAAEoL,kBAAAA,KAAK,EAAEtD;AAAT,iBAAd;AARR;AAAA;AAAA;AAAA;AAAA,sBADF,eAWE;AAAM,gBAAA,SAAS,EAAC,YAAhB;AAAA,0BAA+B,GAAEsD,KAAK,CAACzK,MAAO;AAA9C;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAiBG,CAAC,CAACmG,MAAM,CAACsE,KAAT,iBACC;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6BtE,MAAM,CAACsE;AAApC;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF,eA4CE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,8BADZ;AAEE,cAAA,OAAO,EAAE,MAAM;AACb,oBAAI0D,GAAQ,GAAG,EAAf;;AACA,oBAAI1D,KAAK,CAAClG,IAAN,GAAavE,MAAb,GAAsB,CAA1B,EAA6B;AAC3BmO,kBAAAA,GAAG,CAAC1D,KAAJ,GAAY,yBAAZ;AACA,uBAAKpL,QAAL,CAAc;AAAE8G,oBAAAA,MAAM,EAAEgI;AAAV,mBAAd;AACD,iBAHD,MAGO;AACL,wBAAM1N,OAAO,GAAG,EAAE,GAAGa;AAAL,mBAAhB;AACAb,kBAAAA,OAAO,CAACgK,KAAR,GAAgBA,KAAhB;AACA,uBAAKpL,QAAL,CAAc;AACZiC,oBAAAA,eAAe,EAAEb,OADL;AAEZ+J,oBAAAA,iBAAiB,EAAE,KAFP;AAGZ/I,oBAAAA,wBAAwB,EAAE;AAHd,mBAAd;AAKD;AACF,eAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAqBE;AACE,cAAA,SAAS,EAAC,0BADZ;AAEE,cAAA,OAAO,EAAE,MACP,KAAKpC,QAAL,CAAc;AACZoL,gBAAAA,KAAK,EAAE,CAAAnJ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEmJ,KAAjB,IAAyBnJ,eAAzB,aAAyBA,eAAzB,uBAAyBA,eAAe,CAAEmJ,KAA1C,GAAkD,EAD7C;AAEZD,gBAAAA,iBAAiB,EAAE,KAFP;AAGZrE,gBAAAA,MAAM,EAAE;AAHI,eAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAbF;AAAA;AAAA;AAAA;AAAA,cAh6BF,eA8/BE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBACGyG,iBAAiB,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAkB;AADtC;AAAA;AAAA;AAAA;AAAA,gBADF,EAIG,CAAAtL,eAAe,SAAf,IAAAA,eAAe,WAAf,qCAAAA,eAAe,CAAEoI,SAAjB,gFAA4B1J,MAA5B,MAAuC,CAAvC,iBACC;AACE,UAAA,SAAS,EAAC,mCADZ;AAEE,UAAA,OAAO,EAAE,KAAKsK,kBAFhB;AAAA,oBAIGsC,iBAAiB,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAkB;AAJtC;AAAA;AAAA;AAAA;AAAA,gBALJ,EAYGA,iBAAiB,gBAChB,QAAC,QAAD;AAAU,UAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADgB,gBAGhB;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,qBACGtL,eADH,aACGA,eADH,iDACGA,eAAe,CAAEoI,SADpB,2DACG,uBAA4BvI,GAA5B,CACC,CACE;AACEiI,YAAAA,cADF;AAEED,YAAAA,OAFF;AAGEY,YAAAA,WAHF;AAIE1G,YAAAA;AAJF,WADF,EAYE2G,KAZF,KAaK;AACH,gCACE;AACE,cAAA,SAAS,EAAC,OADZ;AAGE,cAAA,OAAO,EAAE,MACP,KAAK3K,QAAL,CAAc;AACZsK,gBAAAA,mBAAmB,EAAE,IADT;AAEZvG,gBAAAA,kBAAkB,EAAE;AAClBgG,kBAAAA,cADkB;AAElBD,kBAAAA,OAFkB;AAGlBY,kBAAAA,WAHkB;AAIlB1G,kBAAAA;AAJkB,iBAFR;AAQZwG,gBAAAA,iBAAiB,EAAEG;AARP,eAAd,CAJJ;AAAA,qCAgBE;AAAQ,gBAAA,SAAS,EAAC,eAAlB;AAAA,wCACE;AACE,kBAAA,GAAG,EACD3G,cAAc,CAAC,CAAD,CAAd,GACIA,cAAc,CAAC,CAAD,CADlB,GAEI3F,kBAJR;AAME,kBAAA,GAAG,EAAC;AANN;AAAA;AAAA;AAAA;AAAA,wBADF,eASE;AAAM,kBAAA,SAAS,EAAC,cAAhB;AAAA,yCACE;AAAG,oBAAA,SAAS,EAAC,QAAb;AAAsB,oBAAA,KAAK,EAAEyL,OAA7B;AAAA,8BACGA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBF,eAEOY,WAFP;AAAA;AAAA;AAAA;AAAA,oBADF;AAkCD,WAjDF,CADH,EAqDG,CAAAzI,eAAe,SAAf,IAAAA,eAAe,WAAf,sCAAAA,eAAe,CAAEoI,SAAjB,kFAA4B1J,MAA5B,IAAqC,CAArC,IACC,CAAAsB,eAAe,SAAf,IAAAA,eAAe,WAAf,sCAAAA,eAAe,CAAEoI,SAAjB,kFAA4B1J,MAA5B,IAAqC,CADtC,iBAEG;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAA,mCACE;AACE,cAAA,GAAG,EAAElC,WADP;AAEE,cAAA,GAAG,EAAC,KAFN;AAGE,cAAA,OAAO,EAAE,KAAKwM;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAvDN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9/BF,eAglCE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEX,mBAFR;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKtK,QAAL,CAAc;AAAEsK,UAAAA,mBAAmB,EAAE;AAAvB,SAAd,CAHjB;AAIE,2BAAgB,oBAJlB;AAKE,4BAAiB,0BALnB;AAAA,+BAOE;AACE,UAAA,SAAS,EAAC,6BADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,iCAME;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACE,QAAC,QAAD;AACE,gBAAA,UAAU,EAAEjN,cADd;AAEE,gBAAA,QAAQ,EAAE,IAFZ;AAGE,gBAAA,QAAQ,EAAE,IAHZ;AAIE,gBAAA,QAAQ,EAAE,IAJZ;AAKE,gBAAA,MAAM,EAAE,KALV;AAME,gBAAA,SAAS,EAAC,kBANZ;AAAA,0BAQG,CAAA0G,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,qCAAAA,kBAAkB,CAAEC,cAApB,gFAAoCrD,MAApC,IAA6C,CAA7C,GACCoD,kBADD,aACCA,kBADD,iDACCA,kBAAkB,CAAEC,cADrB,2DACC,uBAAoClC,GAApC,CAAyCiN,KAAD,IAAmB;AACzD,sCACE;AACE,oBAAA,SAAS,EAAC,OADZ;AAAA,2CAIE;AAAQ,sBAAA,SAAS,EAAC,eAAlB;AAAA,8CACE;AACE,wBAAA,GAAG,EAAEA,KAAK,GAAGA,KAAH,GAAW/Q,oBADvB;AAEE,wBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,8BADF,eAKE;AACE,wBAAA,SAAS,EAAC,eADZ;AAEE,wBAAA,KAAK,EAAC,MAFR;AAGE,wBAAA,OAAO,EAAE,MACP,KAAKgC,QAAL,CAAc;AAAEsK,0BAAAA,mBAAmB,EAAE;AAAvB,yBAAd;AAJJ;AAAA;AAAA;AAAA;AAAA,8BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF,qBAEOvG,kBAFP,aAEOA,kBAFP,uBAEOA,kBAAkB,CAAE2G,WAF3B;AAAA;AAAA;AAAA;AAAA,0BADF;AAoBD,iBArBD,CADD,gBAwBC;AAAK,kBAAA,GAAG,EAAC,EAAT;AAAY,kBAAA,GAAG,EAAE1M;AAAjB;AAAA;AAAA;AAAA;AAAA;AAhCJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAsCE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA,wCACE;AAAK,kBAAA,GAAG,EAAEC,OAAV;AAAmB,kBAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,wBADF,eAGE;AAAK,kBAAA,SAAS,EAAC,WAAf;AAAA,yCACE;AAAA,4CACE;AACE,sBAAA,SAAS,EAAC,WADZ;AAEE,sBAAA,OAAO,EAAE,MACP,KAAK+B,QAAL,CAAc;AACZuK,wBAAAA,uBAAuB,EAAE,IADb;AAEZD,wBAAAA,mBAAmB,EAAE,KAFT;AAGZG,wBAAAA,gBAAgB,EAAE;AAHN,uBAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAaE;AACE,sBAAA,SAAS,EAAC,aADZ;AAEE,sBAAA,OAAO,EAAE,MACP,KAAKzK,QAAL,CAAc;AACZ8K,wBAAAA,kBAAkB,EAAE,IADR;AAEZC,wBAAAA,wBAAwB,EAAE;AAFd,uBAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAgCE;AAAM,gBAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhCF,eAiCE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACE;AAAA,4BAAIhH,kBAAJ,aAAIA,kBAAJ,uBAAIA,kBAAkB,CAAEgG;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAhlCF,eA4qCE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAEgB,wBAFR;AAGE,QAAA,OAAO,EAAE,MACP,KAAK/K,QAAL,CAAc;AACZ+K,UAAAA,wBAAwB,EAAE,KADd;AAEZP,UAAAA,iBAAiB,EAAE;AAFP,SAAd,CAJJ;AASE,2BAAgB,oBATlB;AAUE,4BAAiB,0BAVnB;AAAA,+BAYE;AACE,UAAA,SAAS,EAAC,wBADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,kCAME;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAE,MACP,KAAKxK,QAAL,CAAc;AACZ+K,gBAAAA,wBAAwB,EAAE,KADd;AAEZP,gBAAAA,iBAAiB,EAAE;AAFP,eAAd,CAHJ;AAAA,qCASE;AAAK,gBAAA,GAAG,EAAElM,MAAV;AAAkB,gBAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAoBE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBApBF,eAuBE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,qBADZ;AAEE,cAAA,OAAO,EAAE,KAAKsL,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AACE,cAAA,SAAS,EAAC,0BADZ;AAEE,cAAA,OAAO,EAAE,MACP,KAAK5J,QAAL,CAAc;AACZ+K,gBAAAA,wBAAwB,EAAE,KADd;AAEZP,gBAAAA,iBAAiB,EAAE;AAFP,eAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,cA5qCF,eAquCE,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAED,uBAFR;AAGE,QAAA,OAAO,EAAE,KAAKS,2BAHhB;AAIE,2BAAgB,oBAJlB;AAKE,4BAAiB,0BALnB;AAAA,+BAOE;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,sBAAS,SAFX;AAGE,4BAAe,IAHjB;AAIE,+BAAkB,MAJpB;AAAA,kCAME;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,MADZ;AAEE,gBAAA,OAAO,EAAE,KAAKA;AAFhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAM,kBAAA,SAAS,EAAC,WAAhB;AAAA,4BACG5L,cAAc,CAAC+J,OAAf,CAAuB,UAAvB,MAAuC,CAAvC,GACG,+DADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE;AACE,cAAA,SAAS,EAAC,WADZ;AAEE,cAAA,OAAO,EAAE,KAAK6B,2BAFhB;AAAA,qCAIE;AAAK,gBAAA,GAAG,EAAE1M,MAAV;AAAkB,gBAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eA4BE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACE;AACE,oBAAA,IAAI,EAAC,MADP;AAEE,oBAAA,WAAW,EAAC,gBAFd;AAGE,oBAAA,KAAK,EAAEyF,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE+F,OAH7B;AAIE,oBAAA,SAAS,EAAE,GAJb;AAKE,oBAAA,QAAQ,EAAGxH,CAAD,IAA4C;AACpD,4BAAMwB,IAAI,GAAG,EAAE,GAAGC;AAAL,uBAAb;AACAD,sBAAAA,IAAI,CAACgG,OAAL,GAAexH,CAAC,CAACK,MAAF,CAASmF,KAAxB;AACA,2BAAK9H,QAAL,CAAc;AAAE+D,wBAAAA,kBAAkB,EAAED;AAAtB,uBAAd;AACD;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAiBE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAO,kBAAA,SAAS,EAAC,YAAjB;AAAA,4BAAgC,mBAC9B,KAAKhE,QAAL,KAAkB,CAAlB,GAAuB,YAAvB,GAAqC,EACtC;AAFD;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACE;AACE,oBAAA,WAAW,EAAC,uBADd;AAEE,oBAAA,KAAK,EAAEiE,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEgG,cAF7B;AAGE,oBAAA,SAAS,EAAE,GAHb;AAIE,oBAAA,QAAQ,EACNzH,CADQ,IAIL;AACH,4BAAMwB,IAAI,GAAG,EAAE,GAAGC;AAAL,uBAAb;AACAD,sBAAAA,IAAI,CAACiG,cAAL,GAAsBzH,CAAC,CAACK,MAAF,CAASmF,KAA/B;AACA,2BAAK9H,QAAL,CAAc;AAAE+D,wBAAAA,kBAAkB,EAAED;AAAtB,uBAAd;AACD;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAwCE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,yBACGC,kBADH,aACGA,kBADH,iDACGA,kBAAkB,CAAEC,cADvB,2DACG,uBAAoClC,GAApC,CACC,CAACiN,KAAD,EAAgBpE,KAAhB,KAAkC;AAChC,oCACE;AAAQ,kBAAA,SAAS,EAAC,WAAlB;AAAA,0CACE;AACE,oBAAA,GAAG,EAAEoE,KAAK,GAAGA,KAAH,GAAW7Q,KADvB;AAEE,iCAAW6Q,KAAK,GAAGA,KAAH,GAAW7Q,KAF7B;AAGE,oBAAA,QAAQ,EAAC,OAHX;AAIE,oBAAA,OAAO,EAAC,MAJV;AAKE,oBAAA,GAAG,EAAC;AALN;AAAA;AAAA;AAAA;AAAA,0BADF,eAQE;AACE,oBAAA,GAAG,EAAEK,MADP;AAEE,oBAAA,GAAG,EAAC,QAFN;AAGE,oBAAA,SAAS,EAAC,QAHZ;AAIE,oBAAA,OAAO,EAAE,MAAM;AAAA;;AACb,4BAAMuF,IAAS,GAAG,EAAE,GAAGC;AAAL,uBAAlB;AACAD,sBAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,qCAAAA,IAAI,CAAEE,cAAN,gFAAsBpC,MAAtB,CAA6B+I,KAA7B,EAAoC,CAApC;AACA,2BAAK3K,QAAL,CAAc;AAAE+D,wBAAAA,kBAAkB,EAAED;AAAtB,uBAAd;AACD;AARH;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA,mBAAmCiL,KAAnC;AAAA;AAAA;AAAA;AAAA,wBADF;AAqBD,eAvBF,CADH,EA2BG,CAAAhL,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,sCAAAA,kBAAkB,CAAEC,cAApB,kFAAoCrD,MAApC,IAA6C,CAA7C,IACCkJ,eADD,iBAEG;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,cADZ;AAEE,kBAAA,OAAO,EAAC,kBAFV;AAAA,yCAIE;AAAK,oBAAA,GAAG,EAAErL,QAAV;AAAoB,oBAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE;AACE,kBAAA,IAAI,EAAC,MADP;AAEE,kBAAA,MAAM,EAAC,gCAFT;AAGE,kBAAA,KAAK,EAAE;AAAEkP,oBAAAA,OAAO,EAAE;AAAX,mBAHT;AAIE,kBAAA,EAAE,EAAC,kBAJL;AAKE,kBAAA,QAAQ,EAAGpL,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,EAAqB,cAArB;AALnB;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA,8BA7BN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BF,eAoHE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAG,gCACV,CAAAyB,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,qCAAAA,kBAAkB,CAAE+F,OAApB,gFAA6B5E,IAA7B,QACC,KAAKpF,QAAL,KAAkB,CAAlB,GACG,IADH,GAEGiE,kBAFH,aAEGA,kBAFH,iDAEGA,kBAAkB,CAAEgG,cAFvB,2DAEG,uBAAoC7E,IAApC,EAHJ,MAIC,KAAKpF,QAAL,KAAkB,CAAlB,GACG,IADH,GAEGiE,kBAFH,aAEGA,kBAFH,iDAEGA,kBAAkB,CAAEC,cAFvB,2DAEG,uBAAoCrD,MANxC,IAOI,EAPJ,GAQI,aACL,EAXH;AAYE,cAAA,OAAO,EAAE,KAAKiJ,mBAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAiBE;AACE,cAAA,SAAS,EAAC,0BADZ;AAEE,cAAA,OAAO,EAAE,KAAKoB,2BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAruCF,eA23CE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAG,gCACV5I,wBAAwB,GAAG,EAAH,GAAQ,aACjC,EAHH;AAIE,UAAA,OAAO,EAAE,KAAKkJ,mBAJhB;AAAA,oBAMGiC,iBAAiB,gBAAG,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAkB;AANtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA33CF;AAAA,oBADF;AAw4CD;;AA1vE8D;AA6vEjE,eAAe5N,mBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Modal from \"@material-ui/core/Modal\";\nimport NumberFormat from \"react-number-format\";\nimport Constants from \"../../../../utils/constants\";\nimport regex from \"../../../../utils/regex\";\nimport { portfolioModal } from \"../../../builderInfo/builderInfo\";\nimport ChangeEmailModal from \"./changeEmailModal/changeEmailModal\";\nimport {\n  tradieUpdateProfileDetails,\n  tradieUpdateBasicDetails,\n  tradieUpdatePassword,\n  tradieAddPortfolioJob,\n  tradieUpdatePortfolioJob,\n  tradieDeletePortfolioJob,\n  tradieChangeEmail,\n} from \"../../../../redux/profile/actions\";\nimport { onFileUpload } from \"../../../../redux/auth/actions\";\nimport { setShowToast } from \"../../../../redux/common/actions\";\n\nimport portfolioPlaceholder from \"../../../../assets/images/portfolio-placeholder.jpg\";\nimport menu from \"../../../../assets/images/menu-line-blue.png\";\nimport dotMenu from \"../../../../assets/images/menu-dot.png\";\nimport dummy from \"../../../../assets/images/u_placeholder.jpg\";\nimport cameraBlack from \"../../../../assets/images/camera-black.png\";\nimport editIconBlue from \"../../../../assets/images/ic-edit-blue.png\";\nimport profilePlaceholder from \"../../../../assets/images/ic-placeholder-detail.png\";\nimport cancel from \"../../../../assets/images/ic-cancel.png\";\nimport remove from \"../../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../../assets/images/add-image.png\";\nimport addMediaLrg from \"../../../../assets/images/add-image-lg.png\";\nimport editIconWhite from \"../../../../assets/images/ic-edit-white.png\";\nimport spherePlaceholder from \"../../../../assets/images/ic_categories_placeholder.svg\";\nimport eyeIconClose from \"../../../../assets/images/icon-eye-closed.png\";\nimport eyeIconOpen from \"../../../../assets/images/icon-eye-open.png\";\nimport removeFile from \"../../../../assets/images/icon-close-1.png\";\nimport jpegFile from \"../../../../assets/images/jpeg.png\";\nimport jpgFile from \"../../../../assets/images/jpg.png\";\nimport pngFile from \"../../../../assets/images/png.png\";\nimport pdfFile from \"../../../../assets/images/pdf.png\";\nimport docFile from \"../../../../assets/images/doc.png\";\nimport viewProfile from \"../../../../assets/images/view.png\";\n\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport storageService from \"../../../../utils/storageService\";\nimport { validateABN } from \"../../../../utils/common\";\n//@ts-ignore\nimport Skeleton from \"react-loading-skeleton\";\nimport { updateChatUserDetails } from \"../../../../services/firebase\";\nimport { moengage, mixPanel } from \"../../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../../utils/constants\";\ninterface Props {\n  history: any;\n  tradieProfileData: any;\n  builderProfile: any;\n  tradieProfileViewData: any;\n  tradieBasicDetailsData: any;\n  tradeListData: any;\n  isLoading: boolean;\n  getTradieProfileView: () => void;\n  getTradieBasicDetails: () => void;\n  callTradeList: () => void;\n  callTradieProfileData: () => void;\n  getProfileBuilder: () => void;\n  cleanTradieBasicDetails: () => void;\n  cleanTradieProfileViewData: () => void;\n}\n\ninterface State {\n  errors: any;\n  isToggleSidebar: boolean;\n  profileModalClicked: boolean;\n  areasOfSpecsModalClicked: boolean;\n  aboutModalClicked: boolean;\n  isAddEditPortfolioModal: boolean;\n  portfolioJobClicked: boolean;\n  passwordModalClicked: boolean;\n  basicDetailsData: any;\n  trade: Array<any>;\n  specialization: Array<any>;\n  allSpecializationSelected: boolean;\n  about: string;\n  userImage: string;\n  password: string;\n  showPassword: boolean;\n  newPassword: string;\n  showNewPassword: boolean;\n  confirmNewPassword: string;\n  showConfirmNewPassword: boolean;\n  formData: any;\n  profileViewData: any;\n  localProfileView: any;\n  tradeData: Array<any>;\n  specializationData: Array<any>;\n  portfolioJobDetail: any;\n  addPortfolioJob: boolean;\n  editPortfolioJob: boolean;\n  deletePortfolioJob: boolean;\n  portfolioJobIndex: number | null;\n  confirmationModalClicked: boolean;\n  changeEmailModalClicked: boolean;\n  newEmail: string;\n  addQualificationClicked: boolean;\n  isProfileViewDataChanged: boolean;\n  isEditProfileModalChanged: boolean;\n  localQualificationDoc: any;\n  remainingQualificationDoc: any;\n}\n\nexport class PersonalInformation extends Component<Props, State> {\n  private userType: any;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      errors: {},\n      isToggleSidebar: false,\n      profileModalClicked: false,\n      areasOfSpecsModalClicked: false,\n      aboutModalClicked: false,\n      portfolioJobClicked: false,\n      isAddEditPortfolioModal: false,\n      passwordModalClicked: false,\n      trade: [],\n      tradeData: [],\n      specialization: [],\n      specializationData: [],\n      allSpecializationSelected: false,\n      about: \"\",\n      userImage: \"\",\n      password: \"\",\n      showPassword: false,\n      newPassword: \"\",\n      showNewPassword: false,\n      confirmNewPassword: \"\",\n      showConfirmNewPassword: false,\n      formData: null,\n      basicDetailsData: {},\n      profileViewData: {},\n      localProfileView: \"\",\n      portfolioJobDetail: \"\",\n      addPortfolioJob: false,\n      editPortfolioJob: false,\n      deletePortfolioJob: false,\n      portfolioJobIndex: null,\n      confirmationModalClicked: false,\n      changeEmailModalClicked: false,\n      isProfileViewDataChanged: false,\n      isEditProfileModalChanged: false,\n      newEmail: \"\",\n      addQualificationClicked: false,\n      localQualificationDoc: [],\n      remainingQualificationDoc: [],\n    };\n\n    this.userType = storageService.getItem(\"userType\");\n  }\n\n  componentDidMount() {\n    this.props.getTradieProfileView();\n    this.props.getTradieBasicDetails();\n    if (!this.props.tradeListData.length) {\n      this.props.callTradeList();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.cleanTradieProfileViewData();\n    this.props.cleanTradieBasicDetails();\n  }\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    console.log(\n      nextProps,\n      \"nextProps--------------\",\n      prevState,\n      \"prevState-------------\"\n    );\n    if (\n      nextProps.tradieProfileViewData &&\n      Object.keys(prevState.profileViewData).length === 0 &&\n      !_.isEqual(nextProps.tradieProfileViewData, prevState.profileViewData)\n    ) {\n      return {\n        profileViewData: nextProps.tradieProfileViewData,\n        userImage:\n          nextProps.tradieProfileViewData?.tradieImage ||\n          nextProps.tradieProfileViewData?.builderImage,\n      };\n    }\n    if (\n      nextProps.tradieBasicDetailsData &&\n      Object.keys(prevState.basicDetailsData).length === 0 &&\n      !_.isEqual(nextProps.tradieBasicDetailsData, prevState.basicDetailsData)\n    ) {\n      return {\n        basicDetailsData: nextProps.tradieBasicDetailsData,\n      };\n    }\n    if (\n      storageService.getItem(\"userType\") === 1 &&\n      nextProps.tradeListData &&\n      (!prevState.localQualificationDoc?.length ||\n        !prevState.remainingQualificationDoc?.length) &&\n      nextProps.tradieBasicDetailsData\n    ) {\n      const data = [...nextProps.tradeListData][0]?.qualifications?.map(\n        (item: any) => item.name?.length && { _id: item._id, name: item.name }\n      );\n      const alreadyFilledQualificationDoc: Array<any> =\n        nextProps.tradieBasicDetailsData?.qualificationDoc?.map(\n          ({ qualification_id }: { qualification_id: string }) =>\n            qualification_id?.length && qualification_id\n        );\n      const remainingQualificationDoc = data?.filter(\n        ({ _id }: { _id: string }) =>\n          !alreadyFilledQualificationDoc?.includes(_id)\n      );\n      console.log(\n        remainingQualificationDoc,\n        \"remainingQualificationDoc\",\n        alreadyFilledQualificationDoc,\n        \"alreadyFilledQualificationDoc\"\n      );\n      return {\n        localQualificationDoc: data ? data : [],\n        remainingQualificationDoc: remainingQualificationDoc\n          ? remainingQualificationDoc\n          : [],\n      };\n    }\n    return null;\n  }\n\n  toggleSidebar = () =>\n    this.setState({ isToggleSidebar: !this.state.isToggleSidebar });\n\n  tradeHandler = (item: any, name: string) => {\n    const id = item?._id;\n    console.log(item, \"item-------------------\");\n    if (name === \"trade\") {\n      if (this.state.trade.length && this.state.trade[0] == id) {\n        this.setState({\n          trade: [],\n          tradeData: [],\n          specialization: [],\n          allSpecializationSelected: false,\n        });\n      } else {\n        this.setState({\n          trade: [id],\n          tradeData: [\n            {\n              tradeId: id,\n              tradeName: item?.trade_name,\n              tradeSelectedUrl: item?.selected_url,\n            },\n          ],\n          specialization: [],\n          allSpecializationSelected: false,\n        });\n      }\n    } else if (name === \"specializationId\") {\n      this.setState((state: any) => {\n        var newData = [...state.specialization];\n        var newSpecsData = [...state.specializationData];\n        if (state.allSpecializationSelected) {\n          newData = [];\n          newSpecsData = [];\n        }\n        const itemIndex = newData.indexOf(id);\n        if (newData.indexOf(id) < 0) {\n          newData.push(id);\n          newSpecsData.push({\n            specializationId: id,\n            specializationName: item?.name,\n          });\n        } else {\n          newData.splice(itemIndex, 1);\n          newSpecsData.splice(itemIndex, 1);\n        }\n        return {\n          specialization: newData,\n          specializationData: newSpecsData,\n          allSpecializationSelected: false,\n        };\n      });\n    } else if (name === \"All Clicked\") {\n      if (this.state.allSpecializationSelected) {\n        this.setState({\n          allSpecializationSelected: false,\n          specialization: [],\n          specializationData: [],\n        });\n      } else {\n        const newSpecialization = item.map(({ _id }: { _id: string }) => _id);\n        const newSpecializationData = item.map(\n          ({ _id, name }: { _id: string; name: string }) => {\n            return {\n              specializationId: _id,\n              specializationName: name,\n            };\n          }\n        );\n        this.setState({\n          allSpecializationSelected: true,\n          specialization: newSpecialization,\n          specializationData: newSpecializationData,\n        });\n      }\n    } else if (name === \"Clear All\") {\n      this.setState({\n        allSpecializationSelected: false,\n        trade: [],\n        tradeData: [],\n        specialization: [],\n        specializationData: [],\n      });\n    }\n  };\n\n  submitAreasOfTrade = () => {\n    const newData = { ...this.state.profileViewData };\n    newData.areasOfSpecialization.tradeData = this.state.tradeData;\n    newData.areasOfSpecialization.specializationData =\n      this.state.specializationData;\n    console.log(newData, \"newdata-----------\");\n    this.setState({\n      profileViewData: newData,\n      areasOfSpecsModalClicked: false,\n      isProfileViewDataChanged: true,\n    });\n  };\n\n  onFileChange = async (e: any, type?: string, id?: string) => {\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var uploadFileName = newFile?.name?.split(\".\");\n    uploadFileName?.pop();\n    uploadFileName = uploadFileName?.join(\".\");\n    var fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n    const docTypes: Array<any> = [\n      \"jpeg\",\n      \"jpg\",\n      \"png\",\n      \"pdf\",\n      \"msword\",\n      \"doc\",\n      \"docx\",\n      \"vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    ];\n    const docTypes2: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\n    var selectedFileSize = newFile?.size / 1024 / 1024;\n    if (type === \"profileImage\" || type === \"addJobPhotos\") {\n      if (docTypes2.indexOf(fileType) < 0 || selectedFileSize > 10) {\n        alert(\"The file must be in proper format or size\");\n        return;\n      }\n    } else if (docTypes.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      alert(\"The file must be in proper format or size\");\n      return;\n    }\n    formData.append(\"file\", newFile);\n    if (type === \"profileImage\") {\n      this.setState({\n        userImage: URL.createObjectURL(newFile),\n        formData: formData,\n        isProfileViewDataChanged: true,\n      });\n    }\n    if (type === \"addJobPhotos\") {\n      const res = await onFileUpload(formData);\n      if (res.success) {\n        const data: any = { ...this.state.portfolioJobDetail };\n        data?.portfolioImage?.push(res.imgUrl);\n        this.setState({ portfolioJobDetail: data });\n      }\n    }\n    if (type === \"filledQualification\") {\n      const res = await onFileUpload(formData);\n      if (res.success) {\n        const newBasicData: any = { ...this.state.basicDetailsData };\n        const newqualificationDoc: Array<any> = newBasicData?.qualificationDoc;\n        const item = newqualificationDoc?.find(\n          (i) => i.qualification_id === id\n        );\n        item.url = res.imgUrl;\n        item.fileName = uploadFileName;\n        this.setState({\n          basicDetailsData: newBasicData,\n          isEditProfileModalChanged: true,\n        });\n      }\n    }\n    if (type === \"remainingQualification\") {\n      const res = await onFileUpload(formData);\n      if (res.success) {\n        const data: Array<any> = [...this.state.remainingQualificationDoc];\n        const item = data?.find((i) => i._id === id);\n        item.url = res.imgUrl;\n        item.fileName = uploadFileName;\n        this.setState({\n          remainingQualificationDoc: data,\n          isEditProfileModalChanged: true,\n        });\n      }\n    }\n  };\n\n  validateBasicDetailsForm = () => {\n    const newErrors: any = {};\n    if (!this.state.basicDetailsData?.fullName) {\n      newErrors.fullName = Constants.errorStrings.fullNameEmpty;\n    } else if (this.state.basicDetailsData?.fullName.trim()?.length > 50) {\n      newErrors.fullName = \"Maximum 50 characters are allowed.\";\n    } else {\n      const nameRegex = new RegExp(regex.fullname);\n      if (!nameRegex.test(this.state.basicDetailsData?.fullName.trim())) {\n        newErrors.fullName = Constants.errorStrings.fullNameErr;\n      }\n    }\n\n    if (!this.state.basicDetailsData?.mobileNumber) {\n      newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n    } else {\n      const phoneRegex = new RegExp(regex.mobile);\n      if (!phoneRegex.test(this.state.basicDetailsData?.mobileNumber)) {\n        newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr;\n      }\n    }\n\n    if (!this.state.basicDetailsData?.abn) {\n      newErrors.abn = Constants.errorStrings.abnEmpty;\n    } else {\n      const abnRegex = new RegExp(regex.abn);\n      if (!abnRegex.test(this.state.basicDetailsData.abn.replaceAll(\" \", \"\"))) {\n        newErrors.abn = Constants.errorStrings.abnErr;\n      }\n      if (!validateABN(this.state.basicDetailsData.abn.replaceAll(\" \", \"\"))) {\n        newErrors.abn = Constants.errorStrings.abnErr;\n      }\n    }\n\n    if (this.userType === 1) {\n      const newQualificationDoc =\n        this.state.basicDetailsData?.qualificationDoc?.find(\n          ({ url, isSelected }: { url: string; isSelected: string }) =>\n            !url?.length && !isSelected?.length\n        );\n      console.log(newQualificationDoc, \"newQualificationDoc validation\");\n      if (\n        !!newQualificationDoc &&\n        Object.keys(newQualificationDoc)?.length > 0\n      ) {\n        setShowToast(true, \"Please upload all selected documents\");\n        return;\n      }\n\n      const newRemainingDoc = this.state.remainingQualificationDoc?.find(\n        ({ url, isSelected }: { url: string; isSelected: string }) =>\n          !url?.length && isSelected?.length\n      );\n      console.log(newRemainingDoc, \"newRemainingDoc validation\");\n      if (!!newRemainingDoc && Object.keys(newRemainingDoc)?.length > 0) {\n        setShowToast(true, \"Please upload all selected documents\");\n        return;\n      }\n    } else {\n      if (!this.state.basicDetailsData?.companyName) {\n        newErrors.companyName = Constants.errorStrings.companyNameEmpty;\n      } else if (this.state.basicDetailsData?.companyName.trim()?.length > 50) {\n        newErrors.companyName = \"Maximum 50 characters are allowed.\";\n      } else {\n        const nameRegex = new RegExp(regex.fullname);\n        if (!nameRegex.test(this.state.basicDetailsData.companyName.trim())) {\n          newErrors.companyName = Constants.errorStrings.companyNameErr;\n        }\n      }\n      if (!this.state.basicDetailsData?.position) {\n        newErrors.position = Constants.errorStrings.positionNameEmpty;\n      } else if (this.state.basicDetailsData?.position.trim()?.length > 50) {\n        newErrors.position = \"Maximum 50 Characters Are Allowed.\";\n      } else {\n        const positionRegex = new RegExp(regex.fullname);\n        if (!positionRegex.test(this.state.basicDetailsData.position.trim())) {\n          newErrors.position = Constants.errorStrings.positionNameErr;\n        }\n      }\n    }\n\n    this.setState({ errors: newErrors });\n    return !Object.keys(newErrors).length;\n  };\n\n  validatePasswordForm = () => {\n    const newErrors: any = {};\n    if (!this.state.password) {\n      newErrors.password = Constants.errorStrings.oldPassword;\n    }\n    if (!this.state.newPassword) {\n      newErrors.newPassword = \"New Password is required\";\n    } else {\n      const passwordRegex = new RegExp(regex.password);\n      if (!passwordRegex.test(this.state.newPassword.trim())) {\n        newErrors.newPassword = Constants.errorStrings.passwordError;\n      }\n    }\n    if (\n      this.state.newPassword.trim() !== this.state.confirmNewPassword.trim()\n    ) {\n      newErrors.confirmNewPassword = Constants.errorStrings.confirmNewPassword;\n    }\n    this.setState({ errors: newErrors });\n    return !Object.keys(newErrors).length;\n  };\n\n  validateChangeEmailForm = () => {\n    const newErrors: any = {};\n    if (!this.state.newEmail) {\n      newErrors.newEmail = \"New Email Address is required\";\n    } else {\n      const emailRegex = new RegExp(regex.email);\n      if (!emailRegex.test(this.state.basicDetailsData?.email)) {\n        newErrors.newEmail = Constants.errorStrings.emailErr;\n      }\n    }\n\n    if (!this.state.password) {\n      newErrors.currentPassword = \"Current Password is required\";\n    } else {\n      const passwordRegex = new RegExp(regex.password);\n      if (!passwordRegex.test(this.state.password.trim())) {\n        newErrors.currentPassword = Constants.errorStrings.passwordError;\n      }\n    }\n\n    this.setState({ errors: newErrors });\n    return !Object.keys(newErrors).length;\n  };\n\n  changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newBasicDetails = { ...this.state.basicDetailsData };\n    newBasicDetails[`${e.target.name}`] = e.target.value;\n    this.setState({\n      basicDetailsData: newBasicDetails,\n      isEditProfileModalChanged: true,\n    });\n  };\n\n  submitBasicProfileDetails = async () => {\n    if (this.validateBasicDetailsForm()) {\n      const basicDetails = { ...this.state.basicDetailsData };\n      const filledQualification =\n        this.userType === 1\n          ? [...this.state.basicDetailsData?.qualificationDoc]?.map(\n              ({\n                url,\n                qualification_id,\n              }: {\n                url: string;\n                qualification_id: string;\n              }) =>\n                url?.length && { qualification_id: qualification_id, url: url }\n            )\n          : [];\n      const newFilledQualification = filledQualification?.filter(\n        (i: any) => i && Object.keys(i)?.length > 0\n      );\n      const remainingQualification = this.state.remainingQualificationDoc?.map(\n        ({ _id, url }: { _id: string; url: string }) =>\n          url?.length && { qualification_id: _id, url: url }\n      );\n      const newRemainingQualification = remainingQualification?.filter(\n        (i: any) => i && Object.keys(i)?.length > 0\n      );\n\n      const builderData = {\n        companyName: basicDetails?.companyName,\n        position: basicDetails?.position,\n      };\n\n      const data = {\n        fullName: basicDetails?.fullName,\n        mobileNumber: basicDetails?.mobileNumber,\n        email: basicDetails?.email,\n        abn: basicDetails?.abn,\n        qualificationDoc:\n          this.userType === 1\n            ? [...newFilledQualification, ...newRemainingQualification]\n            : undefined,\n        ...(this.userType === 1 ? {} : builderData),\n        ...(this.userType === 1 && {\n          businessName: basicDetails?.businessName,\n        }),\n      };\n      const res = await tradieUpdateBasicDetails(data);\n      if (res?.success) {\n        this.props.cleanTradieBasicDetails();\n        updateChatUserDetails(\"userName\", data.fullName);\n        basicDetails.qualificationDoc =\n          this.userType === 1 ? data.qualificationDoc : [];\n        this.setState((prevState: any) => ({\n          profileModalClicked: false,\n          addQualificationClicked: false,\n          remainingQualificationDoc: [],\n          basicDetailsData: basicDetails,\n          isEditProfileModalChanged: false,\n        }));\n        this.props.getTradieBasicDetails();\n        this.userType === 1\n          ? this.props.callTradieProfileData()\n          : this.props.getProfileBuilder();\n      }\n    }\n  };\n\n  passwordHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((prevState: any) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  updatePasswordHandler = async () => {\n    if (this.validatePasswordForm()) {\n      const data = {\n        user_type: storageService.getItem(\"userType\"),\n        oldPassword: this.state.password,\n        newPassword: this.state.newPassword,\n      };\n      const res = await tradieUpdatePassword(data);\n      if (res.success) {\n        this.props.history.push(\"/change-password-success\");\n        // this.passwordModalCloseHandler();\n      }\n    }\n  };\n\n  passwordModalCloseHandler = () => {\n    this.setState({\n      profileModalClicked: true,\n      passwordModalClicked: false,\n      password: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n      showPassword: false,\n      showNewPassword: false,\n      showConfirmNewPassword: false,\n      errors: {},\n    });\n  };\n\n  changeEmailModalCloseHandler = () => {\n    this.setState({\n      profileModalClicked: true,\n      changeEmailModalClicked: false,\n      password: \"\",\n      newEmail: \"\",\n      showPassword: false,\n      errors: {},\n    });\n  };\n\n  submitPortfolioJobs = async () => {\n    if (this.state.addPortfolioJob) {\n      const portfolioJobDetail = this.state.portfolioJobDetail;\n      const data = {\n        jobName: portfolioJobDetail?.jobName,\n        jobDescription: portfolioJobDetail?.jobDescription,\n        url: portfolioJobDetail?.portfolioImage,\n      };\n      const res = await tradieAddPortfolioJob(data);\n      if (res?.success) {\n        moengage.moE_SendEvent(MoEConstants.ADDED_PORTFOLIO, {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        });\n        mixPanel.mixP_SendEvent(MoEConstants.ADDED_PORTFOLIO, {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        });\n        const data = { ...this.state.profileViewData };\n        data.portfolio.push(res?.data);\n        this.setState({\n          portfolioJobDetail: \"\",\n          profileViewData: data,\n          portfolioJobClicked: false,\n          isAddEditPortfolioModal: false,\n          addPortfolioJob: false,\n          portfolioJobIndex: null,\n        });\n      }\n    }\n    if (this.state.editPortfolioJob) {\n      const portfolioJobDetail = this.state.portfolioJobDetail;\n      const data = {\n        portfolioId: portfolioJobDetail?.portfolioId,\n        jobName: portfolioJobDetail?.jobName,\n        jobDescription: portfolioJobDetail?.jobDescription,\n        url: portfolioJobDetail?.portfolioImage,\n      };\n      const res = await tradieUpdatePortfolioJob(data);\n      if (res?.success) {\n        const index = this.state.portfolioJobIndex;\n        const newProfileData = { ...this.state.profileViewData };\n        const newPortfolio = newProfileData?.portfolio;\n        newPortfolio.splice(index, 1, portfolioJobDetail);\n        this.setState({\n          // portfolioJobDetail: '',\n          profileViewData: newProfileData,\n          portfolioJobClicked: true,\n          isAddEditPortfolioModal: false,\n          editPortfolioJob: false,\n          portfolioJobIndex: null,\n        });\n        return;\n      }\n    }\n    if (this.state.deletePortfolioJob) {\n      const portfolioJobDetail = this.state.portfolioJobDetail;\n      const index = this.state.portfolioJobIndex;\n      const newProfileData = { ...this.state.profileViewData };\n      const newPortfolio = newProfileData?.portfolio;\n      newPortfolio.splice(index, 1);\n      const res = await tradieDeletePortfolioJob(\n        portfolioJobDetail?.portfolioId\n      );\n      if (res?.success) {\n        this.setState({\n          portfolioJobDetail: \"\",\n          profileViewData: newProfileData,\n          portfolioJobClicked: false,\n          isAddEditPortfolioModal: false,\n          deletePortfolioJob: false,\n          confirmationModalClicked: false,\n          portfolioJobIndex: null,\n        });\n        return;\n      }\n    }\n  };\n\n  closeAddEditPortofolioModal = () => {\n    this.setState((prevState: any) => ({\n      isAddEditPortfolioModal: false,\n      portfolioJobClicked: prevState.addPortfolioJob ? false : true,\n      addPortfolioJob: false,\n    }));\n  };\n\n  addNewPortfolioJob = () => {\n    this.setState({\n      addPortfolioJob: true,\n      isAddEditPortfolioModal: true,\n      portfolioJobDetail: {\n        jobName: \"\",\n        jobDescription: \"\",\n        portfolioImage: [],\n      },\n    });\n  };\n\n  addInfoAboutYou = () => {\n    this.setState((prevState: any) => ({\n      aboutModalClicked: true,\n      about:\n        prevState?.profileViewData?.about ||\n        prevState?.profileViewData?.aboutCompany ||\n        \"\",\n    }));\n  };\n\n  submitUpdateProfile = async () => {\n    const newSpecialization: Array<any> = [\n      ...this.state.profileViewData?.areasOfSpecialization?.specializationData,\n    ];\n    var newSpecializationData: Array<any> = newSpecialization?.map(\n      ({ specializationId }: { specializationId: string }) =>\n        specializationId?.length > 0 && specializationId\n    );\n    const data = {\n      fullName: this.state.basicDetailsData?.fullName,\n      userImage:\n        this.state.profileViewData?.tradieImage ||\n        this.state.profileViewData?.builderImage,\n      trade: [\n        this.state.profileViewData?.areasOfSpecialization?.tradeData[0]\n          ?.tradeId,\n      ],\n      specialization: newSpecializationData,\n      about:\n        this.userType === 1\n          ? this.state.profileViewData?.about || \"\"\n          : undefined,\n      position:\n        this.userType === 1 ? undefined : this.state.profileViewData?.position,\n      companyName:\n        this.userType === 1\n          ? undefined\n          : this.state.profileViewData?.companyName,\n      aboutCompany:\n        this.userType === 1\n          ? undefined\n          : this.state.profileViewData?.about ||\n            this.state.profileViewData?.aboutCompany,\n    };\n    if (this.state.formData) {\n      const res1 = await onFileUpload(this.state.formData);\n      if (res1?.success) {\n        data.userImage = res1?.imgUrl;\n      }\n    }\n    const res2 = await tradieUpdateProfileDetails(data);\n    if (res2?.success) {\n      if (this.state.formData) {\n        updateChatUserDetails(\"userImage\", data.userImage);\n      }\n      this.setState({\n        formData: null,\n        isProfileViewDataChanged: false,\n      });\n      this.userType === 1\n        ? this.props.callTradieProfileData()\n        : this.props.getProfileBuilder();\n      if (\n        this.userType === 2 &&\n        this.state.about &&\n        this.state.profileViewData?.companyName !== this.state.about\n      ) {\n        moengage.moE_SendEvent(MoEConstants.ADDED_INFO_ABOUT_COMPANY, {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        });\n        mixPanel.mixP_SendEvent(MoEConstants.ADDED_INFO_ABOUT_COMPANY, {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        });\n      }\n    }\n  };\n\n  changeEmailHandler = async () => {\n    if (this.validateChangeEmailForm()) {\n      const data = {\n        currentEmail: this.state.basicDetailsData?.email,\n        newEmail: this.state.newEmail,\n        password: this.state.password,\n        user_type: storageService.getItem(\"userType\"),\n      };\n      const res = await tradieChangeEmail(data);\n      if (res?.success) {\n      }\n    }\n  };\n\n  removeQualificationFileHandler = (e: any, id: string, type: string) => {\n    e.stopPropagation();\n    if (type === \"filledQualification\") {\n      const newBasicData: any = { ...this.state.basicDetailsData };\n      const newqualificationDoc: Array<any> = newBasicData?.qualificationDoc;\n      const item = newqualificationDoc?.find((i) => i.qualification_id === id);\n      item.url = \"\";\n      item.fileName = \"\";\n      newBasicData.qualificationDoc = newqualificationDoc;\n      this.setState({ basicDetailsData: newBasicData });\n    }\n    if (type === \"remainingQualification\") {\n      const data: Array<any> = [...this.state.remainingQualificationDoc];\n      const item = data?.find((i) => i._id === id);\n      item.url = \"\";\n      item.fileName = \"\";\n      this.setState({ remainingQualificationDoc: data });\n    }\n  };\n\n  changeQualificationHandler = (id: string, type: string) => {\n    if (type === \"filledQualification\") {\n      const newBasicData: any = { ...this.state.basicDetailsData };\n      const newqualificationDoc: Array<any> = newBasicData?.qualificationDoc;\n      const item = newqualificationDoc?.find((i) => i.qualification_id === id);\n      const itemIndex = newqualificationDoc?.indexOf(item);\n      if (item.isSelected) {\n        newqualificationDoc.splice(itemIndex, 1, {\n          qualification_id: id,\n          url: \"\",\n        });\n      } else {\n        newqualificationDoc.splice(itemIndex, 1, {\n          qualification_id: id,\n          url: \"\",\n          isSelected: \"isSelected\",\n        });\n      }\n      newBasicData.qualificationDoc = newqualificationDoc;\n      this.setState({ basicDetailsData: newBasicData });\n    }\n\n    if (type === \"remainingQualification\") {\n      const newqualificationDoc: Array<any> = [\n        ...this.state.remainingQualificationDoc,\n      ];\n      const item = newqualificationDoc?.find((i) => i._id === id);\n      const itemIndex = newqualificationDoc?.indexOf(item);\n      if (item.isSelected) {\n        newqualificationDoc.splice(itemIndex, 1, {\n          _id: id,\n          url: \"\",\n          name: item.name,\n        });\n      } else {\n        newqualificationDoc.splice(itemIndex, 1, {\n          _id: id,\n          url: \"\",\n          name: item.name,\n          isSelected: \"isSelected\",\n        });\n      }\n      this.setState({ remainingQualificationDoc: newqualificationDoc });\n    }\n  };\n\n  qualificationFileDetails = (url: any) => {\n    var fileArray = url.replace(/^.*[\\\\\\/]/, \"\").split(\".\");\n    const type = fileArray[1].toLowerCase();\n    switch (type) {\n      case \"jpeg\":\n        return { fileName: fileArray[0], fileType: jpegFile };\n      case \"jpg\":\n        return { fileName: fileArray[0], fileType: jpgFile };\n      case \"png\":\n        return { fileName: fileArray[0], fileType: pngFile };\n      case \"pdf\":\n        return { fileName: fileArray[0], fileType: pdfFile };\n      case \"doc\":\n        return { fileName: fileArray[0], fileType: docFile };\n      case \"docx\":\n        return { fileName: fileArray[0], fileType: docFile };\n      default:\n        return null;\n    }\n  };\n\n  editProfileCloseHandler = () => {\n    this.setState((prevState: any) => ({\n      profileModalClicked: false,\n      basicDetailsData: this.props.tradieBasicDetailsData\n        ? this.props.tradieBasicDetailsData\n        : {},\n      addQualificationClicked: false,\n      remainingQualificationDoc: [],\n      errors: {},\n    }));\n  };\n\n  render() {\n    let props: any = this.props;\n    console.log(this.state, \"state--------------\", props, \"props------------\");\n    let {\n      errors,\n      profileModalClicked,\n      areasOfSpecsModalClicked,\n      aboutModalClicked,\n      isAddEditPortfolioModal,\n      portfolioJobClicked,\n      passwordModalClicked,\n      basicDetailsData,\n      trade,\n      specialization,\n      allSpecializationSelected,\n      about,\n      userImage,\n      profileViewData,\n      password,\n      showPassword,\n      newPassword,\n      showNewPassword,\n      confirmNewPassword,\n      showConfirmNewPassword,\n      portfolioJobDetail,\n      addPortfolioJob,\n      confirmationModalClicked,\n      changeEmailModalClicked,\n      isProfileViewDataChanged,\n      isEditProfileModalChanged,\n      addQualificationClicked,\n      localQualificationDoc,\n      remainingQualificationDoc,\n    } = this.state;\n\n    const tradeList: any = props.tradeListData;\n    const isSkeletonLoading: any = props.isSkeletonLoading;\n    const specializationList = props.tradeListData.find(\n      ({ _id }: { _id: string }) => _id === trade[0]\n    )?.specialisations;\n\n    return (\n      <>\n        <div className=\"flex_row f_col\">\n          <div className=\"flex_col_sm_4\">\n            <div className=\"upload_profile_pic\">\n              {isSkeletonLoading ? (\n                <Skeleton height={240} />\n              ) : (\n                <figure className=\"user_img\">\n                  <img src={userImage ? userImage : dummy} alt=\"Profile-pic\" />\n                  <label className=\"camera\" htmlFor=\"upload_profile_pic\">\n                    <img src={cameraBlack} alt=\"camera\" />\n                  </label>\n                  <input\n                    type=\"file\"\n                    // accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                    accept=\"image/png,image/jpg,image/jpeg\"\n                    style={{ display: \"none\" }}\n                    id=\"upload_profile_pic\"\n                    onChange={(e) => this.onFileChange(e, \"profileImage\")}\n                  />\n                </figure>\n              )}\n            </div>\n          </div>\n          <div className=\"flex_col_sm_8\">\n            <div className=\"title_view_wrap\">\n              {isSkeletonLoading ? (\n                <Skeleton />\n              ) : (\n                <span\n                  className=\"title line-2\"\n                  title={basicDetailsData?.fullName}\n                >\n                  {basicDetailsData?.fullName}\n                  <span\n                    className=\"edit_icon\"\n                    title=\"Edit\"\n                    onClick={() => this.setState({ profileModalClicked: true })}\n                  >\n                    <img src={editIconBlue} alt=\"edit\" />\n                  </span>\n                </span>\n              )}\n              {isSkeletonLoading ? (\n                <Skeleton />\n              ) : (\n                <a\n                  href=\"javascript:void(0)\"\n                  className=\"view_profile\"\n                  onClick={() => {\n                    props.cleanTradieProfileViewData();\n                    props.history.push(\n                      `/${this.userType === 1 ? \"tradie\" : \"builder\"}-info?${\n                        this.userType === 1 ? \"trade\" : \"builder\"\n                      }Id=${basicDetailsData?.userId}`\n                    );\n                  }}\n                >\n                  <img src={viewProfile} alt=\"view-profile\" />\n                  View public profile\n                </a>\n              )}\n            </div>\n\n            <span className=\"tagg\">\n              {isSkeletonLoading ? <Skeleton /> : basicDetailsData?.position}\n            </span>\n\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_4 w85per\">\n                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                  {isSkeletonLoading ? (\n                    <Skeleton count={2} />\n                  ) : (\n                    <div className=\"progress_wrapper\">\n                      <span className=\"show_label\">Complete your profile</span>\n                      <span className=\"approval_info\">\n                        {this.userType === 1\n                          ? this.props.tradieProfileData?.profileCompleted\n                          : this.props.builderProfile?.profileCompleted}\n                      </span>\n                      <span className=\"progress_bar\">\n                        <input\n                          className=\"done_progress\"\n                          id=\"progress-bar\"\n                          type=\"range\"\n                          min=\"0\"\n                          value={parseInt(\n                            this.userType === 1\n                              ? this.props.tradieProfileData?.profileCompleted\n                              : this.props.builderProfile?.profileCompleted\n                          )}\n                        />\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <ul className=\"review_job\">\n              {isSkeletonLoading ? (\n                <Skeleton />\n              ) : (\n                <li>\n                  <span className=\"icon reviews\">\n                    {profileViewData?.ratings || \"0\"}\n                  </span>\n                  <span className=\"review_count\">{`${\n                    profileViewData?.reviewsCount || \"0\"\n                  } reviews`}</span>\n                </li>\n              )}\n              {isSkeletonLoading ? (\n                <Skeleton />\n              ) : (\n                <li>\n                  <span className=\"icon job\">\n                    {profileViewData?.jobCompletedCount}\n                  </span>\n                  <span className=\"review_count\"> jobs completed</span>\n                </li>\n              )}\n            </ul>\n          </div>\n        </div>\n\n        <Modal\n          className=\"custom_modal\"\n          open={profileModalClicked}\n          onClose={this.editProfileCloseHandler}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh profile_modal\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading\">\n              <span className=\"sub_title\">Edit Profile</span>\n              <button\n                className=\"close_btn\"\n                onClick={this.editProfileCloseHandler}\n              >\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n            <div className=\"inner_wrap\">\n              <div className=\"inner_wrappr\">\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Full Name</label>\n                  <div className=\"text_field\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter Full Name\"\n                      name=\"fullName\"\n                      value={basicDetailsData?.fullName}\n                      onChange={this.changeHandler}\n                    />\n                  </div>\n                  {!!errors?.fullName && (\n                    <span className=\"error_msg\">{errors?.fullName}</span>\n                  )}\n                </div>\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Mobile Number</label>\n                  <div className=\"text_field f_spacebw\">\n                    <span className=\"show_label\">{`+61 ${basicDetailsData?.mobileNumber}`}</span>\n                    {/* <NumberFormat\n                                            value={basicDetailsData?.mobileNumber}\n                                            className=\"foo\"\n                                            displayType={'text'}\n                                            prefix={'+61 '}\n                                            format=\"+61 ### ### ###\"\n                                        /> */}\n                  </div>\n                  {!!errors?.mobileNumber && (\n                    <span className=\"error_msg\">{errors?.mobileNumber}</span>\n                  )}\n                </div>\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Email</label>\n                  <div className=\"text_field f_spacebw\">\n                    {/* <input type=\"text\" placeholder=\"Enter Email\" value={basicDetailsData?.email} name='email' onChange={this.changeHandler} /> */}\n                    <span className=\"show_label\">\n                      {basicDetailsData?.email}\n                    </span>\n                  </div>\n                  {!!errors?.email && (\n                    <span className=\"error_msg\">{errors?.email}</span>\n                  )}\n                </div>\n                {storageService.getItem(\"userInfo\")?.accountType ===\n                  \"normal\" && (\n                  <div className=\"form_field f_spacebw\">\n                    <a\n                      className=\"link\"\n                      onClick={() =>\n                        this.setState({\n                          changeEmailModalClicked: true,\n                          profileModalClicked: false,\n                        })\n                      }\n                    >\n                      {\" \"}\n                      Change Email\n                    </a>\n                    <a\n                      className=\"link\"\n                      onClick={() =>\n                        this.setState({\n                          passwordModalClicked: true,\n                          profileModalClicked: false,\n                        })\n                      }\n                    >\n                      Change Password\n                    </a>\n                  </div>\n                )}\n\n                {this.userType === 1 && (\n                  <div className=\"form_field\">\n                    <label className=\"form_label\">Business Name</label>\n                    <div className=\"text_field\">\n                      <input\n                        type=\"text\"\n                        placeholder=\"Enter Business Name\"\n                        name=\"businessName\"\n                        value={basicDetailsData?.businessName}\n                        onChange={this.changeHandler}\n                      />\n                    </div>\n                    {!!errors?.businessName && (\n                      <span className=\"error_msg\">{errors?.businessName}</span>\n                    )}\n                  </div>\n                )}\n                {this.userType === 1 && (\n                  <div className=\"form_field\">\n                    <label className=\"form_label\">\n                      Australian Business Number\n                    </label>\n                    <div className=\"text_field\">\n                      <NumberFormat\n                        value={basicDetailsData?.abn}\n                        displayType={\"input\"}\n                        type={\"tel\"}\n                        placeholder=\"51 824 753 556\"\n                        format=\"## ### ### ###\"\n                        isNumericString={true}\n                        onValueChange={(values) => {\n                          const { formattedValue, value } = values;\n                          const newBasicDetails = {\n                            ...this.state.basicDetailsData,\n                          };\n                          newBasicDetails.abn = value;\n                          this.setState({\n                            basicDetailsData: newBasicDetails,\n                            isEditProfileModalChanged: true,\n                          });\n                        }}\n                      />\n                    </div>\n                    {!!errors?.abn && (\n                      <span className=\"error_msg\">{errors?.abn}</span>\n                    )}\n                  </div>\n                )}\n\n                {this.userType === 1 && (\n                  <div className=\"form_field\">\n                    <label className=\"form_label\">\n                      Qualification documents{\" \"}\n                    </label>\n\n                    {basicDetailsData?.qualificationDoc?.length > 0 &&\n                      localQualificationDoc.length > 0 && (\n                        <>\n                          {basicDetailsData?.qualificationDoc?.map(\n                            ({\n                              qualification_id,\n                              url,\n                              isSelected,\n                              fileName,\n                            }: {\n                              qualification_id: string;\n                              url: string;\n                              isSelected: string;\n                              fileName: string;\n                            }) => {\n                              const qualificationName: string =\n                                localQualificationDoc.find(\n                                  ({ _id }: { _id: string }) =>\n                                    _id === qualification_id\n                                )?.name;\n                              const docDetails: any =\n                                url && this.qualificationFileDetails(url);\n                              return (\n                                <>\n                                  <div\n                                    className=\"f_spacebw mt-15\"\n                                    key={qualification_id}\n                                  >\n                                    <div className=\"checkbox_wrap agree_check\">\n                                      <input\n                                        className=\"filter-type filled-in\"\n                                        type=\"checkbox\"\n                                        checked={!!isSelected ? false : true}\n                                        name={qualificationName}\n                                        id={qualificationName}\n                                        onChange={() =>\n                                          this.changeQualificationHandler(\n                                            qualification_id,\n                                            \"filledQualification\"\n                                          )\n                                        }\n                                      />\n                                      <label htmlFor={qualificationName}>\n                                        {qualificationName}\n                                      </label>\n                                    </div>\n                                    {url ? (\n                                      <div\n                                        className=\"file_upload_box\"\n                                        onClick={() =>\n                                          window.open(\n                                            `${window.location.origin}/doc-view?url=${url}&header=true`,\n                                            \"_blank\"\n                                          )\n                                        }\n                                      >\n                                        <span\n                                          className=\"close\"\n                                          onClick={(e) =>\n                                            this.removeQualificationFileHandler(\n                                              e,\n                                              qualification_id,\n                                              \"filledQualification\"\n                                            )\n                                          }\n                                        >\n                                          <img src={removeFile} />\n                                        </span>\n                                        <span className=\"file_icon\">\n                                          <img src={docDetails?.fileType} />\n                                        </span>\n                                        <div className=\"file_details\">\n                                          <span className=\"name\">\n                                            {fileName\n                                              ? fileName\n                                              : docDetails?.fileName}\n                                          </span>\n                                        </div>\n                                      </div>\n                                    ) : (\n                                      <div className=\"upload_doc\">\n                                        <label\n                                          className={`upload_btn ${\n                                            isSelected ? \"disable\" : \"\"\n                                          }`}\n                                          htmlFor={qualificationName + \"upload\"}\n                                        >\n                                          Upload\n                                        </label>\n                                        <input\n                                          type=\"file\"\n                                          className=\"none\"\n                                          id={qualificationName + \"upload\"}\n                                          accept=\"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                                          disabled={!!isSelected ? true : false}\n                                          onChange={(e) =>\n                                            this.onFileChange(\n                                              e,\n                                              \"filledQualification\",\n                                              qualification_id\n                                            )\n                                          }\n                                        />\n                                      </div>\n                                    )}\n                                  </div>\n                                </>\n                              );\n                            }\n                          )}\n                        </>\n                      )}\n\n                    {addQualificationClicked &&\n                      remainingQualificationDoc?.length > 0 &&\n                      remainingQualificationDoc?.map(\n                        ({\n                          _id,\n                          name,\n                          url,\n                          isSelected,\n                          fileName,\n                        }: {\n                          _id: string;\n                          name: string;\n                          url: string;\n                          isSelected: string;\n                          fileName: string;\n                        }) => {\n                          const docDetails: any =\n                            url && this.qualificationFileDetails(url);\n                          return (\n                            <>\n                              <div className=\"f_spacebw mt-15\" key={_id}>\n                                <div className=\"checkbox_wrap agree_check\">\n                                  <input\n                                    className=\"filter-type filled-in\"\n                                    type=\"checkbox\"\n                                    checked={!!isSelected ? true : false}\n                                    name={name}\n                                    id={name}\n                                    onChange={() =>\n                                      this.changeQualificationHandler(\n                                        _id,\n                                        \"remainingQualification\"\n                                      )\n                                    }\n                                  />\n                                  <label htmlFor={name}>{name}</label>\n                                </div>\n                                {url ? (\n                                  <div\n                                    className=\"file_upload_box\"\n                                    onClick={() =>\n                                      window.open(\n                                        `${window.location.origin}/doc-view?url=${url}&header=true`,\n                                        \"_blank\"\n                                      )\n                                    }\n                                  >\n                                    <span\n                                      className=\"close\"\n                                      onClick={(e) =>\n                                        this.removeQualificationFileHandler(\n                                          e,\n                                          _id,\n                                          \"remainingQualification\"\n                                        )\n                                      }\n                                    >\n                                      <img src={removeFile} />\n                                    </span>\n                                    <span className=\"file_icon\">\n                                      <img src={docDetails?.fileType} />\n                                    </span>\n                                    <div className=\"file_details\">\n                                      {/* <span className=\"name\">{docDetails?.fileName}</span> */}\n                                      <span className=\"name\">{fileName}</span>\n                                    </div>\n                                  </div>\n                                ) : (\n                                  <div className=\"upload_doc\">\n                                    <label\n                                      className={`upload_btn ${\n                                        !isSelected ? \"disable\" : \"\"\n                                      }`}\n                                      htmlFor={name + \"upload\"}\n                                    >\n                                      Upload\n                                    </label>\n                                    <input\n                                      type=\"file\"\n                                      className=\"none\"\n                                      id={name + \"upload\"}\n                                      accept=\"image/jpeg,image/jpg,image/png,application/pdf,application/msword,.doc,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                                      disabled={!!isSelected ? false : true}\n                                      onChange={(e) =>\n                                        this.onFileChange(\n                                          e,\n                                          \"remainingQualification\",\n                                          _id\n                                        )\n                                      }\n                                    />\n                                  </div>\n                                )}\n                              </div>\n                            </>\n                          );\n                        }\n                      )}\n                  </div>\n                )}\n                {this.userType === 2 && (\n                  <>\n                    <div className=\"form_field\">\n                      <label className=\"form_label\">Company Name</label>\n                      <div className=\"text_field\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Company Name\"\n                          name=\"companyName\"\n                          value={basicDetailsData?.companyName}\n                          onChange={this.changeHandler}\n                        />\n                      </div>\n                      {!!errors?.companyName && (\n                        <span className=\"error_msg\">{errors?.companyName}</span>\n                      )}\n                    </div>\n                    <div className=\"form_field\">\n                      <label className=\"form_label\">Your Position</label>\n                      <div className=\"text_field\">\n                        <input\n                          type=\"text\"\n                          placeholder=\"Your Position\"\n                          name=\"position\"\n                          value={basicDetailsData?.position}\n                          onChange={this.changeHandler}\n                        />\n                      </div>\n                      {!!errors?.position && (\n                        <span className=\"error_msg\">{errors?.position}</span>\n                      )}\n                    </div>\n                    <div className=\"form_field\">\n                      <label className=\"form_label\">\n                        Australian Business Number\n                      </label>\n                      <div className=\"text_field\">\n                        {/* <input type=\"text\" placeholder=\"51 824 753 556\" name='abn' value={basicDetailsData?.abn} onChange={this.changeHandler} /> */}\n                        <NumberFormat\n                          value={basicDetailsData?.abn}\n                          displayType={\"input\"}\n                          type={\"tel\"}\n                          placeholder=\"51 824 753 556\"\n                          format=\"## ### ### ###\"\n                          isNumericString={true}\n                          onValueChange={(values) => {\n                            const { formattedValue, value } = values;\n                            const newBasicDetails = {\n                              ...this.state.basicDetailsData,\n                            };\n                            newBasicDetails.abn = value;\n                            this.setState({\n                              basicDetailsData: newBasicDetails,\n                              isEditProfileModalChanged: true,\n                            });\n                          }}\n                        />\n                      </div>\n                      {!!errors?.abn && (\n                        <span className=\"error_msg\">{errors?.abn}</span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n\n              {this.userType === 1 &&\n                basicDetailsData?.qualificationDoc?.length < 6 &&\n                !addQualificationClicked && (\n                  <>\n                    <div className=\"form_field\">\n                      <button\n                        className=\"fill_grey_btn full_btn btn-effect\"\n                        onClick={() =>\n                          this.setState({ addQualificationClicked: true })\n                        }\n                      >\n                        Add qualification documents{\" \"}\n                      </button>\n                    </div>\n                    <span className=\"info_note\">\n                      Don’t worry, nobody will see it. This is for verification\n                      only!\n                    </span>\n                  </>\n                )}\n            </div>\n            <div className=\"bottom_btn custom_btn\">\n              <button\n                className={`fill_btn full_btn btn-effect ${\n                  isEditProfileModalChanged ? \"\" : \"disable_btn\"\n                }`}\n                onClick={this.submitBasicProfileDetails}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          className=\"custom_modal\"\n          open={passwordModalClicked}\n          onClose={this.passwordModalCloseHandler}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh profile_modal\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading form_field\">\n              <div className=\"relate\">\n                <button\n                  className=\"back\"\n                  onClick={this.passwordModalCloseHandler}\n                ></button>\n                <div className=\"md_heading\">\n                  <span className=\"sub_title\">Change password</span>\n                </div>\n              </div>\n              <button\n                className=\"close_btn\"\n                onClick={this.passwordModalCloseHandler}\n              >\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n            <div className=\"inner_wrap\">\n              <div className=\"inner_wrappr\">\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Old Password</label>\n                  <div className=\"text_field\">\n                    <input\n                      type={showPassword ? \"text\" : \"password\"}\n                      className=\"detect_input\"\n                      placeholder=\"Enter Password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.passwordHandler}\n                    />\n                    <span\n                      className=\"detect_icon\"\n                      onClick={() =>\n                        this.setState((prevState: any) => ({\n                          showPassword: !prevState.showPassword,\n                        }))\n                      }\n                    >\n                      <img\n                        src={showPassword ? eyeIconOpen : eyeIconClose}\n                        alt=\"\"\n                      />\n                    </span>\n                  </div>\n                  {!!errors?.password && (\n                    <span className=\"error_msg\">{errors?.password}</span>\n                  )}\n                </div>\n                <div className=\"form_field\">\n                  <label className=\"form_label\">New Password</label>\n                  <div className=\"text_field\">\n                    <input\n                      type={showNewPassword ? \"text\" : \"password\"}\n                      className=\"detect_input\"\n                      placeholder=\"Enter New Password\"\n                      name=\"newPassword\"\n                      value={newPassword}\n                      onChange={this.passwordHandler}\n                    />\n                    <span\n                      className=\"detect_icon\"\n                      onClick={() =>\n                        this.setState((prevState: any) => ({\n                          showNewPassword: !prevState.showNewPassword,\n                        }))\n                      }\n                    >\n                      <img\n                        src={showNewPassword ? eyeIconOpen : eyeIconClose}\n                        alt=\"\"\n                      />\n                    </span>\n                  </div>\n                  {!!errors?.newPassword && (\n                    <span className=\"error_msg\">{errors?.newPassword}</span>\n                  )}\n                </div>\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Confirm New Password</label>\n                  <div className=\"text_field\">\n                    <input\n                      type={showConfirmNewPassword ? \"text\" : \"password\"}\n                      className=\"detect_input\"\n                      placeholder=\"Enter Confirm New Password\"\n                      name=\"confirmNewPassword\"\n                      value={confirmNewPassword}\n                      onChange={this.passwordHandler}\n                    />\n                    <span\n                      className=\"detect_icon\"\n                      onClick={() =>\n                        this.setState((prevState: any) => ({\n                          showConfirmNewPassword:\n                            !prevState.showConfirmNewPassword,\n                        }))\n                      }\n                    >\n                      <img\n                        src={\n                          showConfirmNewPassword ? eyeIconOpen : eyeIconClose\n                        }\n                        alt=\"\"\n                      />\n                    </span>\n                  </div>\n                  {!!errors?.confirmNewPassword && !errors?.newPassword && (\n                    <span className=\"error_msg\">\n                      {errors?.confirmNewPassword}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"bottom_btn custom_btn\">\n              <button\n                className={`fill_btn full_btn btn-effect ${\n                  password && newPassword && confirmNewPassword\n                    ? \"\"\n                    : \"disable_btn\"\n                }`}\n                onClick={this.updatePasswordHandler}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        {/* change email */}\n        <ChangeEmailModal\n          history={props.history}\n          isChangeEmailModalClicked={changeEmailModalClicked}\n          currentEmail={this.state.basicDetailsData?.email}\n          changeEmailModalCloseHandler={this.changeEmailModalCloseHandler}\n        />\n\n        <div className=\"section_wrapper\">\n          {isSkeletonLoading ? (\n            <Skeleton />\n          ) : (\n            <span className=\"sub_title\">\n              {\"Areas of specialisation\"}\n              {this.userType === 1 && (\n                <span\n                  className=\"edit_icon\"\n                  title=\"Edit\"\n                  onClick={() =>\n                    this.setState({ areasOfSpecsModalClicked: true })\n                  }\n                >\n                  <img src={editIconBlue} alt=\"edit\" />\n                </span>\n              )}\n            </span>\n          )}\n        </div>\n\n        <Modal\n          className=\"custom_modal\"\n          open={areasOfSpecsModalClicked}\n          onClose={() => this.setState({ areasOfSpecsModalClicked: false })}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh filter_modal\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading\">\n              <span className=\"sub_title\">What is your trade?</span>\n              <button\n                className=\"close_btn\"\n                onClick={() =>\n                  this.setState({ areasOfSpecsModalClicked: false })\n                }\n              >\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n\n            <div className=\"inner_wrap\">\n              <div className=\"form_field\">\n                <span className=\"xs_sub_title\">Categories</span>\n              </div>\n              <div className=\"select_sphere\">\n                <ul>\n                  {tradeList?.map(\n                    ({\n                      _id,\n                      trade_name,\n                      selected_url,\n                      specialisations,\n                    }: {\n                      _id: string;\n                      trade_name: string;\n                      selected_url: string;\n                      specialisations: [];\n                    }) => {\n                      const active = trade[0] === _id;\n                      return (\n                        <li\n                          key={_id}\n                          className={active ? \"active\" : \"\"}\n                          onClick={() =>\n                            this.tradeHandler(\n                              { _id, trade_name, selected_url },\n                              \"trade\"\n                            )\n                          }\n                        >\n                          <figure>\n                            <img\n                              src={\n                                selected_url ? selected_url : spherePlaceholder\n                              }\n                              alt=\"\"\n                            />\n                          </figure>\n                          <span className=\"name\">{trade_name}</span>\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              </div>\n              <div className=\"form_field\">\n                <span className=\"xs_sub_title\">Specialisation</span>\n              </div>\n              <div className=\"tags_wrap\">\n                <ul>\n                  {specializationList?.length > 0 && (\n                    <li\n                      className={allSpecializationSelected ? \"selected\" : \"\"}\n                      onClick={() =>\n                        this.tradeHandler(specializationList, \"All Clicked\")\n                      }\n                    >\n                      All\n                    </li>\n                  )}\n                  {specializationList?.map(\n                    ({ _id, name }: { _id: string; name: string }) => {\n                      const active = specialization?.indexOf(_id) >= 0;\n                      return (\n                        <li\n                          key={_id}\n                          className={\n                            active && !allSpecializationSelected\n                              ? \"selected\"\n                              : \"\"\n                          }\n                          onClick={() =>\n                            this.tradeHandler({ _id, name }, \"specializationId\")\n                          }\n                        >\n                          {name}\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              </div>\n            </div>\n            <div className=\"filter_btn\">\n              <a\n                className={`link ${\n                  trade.length && specialization.length ? \"\" : \"disable_link\"\n                }`}\n                onClick={() => this.tradeHandler(\"Clear All\", \"Clear All\")}\n              >\n                Clear All\n              </a>\n              <button\n                className={`fill_btn full_btn btn-effect ${\n                  trade.length && specialization.length ? \"\" : \"disable_btn\"\n                }`}\n                onClick={this.submitAreasOfTrade}\n              >\n                Save changes\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        <div className=\"section_wrapper\">\n          {isSkeletonLoading ? (\n            <Skeleton />\n          ) : (\n            <span className=\"sub_title\">\n              About {this.userType === 2 && \"company\"}\n              {(profileViewData?.about || profileViewData?.aboutCompany) && (\n                <span\n                  className=\"edit_icon\"\n                  title=\"Edit\"\n                  onClick={this.addInfoAboutYou}\n                >\n                  <img src={editIconBlue} alt=\"edit\" />\n                </span>\n              )}\n            </span>\n          )}\n          {!profileViewData?.about && !profileViewData?.aboutCompany && (\n            <button\n              className=\"fill_grey_btn full_btn btn-effect\"\n              onClick={this.addInfoAboutYou}\n            >\n              {isSkeletonLoading ? (\n                <Skeleton />\n              ) : (\n                `Add info about ${this.userType === 1 ? \"you\" : \"company\"}`\n              )}\n            </button>\n          )}\n          <p className=\"commn_para\">\n            {isSkeletonLoading ? (\n              <Skeleton />\n            ) : (\n              profileViewData?.about || profileViewData?.aboutCompany\n            )}\n          </p>\n        </div>\n\n        <Modal\n          className=\"custom_modal\"\n          open={aboutModalClicked}\n          onClose={() =>\n            this.setState({\n              about: profileViewData?.about ? profileViewData?.about : \"\",\n              aboutModalClicked: false,\n              errors: {},\n            })\n          }\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh profile_modal\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading\">\n              <span className=\"sub_title\">\n                About {this.userType === 2 && \"company\"}\n              </span>\n              <button\n                className=\"close_btn\"\n                onClick={() =>\n                  this.setState({\n                    about: profileViewData?.about ? profileViewData?.about : \"\",\n                    aboutModalClicked: false,\n                    errors: {},\n                  })\n                }\n              >\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n            <div className=\"form_field\">\n              <label className=\"form_label\">\n                {this.userType === 1 ? \"Description\" : \"\"}\n              </label>\n              <div className=\"text_field\">\n                <textarea\n                  placeholder=\"Enter Description\"\n                  maxLength={250}\n                  value={about}\n                  onChange={({\n                    target: { value },\n                  }: {\n                    target: { value: string };\n                  }) => this.setState({ about: value })}\n                />\n                <span className=\"char_count\">{`${about.length}/250`}</span>\n              </div>\n              {!!errors.about && (\n                <span className=\"error_msg\">{errors.about}</span>\n              )}\n            </div>\n            <div className=\"bottom_btn custom_btn\">\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={() => {\n                  let err: any = {};\n                  if (about.trim().length < 1) {\n                    err.about = \"Description is required\";\n                    this.setState({ errors: err });\n                  } else {\n                    const newData = { ...profileViewData };\n                    newData.about = about;\n                    this.setState({\n                      profileViewData: newData,\n                      aboutModalClicked: false,\n                      isProfileViewDataChanged: true,\n                    });\n                  }\n                }}\n              >\n                Save changes\n              </button>\n              <button\n                className=\"fill_grey_btn btn-effect\"\n                onClick={() =>\n                  this.setState({\n                    about: profileViewData?.about ? profileViewData?.about : \"\",\n                    aboutModalClicked: false,\n                    errors: {},\n                  })\n                }\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        <div className=\"section_wrapper\">\n          <span className=\"sub_title\">\n            {isSkeletonLoading ? <Skeleton /> : \"Portfolio\"}\n          </span>\n          {profileViewData?.portfolio?.length === 0 && (\n            <button\n              className=\"fill_grey_btn full_btn btn-effect\"\n              onClick={this.addNewPortfolioJob}\n            >\n              {isSkeletonLoading ? <Skeleton /> : \"Add portfolio\"}\n            </button>\n          )}\n          {isSkeletonLoading ? (\n            <Skeleton height={200} />\n          ) : (\n            <ul className=\"portfolio_wrappr\">\n              {profileViewData?.portfolio?.map(\n                (\n                  {\n                    jobDescription,\n                    jobName,\n                    portfolioId,\n                    portfolioImage,\n                  }: {\n                    jobDescription: string;\n                    jobName: string;\n                    portfolioId: string;\n                    portfolioImage: Array<any>;\n                  },\n                  index: number\n                ) => {\n                  return (\n                    <li\n                      className=\"media\"\n                      key={portfolioId}\n                      onClick={() =>\n                        this.setState({\n                          portfolioJobClicked: true,\n                          portfolioJobDetail: {\n                            jobDescription,\n                            jobName,\n                            portfolioId,\n                            portfolioImage,\n                          },\n                          portfolioJobIndex: index,\n                        })\n                      }\n                    >\n                      <figure className=\"portfolio_img\">\n                        <img\n                          src={\n                            portfolioImage[0]\n                              ? portfolioImage[0]\n                              : profilePlaceholder\n                          }\n                          alt=\"portfolio-images\"\n                        />\n                        <span className=\"xs_sub_title\">\n                          <p className=\"line-3\" title={jobName}>\n                            {jobName}\n                          </p>\n                        </span>\n                      </figure>\n                    </li>\n                  );\n                }\n              )}\n\n              {profileViewData?.portfolio?.length < 6 &&\n                profileViewData?.portfolio?.length > 0 && (\n                  <label className=\"upload_media\">\n                    <img\n                      src={addMediaLrg}\n                      alt=\"add\"\n                      onClick={this.addNewPortfolioJob}\n                    />\n                  </label>\n                )}\n            </ul>\n          )}\n        </div>\n\n        <Modal\n          className=\"custom_modal\"\n          open={portfolioJobClicked}\n          onClose={() => this.setState({ portfolioJobClicked: false })}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh portfolio_preview\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_6\">\n                <Carousel\n                  responsive={portfolioModal}\n                  showDots={true}\n                  infinite={true}\n                  autoPlay={true}\n                  arrows={false}\n                  className=\"portfolio_wrappr\"\n                >\n                  {portfolioJobDetail?.portfolioImage?.length > 0 ? (\n                    portfolioJobDetail?.portfolioImage?.map((image: string) => {\n                      return (\n                        <div\n                          className=\"media\"\n                          key={portfolioJobDetail?.portfolioId}\n                        >\n                          <figure className=\"portfolio_img\">\n                            <img\n                              src={image ? image : portfolioPlaceholder}\n                              alt=\"portfolio-images\"\n                            />\n                            <span\n                              className=\"back bk_white\"\n                              title=\"Back\"\n                              onClick={() =>\n                                this.setState({ portfolioJobClicked: false })\n                              }\n                            ></span>\n                          </figure>\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <img alt=\"\" src={portfolioPlaceholder} />\n                  )}\n                </Carousel>\n              </div>\n              <div className=\"flex_col_sm_6\">\n                <span className=\"dot_menu\">\n                  <img src={dotMenu} alt=\"menu\" />\n\n                  <div className=\"edit_menu\">\n                    <ul>\n                      <li\n                        className=\"icon edit\"\n                        onClick={() =>\n                          this.setState({\n                            isAddEditPortfolioModal: true,\n                            portfolioJobClicked: false,\n                            editPortfolioJob: true,\n                          })\n                        }\n                      >\n                        Edit\n                      </li>\n                      <li\n                        className=\"icon delete\"\n                        onClick={() =>\n                          this.setState({\n                            deletePortfolioJob: true,\n                            confirmationModalClicked: true,\n                          })\n                        }\n                      >\n                        Delete\n                      </li>\n                    </ul>\n                  </div>\n                </span>\n                <span className=\"xs_sub_title\">Job Description</span>\n                <div className=\"job_content\">\n                  <p>{portfolioJobDetail?.jobDescription}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          className=\"custom_modal\"\n          open={confirmationModalClicked}\n          onClose={() =>\n            this.setState({\n              confirmationModalClicked: false,\n              portfolioJobIndex: null,\n            })\n          }\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh confirmation\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading\">\n              <span className=\"xs_sub_title\">Delete Portfolio Job</span>\n              <button\n                className=\"close_btn\"\n                onClick={() =>\n                  this.setState({\n                    confirmationModalClicked: false,\n                    portfolioJobIndex: null,\n                  })\n                }\n              >\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n            <div className=\"modal_message\">\n              <p>Are you sure you want to delete portfolio job?</p>\n            </div>\n            <div className=\"dialog_actions\">\n              <button\n                className=\"fill_btn btn-effect\"\n                onClick={this.submitPortfolioJobs}\n              >\n                Yes\n              </button>\n              <button\n                className=\"fill_grey_btn btn-effect\"\n                onClick={() =>\n                  this.setState({\n                    confirmationModalClicked: false,\n                    portfolioJobIndex: null,\n                  })\n                }\n              >\n                No\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        <Modal\n          className=\"custom_modal\"\n          open={isAddEditPortfolioModal}\n          onClose={this.closeAddEditPortofolioModal}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div\n            className=\"custom_wh\"\n            data-aos=\"zoom-in\"\n            data-aos-delay=\"30\"\n            data-aos-duration=\"1000\"\n          >\n            <div className=\"heading\">\n              <div className=\"relate\">\n                <button\n                  className=\"back\"\n                  onClick={this.closeAddEditPortofolioModal}\n                />\n                <div className=\"md_heading\">\n                  <span className=\"sub_title\">Portfolio</span>\n                  <span className=\"info_note\">\n                    {storageService.getItem(\"userType\") === 1\n                      ? \"Tradespeople who have a portfolio with photos get job faster.\"\n                      : \"Showcase your work and attract the best talent to your jobs.\"}\n                  </span>\n                </div>\n              </div>\n              <button\n                className=\"close_btn\"\n                onClick={this.closeAddEditPortofolioModal}\n              >\n                <img src={cancel} alt=\"cancel\" />\n              </button>\n            </div>\n            <div className=\"inner_wrap\">\n              <div className=\"inner_wrappr\">\n                <div className=\"form_field\">\n                  <label className=\"form_label\">Job Name</label>\n                  <div className=\"text_field\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Enter Job Name\"\n                      value={portfolioJobDetail?.jobName}\n                      maxLength={100}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        const data = { ...portfolioJobDetail };\n                        data.jobName = e.target.value;\n                        this.setState({ portfolioJobDetail: data });\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"form_field\">\n                  <label className=\"form_label\">{`Job Description ${\n                    this.userType === 2 ? `(optional)` : \"\"\n                  }`}</label>\n                  <div className=\"text_field\">\n                    <textarea\n                      placeholder=\"Enter Job Description\"\n                      value={portfolioJobDetail?.jobDescription}\n                      maxLength={250}\n                      onChange={(\n                        e: React.ChangeEvent<\n                          HTMLInputElement | HTMLTextAreaElement\n                        >\n                      ) => {\n                        const data = { ...portfolioJobDetail };\n                        data.jobDescription = e.target.value;\n                        this.setState({ portfolioJobDetail: data });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"upload_img_video\">\n                {portfolioJobDetail?.portfolioImage?.map(\n                  (image: string, index: number) => {\n                    return (\n                      <figure className=\"img_video\" key={image}>\n                        <img\n                          src={image ? image : dummy}\n                          async-src={image ? image : dummy}\n                          decoding=\"async\"\n                          loading=\"lazy\"\n                          alt=\"portfolio-images\"\n                        />\n                        <img\n                          src={remove}\n                          alt=\"remove\"\n                          className=\"remove\"\n                          onClick={() => {\n                            const data: any = { ...portfolioJobDetail };\n                            data?.portfolioImage?.splice(index, 1);\n                            this.setState({ portfolioJobDetail: data });\n                          }}\n                        />\n                      </figure>\n                    );\n                  }\n                )}\n\n                {portfolioJobDetail?.portfolioImage?.length < 6 &&\n                  addPortfolioJob && (\n                    <>\n                      <label\n                        className=\"upload_media\"\n                        htmlFor=\"upload_img_video\"\n                      >\n                        <img src={addMedia} alt=\"add\" />\n                      </label>\n\n                      <input\n                        type=\"file\"\n                        accept=\"image/png,image/jpg,image/jpeg\"\n                        style={{ display: \"none\" }}\n                        id=\"upload_img_video\"\n                        onChange={(e) => this.onFileChange(e, \"addJobPhotos\")}\n                      />\n                    </>\n                  )}\n              </div>\n            </div>\n            <div className=\"bottom_btn custom_btn\">\n              <button\n                className={`fill_btn full_btn btn-effect ${\n                  portfolioJobDetail?.jobName?.trim() &&\n                  (this.userType === 2\n                    ? true\n                    : portfolioJobDetail?.jobDescription?.trim()) &&\n                  (this.userType === 2\n                    ? true\n                    : portfolioJobDetail?.portfolioImage?.length)\n                    ? \"\"\n                    : \"disable_btn\"\n                }`}\n                onClick={this.submitPortfolioJobs}\n              >\n                Save changes\n              </button>\n              <button\n                className=\"fill_grey_btn btn-effect\"\n                onClick={this.closeAddEditPortofolioModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </Modal>\n\n        <div className=\"section_wrapper\">\n          <button\n            className={`fill_btn full_btn btn-effect ${\n              isProfileViewDataChanged ? \"\" : \"disable_btn\"\n            }`}\n            onClick={this.submitUpdateProfile}\n          >\n            {isSkeletonLoading ? <Skeleton /> : \"Save changes\"}\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PersonalInformation;\n"]},"metadata":{},"sourceType":"module"}