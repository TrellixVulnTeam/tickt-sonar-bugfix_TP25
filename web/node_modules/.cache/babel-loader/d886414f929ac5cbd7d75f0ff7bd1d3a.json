{"ast":null,"code":"import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{NavLink}from\"react-router-dom\";import{renderTime}from\"../../../utils/common\";import InfiniteScroll from\"react-infinite-scroll-component\";import dummy from\"../../../assets/images/u_placeholder.jpg\";import rateStar from\"../../../assets/images/ic-star-fill.png\";import pastJobs from\"../../../assets/images/pastJobs.png\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PastJobs=function PastJobs(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobList=_useState2[0],setJobList=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),pageNo=_useState4[0],setPageNo=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hasMoreItems=_useState6[0],setHasMoreItems=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoad=_useState8[0],setIsLoad=_useState8[1];var totalJobsCount=props.newJobsCount;console.log(totalJobsCount,\"totalJobsCount\",jobList,\"jobList\",hasMoreItems,\"hasMoreItems\");useEffect(function(){callJobList();return function(){return props.resetPastJobList();};},[]);var callJobList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// if (props.newJobsCount && jobList.length >= totalJobsCount) {\n//   setHasMoreItems(false);\n//   return;\n// }\nprops.getPastJobList(pageNo);case 1:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref.apply(this,arguments);};}();useEffect(function(){var _props$pastJobList;if(((_props$pastJobList=props.pastJobList)===null||_props$pastJobList===void 0?void 0:_props$pastJobList.length)||Array.isArray(props.pastJobList)){var allJobs=[].concat(_toConsumableArray(jobList),_toConsumableArray(props.pastJobList));console.log(jobList,\"jobList\",props.pastJobList,\"props.pastJobList\",allJobs,\"allJobs\");setJobList(allJobs);setIsLoad(false);setPageNo(pageNo+1);if(props.pastJobList.length<10){setHasMoreItems(false);}props.resetPastJobList();}},[props.pastJobList]);return/*#__PURE__*/_jsx(\"div\",{className:\"detail_col\",children:/*#__PURE__*/_jsxs(InfiniteScroll,{dataLength:jobList.length,next:callJobList,style:{overflowX:\"hidden\"},hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(_Fragment,{}),children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"Past Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:!isLoad&&!props.loading&&jobList.length?jobList.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(NavLink,{to:\"/job-details-page?jobId=\".concat(item.jobId,\"&redirect_from=jobs\"),className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img\",children:/*#__PURE__*/_jsx(\"img\",{src:item.builderImage||dummy,alt:\"\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:item.jobName}),/*#__PURE__*/_jsx(\"span\",{className:\"prof\",children:item.builderName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(item.fromDate,item.toDate)}),/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:item.amount}),/*#__PURE__*/_jsx(\"li\",{className:\"icon location line-1\",children:item.locationName}),item.durations?/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:item.durations}):/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"job_status\",children:item.status})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"job_progress_wrap\",id:\"scroll-progress-bar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress_wrapper\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"completed-digit\",id:\"digit-progress\",children:[/*#__PURE__*/_jsxs(\"b\",{children:[\"Job Milestones \",item.milestoneNumber]}),\" of\",\" \",item.totalMilestones]}),/*#__PURE__*/_jsx(\"span\",{className:\"progress_bar\",children:/*#__PURE__*/_jsx(\"input\",{className:\"done_progress\",id:\"progress-bar\",type:\"range\",min:\"0\",value:item.milestoneNumber/item.totalMilestones*100})})]})}),!(item===null||item===void 0?void 0:item.isRated)&&[\"COMPLETED\"].includes(item===null||item===void 0?void 0:item.status)&&/*#__PURE__*/_jsx(NavLink,{to:{pathname:\"/review-builder\",state:{item:item}},children:/*#__PURE__*/_jsxs(\"button\",{className:\"fill_grey_btn full_btn\",children:[/*#__PURE__*/_jsx(\"img\",{src:rateStar,alt:\"rating-star\"}),\" Rate this builder\"]})})]})},item.jobId);}):!isLoad&&!props.loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{children:/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:pastJobs,alt:\"data not found\"})})}),/*#__PURE__*/_jsx(\"span\",{className:\"empty_screen_text\",children:\"You didn't complete any job yet\"}),/*#__PURE__*/_jsx(\"span\",{className:\"empty_screen_subtext\",children:\"As soon as the completation of your work will get approved you will be notified\"})]})})]})});};export default PastJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/pastJobs.tsx"],"names":["useState","useEffect","NavLink","renderTime","InfiniteScroll","dummy","rateStar","pastJobs","PastJobs","props","jobList","setJobList","pageNo","setPageNo","hasMoreItems","setHasMoreItems","isLoad","setIsLoad","totalJobsCount","newJobsCount","console","log","callJobList","resetPastJobList","getPastJobList","pastJobList","length","Array","isArray","allJobs","overflowX","loading","map","item","jobId","builderImage","e","target","onerror","src","jobName","builderName","fromDate","toDate","amount","locationName","durations","status","milestoneNumber","totalMilestones","isRated","includes","pathname","state"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { renderTime } from \"../../../utils/common\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport rateStar from \"../../../assets/images/ic-star-fill.png\";\nimport pastJobs from \"../../../assets/images/pastJobs.png\";\n\ninterface Proptypes {\n  history: any;\n  loading: boolean;\n  newJobsCount: number;\n  pastJobList: any;\n  getPastJobList: (page: number) => void;\n  resetPastJobList: () => void;\n}\n\nconst PastJobs = (props: Proptypes) => {\n  const [jobList, setJobList] = useState<Array<any>>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n  const [isLoad, setIsLoad] = useState(true);\n\n  let totalJobsCount: number = props.newJobsCount;\n  console.log(\n    totalJobsCount,\n    \"totalJobsCount\",\n    jobList,\n    \"jobList\",\n    hasMoreItems,\n    \"hasMoreItems\"\n  );\n\n  useEffect(() => {\n    callJobList();\n\n    return () => props.resetPastJobList();\n  }, []);\n\n  const callJobList = async () => {\n    // if (props.newJobsCount && jobList.length >= totalJobsCount) {\n    //   setHasMoreItems(false);\n    //   return;\n    // }\n    props.getPastJobList(pageNo);\n  };\n\n  useEffect(() => {\n    if (props.pastJobList?.length || Array.isArray(props.pastJobList)) {\n      const allJobs = [...jobList, ...props.pastJobList];\n      console.log(\n        jobList,\n        \"jobList\",\n        props.pastJobList,\n        \"props.pastJobList\",\n        allJobs,\n        \"allJobs\"\n      );\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n      if (props.pastJobList.length < 10) {\n        setHasMoreItems(false);\n      }\n      props.resetPastJobList();\n    }\n  }, [props.pastJobList]);\n\n  return (\n    <div className=\"detail_col\">\n      <InfiniteScroll\n        dataLength={jobList.length}\n        next={callJobList}\n        style={{ overflowX: \"hidden\" }}\n        hasMore={hasMoreItems}\n        loader={<></>}\n      >\n        <span className=\"sub_title\">Past Jobs</span>\n        <div className=\"flex_row tradies_row\">\n          {!isLoad && !props.loading && jobList.length\n            ? jobList.map((item: any) => (\n                <div className=\"flex_col_sm_6\" key={item.jobId}>\n                  <div\n                    className=\"tradie_card\"\n                    data-aos=\"fade-in\"\n                    data-aos-delay=\"250\"\n                    data-aos-duration=\"1000\"\n                  >\n                    <NavLink\n                      to={`/job-details-page?jobId=${item.jobId}&redirect_from=jobs`}\n                      className=\"more_detail circle\"\n                    ></NavLink>\n                    <div className=\"user_wrap\">\n                      <figure className=\"u_img\">\n                        <img\n                          src={item.builderImage || dummy}\n                          alt=\"\"\n                          onError={(e: any) => {\n                            if (e?.target?.onerror) {\n                              e.target.onerror = null;\n                            }\n                            if (e?.target?.src) {\n                              e.target.src = dummy;\n                            }\n                          }}\n                        />\n                      </figure>\n                      <div className=\"details\">\n                        <span className=\"name\">{item.jobName}</span>\n                        <span className=\"prof\">{item.builderName}</span>\n                      </div>\n                    </div>\n                    <div className=\"job_info\">\n                      <ul>\n                        <li className=\"icon calendar\">\n                          {renderTime(item.fromDate, item.toDate)}\n                        </li>\n                        <li className=\"icon dollar\">{item.amount}</li>\n                        <li className=\"icon location line-1\">\n                          {item.locationName}\n                        </li>\n                        {item.durations ? (\n                          <li className=\"icon calendar\">{item.durations}</li>\n                        ) : (\n                          <li>\n                            <span className=\"job_status\">{item.status}</span>\n                          </li>\n                        )}\n                      </ul>\n                    </div>\n                    {/* <p className=\"commn_para line-3\">\n                {builderData.jobDescription}\n              </p> */}\n                    <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                      <div className=\"progress_wrapper\">\n                        <span className=\"completed-digit\" id=\"digit-progress\">\n                          <b>Job Milestones {item.milestoneNumber}</b> of{\" \"}\n                          {item.totalMilestones}\n                        </span>\n                        <span className=\"progress_bar\">\n                          <input\n                            className=\"done_progress\"\n                            id=\"progress-bar\"\n                            type=\"range\"\n                            min=\"0\"\n                            value={\n                              (item.milestoneNumber / item.totalMilestones) *\n                              100\n                            }\n                          />\n                        </span>\n                      </div>\n                    </div>\n                    {!item?.isRated && [\"COMPLETED\"].includes(item?.status) && (\n                      <NavLink\n                        to={{\n                          pathname: \"/review-builder\",\n                          state: { item: item },\n                        }}\n                      >\n                        <button className=\"fill_grey_btn full_btn\">\n                          <img src={rateStar} alt=\"rating-star\" /> Rate this\n                          builder\n                        </button>\n                      </NavLink>\n                    )}\n                  </div>\n                </div>\n              ))\n            : !isLoad &&\n              !props.loading && (\n                <div className=\"no_record  m-t-vh\">\n                  <figure>\n                    <figure className=\"no_img\">\n                      <img src={pastJobs} alt=\"data not found\" />\n                    </figure>\n                  </figure>\n\n                  <span className=\"empty_screen_text\">\n                    You didn't complete any job yet\n                  </span>\n                  <span className=\"empty_screen_subtext\">\n                    As soon as the completation of your work will get approved\n                    you will be notified\n                  </span>\n                </div>\n              )}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default PastJobs;\n"]},"metadata":{},"sourceType":"module"}