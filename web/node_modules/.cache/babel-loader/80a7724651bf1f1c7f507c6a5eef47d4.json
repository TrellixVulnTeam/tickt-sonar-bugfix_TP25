{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/chooseTiming.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import colorLogo from '../../../assets/images/ic-logo-yellow.png';\n// import menu from '../../../assets/images/menu-line-white.svg';\n// import bell from '../../../assets/images/ic-notification.png';\n// import dummy from '../../../assets/images/u_placeholder.jpg';\n// @ts-ignore\n\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\n// @ts-ignore\n// import { DateRangePicker } from '../../../plugins/react-date-range/dist/index';\n// import '../../../plugins/react-date-range/dist/styles.css';\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nimport moment from 'moment';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst default_format = 'YYYY-MM-DD';\n\nconst ChooseTiming = ({\n  data,\n  milestones,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  let location = useLocation();\n  let jobId = null;\n\n  if (location.search) {\n    let urlParams = new URLSearchParams(location.search);\n    jobId = urlParams.get('jobId');\n  }\n\n  const [range, setRange] = useState({\n    startDate: '',\n    //new Date(), // ''\n    endDate: '',\n    // new Date(),\n    key: 'selection'\n  });\n  const [formattedDates, setFormattedDates] = useState({});\n  const [error, setError] = useState('');\n  const [localChanges, setLocalChanges] = useState(false);\n  useEffect(() => {\n    if (stepCompleted) {\n      if (jobId) {\n        setRange({\n          startDate: moment(data.from_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.from_date).toDate() : '',\n          endDate: moment(data.to_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.to_date).toDate() : '',\n          key: 'selection'\n        });\n      } else {\n        setRange({\n          startDate: data.from_date ? moment(data.from_date).toDate() : new Date(),\n          endDate: data.to_date ? moment(data.to_date).toDate() : '',\n          key: 'selection'\n        });\n      }\n\n      setLocalChanges(true);\n    }\n  }, [data, stepCompleted]);\n\n  const handleChange = item => {\n    let mile = milestones; // console.log({ mile, item });\n\n    if (mile === null || mile === void 0 ? void 0 : mile.length) {\n      let start_selection = moment(item.selection.startDate).format('MM-DD-YYYY');\n      let end_selection = moment(item.selection.endDate).isValid() ? moment(item.selection.endDate).format('MM-DD-YYYY') : null;\n      let item_find = false;\n      mile.forEach(item_date => {\n        let start = item_date.from_date;\n        let end = moment(item_date.to_date).isValid() ? item_date.to_date : null;\n\n        if (start && end) {\n          if (moment(start_selection).isAfter(start) || moment(end_selection).isBefore(end)) {\n            item_find = true;\n          }\n        }\n\n        if (start && !end) {\n          if (moment(start_selection).isAfter(start)) {\n            item_find = true; // true;\n          }\n        }\n\n        if (start_selection && end_selection && !end) {\n          if (moment(start).isSameOrAfter(start_selection) && moment(start).isSameOrBefore(end_selection)) {\n            item_find = false;\n          } else {\n            item_find = true;\n          }\n        }\n      });\n\n      if (item_find && !jobId) {\n        setShowToast(true, 'Please check the milestone dates.');\n        return;\n      }\n    }\n\n    setRange(item.selection);\n    handleCheck(item.selection);\n  };\n\n  const handleCheck = item => {\n    let from_date = moment(item.startDate).format(default_format);\n    let to_date = moment(item.endDate).format(default_format);\n    setFormattedDates({\n      from_date,\n      to_date\n    });\n\n    if (moment(from_date, default_format).isAfter(moment(to_date, default_format))) {\n      // isAfter\n      setError('finish date is greater then the start date.');\n    } else {\n      setError('');\n    }\n  };\n\n  const handleContinue = () => {\n    handleStepComplete(formattedDates);\n  };\n\n  const checkDisable = () => {\n    if ((range === null || range === void 0 ? void 0 : range.startDate) && (range === null || range === void 0 ? void 0 : range.startDate) !== 'Invalid date') {\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: handleStepBack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \"Timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: 'Choose the start and finish day of your job'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(DateRangePicker, {\n                ranges: [range],\n                onChange: handleChange,\n                months: 2,\n                direction: \"horizontal\",\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: moment().add(2, 'years').toDate(),\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg mtb-15\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `fill_btn full_btn btn-effect ${checkDisable() ? 'disable_btn' : ''}`,\n                onClick: handleContinue,\n                children: 'Continue'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseTiming, \"uNtLUnaftrwfKCh6VMSHssdLIQc=\", false, function () {\n  return [useLocation];\n});\n\n_c = ChooseTiming;\nexport default ChooseTiming;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseTiming\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/chooseTiming.tsx"],"names":["React","useState","useEffect","DateRangePicker","moment","setShowToast","useLocation","default_format","ChooseTiming","data","milestones","stepCompleted","handleStepComplete","handleStepBack","location","jobId","search","urlParams","URLSearchParams","get","range","setRange","startDate","endDate","key","formattedDates","setFormattedDates","error","setError","localChanges","setLocalChanges","from_date","isSameOrAfter","format","toDate","to_date","Date","handleChange","item","mile","length","start_selection","selection","end_selection","isValid","item_find","forEach","item_date","start","end","isAfter","isBefore","isSameOrBefore","handleCheck","handleContinue","checkDisable","add"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;AACA;AAEA;;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAO,kCAAP,C,CAA2C;AAG3C;AACA;AACA;;AAGA,OAAO,yCAAP,C,CAAkD;;AAClD,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAAqBC,WAArB,QAAwC,kBAAxC;;AAWA,MAAMC,cAAc,GAAG,YAAvB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,aAApB;AAAmCC,EAAAA,kBAAnC;AAAuDC,EAAAA;AAAvD,CAAD,KAAwF;AAAA;;AACzG,MAAIC,QAAQ,GAAGR,WAAW,EAA1B;AACA,MAAIS,KAAU,GAAG,IAAjB;;AAEA,MAAID,QAAQ,CAACE,MAAb,EAAqB;AACjB,QAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBJ,QAAQ,CAACE,MAA7B,CAAhB;AACAD,IAAAA,KAAK,GAAGE,SAAS,CAACE,GAAV,CAAc,OAAd,CAAR;AACH;;AAED,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAA2B;AACzDqB,IAAAA,SAAS,EAAE,EAD8C;AAC3C;AACdC,IAAAA,OAAO,EAAE,EAFgD;AAE7C;AACZC,IAAAA,GAAG,EAAE;AAHoD,GAA3B,CAAlC;AAKA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,KAAD,CAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,aAAJ,EAAmB;AACf,UAAII,KAAJ,EAAW;AACPM,QAAAA,QAAQ,CAAC;AACLC,UAAAA,SAAS,EAAElB,MAAM,CAACK,IAAI,CAACsB,SAAN,EAAiB,YAAjB,CAAN,CAAqCC,aAArC,CAAmD5B,MAAM,GAAG6B,MAAT,CAAgB,YAAhB,CAAnD,IAAoF7B,MAAM,CAACK,IAAI,CAACsB,SAAN,CAAN,CAAuBG,MAAvB,EAApF,GAAsH,EAD5H;AAELX,UAAAA,OAAO,EAAEnB,MAAM,CAACK,IAAI,CAAC0B,OAAN,EAAe,YAAf,CAAN,CAAmCH,aAAnC,CAAiD5B,MAAM,GAAG6B,MAAT,CAAgB,YAAhB,CAAjD,IAAkF7B,MAAM,CAACK,IAAI,CAAC0B,OAAN,CAAN,CAAqBD,MAArB,EAAlF,GAAkH,EAFtH;AAGLV,UAAAA,GAAG,EAAE;AAHA,SAAD,CAAR;AAKH,OAND,MAMO;AACHH,QAAAA,QAAQ,CAAC;AACLC,UAAAA,SAAS,EAAEb,IAAI,CAACsB,SAAL,GAAiB3B,MAAM,CAACK,IAAI,CAACsB,SAAN,CAAN,CAAuBG,MAAvB,EAAjB,GAAmD,IAAIE,IAAJ,EADzD;AAELb,UAAAA,OAAO,EAAEd,IAAI,CAAC0B,OAAL,GAAe/B,MAAM,CAACK,IAAI,CAAC0B,OAAN,CAAN,CAAqBD,MAArB,EAAf,GAA+C,EAFnD;AAGLV,UAAAA,GAAG,EAAE;AAHA,SAAD,CAAR;AAKH;;AACDM,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH;AACJ,GAjBQ,EAiBN,CAACrB,IAAD,EAAOE,aAAP,CAjBM,CAAT;;AAmBA,QAAM0B,YAAY,GAAIC,IAAD,IAAe;AAChC,QAAIC,IAAS,GAAG7B,UAAhB,CADgC,CAEhC;;AACA,QAAI6B,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEC,MAAV,EAAkB;AACd,UAAIC,eAAoB,GAAGrC,MAAM,CAACkC,IAAI,CAACI,SAAL,CAAepB,SAAhB,CAAN,CAAiCW,MAAjC,CAAwC,YAAxC,CAA3B;AACA,UAAIU,aAAkB,GAAGvC,MAAM,CAACkC,IAAI,CAACI,SAAL,CAAenB,OAAhB,CAAN,CAA+BqB,OAA/B,KAA2CxC,MAAM,CAACkC,IAAI,CAACI,SAAL,CAAenB,OAAhB,CAAN,CAA+BU,MAA/B,CAAsC,YAAtC,CAA3C,GAAiG,IAA1H;AACA,UAAIY,SAAc,GAAG,KAArB;AAEAN,MAAAA,IAAI,CAACO,OAAL,CAAcC,SAAD,IAAoB;AAC7B,YAAIC,KAAU,GAAGD,SAAS,CAAChB,SAA3B;AACA,YAAIkB,GAAQ,GAAG7C,MAAM,CAAC2C,SAAS,CAACZ,OAAX,CAAN,CAA0BS,OAA1B,KAAsCG,SAAS,CAACZ,OAAhD,GAA0D,IAAzE;;AAEA,YAAIa,KAAK,IAAIC,GAAb,EAAkB;AACd,cAAI7C,MAAM,CAACqC,eAAD,CAAN,CAAwBS,OAAxB,CAAgCF,KAAhC,KAA0C5C,MAAM,CAACuC,aAAD,CAAN,CAAsBQ,QAAtB,CAA+BF,GAA/B,CAA9C,EAAmF;AAC/EJ,YAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;;AAED,YAAIG,KAAK,IAAI,CAACC,GAAd,EAAmB;AACf,cAAI7C,MAAM,CAACqC,eAAD,CAAN,CAAwBS,OAAxB,CAAgCF,KAAhC,CAAJ,EAA4C;AACxCH,YAAAA,SAAS,GAAG,IAAZ,CADwC,CACtB;AACrB;AACJ;;AAED,YAAIJ,eAAe,IAAIE,aAAnB,IAAoC,CAACM,GAAzC,EAA8C;AAC1C,cAAI7C,MAAM,CAAC4C,KAAD,CAAN,CAAchB,aAAd,CAA4BS,eAA5B,KAAgDrC,MAAM,CAAC4C,KAAD,CAAN,CAAcI,cAAd,CAA6BT,aAA7B,CAApD,EAAiG;AAC7FE,YAAAA,SAAS,GAAG,KAAZ;AACH,WAFD,MAEO;AACHA,YAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;AAEJ,OAxBD;;AA0BA,UAAIA,SAAS,IAAI,CAAC9B,KAAlB,EAAyB;AACrBV,QAAAA,YAAY,CAAC,IAAD,EAAO,mCAAP,CAAZ;AACA;AACH;AACJ;;AACDgB,IAAAA,QAAQ,CAACiB,IAAI,CAACI,SAAN,CAAR;AACAW,IAAAA,WAAW,CAACf,IAAI,CAACI,SAAN,CAAX;AACH,GAzCD;;AA2CA,QAAMW,WAAW,GAAIf,IAAD,IAAe;AAC/B,QAAIP,SAAS,GAAG3B,MAAM,CAACkC,IAAI,CAAChB,SAAN,CAAN,CAAuBW,MAAvB,CAA8B1B,cAA9B,CAAhB;AACA,QAAI4B,OAAO,GAAG/B,MAAM,CAACkC,IAAI,CAACf,OAAN,CAAN,CAAqBU,MAArB,CAA4B1B,cAA5B,CAAd;AACAmB,IAAAA,iBAAiB,CAAC;AAAEK,MAAAA,SAAF;AAAaI,MAAAA;AAAb,KAAD,CAAjB;;AACA,QAAI/B,MAAM,CAAC2B,SAAD,EAAYxB,cAAZ,CAAN,CAAkC2C,OAAlC,CAA0C9C,MAAM,CAAC+B,OAAD,EAAU5B,cAAV,CAAhD,CAAJ,EAAgF;AAAE;AAC9EqB,MAAAA,QAAQ,CAAC,6CAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GATD;;AAWA,QAAM0B,cAAc,GAAG,MAAM;AACzB1C,IAAAA,kBAAkB,CAACa,cAAD,CAAlB;AACH,GAFD;;AAIA,QAAM8B,YAAY,GAAG,MAAM;AACvB,QAAI,CAAAnC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,SAAP,KAAoB,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEE,SAAP,MAAqB,cAA7C,EAA6D;AACzD,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,wCACI;AAAQ,kBAAA,SAAS,EAAC,MAAlB;AAAyB,kBAAA,OAAO,EAAET;AAAlC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAM,kBAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAG,gBAAA,SAAS,EAAC,YAAb;AAAA,0BACK;AADL;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI,QAAC,eAAD;AACI,gBAAA,MAAM,EAAE,CAACO,KAAD,CADZ;AAEI,gBAAA,QAAQ,EAAEiB,YAFd;AAGI,gBAAA,MAAM,EAAE,CAHZ;AAII,gBAAA,SAAS,EAAC,YAJd;AAKI,gBAAA,yBAAyB,EAAE,KAL/B;AAMI,gBAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,CANjB;AAOI,gBAAA,eAAe,EAAE,KAPrB;AAQI,gBAAA,oBAAoB,EAAE,IAR1B;AASI,gBAAA,WAAW,EAAE,IATjB;AAUI,gBAAA,OAAO,EAAE,IAAID,IAAJ,EAVb;AAWI,gBAAA,OAAO,EAAEhC,MAAM,GAAGoD,GAAT,CAAa,CAAb,EAAgB,OAAhB,EAAyBtB,MAAzB,EAXb;AAYI,gBAAA,WAAW,EAAE;AAZjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAiBI;AAAM,cAAA,SAAS,EAAC,kBAAhB;AAAA,wBAAoCP;AAApC;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAkBI;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AACI,gBAAA,SAAS,EAAG,gCAA+B4B,YAAY,KAAK,aAAL,GAAqB,EAAG,EADnF;AAEI,gBAAA,OAAO,EAAED,cAFb;AAAA,0BAGK;AAHL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH,CAzJD;;GAAM9C,Y;UACaF,W;;;KADbE,Y;AA2JN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import colorLogo from '../../../assets/images/ic-logo-yellow.png';\n// import menu from '../../../assets/images/menu-line-white.svg';\n// import bell from '../../../assets/images/ic-notification.png';\n// import dummy from '../../../assets/images/u_placeholder.jpg';\n\n// @ts-ignore\nimport { DateRangePicker } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main style file\n\n\n// @ts-ignore\n// import { DateRangePicker } from '../../../plugins/react-date-range/dist/index';\n// import '../../../plugins/react-date-range/dist/styles.css';\n\n\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport moment from 'moment';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\n\ninterface Proptypes {\n    data: any;\n    milestones: any,\n    stepCompleted: Boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepBack: () => void;\n}\n\nconst default_format = 'YYYY-MM-DD';\nconst ChooseTiming = ({ data, milestones, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n    let location = useLocation();\n    let jobId: any = null;\n\n    if (location.search) {\n        let urlParams = new URLSearchParams(location.search);\n        jobId = urlParams.get('jobId');\n    }\n\n    const [range, setRange] = useState<{ [index: string]: any }>({\n        startDate: '',//new Date(), // ''\n        endDate: '',// new Date(),\n        key: 'selection',\n    });\n    const [formattedDates, setFormattedDates] = useState({});\n    const [error, setError] = useState('');\n    const [localChanges, setLocalChanges] = useState(false);\n\n\n    useEffect(() => {\n        if (stepCompleted) {\n            if (jobId) {\n                setRange({\n                    startDate: moment(data.from_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.from_date).toDate() : '',\n                    endDate: moment(data.to_date, 'YYYY-MM-DD').isSameOrAfter(moment().format('YYYY-MM-DD')) ? moment(data.to_date).toDate() : '',\n                    key: 'selection',\n                });\n            } else {\n                setRange({\n                    startDate: data.from_date ? moment(data.from_date).toDate() : new Date(),\n                    endDate: data.to_date ? moment(data.to_date).toDate() : '',\n                    key: 'selection',\n                });\n            }\n            setLocalChanges(true);\n        }\n    }, [data, stepCompleted])\n\n    const handleChange = (item: any) => {\n        let mile: any = milestones;\n        // console.log({ mile, item });\n        if (mile?.length) {\n            let start_selection: any = moment(item.selection.startDate).format('MM-DD-YYYY');\n            let end_selection: any = moment(item.selection.endDate).isValid() ? moment(item.selection.endDate).format('MM-DD-YYYY') : null;\n            let item_find: any = false;\n\n            mile.forEach((item_date: any) => {\n                let start: any = item_date.from_date;\n                let end: any = moment(item_date.to_date).isValid() ? item_date.to_date : null;\n\n                if (start && end) {\n                    if (moment(start_selection).isAfter(start) || moment(end_selection).isBefore(end)) {\n                        item_find = true\n                    }\n                }\n\n                if (start && !end) {\n                    if (moment(start_selection).isAfter(start)) {\n                        item_find = true; // true;\n                    }\n                }\n\n                if (start_selection && end_selection && !end) {\n                    if (moment(start).isSameOrAfter(start_selection) && moment(start).isSameOrBefore(end_selection)) {\n                        item_find = false;\n                    } else {\n                        item_find = true\n                    }\n                }\n\n            });\n\n            if (item_find && !jobId) {\n                setShowToast(true, 'Please check the milestone dates.');\n                return;\n            }\n        }\n        setRange(item.selection);\n        handleCheck(item.selection);\n    };\n\n    const handleCheck = (item: any) => {\n        let from_date = moment(item.startDate).format(default_format);\n        let to_date = moment(item.endDate).format(default_format);\n        setFormattedDates({ from_date, to_date });\n        if (moment(from_date, default_format).isAfter(moment(to_date, default_format))) { // isAfter\n            setError('finish date is greater then the start date.');\n        } else {\n            setError('');\n        }\n    }\n\n    const handleContinue = () => {\n        handleStepComplete(formattedDates);\n    }\n\n    const checkDisable = () => {\n        if (range?.startDate && range?.startDate !== 'Invalid date') {\n            return false;\n        }\n        return true;\n    }\n\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n                    <div className=\"form_field\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n                                <div className=\"relate\">\n                                    <button className=\"back\" onClick={handleStepBack}></button>\n                                    <span className=\"title\">Timing</span>\n                                </div>\n                                <p className=\"commn_para\">\n                                    {'Choose the start and finish day of your job'}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex_row\">\n                        <div className=\"flex_col_sm_8\">\n                            <div className=\"form_field\">\n                                <DateRangePicker\n                                    ranges={[range]}\n                                    onChange={handleChange}\n                                    months={2}\n                                    direction=\"horizontal\"\n                                    moveRangeOnFirstSelection={false}\n                                    rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                                    showDateDisplay={false}\n                                    showSelectionPreview={true}\n                                    showPreview={true}\n                                    minDate={new Date()}\n                                    maxDate={moment().add(2, 'years').toDate()}\n                                    fixedHeight={true}\n                                />\n                            </div>\n                            <span className=\"error_msg mtb-15\">{error}</span>\n                            <div className=\"form_field\">\n                                <button\n                                    className={`fill_btn full_btn btn-effect ${checkDisable() ? 'disable_btn' : ''}`}\n                                    onClick={handleContinue}>\n                                    {'Continue'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ChooseTiming\n"]},"metadata":{},"sourceType":"module"}