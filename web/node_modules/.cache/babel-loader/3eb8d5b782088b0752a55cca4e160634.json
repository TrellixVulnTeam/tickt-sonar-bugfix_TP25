{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/seeDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react'; //@ts-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SeeDetails = props => {\n  _s();\n\n  const {\n    backToScreen,\n    data,\n    resetStateLocal\n  } = props;\n  const [isToggle, setToggle] = useState(false);\n  const [IsToggleAccept, setToggleAccept] = useState(false);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n\n  if (data) {\n    let {\n      selectedMilestoneIndex: {\n        index\n      },\n      itemDetails: {\n        milestones\n      },\n      selectedMile: {\n        description,\n        hoursWorked,\n        images\n      },\n      selectedItem: {\n        jobName,\n        jobId\n      }\n    } = data;\n    let item = milestones[index];\n\n    const renderFilteredItems = () => {\n      let sources = [];\n      let types = [];\n\n      if (images === null || images === void 0 ? void 0 : images.length) {\n        images.forEach(item => {\n          if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n            sources.push(item.link);\n            types.push('video');\n          } else if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n            sources.push(item.link);\n            types.push('image');\n          } else {\n            sources.push(item);\n            types.push('image');\n          }\n        });\n      }\n\n      return {\n        sources,\n        types\n      };\n    };\n\n    const {\n      sources,\n      types\n    } = renderFilteredItems();\n\n    const setItemToggle = index => {\n      setToggler(prev => !prev);\n      setSelectSlide(index + 1);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relate\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              backToScreen();\n            },\n            className: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: jobName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: \"Milestone details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: [item === null || item === void 0 ? void 0 : item.milestoneName, \" complete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n          toggler: toggler,\n          slide: selectedSlide,\n          sources: sources,\n          types: types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), images && Array.isArray(images) && (images === null || images === void 0 ? void 0 : images.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload_img_video\",\n          children: images.map((media_item, index) => /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"img_video\",\n            children: (media_item === null || media_item === void 0 ? void 0 : media_item.mediaType) == 1 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => {\n                setItemToggle(index);\n              },\n              \"async-src\": media_item === null || media_item === void 0 ? void 0 : media_item.link,\n              decoding: \"async\",\n              loading: \"lazy\",\n              src: media_item === null || media_item === void 0 ? void 0 : media_item.link,\n              alt: \"media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 41\n            }, this) : (media_item === null || media_item === void 0 ? void 0 : media_item.mediaType) == 2 ? /*#__PURE__*/_jsxDEV(\"video\", {\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => {\n                setItemToggle(index);\n              },\n              src: media_item === null || media_item === void 0 ? void 0 : media_item.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                cursor: 'pointer'\n              },\n              \"async-src\": media_item,\n              decoding: \"async\",\n              loading: \"lazy\",\n              onClick: () => {\n                setItemToggle(index);\n              },\n              src: media_item,\n              alt: \"media\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para\",\n            children: description || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"xs_sub_title\",\n            children: \"Hours worked in this milestone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: `${hoursWorked || 0} hours`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              backToScreen();\n            },\n            className: \"fill_btn full_btn\",\n            children: \"OK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_s(SeeDetails, \"IWKP5f8LWwwmOOanNVcw+FbFmGA=\");\n\n_c = SeeDetails;\nexport default SeeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeeDetails\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/seeDetails.tsx"],"names":["React","useState","FsLightbox","SeeDetails","props","backToScreen","data","resetStateLocal","isToggle","setToggle","IsToggleAccept","setToggleAccept","toggler","setToggler","selectedSlide","setSelectSlide","selectedMilestoneIndex","index","itemDetails","milestones","selectedMile","description","hoursWorked","images","selectedItem","jobName","jobId","item","renderFilteredItems","sources","types","length","forEach","mediaType","push","link","setItemToggle","prev","milestoneName","Array","isArray","map","media_item","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\n//@ts-ignore\nimport Skeleton from 'react-loading-skeleton';\n\n\nconst SeeDetails = (props: any) => {\n    const { backToScreen, data, resetStateLocal } = props;\n    const [isToggle, setToggle] = useState(false);\n    const [IsToggleAccept, setToggleAccept] = useState(false);\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState(1);\n\n\n    if (data) {\n        let {\n            selectedMilestoneIndex: { index },\n            itemDetails: { milestones },\n            selectedMile: { description, hoursWorked, images },\n            selectedItem: { jobName, jobId }\n        } = data;\n\n        let item: any = milestones[index];\n\n\n        const renderFilteredItems = () => {\n            let sources: any = [];\n            let types: any = [];\n\n            if (images?.length) {\n                images.forEach((item: any) => {\n                    if (item?.mediaType === 2) {\n                        sources.push(item.link);\n                        types.push('video');\n                    } else if (item?.mediaType === 1) {\n                        sources.push(item.link);\n                        types.push('image');\n                    } else {\n                        sources.push(item);\n                        types.push('image');\n                    }\n                })\n            }\n\n            return { sources, types };\n        }\n\n        const { sources, types } = renderFilteredItems();\n\n        const setItemToggle = (index: any) => {\n            setToggler((prev: boolean) => !prev);\n            setSelectSlide(index + 1);\n        }\n\n        return (\n            <div className=\"flex_row\">\n                <div className=\"flex_col_sm_8\">\n                    <div className=\"relate\">\n                        <button onClick={() => { backToScreen() }} className=\"back\"></button>\n                        <span className=\"xs_sub_title\">\n                            {jobName}\n                        </span>\n                    </div>\n                    <span className=\"sub_title\">Milestone details</span>\n                    <span className=\"xs_sub_title\">{item?.milestoneName} complete</span>\n\n                    <FsLightbox\n                        toggler={toggler}\n                        slide={selectedSlide}\n                        sources={sources}\n                        types={types}\n                    />\n\n\n                    {images && Array.isArray(images) && images?.length ?\n                        <div className=\"upload_img_video\">\n                            {images.map((media_item: any, index: any) => (\n                                <figure className=\"img_video\">\n                                    {media_item?.mediaType == 1 ? (\n                                        <img\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => { setItemToggle(index) }}\n                                            async-src={media_item?.link}\n                                            decoding=\"async\"\n                                            loading=\"lazy\"\n                                            src={media_item?.link} alt=\"media\" />\n                                    ) : media_item?.mediaType == 2 ? (\n                                        <video\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => { setItemToggle(index) }}\n                                            src={media_item?.link} />\n                                    ) : (\n                                        <img\n                                            style={{ cursor: 'pointer' }}\n                                            async-src={media_item}\n                                            decoding=\"async\"\n                                            loading=\"lazy\"\n                                            onClick={() => { setItemToggle(index) }}\n                                            src={media_item} alt=\"media\" />\n                                    )}\n                                </figure>\n                            ))}\n                        </div>\n                        : null}\n\n                    <div className=\"form_field\">\n                        <span className=\"xs_sub_title\">Description</span>\n                        <p className=\"commn_para\">{description || ''}</p>\n                    </div>\n\n                    <div className=\"form_field\">\n                        <span className=\"xs_sub_title\">Hours worked in this milestone</span>\n                        <span className=\"show_label\">{`${hoursWorked || 0} hours`}</span>\n                    </div>\n                    <div className=\"form_field\">\n                        <button\n                            onClick={() => {\n                                backToScreen()\n                            }}\n                            className=\"fill_btn full_btn\">OK</button>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n\n    return null;\n}\n\nexport default SeeDetails;\n"]},"metadata":{},"sourceType":"module"}