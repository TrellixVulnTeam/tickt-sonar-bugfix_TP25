{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/chooseJobToStartChat/chooseJobToStartChat.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport storageService from '../../utils/storageService';\nimport { getJobsBWTradieBuilder } from '../../redux/jobs/actions';\nimport { renderTimeWithCustomFormat } from '../../utils/common';\nimport noData from '../../assets/images/no-search-data.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChooseJobToStartChat = props => {\n  _s();\n\n  const [editItem, setEditItems] = useState({});\n  const [jobId, setJobId] = useState('');\n  const [jobName, setJobName] = useState('');\n  const [jobList, setJobList] = useState([]);\n  const [pageNo, setPageNo] = useState(1);\n  const [totalCount, setTotalCount] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n  const [oppUserId, setOppUserId] = useState('');\n\n  const checkOnClick = (e, jobId, jobName) => {\n    if (editItem[jobId]) {\n      setEditItems({});\n      setJobId('');\n      setJobName('');\n      return;\n    }\n\n    setEditItems(prev => ({\n      [jobId]: e.target.checked\n    }));\n    setJobId(jobId);\n    setJobName(jobName);\n  };\n\n  useEffect(() => {\n    callJobList();\n  }, []);\n\n  const callJobList = async () => {\n    var _props$history, _props$history$locati;\n\n    if (jobList.length >= totalCount) {\n      setHasMoreItems(false);\n      return;\n    }\n\n    console.log('props: ', props);\n    const oppUsrId = new URLSearchParams((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.state).get(storageService.getItem('userType') === 1 ? 'builderId' : 'tradieId');\n    console.log('oppUsrId: ', oppUsrId);\n    setOppUserId(oppUsrId);\n    const data = {\n      oppUserId: oppUsrId,\n      page: pageNo,\n      perPage: 10,\n      user_type: storageService.getItem('userType') === 1 ? 2 : 1\n    };\n    const res = await getJobsBWTradieBuilder(data);\n\n    if (res.success) {\n      var _res$result, _res$result2, _res$result2$data, _res$result3;\n\n      const allJobs = [...jobList, ...((_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.data)];\n\n      if (((_res$result2 = res.result) === null || _res$result2 === void 0 ? void 0 : (_res$result2$data = _res$result2.data) === null || _res$result2$data === void 0 ? void 0 : _res$result2$data.length) < 10) {\n        setHasMoreItems(false);\n      }\n\n      setJobList(allJobs);\n      setPageNo(pageNo + 1);\n\n      if (((_res$result3 = res.result) === null || _res$result3 === void 0 ? void 0 : _res$result3.totalCount) !== totalCount) {\n        var _res$result4;\n\n        setTotalCount((_res$result4 = res.result) === null || _res$result4 === void 0 ? void 0 : _res$result4.totalCount);\n      }\n    }\n  };\n\n  const handleSubmit = () => {\n    var _storageService$getIt, _storageService$getIt2;\n\n    props.history.push({\n      pathname: `/chat`,\n      state: { ...(storageService.getItem('userType') === 1 ? {\n          tradieId: (_storageService$getIt = storageService.getItem('userInfo')) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id\n        } : {\n          builderId: (_storageService$getIt2 = storageService.getItem('userInfo')) === null || _storageService$getIt2 === void 0 ? void 0 : _storageService$getIt2._id\n        }),\n        ...(storageService.getItem('userType') === 1 ? {\n          builderId: oppUserId\n        } : {\n          tradieId: oppUserId\n        }),\n        jobId: jobId,\n        jobName: jobName\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: jobList.length,\n    next: callJobList,\n    hasMore: hasMoreItems,\n    loader: /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relate\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"back\",\n                    onClick: () => props.history.goBack()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"title\",\n                    children: 'Choose the job'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), !props.isLoading && (jobList === null || jobList === void 0 ? void 0 : jobList.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no_record\",\n                children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"no_img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: noData,\n                    alt: \"data not found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: `You must have worked on at least a single job with the ${storageService.getItem('userType') === 1 ? 'builder' : 'tradesperson'} to start conversation with them.`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 79\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), (jobList === null || jobList === void 0 ? void 0 : jobList.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              className: `fill_btn full_btn btn-effect ${!Object.keys(editItem).length && !jobId && !jobName ? 'disable_btn' : ''}`,\n              children: \"Start chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: `milestones`,\n                children: (jobList === null || jobList === void 0 ? void 0 : jobList.length) > 0 && jobList.map((i, index) => {\n                  const item = i.jobData;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"checkbox_wrap agree_check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        checked: editItem[item === null || item === void 0 ? void 0 : item._id] == true ? true : false,\n                        onChange: e => {\n                          checkOnClick(e, item === null || item === void 0 ? void 0 : item._id, item === null || item === void 0 ? void 0 : item.jobName);\n                        },\n                        className: \"filter-type filled-in\",\n                        type: \"checkbox\",\n                        id: `milestone${index}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `milestone${index}`,\n                        children: `${item === null || item === void 0 ? void 0 : item.tradeName}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"info\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: item === null || item === void 0 ? void 0 : item.jobName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 140,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: renderTimeWithCustomFormat(item === null || item === void 0 ? void 0 : item.from_date, item === null || item === void 0 ? void 0 : item.to_date, '', ['DD MMM', 'DD MMM YY'])\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 53\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChooseJobToStartChat, \"h5TV2Z1cwAc8WhKSRn0B8Xhqf/c=\");\n\n_c = ChooseJobToStartChat;\n\nconst mapStateToProps = state => ({\n  isLoading: state.common.isLoading\n});\n\nexport default connect(mapStateToProps, null)(ChooseJobToStartChat);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseJobToStartChat\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chooseJobToStartChat/chooseJobToStartChat.tsx"],"names":["useState","useEffect","connect","InfiniteScroll","storageService","getJobsBWTradieBuilder","renderTimeWithCustomFormat","noData","ChooseJobToStartChat","props","editItem","setEditItems","jobId","setJobId","jobName","setJobName","jobList","setJobList","pageNo","setPageNo","totalCount","setTotalCount","hasMoreItems","setHasMoreItems","oppUserId","setOppUserId","checkOnClick","e","prev","target","checked","callJobList","length","console","log","oppUsrId","URLSearchParams","history","location","state","get","getItem","data","page","perPage","user_type","res","success","allJobs","result","handleSubmit","push","pathname","tradieId","_id","builderId","goBack","isLoading","Object","keys","map","i","index","item","jobData","tradeName","from_date","to_date","mapStateToProps","common"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport storageService from '../../utils/storageService';\nimport { getJobsBWTradieBuilder } from '../../redux/jobs/actions';\nimport { renderTimeWithCustomFormat } from '../../utils/common';\n\nimport noData from '../../assets/images/no-search-data.png';\n\nconst ChooseJobToStartChat = (props: any) => {\n\n    const [editItem, setEditItems] = useState<{ [index: string]: any }>({});\n    const [jobId, setJobId] = useState('');\n    const [jobName, setJobName] = useState('');\n\n    const [jobList, setJobList] = useState<Array<any>>([]);\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [totalCount, setTotalCount] = useState<number>(1);\n    const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n    const [oppUserId, setOppUserId] = useState<string | null>('');\n\n    const checkOnClick = (e: any, jobId: string, jobName: string) => {\n        if (editItem[jobId]) {\n            setEditItems({});\n            setJobId('');\n            setJobName('');\n            return;\n        }\n        setEditItems((prev) => ({ [jobId]: e.target.checked }));\n        setJobId(jobId);\n        setJobName(jobName);\n    }\n\n    useEffect(() => {\n        callJobList();\n    }, []);\n\n    const callJobList = async () => {\n        if (jobList.length >= totalCount) {\n            setHasMoreItems(false);\n            return;\n        }\n        console.log('props: ', props);\n        const oppUsrId = new URLSearchParams(props.history?.location?.state).get(storageService.getItem('userType') === 1 ? 'builderId' : 'tradieId');\n        console.log('oppUsrId: ', oppUsrId);\n        setOppUserId(oppUsrId);\n        const data = {\n            oppUserId: oppUsrId,\n            page: pageNo,\n            perPage: 10,\n            user_type: storageService.getItem('userType') === 1 ? 2 : 1\n        }\n        const res = await getJobsBWTradieBuilder(data);\n        if (res.success) {\n            const allJobs = [...jobList, ...res.result?.data];\n            if (res.result?.data?.length < 10) {\n                setHasMoreItems(false);\n            }\n            setJobList(allJobs);\n            setPageNo(pageNo + 1);\n            if (res.result?.totalCount !== totalCount) {\n                setTotalCount(res.result?.totalCount);\n            }\n        }\n    }\n\n    const handleSubmit = () => {\n        props.history.push({\n            pathname: `/chat`,\n            state: {\n                ...(storageService.getItem('userType') === 1 ? { tradieId: storageService.getItem('userInfo')?._id } : { builderId: storageService.getItem('userInfo')?._id }),\n                ...(storageService.getItem('userType') === 1 ? { builderId: oppUserId } : { tradieId: oppUserId }),\n                jobId: jobId,\n                jobName: jobName\n            }\n        })\n    }\n\n    return (\n        <InfiniteScroll\n            dataLength={jobList.length}\n            next={callJobList}\n            hasMore={hasMoreItems}\n            loader={<h4></h4>}\n        >\n            <div className=\"app_wrapper\">\n                <div className=\"section_wrapper\">\n                    <div className=\"custom_container\">\n                        <div className=\"form_field\">\n                            <div className=\"flex_row\">\n                                <div className=\"flex_col_sm_5\">\n                                    <div className=\"relate\">\n                                        <button\n                                            className=\"back\"\n                                            onClick={() => props.history.goBack()}\n                                        >\n                                        </button>\n                                        <span className=\"title\">\n                                            {'Choose the job'}\n                                        </span>\n                                    </div>\n                                </div>\n\n                                {!props.isLoading && jobList?.length === 0 && <div className=\"no_record\">\n                                    <figure className=\"no_img\">\n                                        <img src={noData} alt=\"data not found\" />\n                                    </figure>\n                                    <span>{`You must have worked on at least a single job with the ${storageService.getItem('userType') === 1 ? 'builder' : 'tradesperson'} to start conversation with them.`}</span>\n                                </div>}\n\n                            </div>\n                        </div>\n\n                        {jobList?.length > 0 && <div className=\"form_field\">\n                            <button onClick={handleSubmit} className={`fill_btn full_btn btn-effect ${(!Object.keys(editItem).length && !jobId && !jobName) ? 'disable_btn' : ''}`}>\n                                Start chat\n                            </button>\n                        </div>}\n\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n                                <ul className={`milestones`}>\n                                    {jobList?.length > 0 &&\n                                        jobList.map((i: any, index: any) => {\n                                            const item: any = i.jobData;\n                                            return (\n                                                <li key={index}>\n                                                    <div className=\"checkbox_wrap agree_check\">\n                                                        <input\n                                                            checked={editItem[item?._id] == true ? true : false}\n                                                            onChange={(e: any) => { checkOnClick(e, item?._id, item?.jobName) }}\n                                                            className=\"filter-type filled-in\"\n                                                            type=\"checkbox\"\n                                                            id={`milestone${index}`} />\n                                                        <label\n                                                            htmlFor={`milestone${index}`}>\n                                                            {`${item?.tradeName}`}\n                                                        </label>\n                                                        <div className=\"info\">\n                                                            <span>{item?.jobName}</span>\n                                                            <span>\n                                                                {renderTimeWithCustomFormat(\n                                                                    item?.from_date,\n                                                                    item?.to_date,\n                                                                    '',\n                                                                    ['DD MMM', 'DD MMM YY']\n                                                                )}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            )\n                                        })}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </InfiniteScroll>\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    isLoading: state.common.isLoading\n});\n\nexport default connect(mapStateToProps, null)(ChooseJobToStartChat);\n\n"]},"metadata":{},"sourceType":"module"}