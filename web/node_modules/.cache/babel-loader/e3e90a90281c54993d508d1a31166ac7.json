{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/quoteJobs/success.tsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport templateImage from '../../../../assets/images/thanks-bg.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteSuccess = props => {\n  _s();\n\n  var _history$location, _history$location$sta;\n\n  const history = useHistory();\n  console.log('history: ', history);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_text_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"full_image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: templateImage,\n        alt: \"template-item\",\n        loading: \"eager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short_info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: 'Nice!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: `Your quote has been sent to ${(_history$location = history.location) === null || _history$location === void 0 ? void 0 : (_history$location$sta = _history$location.state) === null || _history$location$sta === void 0 ? void 0 : _history$location$sta.builderName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn_wrapr\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                props.history.push('/');\n              },\n              className: \"fill_btn btn-effect\",\n              children: 'OK'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteSuccess, \"D46s8BKOHD/PV7mMOu0J5AGsyso=\", false, function () {\n  return [useHistory];\n});\n\n_c = QuoteSuccess;\n\nconst mapStateToProps = state => {\n  return {\n    userType: state.profile.userType\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, null)(QuoteSuccess));\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteSuccess\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/quoteJobs/success.tsx"],"names":["connect","withRouter","useHistory","templateImage","QuoteSuccess","props","history","console","log","location","state","builderName","push","mapStateToProps","userType","profile"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,kBAAvC;AAEA,OAAOC,aAAP,MAA0B,yCAA1B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAgB;AAAA;;AAAA;;AACnC,QAAMC,OAAY,GAAGJ,UAAU,EAA/B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,OAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEH,aAAV;AAAyB,QAAA,GAAG,EAAC,eAA7B;AAA6C,QAAA,OAAO,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBACG;AADH;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,sBACI,+BAAD,qBAA+BG,OAAO,CAACG,QAAvC,+EAA+B,kBAAkBC,KAAjD,0DAA+B,sBAAyBC,WAAY;AADvE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AACE,cAAA,OAAO,EAAE,MAAM;AACbN,gBAAAA,KAAK,CAACC,OAAN,CAAcM,IAAd,CAAmB,GAAnB;AACD,eAHH;AAIE,cAAA,SAAS,EAAC,qBAJZ;AAAA,wBAKG;AALH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA9BD;;GAAMR,Y;UACiBF,U;;;KADjBE,Y;;AAgCN,MAAMS,eAAe,GAAIH,KAAD,IAAgB;AACtC,SAAO;AACLI,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,OAAN,CAAcD;AADnB,GAAP;AAGD,CAJD;;AAMA,eAAeb,UAAU,CAACD,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,YAA/B,CAAD,CAAzB","sourcesContent":["import { connect } from 'react-redux';\nimport { withRouter, useHistory } from \"react-router-dom\";\n\nimport templateImage from '../../../../assets/images/thanks-bg.jpg';\n\nconst QuoteSuccess = (props: any) => {\n  const history: any = useHistory();\n  console.log('history: ', history);\n\n  return (\n    <div className=\"img_text_wrap\">\n      <figure className=\"full_image\">\n        <img src={templateImage} alt=\"template-item\" loading=\"eager\" />\n        <div className=\"short_info\">\n          <div className=\"content\">\n            <h1 className=\"title\">\n              {'Nice!'}\n            </h1>\n            <span className=\"show_label\">\n              {`Your quote has been sent to ${history.location?.state?.builderName}`}\n            </span>\n            <div className=\"btn_wrapr\">\n              <button\n                onClick={() => {\n                  props.history.push('/');\n                }}\n                className=\"fill_btn btn-effect\">\n                {'OK'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </figure>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: any) => {\n  return {\n    userType: state.profile.userType\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, null)(QuoteSuccess));"]},"metadata":{},"sourceType":"module"}