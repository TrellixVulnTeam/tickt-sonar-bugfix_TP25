{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/activeJobs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport approved from '../../../assets/images/approved.png';\nimport waiting from '../../../assets/images/exclamation.png';\nimport MarkMilestones from './markMilestones';\nimport { withRouter } from 'react-router-dom';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport { renderTime } from '../../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActiveJobs = ({\n  setJobLabel,\n  activeType,\n  history,\n  dataItems,\n  jobType,\n  isLoading,\n  enableEditMilestone,\n  enableLodgeDispute,\n  enableMakMilestone,\n  enableCancelJob,\n  globalJobId\n}) => {\n  _s();\n\n  let listData = dataItems;\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [localState, setLocalState] = useState(false);\n\n  const resetStateLocal = isTrue => {\n    setJobLabel(activeType);\n    setLocalState(false);\n\n    if (isTrue) {\n      history.push('/decline-milestone-success');\n    }\n  };\n\n  useEffect(() => {\n    console.log('here!');\n  }, [jobType]);\n  useEffect(() => {\n    var _Object$keys;\n\n    let filteredItem = {};\n    listData.forEach((item_, index) => {\n      if (item_.jobId === globalJobId) {\n        filteredItem = { ...item_,\n          index\n        };\n      }\n    });\n\n    if ((_Object$keys = Object.keys(filteredItem)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) {\n      var _filteredItem;\n\n      setSelectedIndex((_filteredItem = filteredItem) === null || _filteredItem === void 0 ? void 0 : _filteredItem.index);\n      setLocalState(true);\n    }\n  }, [enableEditMilestone, enableLodgeDispute, enableCancelJob, enableMakMilestone]); // const redirectToInfo = ({ jobId, status }: any) => {\n  //     if (jobId?.length && status?.length) {\n  //         let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&edit=true`)\n  //         history.push(`/job-detail?${urlEncode}`);\n  //     }\n  // }\n\n  if (localState && selectedIndex !== null) {\n    console.log({\n      localState,\n      selectedIndex,\n      listData\n    });\n    return /*#__PURE__*/_jsxDEV(MarkMilestones, {\n      resetStateLocal: resetStateLocal,\n      selectedIndex: selectedIndex,\n      listData: listData,\n      enableEditMilestone: enableEditMilestone,\n      enableLodgeDispute: enableLodgeDispute,\n      enableCancelJob: enableCancelJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (isLoading || listData == undefined) {\n    return null;\n  }\n\n  console.log({\n    listData,\n    isLoading\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sub_title\",\n      children: [jobType.charAt(0).toUpperCase() + jobType.slice(1), \" Jobs\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row tradies_row\",\n      children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n        amount,\n        durations,\n        jobId,\n        jobName,\n        fromDate,\n        toDate,\n        milestoneNumber,\n        specializationId,\n        specializationName,\n        status,\n        timeLeft,\n        location,\n        locationName,\n        total,\n        totalmem,\n        totalMilestones,\n        tradieListData,\n        tradeName,\n        tradieId,\n        tradeSelectedUrl,\n        tradieImage,\n        mathrandom\n      }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card\",\n          \"data-aos\": \"fade-in\",\n          \"data-aos-delay\": \"250\",\n          \"data-aos-duration\": \"1000\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"more_detail circle\",\n            onClick: () => {\n              setLocalState(true);\n              setSelectedIndex(index); // redirectToInfo({ jobId, tradieId, specializationId, status });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tradeSelectedUrl || jobTypePlaceholder,\n                onError: e => {\n                  var _e$target, _e$target2;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                    e.target.src = jobTypePlaceholder;\n                  }\n                },\n                alt: \"traide-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: tradeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: total\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: renderTime(fromDate, toDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: timeLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_progress_wrap\",\n            id: \"scroll-progress-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress_wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"completed-digit\",\n                id: \"digit-progress\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: `Job Milestones ${milestoneNumber} `\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 45\n                }, this), `of ${totalMilestones}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"approval_info\",\n                children: [status.toUpperCase() === \"APPROVED\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: approved,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 87\n                }, this), (status.toUpperCase() === \"NEEDS APPROVAL\" || status.toUpperCase() === \"NEED APPROVAL\") && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: waiting,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 49\n                }, this), status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress_bar\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"done_progress\",\n                  id: \"progress-bar\",\n                  type: \"range\",\n                  min: \"0\",\n                  value: milestoneNumber / totalMilestones * 100\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this), (status === \"NEEDS APPROVAL\" || status === \"NEED APPROVAL\" || status === \"need approval\") && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setLocalState(true);\n                setSelectedIndex(index);\n              },\n              className: \"fill_grey_btn full_btn btn-effect\",\n              children: 'Approve'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record  m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noDataFound,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: 'No Data Found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ActiveJobs, \"y2CUuWwm/oWOUQEAlyW7aawfqhU=\");\n\n_c = ActiveJobs;\nexport default _c2 = withRouter(ActiveJobs);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActiveJobs\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/activeJobs.tsx"],"names":["React","useState","useEffect","approved","waiting","MarkMilestones","withRouter","noDataFound","jobTypePlaceholder","renderTime","ActiveJobs","setJobLabel","activeType","history","dataItems","jobType","isLoading","enableEditMilestone","enableLodgeDispute","enableMakMilestone","enableCancelJob","globalJobId","listData","selectedIndex","setSelectedIndex","localState","setLocalState","resetStateLocal","isTrue","push","console","log","filteredItem","forEach","item_","index","jobId","Object","keys","length","undefined","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","status","timeLeft","location","locationName","total","totalmem","totalMilestones","tradieListData","tradeName","tradieId","tradeSelectedUrl","tradieImage","mathrandom","e","target","onerror","src"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useEffect } from 'react'\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport approved from '../../../assets/images/approved.png';\nimport waiting from '../../../assets/images/exclamation.png';\nimport MarkMilestones from './markMilestones';\nimport { withRouter } from 'react-router-dom';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport LodgeDispute from './lodgeDispute/lodgeDispute';\nimport CancelJobs from './cancelJobs/cancelJob';\nimport { renderTime } from '../../../utils/common';\ninterface Active {\n    amount: any,\n    durations: any,\n    jobId: any,\n    jobName: any,\n    fromDate: any,\n    toDate: any,\n    milestoneNumber: any,\n    specializationId: any,\n    specializationName: any,\n    status: any,\n    timeLeft: any,\n    locationName: any,\n    total: any,\n    totalmem: any,\n    totalMilestones: any,\n    tradieListData: any,\n    tradeName: any,\n    location: any,\n    tradieId: any,\n    tradieImage: any,\n    tradeSelectedUrl: any,\n    activeType: any,\n    setJobLabel: (item: any) => void,\n    enableEditMilestone: boolean,\n    enableLodgeDispute: boolean,\n    enableCancelJob: boolean\n    globalJobId: string,\n    mathrandom?: any\n}\n\nconst ActiveJobs = ({\n    setJobLabel,\n    activeType,\n    history,\n    dataItems,\n    jobType,\n    isLoading,\n    enableEditMilestone,\n    enableLodgeDispute,\n    enableMakMilestone,\n    enableCancelJob,\n    globalJobId\n}: any) => {\n    let listData: any = dataItems;\n    const [selectedIndex, setSelectedIndex] = useState<any>(null);\n    const [localState, setLocalState] = useState(false);\n\n    const resetStateLocal = (isTrue: boolean) => {\n        setJobLabel(activeType);\n        setLocalState(false)\n        if (isTrue) {\n            history.push('/decline-milestone-success');\n        }\n    }\n\n    useEffect(() => {\n        console.log('here!')\n    }, [jobType]);\n\n\n    useEffect(() => {\n        let filteredItem: any = {};\n        listData.forEach((item_: any, index: any) => {\n            if (item_.jobId === globalJobId) {\n                filteredItem = {\n                    ...item_,\n                    index\n                }\n            }\n        })\n\n        if (Object.keys(filteredItem)?.length) {\n            setSelectedIndex(filteredItem?.index);\n            setLocalState(true);\n        }\n    }, [enableEditMilestone, enableLodgeDispute, enableCancelJob, enableMakMilestone]);\n\n    // const redirectToInfo = ({ jobId, status }: any) => {\n    //     if (jobId?.length && status?.length) {\n    //         let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&edit=true`)\n    //         history.push(`/job-detail?${urlEncode}`);\n    //     }\n    // }\n\n    if (localState && selectedIndex !== null) {\n        console.log({ localState, selectedIndex, listData })\n        return (\n            <MarkMilestones\n                resetStateLocal={resetStateLocal}\n                selectedIndex={selectedIndex}\n                listData={listData}\n                enableEditMilestone={enableEditMilestone}\n                enableLodgeDispute={enableLodgeDispute}\n                enableCancelJob={enableCancelJob}\n            />)\n    }\n\n    if (isLoading || listData == undefined) {\n        return null;\n    }\n\n    console.log({ listData, isLoading })\n    return (\n        <React.Fragment>\n            <span className=\"sub_title\">{jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n                {/* {listData?.length} */}\n            </span>\n            <div className=\"flex_row tradies_row\">\n                {listData?.length ?\n                    listData.map(({\n                        amount,\n                        durations,\n                        jobId,\n                        jobName,\n                        fromDate,\n                        toDate,\n                        milestoneNumber,\n                        specializationId,\n                        specializationName,\n                        status,\n                        timeLeft,\n                        location,\n                        locationName,\n                        total,\n                        totalmem,\n                        totalMilestones,\n                        tradieListData,\n                        tradeName,\n                        tradieId,\n                        tradeSelectedUrl,\n                        tradieImage,\n                        mathrandom,\n                    }: Active, index: number) => (\n                        <div className=\"flex_col_sm_6\">\n                            <div className=\"tradie_card\"\n                                data-aos=\"fade-in\"\n                                data-aos-delay=\"250\"\n                                data-aos-duration=\"1000\"\n                            >\n                                <span className=\"more_detail circle\"\n                                    onClick={() => {\n                                        setLocalState(true);\n                                        setSelectedIndex(index);\n                                        // redirectToInfo({ jobId, tradieId, specializationId, status });\n                                    }}>\n                                </span>\n                                <div className=\"user_wrap\">\n                                    <figure className=\"u_img\">\n                                        <img\n                                            src={tradeSelectedUrl || jobTypePlaceholder}\n                                            onError={(e: any) => {\n                                                if (e?.target?.onerror) {\n                                                    e.target.onerror = null;\n                                                }\n                                                if (e?.target?.src) {\n                                                    e.target.src = jobTypePlaceholder;\n                                                }\n                                            }}\n                                            alt=\"traide-img\" />\n                                    </figure>\n                                    <div className=\"details\">\n                                        <span className=\"name\">{tradeName}</span>\n                                        <p className=\"commn_para\">{jobName}</p>\n                                    </div>\n                                </div>\n                                <div className=\"job_info\">\n                                    <ul>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"\">\n                                            <span>\n                                                {total}\n                                            </span>\n                                        </li>\n                                        <li className=\"icon calendar\">\n                                            {/* {durations} */}\n                                            {renderTime(fromDate, toDate)}\n                                        </li>\n                                        <li className=\"\">\n                                            <span>\n                                                {timeLeft}\n                                            </span>\n                                        </li>\n\n                                        {/* <li className=\"icon clock\">{durations}</li>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"icon location line-1\">{location}</li>\n                                        <li className=\"icon calendar\">{timeLeft}</li> */}\n                                    </ul>\n                                </div>\n                                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                    <div className=\"progress_wrapper\">\n                                        <span className=\"completed-digit\" id=\"digit-progress\">\n                                            <b>{`Job Milestones ${milestoneNumber} `}</b>{`of ${totalMilestones}`}\n                                        </span>\n                                        <span className=\"approval_info\">\n                                            {(status).toUpperCase() === \"APPROVED\" && <img src={approved} alt=\"icon\" />}\n                                            {((status).toUpperCase() === \"NEEDS APPROVAL\" || (status).toUpperCase() === \"NEED APPROVAL\") && (\n                                                <img src={waiting} alt=\"icon\" />\n                                            )}\n                                            {status}\n                                            {/* {(status).toUpperCase() === \"ACCEPTED CHANGE REQUEST\"\n                                                ? \"ACCEPTED C.R \"\n                                                : (status).toUpperCase()  === 'PENDING CHANGE REQUEST'\n                                                    ? 'PENDING C.R'\n                                                    : status}\n                                                    {console.log({\n                                                        status\n                                                    })} */}\n                                        </span>\n                                        <span className=\"progress_bar\">\n                                            <input\n                                                className=\"done_progress\"\n                                                id=\"progress-bar\"\n                                                type=\"range\"\n                                                min=\"0\"\n                                                value={milestoneNumber / totalMilestones * 100}\n                                            />\n                                        </span>\n                                    </div>\n                                    {(status === \"NEEDS APPROVAL\" || status === \"NEED APPROVAL\" || status === \"need approval\") && (\n                                        <button\n                                            onClick={() => {\n                                                setLocalState(true);\n                                                setSelectedIndex(index);\n                                            }}\n                                            className=\"fill_grey_btn full_btn btn-effect\">\n                                            {'Approve'}\n                                            {/* <img src={rateStar} alt=\"rating-star\" />\n                                        {'Rate this job'} */}\n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    )) : !isLoading && (\n                        <div className=\"no_record  m-t-vh\">\n                            <figure className=\"no_img\">\n                                <img src={noDataFound} alt=\"data not found\" />\n                            </figure>\n                            <span>{'No Data Found'}</span>\n                        </div>)}\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default withRouter(ActiveJobs);"]},"metadata":{},"sourceType":"module"}