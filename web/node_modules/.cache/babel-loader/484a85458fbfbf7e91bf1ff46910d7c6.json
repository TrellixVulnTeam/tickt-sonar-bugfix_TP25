{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/shared/bannerSearch.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../../utils/constants\"; // @ts-ignore\n\nimport PlacesAutocomplete from \"react-places-autocomplete\";\n// @ts-ignore\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\n\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getSearchJobList, getRecentSearchList, postHomeSearchData, getRecentLocationList } from \"../../redux/homeSearch/actions\";\nimport { isHandleChanges } from \"../../redux/jobs/actions\"; // @ts-ignore\n\nimport { useDetectClickOutside } from \"react-detect-click-outside\";\nimport moment from \"moment\";\nimport Geocode from \"react-geocode\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport { deleteRecentSearch } from \"../../redux/homeSearch/actions\";\nimport { renderTimeWithCustomFormat } from \"../../utils/common\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"au\"); // Geocode?.setLocationType(\"ROOFTOP\");\n\nconst example_calender = {\n  startDate: \"\",\n  endDate: \"\",\n  key: \"selection1\"\n};\nexport function useStateFromProp(initialValue) {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => setValue(initialValue), [initialValue]);\n  return [value, setValue];\n}\n\n_s(useStateFromProp, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\n\nconst BannerSearch = props => {\n  _s2();\n\n  var _props$recentLocation, _props$recentLocation2;\n\n  let props_selected = props.selectedItem;\n  const {\n    selectedItem,\n    isHandleChanges,\n    localChanges,\n    getRecentSearchList,\n    getRecentLocationList\n  } = props;\n  const [checkOnChange, setOnChange] = useState(false);\n  const [showOnlyTradeName, setShowOnlyTradeName] = useState(false);\n  const [locationStatus, setLocationStatus] = useState(null);\n  const [stateData, setStateData] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [addressText, setAddressText] = useState(\"\");\n  const [recentLocation, setRecentLocation] = useState([]); // recentLocation\n\n  const [selectedAddress, setSelectedAddress] = useState({});\n  const [enableCurrentLocation, setCurrentLocations] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [selectedTrade, setSelectedTrade] = useState({});\n  const [inputFocus1, setInputFocus1] = useState(false);\n  const [inputFocus2, setInputFocus2] = useState(false);\n  const [inputFocus3, setInputFocus3] = useState(false);\n  const [calenderRange1, setCalenderRange1] = useState(example_calender);\n  const [suggestionSelected, setSuggestion] = useState({});\n  const tradeListRedux = useSelector(state => state.auth.tradeListData);\n\n  const handleOnOutsideSearch = () => {\n    setOnChange(false);\n    setInputFocus1(false);\n  };\n\n  const handleOnOutsideLocation = () => {\n    setInputFocus2(false);\n  };\n\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const [addressRef, setAddressRef] = useState(\"\");\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: () => {\n      // if (addressText?.length > 3) {\n      handleOnOutsideLocation(); // }\n    }\n  });\n  const locationRefClone = useDetectClickOutside({\n    onTriggered: () => {// if (!addressText || addressText?.length < 2) {\n      // handleOnOutsideLocation()\n      // }\n    }\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender\n  });\n\n  const handleCalenderRange = item => {\n    setCalenderRange1(item.selection1);\n  };\n\n  useEffect(() => {\n    if (getRecentSearchList) {\n      getRecentSearchList();\n    }\n\n    if (getRecentLocationList) {\n      getRecentLocationList();\n    } // getRecentLocationData();\n\n  }, []);\n  useEffect(() => {\n    console.log(\"In local-changes\", {\n      props: props.selectedItem\n    });\n    return () => {\n      console.log(\"local-changes\", {\n        props: props.selectedItem\n      });\n    };\n  }, [props]);\n  useEffect(() => {// if (props.recentLocationData?.length && JSON.stringify(props.recentLocationData[0]?.location?.coordinates) !== JSON.stringify(recentLocation[0]?.location?.coordinates)) {\n    //     getRecentLocationData();\n    // }\n  }, [props.recentLocationData, recentLocation]);\n  useEffect(() => {\n    if ((searchText === null || searchText === void 0 ? void 0 : searchText.length) > 2) {\n      props.getSearchJobList(searchText);\n    }\n\n    if (!(searchText === null || searchText === void 0 ? void 0 : searchText.length)) {\n      setSelectedTrade({});\n    }\n  }, [searchText]);\n\n  const checkIfExist = _id => {\n    if (selectedTrade) {\n      let isLength = Object.keys(selectedTrade).length;\n\n      if (isLength) {\n        let item = selectedTrade;\n\n        if ((item === null || item === void 0 ? void 0 : item._id) === _id) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  const cleanRecentSearch = async (event, recentSearchId) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0\n    };\n    const res = await deleteRecentSearch(data);\n\n    if (res.success) {\n      if (getRecentSearchList) {\n        getRecentSearchList();\n      }\n    }\n  };\n\n  const recentJobSearches = () => {\n    var _props$recentSearchJo, _props$recentSearchJo2, _props$recentSearchJo3;\n\n    let props_Clone = props;\n    let tradeListData = props_Clone.tradeListData;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_autosuggestion\",\n        id: \"recent-job-search-div\",\n        children: [(props === null || props === void 0 ? void 0 : (_props$recentSearchJo = props.recentSearchJobData) === null || _props$recentSearchJo === void 0 ? void 0 : _props$recentSearchJo.length) ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Recent searches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row recent_search\",\n            children: ((_props$recentSearchJo2 = props.recentSearchJobData) === null || _props$recentSearchJo2 === void 0 ? void 0 : _props$recentSearchJo2.length) > 0 && ((_props$recentSearchJo3 = props.recentSearchJobData) === null || _props$recentSearchJo3 === void 0 ? void 0 : _props$recentSearchJo3.slice(0, 4).map(item => {\n              console.log(item, \"item--------------------------------------------------\");\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_3\",\n                onClick: () => {\n                  let selected_address = selectedAddress;\n                  props.history.push({\n                    pathname: `search-tradie-results`,\n                    state: {\n                      name: item === null || item === void 0 ? void 0 : item.name,\n                      tradeId: [item === null || item === void 0 ? void 0 : item._id],\n                      specializations: \"12345\",\n                      location: Object.keys(selected_address).length ? {\n                        coordinates: [selected_address === null || selected_address === void 0 ? void 0 : selected_address.lng, selected_address === null || selected_address === void 0 ? void 0 : selected_address.lat]\n                      } : null,\n                      calender: calenderRange1,\n                      address: addressText\n                    }\n                  }); // setItemSearch(item);\n                  // setSelectedTrade({});\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card ico_txt_wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                    className: \"ico\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: (item === null || item === void 0 ? void 0 : item.image) || residential,\n                      alt: \"icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"f_column\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"name\",\n                      children: item.trade_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"remove_card\",\n                    onClick: event => cleanRecentSearch(event, item.recentSearchId),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: close,\n                      alt: \"remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 23\n              }, this);\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select_sphere recent_search\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tradeListData === null || tradeListData === void 0 ? void 0 : tradeListData.map(({\n              _id,\n              trade_name,\n              selected_url,\n              specialisations\n            }) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                let item_spec = specialisations;\n\n                if (item_spec === null || item_spec === void 0 ? void 0 : item_spec.length) {\n                  let getItem = item_spec[0];\n\n                  if (getItem) {\n                    setStateData({\n                      image: selected_url,\n                      name: getItem === null || getItem === void 0 ? void 0 : getItem.name,\n                      specializationsId: getItem === null || getItem === void 0 ? void 0 : getItem._id,\n                      trade_name: trade_name,\n                      _id: _id\n                    });\n                    setSearchText(trade_name);\n                  }\n\n                  setShowOnlyTradeName(true);\n                  setSelectedTrade({\n                    _id,\n                    trade_name,\n                    selected_url,\n                    specialisations\n                  });\n                }\n              },\n              className: checkIfExist(_id) ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selected_url,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: trade_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const renderJobResult = () => {\n    var _props$searchJobListD;\n\n    if (props === null || props === void 0 ? void 0 : (_props$searchJobListD = props.searchJobListData) === null || _props$searchJobListD === void 0 ? void 0 : _props$searchJobListD.length) {\n      var _props$searchJobListD2;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_autosuggestion\",\n        id: \"fetched-custom-job-category-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recent_search\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"drop_data\",\n            children: (_props$searchJobListD2 = props.searchJobListData) === null || _props$searchJobListD2 === void 0 ? void 0 : _props$searchJobListD2.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  setItemSearch(item);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"category\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.image ? item.image : residential,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"prof\",\n                    children: item.trade_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  const onError = (status, clearSuggestions) => {\n    console.log(\"Google Maps API returned error with status: \", status);\n    clearSuggestions();\n  };\n\n  const validateForm = () => {\n    return true;\n  };\n\n  const setItemSearch = item => {\n    setStateData(item);\n    setSelectedTrade({});\n    setSearchText((item === null || item === void 0 ? void 0 : item.name) || \"\");\n  };\n\n  const bannerSearchClicked = () => {\n    let selected_address = selectedAddress;\n    let selected_trade = selectedTrade;\n    let selected_item = props === null || props === void 0 ? void 0 : props.selectedItem;\n    let props_trade = selected_item === null || selected_item === void 0 ? void 0 : selected_item.selectedTrade;\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : stateData._id) && !(props_trade === null || props_trade === void 0 ? void 0 : props_trade._id)) {\n      setShowToast(true, \"Please enter the valid search text\");\n      return;\n    }\n\n    if (checkOnChange) {\n      setShowToast(true, \"Please select job type from the list\");\n      return;\n    }\n\n    if (validateForm()) {\n      var _data$address;\n\n      let data = {\n        page: 1,\n        isFiltered: false,\n        tradeId: [stateData === null || stateData === void 0 ? void 0 : stateData._id],\n        specializationId: [stateData === null || stateData === void 0 ? void 0 : stateData.specializationsId]\n      };\n\n      if (Object.keys(selectedAddress).length) {\n        data[\"location\"] = {\n          coordinates: [parseFloat(selected_address === null || selected_address === void 0 ? void 0 : selected_address.lng), parseFloat(selected_address === null || selected_address === void 0 ? void 0 : selected_address.lat)]\n        };\n\n        if (addressText) {\n          data[\"address\"] = addressText && Object.keys(suggestionSelected).length ? JSON.stringify(suggestionSelected) : \"\";\n        }\n      } else {\n        delete data.location;\n      }\n\n      if (moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate).isValid()) {\n        data[\"from_date\"] = moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate).format(\"YYYY-MM-DD\");\n      } else {\n        delete data.from_date;\n      }\n\n      if (moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.endDate).isValid()) {\n        data[\"to_date\"] = moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.endDate).format(\"YYYY-MM-DD\");\n      } else {\n        delete data.to_date;\n      }\n\n      if (props_trade === null || props_trade === void 0 ? void 0 : props_trade._id) {\n        var _props_trade$speciali;\n\n        data[\"tradeId\"] = [props_trade._id];\n\n        if (props_trade === null || props_trade === void 0 ? void 0 : (_props_trade$speciali = props_trade.specialisations) === null || _props_trade$speciali === void 0 ? void 0 : _props_trade$speciali.length) {\n          data[\"specializationId\"] = props_trade.specialisations.map(item => {\n            if (item === null || item === void 0 ? void 0 : item._id) {\n              return item === null || item === void 0 ? void 0 : item._id;\n            }\n\n            return item;\n          });\n        }\n      } else {\n        if (selected_trade) {\n          if (Object.keys(selected_trade).length) {\n            var _selected_trade$speci;\n\n            data[\"tradeId\"] = [selected_trade._id];\n\n            if (selected_trade === null || selected_trade === void 0 ? void 0 : (_selected_trade$speci = selected_trade.specialisations) === null || _selected_trade$speci === void 0 ? void 0 : _selected_trade$speci.length) {\n              data[\"specializationId\"] = selected_trade.specialisations.map(item => item._id);\n            }\n          }\n        }\n      }\n\n      if (!(data === null || data === void 0 ? void 0 : data.address) || !(data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : _data$address.length)) {\n        data === null || data === void 0 ? true : delete data.address;\n      }\n\n      if (!localChanges) {\n        var _tradeListRedux$find, _JSON$parse, _JSON$parse2;\n\n        props.postHomeSearchData(data);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n          category: (_tradeListRedux$find = tradeListRedux.find(i => i._id === (data === null || data === void 0 ? void 0 : data.tradeId[0]))) === null || _tradeListRedux$find === void 0 ? void 0 : _tradeListRedux$find.trade_name,\n          ...(data.address && {\n            location: `${(_JSON$parse = JSON.parse(data.address)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.mainText} ${(_JSON$parse2 = JSON.parse(data.address)) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.secondaryText}`\n          }),\n          //'length of hire': '',\n          ...((data === null || data === void 0 ? void 0 : data.from_date) && {\n            \"start date\": data === null || data === void 0 ? void 0 : data.from_date\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.to_date) && {\n            \"end date\": data === null || data === void 0 ? void 0 : data.to_date\n          })\n        };\n        moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n      }\n\n      isHandleChanges(false);\n      props.history.push({\n        pathname: `search-tradie-results`,\n        state: {\n          name: searchText,\n          showOnlyTradeName: showOnlyTradeName,\n          tradeId: data.tradeId,\n          specializations: data.specializationId,\n          location: Object.keys(selected_address).length ? {\n            coordinates: [selected_address === null || selected_address === void 0 ? void 0 : selected_address.lng, selected_address === null || selected_address === void 0 ? void 0 : selected_address.lat]\n          } : null,\n          calender: calenderRange1,\n          address: addressText,\n          suggestionSelected: suggestionSelected\n        }\n      });\n    }\n  };\n\n  const filterFromAddress = response => {\n    let city,\n        state,\n        country = null;\n\n    for (let i = 0; i < response.results[0].address_components.length; i++) {\n      for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\n        switch (response.results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = response.results[0].address_components[i].long_name;\n            break;\n\n          case \"administrative_area_level_1\":\n            state = response.results[0].address_components[i].long_name;\n            break;\n\n          case \"country\":\n            country = response.results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n\n    return {\n      city,\n      state,\n      country: country.toLowerCase()\n    };\n  };\n\n  const getCurrentLocation = async () => {\n    var _navigator, _navigator$permission;\n\n    let itemToggle = await ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : (_navigator$permission = _navigator.permissions) === null || _navigator$permission === void 0 ? void 0 : _navigator$permission.query({\n      name: \"geolocation\"\n    }));\n    setLocationStatus(itemToggle.state);\n    let local_position = localStorage.getItem(\"position\");\n    let position = JSON.parse(local_position);\n\n    if (position === null || position === void 0 ? void 0 : position.length) {\n      let long = position[0].toString();\n      let lat = position[1].toString();\n      let response = await Geocode.fromLatLng(lat, long);\n      const {\n        city,\n        state,\n        country\n      } = filterFromAddress(response);\n\n      if (response && [\"australia\", \"au\"].includes(country)) {\n        var _response$results;\n\n        if ((response === null || response === void 0 ? void 0 : response.results) && Array.isArray(response.results) && (response === null || response === void 0 ? void 0 : (_response$results = response.results) === null || _response$results === void 0 ? void 0 : _response$results.length)) {\n          const address = response.results[0].formatted_address;\n          setSelectedAddress({\n            lat,\n            long\n          });\n          setAddressText(address);\n          setInputFocus2(true);\n          setInputFocus1(false);\n          setInputFocus3(false);\n          setCurrentLocations(true);\n        }\n      } else {\n        if ((itemToggle === null || itemToggle === void 0 ? void 0 : itemToggle.state) !== \"denied\") {\n          setShowToast(true, \"Uh Oh! We don't provide service currently in your location\");\n        }\n      }\n    }\n  };\n\n  let selected_trade = selectedTrade;\n  let length_spec = 0;\n\n  if (props === null || props === void 0 ? void 0 : props.selectedItem) {\n    var _sProps$selectedTrade;\n\n    let sProps = props === null || props === void 0 ? void 0 : props.selectedItem;\n\n    if (Array.isArray(sProps === null || sProps === void 0 ? void 0 : (_sProps$selectedTrade = sProps.selectedTrade) === null || _sProps$selectedTrade === void 0 ? void 0 : _sProps$selectedTrade.specialisations)) {\n      var _sProps$selectedTrade2, _sProps$selectedTrade3;\n\n      length_spec = sProps === null || sProps === void 0 ? void 0 : (_sProps$selectedTrade2 = sProps.selectedTrade) === null || _sProps$selectedTrade2 === void 0 ? void 0 : (_sProps$selectedTrade3 = _sProps$selectedTrade2.specialisations) === null || _sProps$selectedTrade3 === void 0 ? void 0 : _sProps$selectedTrade3.length;\n    }\n  } else {\n    var _selected_trade$speci2;\n\n    length_spec = selected_trade === null || selected_trade === void 0 ? void 0 : (_selected_trade$speci2 = selected_trade.specialisations) === null || _selected_trade$speci2 === void 0 ? void 0 : _selected_trade$speci2.length;\n\n    if (!length_spec) {\n      var _stateData$specializa;\n\n      if (stateData === null || stateData === void 0 ? void 0 : (_stateData$specializa = stateData.specializationsId) === null || _stateData$specializa === void 0 ? void 0 : _stateData$specializa.length) {\n        length_spec = 1;\n      }\n    }\n  }\n\n  const checkPlaceholder = calenderRange1 => {\n    let fromDate = calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate;\n    let toDate = calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.endDate;\n    let result = renderTimeWithCustomFormat(fromDate, toDate, \"\", [\"DD MMM\", \"DD MMM YYYY\"], \"When?\");\n\n    if (!result) {\n      return \"When?\";\n    }\n\n    return result;\n  };\n\n  let custom_name = searchText;\n\n  if (!checkOnChange) {\n    if (length_spec > 1) {\n      custom_name = `${custom_name} +${length_spec - 1}`;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_search\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (props === null || props === void 0 ? void 0 : props.handleChangeToggle) {\n          props.handleChangeToggle(false);\n        }\n      },\n      className: \"modal_srch_close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `search_wrapr ${!length_spec ? \"first_input\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categ_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            id: \"text-field-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: searchRef,\n              placeholder: \"What jobs are you after?\",\n              value: showOnlyTradeName ? searchText : custom_name,\n              onChange: e => {\n                // isHandleChanges(true)\n                setOnChange(true);\n                setSearchText(e.target.value.trimLeft());\n              },\n              autoComplete: \"none\" // readOnly={props?.selectedItem ? true : false}\n              ,\n              onFocus: () => {\n                setInputFocus1(true);\n                setInputFocus2(false);\n                setInputFocus3(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border_eff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon_ltr\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Searchicon,\n                alt: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this), (searchText === null || searchText === void 0 ? void 0 : searchText.length) && inputFocus1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cross,\n                alt: \"cross\",\n                onClick: () => {\n                  // clear here\n                  // isHandleChanges(true)\n                  setOnChange(false);\n                  setSearchText(\"\");\n                  setStateData({});\n                  setSelectedTrade({});\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), !!errors.searchedJob && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.searchedJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), !(searchText === null || searchText === void 0 ? void 0 : searchText.length) && inputFocus1 ? recentJobSearches() : null, (searchText === null || searchText === void 0 ? void 0 : searchText.length) > 2 && inputFocus1 ? renderJobResult() : null, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"loc_box\",\n          style: {\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"location-text-field-div\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n                value: addressText,\n                searchOptions: {\n                  componentRestrictions: {\n                    country: \"au\"\n                  },\n                  // types: [\"address\"]\n                  types: [\"(cities)\"]\n                },\n                onChange: item => {\n                  setAddressText(item);\n\n                  if (!addressText.length) {\n                    setSelectedAddress({});\n                  }\n                },\n                shouldFetchSuggestions: (addressText === null || addressText === void 0 ? void 0 : addressText.length) > 2,\n                onSelect: async (address, placeId, suggestion) => {\n                  var _suggestion$formatted, _response$results2;\n\n                  console.log({\n                    address,\n                    placeId,\n                    suggestion\n                  });\n                  let selected_address = address;\n\n                  if (address.indexOf(\",\")) {\n                    selected_address = address.split(\",\")[0];\n                  }\n\n                  setSuggestion(suggestion === null || suggestion === void 0 ? void 0 : suggestion.formattedSuggestion);\n                  setAddressText(suggestion === null || suggestion === void 0 ? void 0 : (_suggestion$formatted = suggestion.formattedSuggestion) === null || _suggestion$formatted === void 0 ? void 0 : _suggestion$formatted.mainText);\n                  let response = await Geocode.fromAddress(address);\n                  console.log({\n                    selected_address\n                  });\n\n                  if (response === null || response === void 0 ? void 0 : (_response$results2 = response.results) === null || _response$results2 === void 0 ? void 0 : _response$results2.length) {\n                    const {\n                      lat,\n                      lng\n                    } = response.results[0].geometry.location;\n                    setSelectedAddress({\n                      lat,\n                      lng\n                    });\n                    setInputFocus2(false);\n                  }\n                },\n                highlightFirstSuggestion: true,\n                onError: onError,\n                debounce: 0,\n                children: ({\n                  getInputProps,\n                  suggestions,\n                  getSuggestionItemProps,\n                  loading\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `text_field`,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                        placeholder: \"Where?\",\n                        className: \"line-1\"\n                      }),\n                      id: \"location-input-tag\",\n                      ref: locationRef,\n                      autoComplete: \"off\",\n                      onFocus: () => {\n                        setInputFocus2(true);\n                        setInputFocus1(false);\n                        setInputFocus3(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 733,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"detect_icon_ltr\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: Location,\n                        alt: \"location\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 748,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 747,\n                      columnNumber: 25\n                    }, this), inputFocus2 && (addressText === null || addressText === void 0 ? void 0 : addressText.length) > 2 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"detect_icon\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: cross,\n                        alt: \"cross\",\n                        onClick: () => {\n                          setAddressText(\"\");\n                          setSelectedAddress({});\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 753,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 752,\n                      columnNumber: 27\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 23\n                  }, this), (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) && inputFocus2 && (addressText === null || addressText === void 0 ? void 0 : addressText.length) > 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom_autosuggestion location\",\n                    id: \"autocomplete-dropdown-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex_row recent_search auto_loc\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex_col_sm_4\",\n                        children: [!!errors.selectedMapLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"error_msg\",\n                          children: errors.selectedMapLocation\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 775,\n                          columnNumber: 33\n                        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 779,\n                          columnNumber: 43\n                        }, this), suggestions.map(suggestion => {\n                          const className = \"autosuggestion_icon card loc name\";\n                          const style = suggestion.active ? {\n                            backgroundColor: \"#fafafa\",\n                            cursor: \"pointer\"\n                          } : {\n                            backgroundColor: \"#ffffff\",\n                            cursor: \"pointer\"\n                          };\n                          return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                              className,\n                              style\n                            }),\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: suggestion.formattedSuggestion.mainText\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 800,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"name\",\n                              children: suggestion.formattedSuggestion.secondaryText\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 803,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 794,\n                            columnNumber: 35\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 773,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 772,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 25\n                  }, this) : inputFocus2 && !(suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) && !Object.keys(selectedAddress).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minHeight: \"50px\"\n                    },\n                    className: \"custom_autosuggestion location\",\n                    id: \"autocomplete-dropdown-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex_row recent_search auto_loc\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex_col_sm_4\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"loc_suggestions\",\n                          children: \"No Result Found.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 825,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 824,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 823,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this), !!errors.selectedMapLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.selectedMapLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), !(addressText === null || addressText === void 0 ? void 0 : addressText.length) && inputFocus2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_autosuggestion location\",\n          id: \"current-location-search-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"location-btn\",\n            onClick: getCurrentLocation,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gps_icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: icgps,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this), \" Use my current location\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this), locationStatus === \"denied\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blocked_note\",\n            children: \"You have blocked your location. To use this, change your location settings in browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row recent_search auto_loc\",\n            children: [(props === null || props === void 0 ? void 0 : (_props$recentLocation = props.recentLocationData) === null || _props$recentLocation === void 0 ? void 0 : _props$recentLocation.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Recent searches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 19\n            }, this), props === null || props === void 0 ? void 0 : (_props$recentLocation2 = props.recentLocationData) === null || _props$recentLocation2 === void 0 ? void 0 : _props$recentLocation2.map(item => {\n              var _item$address, _JSON$parse4, _JSON$parse5;\n\n              return (item === null || item === void 0 ? void 0 : (_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_4\",\n                onClick: () => {\n                  var _JSON$parse3, _item$location, _item$location2;\n\n                  setAddressText((_JSON$parse3 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.mainText);\n                  setSelectedAddress({\n                    lat: item === null || item === void 0 ? void 0 : (_item$location = item.location) === null || _item$location === void 0 ? void 0 : _item$location.coordinates[1],\n                    lng: item === null || item === void 0 ? void 0 : (_item$location2 = item.location) === null || _item$location2 === void 0 ? void 0 : _item$location2.coordinates[0]\n                  });\n                  setSuggestion(JSON.parse(item === null || item === void 0 ? void 0 : item.address));\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"autosuggestion_icon card loc name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: (_JSON$parse4 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.mainText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: (_JSON$parse5 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse5 === void 0 ? void 0 : _JSON$parse5.secondaryText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 882,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `date_box ${(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate) ? \"date_value\" : \"\"}`,\n          style: {\n            display: \"block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: calenderRef,\n            className: \"custom_date_range\",\n            id: \"date-range-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon_ltr calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"calender-input\",\n                placeholder: checkPlaceholder(calenderRange1),\n                autoComplete: \"none\",\n                onFocus: () => {\n                  setInputFocus3(true);\n                  setInputFocus1(false);\n                  setInputFocus2(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 17\n              }, this), (calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate) && inputFocus3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cross,\n                  alt: \"cross\",\n                  onClick: () => {\n                    setCalenderRange1({\n                      startDate: \"\",\n                      endDate: \"\",\n                      key: \"selection1\"\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 15\n            }, this), inputFocus3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom_autosuggestion\",\n              id: \"custom-date-range-div\",\n              children: /*#__PURE__*/_jsxDEV(DateRange, {\n                onChange: handleCalenderRange,\n                ranges: !moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate).isValid() ? [{\n                  startDate: new Date(),\n                  endDate: new Date(),\n                  key: \"selection1\"\n                }] : [calenderRange1],\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                months: 2,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: moment().add(2, \"years\").toDate(),\n                direction: \"horizontal\",\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"fill_btn btn-effect\",\n            onClick: bannerSearchClicked,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: search,\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 617,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BannerSearch, \"iZNoeSf0SMI3WnqRgZlWFjNYF+0=\", false, function () {\n  return [useSelector, useDetectClickOutside, useDetectClickOutside, useDetectClickOutside, useDetectClickOutside];\n});\n\n_c = BannerSearch;\n\nconst mapStateToProps = state => {\n  return {\n    searchJobListData: state.homeSearch.searchJobListData,\n    recentSearchJobData: state.homeSearch.recentSearchJobData,\n    homeSearchJobData: state.homeSearch.homeSearchJobData,\n    tradeListData: state.auth.tradeListData,\n    localChanges: state.jobs.localChanges,\n    recentLocationData: state.homeSearch.recentLocationData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSearchJobList,\n    getRecentSearchList,\n    postHomeSearchData,\n    isHandleChanges,\n    getRecentLocationList\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerSearch);\n/**\n\n    No-result found conditions\n    </div> : !loading || addressText?.length > 2 && !suggestions?.length && !enableCurrentLocation && !Object.keys(selectedAddress).length ? (\n\n **/\n\nvar _c;\n\n$RefreshReg$(_c, \"BannerSearch\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/shared/bannerSearch.tsx"],"names":["React","useState","useEffect","useSelector","Constants","PlacesAutocomplete","DateRange","Searchicon","search","Location","cross","icgps","residential","close","connect","bindActionCreators","getSearchJobList","getRecentSearchList","postHomeSearchData","getRecentLocationList","isHandleChanges","useDetectClickOutside","moment","Geocode","setShowToast","deleteRecentSearch","renderTimeWithCustomFormat","moengage","mixPanel","MoEConstants","setApiKey","SocialAuth","GOOGLE_GEOCODE_KEY","setLanguage","setRegion","example_calender","startDate","endDate","key","useStateFromProp","initialValue","value","setValue","BannerSearch","props","props_selected","selectedItem","localChanges","checkOnChange","setOnChange","showOnlyTradeName","setShowOnlyTradeName","locationStatus","setLocationStatus","stateData","setStateData","searchText","setSearchText","addressText","setAddressText","recentLocation","setRecentLocation","selectedAddress","setSelectedAddress","enableCurrentLocation","setCurrentLocations","errors","setErrors","selectedTrade","setSelectedTrade","inputFocus1","setInputFocus1","inputFocus2","setInputFocus2","inputFocus3","setInputFocus3","calenderRange1","setCalenderRange1","suggestionSelected","setSuggestion","tradeListRedux","state","auth","tradeListData","handleOnOutsideSearch","handleOnOutsideLocation","handleOnOutsideCalender","addressRef","setAddressRef","searchRef","onTriggered","locationRef","locationRefClone","calenderRef","handleCalenderRange","item","selection1","console","log","recentLocationData","length","checkIfExist","_id","isLength","Object","keys","cleanRecentSearch","event","recentSearchId","stopPropagation","data","id","status","res","success","recentJobSearches","props_Clone","recentSearchJobData","slice","map","selected_address","history","push","pathname","name","tradeId","specializations","location","coordinates","lng","lat","calender","address","image","trade_name","selected_url","specialisations","item_spec","getItem","specializationsId","renderJobResult","searchJobListData","setItemSearch","onError","clearSuggestions","validateForm","bannerSearchClicked","selected_trade","selected_item","props_trade","page","isFiltered","specializationId","parseFloat","JSON","stringify","isValid","format","from_date","to_date","mData","timeStamp","getCurrentTimeStamp","category","find","i","parse","mainText","secondaryText","moE_SendEvent","SEARCHED_FOR_TRADIES","mixP_SendEvent","filterFromAddress","response","city","country","results","address_components","j","types","long_name","toLowerCase","getCurrentLocation","itemToggle","navigator","permissions","query","local_position","localStorage","position","long","toString","fromLatLng","includes","Array","isArray","formatted_address","length_spec","sProps","checkPlaceholder","fromDate","toDate","result","custom_name","handleChangeToggle","e","target","trimLeft","searchedJob","display","componentRestrictions","placeId","suggestion","indexOf","split","formattedSuggestion","fromAddress","geometry","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","selectedMapLocation","style","active","backgroundColor","cursor","minHeight","Date","add","mapStateToProps","homeSearch","homeSearchJobData","jobs","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,uBAAtB,C,CACA;;AACA,OAAOC,kBAAP,MAGO,2BAHP;AAOA;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,kCAAP,C,CAA2C;;AAC3C,OAAO,yCAAP,C,CAAkD;;AAElD,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,KAAP,MAAkB,qCAAlB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,qBAJF,QAKO,gCALP;AAMA,SAASC,eAAT,QAAgC,0BAAhC,C,CACA;;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,SAASC,kBAAT,QAAmC,gCAAnC;AAEA,SAAqBC,0BAArB,QAAuD,oBAAvD;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,+BAAnC;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;AAEAN,OAAO,CAACO,SAAR,CAAkB1B,SAAS,CAAC2B,UAAV,CAAqBC,kBAAvC;AACAT,OAAO,CAACU,WAAR,CAAoB,IAApB;AACAV,OAAO,CAACW,SAAR,CAAkB,IAAlB,E,CACA;;AA4BA,MAAMC,gBAAgB,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,OAAO,EAAE,EAA1B;AAA8BC,EAAAA,GAAG,EAAE;AAAnC,CAAzB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,YAA1B,EAA6C;AAAA;;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzC,QAAQ,CAACuC,YAAD,CAAlC;AAEAtC,EAAAA,SAAS,CAAC,MAAMwC,QAAQ,CAACF,YAAD,CAAf,EAA+B,CAACA,YAAD,CAA/B,CAAT;AAEA,SAAO,CAACC,KAAD,EAAQC,QAAR,CAAP;AACD;;GANeH,gB;;AAQhB,MAAMI,YAAY,GAAIC,KAAD,IAAsB;AAAA;;AAAA;;AACzC,MAAIC,cAAc,GAAGD,KAAK,CAACE,YAA3B;AACA,QAAM;AACJA,IAAAA,YADI;AAEJ1B,IAAAA,eAFI;AAGJ2B,IAAAA,YAHI;AAIJ9B,IAAAA,mBAJI;AAKJE,IAAAA;AALI,MAMFyB,KANJ;AAQA,QAAM,CAACI,aAAD,EAAgBC,WAAhB,IAA+BhD,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACiD,iBAAD,EAAoBC,oBAApB,IAA4ClD,QAAQ,CAAC,KAAD,CAA1D;AAEA,QAAM,CAACmD,cAAD,EAAiBC,iBAAjB,IAAsCpD,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACqD,SAAD,EAAYC,YAAZ,IAA4BtD,QAAQ,CAAM,IAAN,CAA1C;AACA,QAAM,CAACuD,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACyD,WAAD,EAAcC,cAAd,IAAgC1D,QAAQ,CAAM,EAAN,CAA9C;AACA,QAAM,CAAC2D,cAAD,EAAiBC,iBAAjB,IAAsC5D,QAAQ,CAAM,EAAN,CAApD,CAjByC,CAiBsB;;AAC/D,QAAM,CAAC6D,eAAD,EAAkBC,kBAAlB,IAAwC9D,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAC+D,qBAAD,EAAwBC,mBAAxB,IAA+ChE,QAAQ,CAAU,KAAV,CAA7D;AACA,QAAM,CAACiE,MAAD,EAASC,SAAT,IAAsBlE,QAAQ,CAAM,EAAN,CAApC;AACA,QAAM,CAACmE,aAAD,EAAgBC,gBAAhB,IAAoCpE,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACqE,WAAD,EAAcC,cAAd,IAAgCtE,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACuE,WAAD,EAAcC,cAAd,IAAgCxE,QAAQ,CAAU,KAAV,CAA9C;AACA,QAAM,CAACyE,WAAD,EAAcC,cAAd,IAAgC1E,QAAQ,CAAU,KAAV,CAA9C;AAEA,QAAM,CAAC2E,cAAD,EAAiBC,iBAAjB,IAAsC5E,QAAQ,CAAMkC,gBAAN,CAApD;AAEA,QAAM,CAAC2C,kBAAD,EAAqBC,aAArB,IAAsC9E,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM+E,cAAc,GAAG7E,WAAW,CAAE8E,KAAD,IAAgBA,KAAK,CAACC,IAAN,CAAWC,aAA5B,CAAlC;;AAEA,QAAMC,qBAAqB,GAAG,MAAM;AAClCnC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAsB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAHD;;AAIA,QAAMc,uBAAuB,GAAG,MAAM;AACpCZ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAGA,QAAMa,uBAAuB,GAAG,MAAMX,cAAc,CAAC,KAAD,CAApD;;AAEA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BvF,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMwF,SAAS,GAAGpE,qBAAqB,CAAC;AACtCqE,IAAAA,WAAW,EAAEN;AADyB,GAAD,CAAvC;AAGA,QAAMO,WAAW,GAAGtE,qBAAqB,CAAC;AACxCqE,IAAAA,WAAW,EAAE,MAAM;AACjB;AACAL,MAAAA,uBAAuB,GAFN,CAGjB;AACD;AALuC,GAAD,CAAzC;AAOA,QAAMO,gBAAgB,GAAGvE,qBAAqB,CAAC;AAC7CqE,IAAAA,WAAW,EAAE,MAAM,CACjB;AACA;AACA;AACD;AAL4C,GAAD,CAA9C;AAOA,QAAMG,WAAW,GAAGxE,qBAAqB,CAAC;AACxCqE,IAAAA,WAAW,EAAEJ;AAD2B,GAAD,CAAzC;;AAIA,QAAMQ,mBAAmB,GAAIC,IAAD,IAAe;AACzClB,IAAAA,iBAAiB,CAACkB,IAAI,CAACC,UAAN,CAAjB;AACD,GAFD;;AAIA9F,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,mBAAJ,EAAyB;AACvBA,MAAAA,mBAAmB;AACpB;;AACD,QAAIE,qBAAJ,EAA2B;AACzBA,MAAAA,qBAAqB;AACtB,KANa,CAOd;;AACD,GARQ,EAQN,EARM,CAAT;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACd+F,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC;AAAEtD,MAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,KAAhC;AACA,WAAO,MAAM;AACXmD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B;AAAEtD,QAAAA,KAAK,EAAEA,KAAK,CAACE;AAAf,OAA7B;AACD,KAFD;AAGD,GALQ,EAKN,CAACF,KAAD,CALM,CAAT;AAOA1C,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACD,GAJQ,EAIN,CAAC0C,KAAK,CAACuD,kBAAP,EAA2BvC,cAA3B,CAJM,CAAT;AAMA1D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAAsD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAE4C,MAAZ,IAAqB,CAAzB,EAA4B;AAC1BxD,MAAAA,KAAK,CAAC5B,gBAAN,CAAuBwC,UAAvB;AACD;;AACD,QAAI,EAACA,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAE4C,MAAb,CAAJ,EAAyB;AACvB/B,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AACF,GAPQ,EAON,CAACb,UAAD,CAPM,CAAT;;AASA,QAAM6C,YAAY,GAAIC,GAAD,IAAc;AACjC,QAAIlC,aAAJ,EAAmB;AACjB,UAAImC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYrC,aAAZ,EAA2BgC,MAA1C;;AACA,UAAIG,QAAJ,EAAc;AACZ,YAAIR,IAAS,GAAG3B,aAAhB;;AACA,YAAI,CAAA2B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,GAAN,MAAcA,GAAlB,EAAuB;AACrB,iBAAO,IAAP;AACD;AACF;AACF;;AACD,WAAO,KAAP;AACD,GAXD;;AAaA,QAAMI,iBAAiB,GAAG,OAAOC,KAAP,EAAmBC,cAAnB,KAA8C;AACtED,IAAAA,KAAK,CAACE,eAAN;AACA,UAAMC,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEH,cADO;AAEXI,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,UAAMC,GAAG,GAAG,MAAMxF,kBAAkB,CAACqF,IAAD,CAApC;;AACA,QAAIG,GAAG,CAACC,OAAR,EAAiB;AACf,UAAIjG,mBAAJ,EAAyB;AACvBA,QAAAA,mBAAmB;AACpB;AACF;AACF,GAZD;;AAcA,QAAMkG,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAIC,WAAgB,GAAGxE,KAAvB;AACA,QAAIuC,aAAa,GAAGiC,WAAW,CAACjC,aAAhC;AACA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,EAAE,EAAC,uBAA1C;AAAA,mBACG,CAAAvC,KAAK,SAAL,IAAAA,KAAK,WAAL,qCAAAA,KAAK,CAAEyE,mBAAP,gFAA4BjB,MAA5B,iBACC,QAAC,KAAD,CAAO,QAAP;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,sBACG,2BAAAxD,KAAK,CAACyE,mBAAN,kFAA2BjB,MAA3B,IAAoC,CAApC,+BACCxD,KAAK,CAACyE,mBADP,2DACC,uBAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,EAAuCC,GAAvC,CAA4CxB,IAAD,IAAe;AACxDE,cAAAA,OAAO,CAACC,GAAR,CACEH,IADF,EAEE,wDAFF;AAIA,kCACE;AACE,gBAAA,SAAS,EAAC,eADZ;AAEE,gBAAA,OAAO,EAAE,MAAM;AACb,sBAAIyB,gBAAqB,GAAG1D,eAA5B;AACAlB,kBAAAA,KAAK,CAAC6E,OAAN,CAAcC,IAAd,CAAmB;AACjBC,oBAAAA,QAAQ,EAAG,uBADM;AAEjB1C,oBAAAA,KAAK,EAAE;AACL2C,sBAAAA,IAAI,EAAE7B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE6B,IADP;AAELC,sBAAAA,OAAO,EAAE,CAAC9B,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,GAAP,CAFJ;AAGLwB,sBAAAA,eAAe,EAAE,OAHZ;AAILC,sBAAAA,QAAQ,EAAEvB,MAAM,CAACC,IAAP,CAAYe,gBAAZ,EAA8BpB,MAA9B,GACN;AACE4B,wBAAAA,WAAW,EAAE,CACXR,gBADW,aACXA,gBADW,uBACXA,gBAAgB,CAAES,GADP,EAEXT,gBAFW,aAEXA,gBAFW,uBAEXA,gBAAgB,CAAEU,GAFP;AADf,uBADM,GAON,IAXC;AAYLC,sBAAAA,QAAQ,EAAEvD,cAZL;AAaLwD,sBAAAA,OAAO,EAAE1E;AAbJ;AAFU,mBAAnB,EAFa,CAoBb;AACA;AACD,iBAxBH;AAAA,uCA0BE;AAAK,kBAAA,SAAS,EAAC,mBAAf;AAAA,0CACE;AAAQ,oBAAA,SAAS,EAAC,KAAlB;AAAA,2CACE;AAAK,sBAAA,GAAG,EAAE,CAAAqC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEsC,KAAN,KAAezH,WAAzB;AAAsC,sBAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,4CACE;AAAA,gCAAOmF,IAAI,CAAC6B;AAAZ;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAM,sBAAA,SAAS,EAAC,MAAhB;AAAA,gCAAwB7B,IAAI,CAACuC;AAA7B;AAAA;AAAA;AAAA;AAAA,4BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAQE;AACE,oBAAA,SAAS,EAAC,aADZ;AAEE,oBAAA,OAAO,EAAG3B,KAAD,IACPD,iBAAiB,CAACC,KAAD,EAAQZ,IAAI,CAACa,cAAb,CAHrB;AAAA,2CAME;AAAK,sBAAA,GAAG,EAAE/F,KAAV;AAAiB,sBAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BF;AAAA;AAAA;AAAA;AAAA,sBADF;AA8CD,aAnDD,CADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GA2DG,IA5DN,eA8DE;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBACGsE,aADH,aACGA,aADH,uBACGA,aAAa,CAAEoC,GAAf,CACC,CAAC;AACCjB,cAAAA,GADD;AAECgC,cAAAA,UAFD;AAGCC,cAAAA,YAHD;AAICC,cAAAA;AAJD,aAAD,kBAWE;AACE,cAAA,OAAO,EAAE,MAAM;AACb,oBAAIC,SAAc,GAAGD,eAArB;;AACA,oBAAIC,SAAJ,aAAIA,SAAJ,uBAAIA,SAAS,CAAErC,MAAf,EAAuB;AACrB,sBAAIsC,OAAO,GAAGD,SAAS,CAAC,CAAD,CAAvB;;AACA,sBAAIC,OAAJ,EAAa;AACXnF,oBAAAA,YAAY,CAAC;AACX8E,sBAAAA,KAAK,EAAEE,YADI;AAEXX,sBAAAA,IAAI,EAAEc,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEd,IAFJ;AAGXe,sBAAAA,iBAAiB,EAAED,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEpC,GAHjB;AAIXgC,sBAAAA,UAAU,EAAEA,UAJD;AAKXhC,sBAAAA,GAAG,EAAEA;AALM,qBAAD,CAAZ;AAOA7C,oBAAAA,aAAa,CAAC6E,UAAD,CAAb;AACD;;AACDnF,kBAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAkB,kBAAAA,gBAAgB,CAAC;AACfiC,oBAAAA,GADe;AAEfgC,oBAAAA,UAFe;AAGfC,oBAAAA,YAHe;AAIfC,oBAAAA;AAJe,mBAAD,CAAhB;AAMD;AACF,eAvBH;AAwBE,cAAA,SAAS,EAAEnC,YAAY,CAACC,GAAD,CAAZ,GAAoB,QAApB,GAA+B,EAxB5C;AAAA,sCA0BE;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAEiC,YAAV;AAAwB,kBAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA1BF,eA6BE;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,0BAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,sBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZH;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAqHD,GAxHD;;AA0HA,QAAMM,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAIhG,KAAJ,aAAIA,KAAJ,gDAAIA,KAAK,CAAEiG,iBAAX,0DAAI,sBAA0BzC,MAA9B,EAAsC;AAAA;;AACpC,0BACE;AACE,QAAA,SAAS,EAAC,uBADZ;AAEE,QAAA,EAAE,EAAC,iCAFL;AAAA,+BAIE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,WAAd;AAAA,gDACGxD,KAAK,CAACiG,iBADT,2DACG,uBAAyBtB,GAAzB,CAA8BxB,IAAD,IAAe;AAC3C,kCACE;AACE,gBAAA,OAAO,EAAE,MAAM;AACb+C,kBAAAA,aAAa,CAAC/C,IAAD,CAAb;AACD,iBAHH;AAAA,wCAKE;AAAQ,kBAAA,SAAS,EAAC,UAAlB;AAAA,yCACE;AACE,oBAAA,GAAG,EAAEA,IAAI,CAACsC,KAAL,GAAatC,IAAI,CAACsC,KAAlB,GAA0BzH,WADjC;AAEE,oBAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBALF,eAWE;AAAK,kBAAA,SAAS,EAAC,SAAf;AAAA,0CACE;AAAM,oBAAA,SAAS,EAAC,MAAhB;AAAA,8BAAwBmF,IAAI,CAAC6B;AAA7B;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAM,oBAAA,SAAS,EAAC,MAAhB;AAAA,8BAAwB7B,IAAI,CAACuC;AAA7B;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAkBD,aAnBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD;;AACD,WAAO,IAAP;AACD,GAnCD;;AAqCA,QAAMS,OAAO,GAAG,CAAC/B,MAAD,EAAiBgC,gBAAjB,KAAgD;AAC9D/C,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4Dc,MAA5D;AACAgC,IAAAA,gBAAgB;AACjB,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAO,IAAP;AACD,GAFD;;AAIA,QAAMH,aAAa,GAAI/C,IAAD,IAAe;AACnCxC,IAAAA,YAAY,CAACwC,IAAD,CAAZ;AACA1B,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAZ,IAAAA,aAAa,CAAC,CAAAsC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE6B,IAAN,KAAc,EAAf,CAAb;AACD,GAJD;;AAMA,QAAMsB,mBAAmB,GAAG,MAAM;AAChC,QAAI1B,gBAAqB,GAAG1D,eAA5B;AACA,QAAIqF,cAAmB,GAAG/E,aAA1B;AACA,QAAIgF,aAAkB,GAAGxG,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,YAAhC;AACA,QAAIuG,WAAgB,GAAGD,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEhF,aAAtC;;AAEA,QAAI,EAACd,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEgD,GAAZ,KAAmB,EAAC+C,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAE/C,GAAd,CAAvB,EAA0C;AACxC9E,MAAAA,YAAY,CAAC,IAAD,EAAO,oCAAP,CAAZ;AACA;AACD;;AAED,QAAIwB,aAAJ,EAAmB;AACjBxB,MAAAA,YAAY,CAAC,IAAD,EAAO,sCAAP,CAAZ;AACA;AACD;;AAED,QAAIyH,YAAY,EAAhB,EAAoB;AAAA;;AAClB,UAAInC,IAAS,GAAG;AACdwC,QAAAA,IAAI,EAAE,CADQ;AAEdC,QAAAA,UAAU,EAAE,KAFE;AAGd1B,QAAAA,OAAO,EAAE,CAACvE,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEgD,GAAZ,CAHK;AAIdkD,QAAAA,gBAAgB,EAAE,CAAClG,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEqF,iBAAZ;AAJJ,OAAhB;;AAOA,UAAInC,MAAM,CAACC,IAAP,CAAY3C,eAAZ,EAA6BsC,MAAjC,EAAyC;AACvCU,QAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB;AACjBkB,UAAAA,WAAW,EAAE,CACXyB,UAAU,CAACjC,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAES,GAAnB,CADC,EAEXwB,UAAU,CAACjC,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAEU,GAAnB,CAFC;AADI,SAAnB;;AAMA,YAAIxE,WAAJ,EAAiB;AACfoD,UAAAA,IAAI,CAAC,SAAD,CAAJ,GACEpD,WAAW,IAAI8C,MAAM,CAACC,IAAP,CAAY3B,kBAAZ,EAAgCsB,MAA/C,GACIsD,IAAI,CAACC,SAAL,CAAe7E,kBAAf,CADJ,GAEI,EAHN;AAID;AACF,OAbD,MAaO;AACL,eAAOgC,IAAI,CAACiB,QAAZ;AACD;;AAED,UAAIzG,MAAM,CAACsD,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAExC,SAAjB,CAAN,CAAkCwH,OAAlC,EAAJ,EAAiD;AAC/C9C,QAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoBxF,MAAM,CAACsD,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAExC,SAAjB,CAAN,CAAkCyH,MAAlC,CAClB,YADkB,CAApB;AAGD,OAJD,MAIO;AACL,eAAO/C,IAAI,CAACgD,SAAZ;AACD;;AAED,UAAIxI,MAAM,CAACsD,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEvC,OAAjB,CAAN,CAAgCuH,OAAhC,EAAJ,EAA+C;AAC7C9C,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBxF,MAAM,CAACsD,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEvC,OAAjB,CAAN,CAAgCwH,MAAhC,CAAuC,YAAvC,CAAlB;AACD,OAFD,MAEO;AACL,eAAO/C,IAAI,CAACiD,OAAZ;AACD;;AAED,UAAIV,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAE/C,GAAjB,EAAsB;AAAA;;AACpBQ,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,CAACuC,WAAW,CAAC/C,GAAb,CAAlB;;AACA,YAAI+C,WAAJ,aAAIA,WAAJ,gDAAIA,WAAW,CAAEb,eAAjB,0DAAI,sBAA8BpC,MAAlC,EAA0C;AACxCU,UAAAA,IAAI,CAAC,kBAAD,CAAJ,GAA2BuC,WAAW,CAACb,eAAZ,CAA4BjB,GAA5B,CACxBxB,IAAD,IAAe;AACb,gBAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEO,GAAV,EAAe;AACb,qBAAOP,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEO,GAAb;AACD;;AACD,mBAAOP,IAAP;AACD,WANwB,CAA3B;AAQD;AACF,OAZD,MAYO;AACL,YAAIoD,cAAJ,EAAoB;AAClB,cAAI3C,MAAM,CAACC,IAAP,CAAY0C,cAAZ,EAA4B/C,MAAhC,EAAwC;AAAA;;AACtCU,YAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,CAACqC,cAAc,CAAC7C,GAAhB,CAAlB;;AACA,gBAAI6C,cAAJ,aAAIA,cAAJ,gDAAIA,cAAc,CAAEX,eAApB,0DAAI,sBAAiCpC,MAArC,EAA6C;AAC3CU,cAAAA,IAAI,CAAC,kBAAD,CAAJ,GAA2BqC,cAAc,CAACX,eAAf,CAA+BjB,GAA/B,CACxBxB,IAAD,IAAeA,IAAI,CAACO,GADK,CAA3B;AAGD;AACF;AACF;AACF;;AAED,UAAI,EAACQ,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEsB,OAAP,KAAkB,EAACtB,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEsB,OAAP,kDAAC,cAAehC,MAAhB,CAAtB,EAA8C;AACrCU,QAAAA,IAAP,aAAOA,IAAP,4BAAOA,IAAI,CAAEsB,OAAb;AACD;;AAED,UAAI,CAACrF,YAAL,EAAmB;AAAA;;AACjBH,QAAAA,KAAK,CAAC1B,kBAAN,CAAyB4F,IAAzB;AACA,cAAMkD,KAAK,GAAG;AACZC,UAAAA,SAAS,EAAEtI,QAAQ,CAACuI,mBAAT,EADC;AAEZC,UAAAA,QAAQ,0BAAEnF,cAAc,CAACoF,IAAf,CAAqBC,CAAD,IAAYA,CAAC,CAAC/D,GAAF,MAAUQ,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEe,OAAN,CAAc,CAAd,CAAV,CAAhC,CAAF,yDAAE,qBACNS,UAHQ;AAIZ,cAAIxB,IAAI,CAACsB,OAAL,IAAgB;AAClBL,YAAAA,QAAQ,EAAG,GAAD,eAAG2B,IAAI,CAACY,KAAL,CAAWxD,IAAI,CAACsB,OAAhB,CAAH,gDAAG,YAA0BmC,QAAS,IAAtC,gBACRb,IAAI,CAACY,KAAL,CAAWxD,IAAI,CAACsB,OAAhB,CADQ,iDACR,aAA0BoC,aAC3B;AAHiB,WAApB,CAJY;AASZ;AACA,cAAI,CAAA1D,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEgD,SAAN,KAAmB;AAAE,0BAAchD,IAAd,aAAcA,IAAd,uBAAcA,IAAI,CAAEgD;AAAtB,WAAvB,CAVY;AAWZ,cAAI,CAAAhD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEiD,OAAN,KAAiB;AAAE,wBAAYjD,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEiD;AAApB,WAArB;AAXY,SAAd;AAaApI,QAAAA,QAAQ,CAAC8I,aAAT,CAAuB5I,YAAY,CAAC6I,oBAApC,EAA0DV,KAA1D;AACApI,QAAAA,QAAQ,CAAC+I,cAAT,CAAwB9I,YAAY,CAAC6I,oBAArC,EAA2DV,KAA3D;AACD;;AACD5I,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAwB,MAAAA,KAAK,CAAC6E,OAAN,CAAcC,IAAd,CAAmB;AACjBC,QAAAA,QAAQ,EAAG,uBADM;AAEjB1C,QAAAA,KAAK,EAAE;AACL2C,UAAAA,IAAI,EAAEpE,UADD;AAELN,UAAAA,iBAAiB,EAAEA,iBAFd;AAGL2E,UAAAA,OAAO,EAAEf,IAAI,CAACe,OAHT;AAILC,UAAAA,eAAe,EAAEhB,IAAI,CAAC0C,gBAJjB;AAKLzB,UAAAA,QAAQ,EAAEvB,MAAM,CAACC,IAAP,CAAYe,gBAAZ,EAA8BpB,MAA9B,GACN;AAAE4B,YAAAA,WAAW,EAAE,CAACR,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAES,GAAnB,EAAwBT,gBAAxB,aAAwBA,gBAAxB,uBAAwBA,gBAAgB,CAAEU,GAA1C;AAAf,WADM,GAEN,IAPC;AAQLC,UAAAA,QAAQ,EAAEvD,cARL;AASLwD,UAAAA,OAAO,EAAE1E,WATJ;AAULoB,UAAAA,kBAAkB,EAAEA;AAVf;AAFU,OAAnB;AAeD;AACF,GAvHD;;AAyHA,QAAM8F,iBAAiB,GAAIC,QAAD,IAAmB;AAC3C,QAAIC,IAAJ;AAAA,QACE7F,KADF;AAAA,QAEE8F,OAAO,GAAG,IAFZ;;AAGA,SAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuC7E,MAA3D,EAAmEiE,CAAC,EAApE,EAAwE;AACtE,WACE,IAAIa,CAAC,GAAG,CADV,EAEEA,CAAC,GAAGL,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuCZ,CAAvC,EAA0Cc,KAA1C,CAAgD/E,MAFtD,EAGE8E,CAAC,EAHH,EAIE;AACA,gBAAQL,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuCZ,CAAvC,EAA0Cc,KAA1C,CAAgDD,CAAhD,CAAR;AACE,eAAK,UAAL;AACEJ,YAAAA,IAAI,GAAGD,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuCZ,CAAvC,EAA0Ce,SAAjD;AACA;;AACF,eAAK,6BAAL;AACEnG,YAAAA,KAAK,GAAG4F,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuCZ,CAAvC,EAA0Ce,SAAlD;AACA;;AACF,eAAK,SAAL;AACEL,YAAAA,OAAO,GAAGF,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuCZ,CAAvC,EAA0Ce,SAApD;AACA;AATJ;AAWD;AACF;;AACD,WAAO;AAAEN,MAAAA,IAAF;AAAQ7F,MAAAA,KAAR;AAAe8F,MAAAA,OAAO,EAAEA,OAAO,CAACM,WAAR;AAAxB,KAAP;AACD,GAxBD;;AA0BA,QAAMC,kBAAkB,GAAG,YAAY;AAAA;;AACrC,QAAIC,UAAe,GAAG,qBAAMC,SAAN,wEAAM,WAAWC,WAAjB,0DAAM,sBAAwBC,KAAxB,CAA8B;AACxD9D,MAAAA,IAAI,EAAE;AADkD,KAA9B,CAAN,CAAtB;AAGAvE,IAAAA,iBAAiB,CAACkI,UAAU,CAACtG,KAAZ,CAAjB;AACA,QAAI0G,cAAmB,GAAGC,YAAY,CAAClD,OAAb,CAAqB,UAArB,CAA1B;AACA,QAAImD,QAAa,GAAGnC,IAAI,CAACY,KAAL,CAAWqB,cAAX,CAApB;;AACA,QAAIE,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEzF,MAAd,EAAsB;AACpB,UAAI0F,IAAI,GAAGD,QAAQ,CAAC,CAAD,CAAR,CAAYE,QAAZ,EAAX;AACA,UAAI7D,GAAG,GAAG2D,QAAQ,CAAC,CAAD,CAAR,CAAYE,QAAZ,EAAV;AACA,UAAIlB,QAAa,GAAG,MAAMtJ,OAAO,CAACyK,UAAR,CAAmB9D,GAAnB,EAAwB4D,IAAxB,CAA1B;AACA,YAAM;AAAEhB,QAAAA,IAAF;AAAQ7F,QAAAA,KAAR;AAAe8F,QAAAA;AAAf,UAA2BH,iBAAiB,CAACC,QAAD,CAAlD;;AAEA,UAAIA,QAAQ,IAAI,CAAC,WAAD,EAAc,IAAd,EAAoBoB,QAApB,CAA6BlB,OAA7B,CAAhB,EAAuD;AAAA;;AACrD,YACE,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEG,OAAV,KACAkB,KAAK,CAACC,OAAN,CAActB,QAAQ,CAACG,OAAvB,CADA,KAEAH,QAFA,aAEAA,QAFA,4CAEAA,QAAQ,CAAEG,OAFV,sDAEA,kBAAmB5E,MAFnB,CADF,EAIE;AACA,gBAAMgC,OAAO,GAAGyC,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoBoB,iBAApC;AACArI,UAAAA,kBAAkB,CAAC;AAAEmE,YAAAA,GAAF;AAAO4D,YAAAA;AAAP,WAAD,CAAlB;AACAnI,UAAAA,cAAc,CAACyE,OAAD,CAAd;AACA3D,UAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,UAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,UAAAA,cAAc,CAAC,KAAD,CAAd;AACAV,UAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,OAdD,MAcO;AACL,YAAI,CAAAsH,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEtG,KAAZ,MAAsB,QAA1B,EAAoC;AAClCzD,UAAAA,YAAY,CACV,IADU,EAEV,4DAFU,CAAZ;AAID;AACF;AACF;AACF,GApCD;;AAsCA,MAAI2H,cAAmB,GAAG/E,aAA1B;AACA,MAAIiI,WAAW,GAAG,CAAlB;;AAEA,MAAIzJ,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEE,YAAX,EAAyB;AAAA;;AACvB,QAAIwJ,MAAM,GAAG1J,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,YAApB;;AACA,QAAIoJ,KAAK,CAACC,OAAN,CAAcG,MAAd,aAAcA,MAAd,gDAAcA,MAAM,CAAElI,aAAtB,0DAAc,sBAAuBoE,eAArC,CAAJ,EAA2D;AAAA;;AACzD6D,MAAAA,WAAW,GAAGC,MAAH,aAAGA,MAAH,iDAAGA,MAAM,CAAElI,aAAX,qFAAG,uBAAuBoE,eAA1B,2DAAG,uBAAwCpC,MAAtD;AACD;AACF,GALD,MAKO;AAAA;;AACLiG,IAAAA,WAAW,GAAGlD,cAAH,aAAGA,cAAH,iDAAGA,cAAc,CAAEX,eAAnB,2DAAG,uBAAiCpC,MAA/C;;AACA,QAAI,CAACiG,WAAL,EAAkB;AAAA;;AAChB,UAAI/I,SAAJ,aAAIA,SAAJ,gDAAIA,SAAS,CAAEqF,iBAAf,0DAAI,sBAA8BvC,MAAlC,EAA0C;AACxCiG,QAAAA,WAAW,GAAG,CAAd;AACD;AACF;AACF;;AAED,QAAME,gBAAgB,GAAI3H,cAAD,IAAyB;AAChD,QAAI4H,QAAa,GAAG5H,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAExC,SAApC;AACA,QAAIqK,MAAW,GAAG7H,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEvC,OAAlC;AACA,QAAIqK,MAAM,GAAGhL,0BAA0B,CACrC8K,QADqC,EAErCC,MAFqC,EAGrC,EAHqC,EAIrC,CAAC,QAAD,EAAW,aAAX,CAJqC,EAKrC,OALqC,CAAvC;;AAQA,QAAI,CAACC,MAAL,EAAa;AACX,aAAO,OAAP;AACD;;AAED,WAAOA,MAAP;AACD,GAhBD;;AAkBA,MAAIC,WAAW,GAAGnJ,UAAlB;;AAEA,MAAI,CAACR,aAAL,EAAoB;AAClB,QAAIqJ,WAAW,GAAG,CAAlB,EAAqB;AACnBM,MAAAA,WAAW,GAAI,GAAEA,WAAY,KAAIN,WAAW,GAAG,CAAE,EAAjD;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AACE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIzJ,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEgK,kBAAX,EAA+B;AAC7BhK,UAAAA,KAAK,CAACgK,kBAAN,CAAyB,KAAzB;AACD;AACF,OALH;AAME,MAAA,SAAS,EAAC,kBANZ;AAAA,6BAQE;AAAK,QAAA,GAAG,EAAE/L,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAM,MAAA,SAAS,EAAG,gBAAe,CAACwL,WAAD,GAAe,aAAf,GAA+B,EAAG,EAAnE;AAAA,6BAEE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAA4B,YAAA,EAAE,EAAC,gBAA/B;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,GAAG,EAAE5G,SAFP;AAGE,cAAA,WAAW,EAAC,0BAHd;AAIE,cAAA,KAAK,EAAEvC,iBAAiB,GAAGM,UAAH,GAAgBmJ,WAJ1C;AAKE,cAAA,QAAQ,EAAGE,CAAD,IAAO;AACf;AACA5J,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,gBAAAA,aAAa,CAACoJ,CAAC,CAACC,MAAF,CAASrK,KAAT,CAAesK,QAAf,EAAD,CAAb;AACD,eATH;AAUE,cAAA,YAAY,EAAC,MAVf,CAWE;AAXF;AAYE,cAAA,OAAO,EAAE,MAAM;AACbxI,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,gBAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,gBAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AAhBH;AAAA;AAAA;AAAA;AAAA,oBADF,eAmBE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAnBF,eAoBE;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAEpE,UAAV;AAAsB,gBAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBApBF,EAuBG,CAAAiD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAE4C,MAAZ,KAAsB9B,WAAtB,gBACC;AAAM,cAAA,SAAS,EAAC,aAAhB;AAAA,qCACE;AACE,gBAAA,GAAG,EAAE5D,KADP;AAEE,gBAAA,GAAG,EAAC,OAFN;AAGE,gBAAA,OAAO,EAAE,MAAM;AACb;AACA;AACAuC,kBAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,kBAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,kBAAAA,YAAY,CAAC,EAAD,CAAZ;AACAc,kBAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADD,GAeG,IAtCN;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAyCG,CAAC,CAACH,MAAM,CAAC8I,WAAT,iBACC;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,sBAA6B9I,MAAM,CAAC8I;AAApC;AAAA;AAAA;AAAA;AAAA,kBA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EA8CG,EAACxJ,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAE4C,MAAb,KAAuB9B,WAAvB,GAAqC6C,iBAAiB,EAAtD,GAA2D,IA9C9D,EA+CG,CAAA3D,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAE4C,MAAZ,IAAqB,CAArB,IAA0B9B,WAA1B,GAAwCsE,eAAe,EAAvD,GAA4D,IA/C/D,eAkDE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAwB,UAAA,KAAK,EAAE;AAAEqE,YAAAA,OAAO,EAAE;AAAX,WAA/B;AAAA,kCACE;AAAK,YAAA,EAAE,EAAC,yBAAR;AAAA,mCACE;AAAA,qCACE,QAAC,kBAAD;AACE,gBAAA,KAAK,EAAEvJ,WADT;AAEE,gBAAA,aAAa,EAAE;AACbwJ,kBAAAA,qBAAqB,EAAE;AACrBnC,oBAAAA,OAAO,EAAE;AADY,mBADV;AAIb;AACAI,kBAAAA,KAAK,EAAE,CAAC,UAAD;AALM,iBAFjB;AASE,gBAAA,QAAQ,EAAGpF,IAAD,IAAe;AACvBpC,kBAAAA,cAAc,CAACoC,IAAD,CAAd;;AACA,sBAAI,CAACrC,WAAW,CAAC0C,MAAjB,EAAyB;AACvBrC,oBAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD;AACF,iBAdH;AAeE,gBAAA,sBAAsB,EAAE,CAAAL,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAE0C,MAAb,IAAsB,CAfhD;AAgBE,gBAAA,QAAQ,EAAE,OACRgC,OADQ,EAER+E,OAFQ,EAGRC,UAHQ,KAIL;AAAA;;AACHnH,kBAAAA,OAAO,CAACC,GAAR,CAAY;AAAEkC,oBAAAA,OAAF;AAAW+E,oBAAAA,OAAX;AAAoBC,oBAAAA;AAApB,mBAAZ;AACA,sBAAI5F,gBAAqB,GAAGY,OAA5B;;AACA,sBAAIA,OAAO,CAACiF,OAAR,CAAgB,GAAhB,CAAJ,EAA0B;AACxB7F,oBAAAA,gBAAgB,GAAGY,OAAO,CAACkF,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAnB;AACD;;AACDvI,kBAAAA,aAAa,CAACqI,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEG,mBAAb,CAAb;AACA5J,kBAAAA,cAAc,CAACyJ,UAAD,aAACA,UAAD,gDAACA,UAAU,CAAEG,mBAAb,0DAAC,sBAAiChD,QAAlC,CAAd;AACA,sBAAIM,QAAQ,GAAG,MAAMtJ,OAAO,CAACiM,WAAR,CAAoBpF,OAApB,CAArB;AACAnC,kBAAAA,OAAO,CAACC,GAAR,CAAY;AAAEsB,oBAAAA;AAAF,mBAAZ;;AACA,sBAAIqD,QAAJ,aAAIA,QAAJ,6CAAIA,QAAQ,CAAEG,OAAd,uDAAI,mBAAmB5E,MAAvB,EAA+B;AAC7B,0BAAM;AAAE8B,sBAAAA,GAAF;AAAOD,sBAAAA;AAAP,wBACJ4C,QAAQ,CAACG,OAAT,CAAiB,CAAjB,EAAoByC,QAApB,CAA6B1F,QAD/B;AAEAhE,oBAAAA,kBAAkB,CAAC;AAAEmE,sBAAAA,GAAF;AAAOD,sBAAAA;AAAP,qBAAD,CAAlB;AACAxD,oBAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,iBApCH;AAqCE,gBAAA,wBAAwB,EAAE,IArC5B;AAsCE,gBAAA,OAAO,EAAEsE,OAtCX;AAuCE,gBAAA,QAAQ,EAAE,CAvCZ;AAAA,0BAyCG,CAAC;AACA2E,kBAAAA,aADA;AAEAC,kBAAAA,WAFA;AAGAC,kBAAAA,sBAHA;AAIAC,kBAAAA;AAJA,iBAAD,kBAMC;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAG,YAAjB;AAAA,4CAEE,sBACMH,aAAa,CAAC;AAChBI,wBAAAA,WAAW,EAAE,QADG;AAEhBC,wBAAAA,SAAS,EAAE;AAFK,uBAAD,CADnB;AAKE,sBAAA,EAAE,EAAC,oBALL;AAME,sBAAA,GAAG,EAAEpI,WANP;AAOE,sBAAA,YAAY,EAAC,KAPf;AAQE,sBAAA,OAAO,EAAE,MAAM;AACblB,wBAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,wBAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,wBAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AAZH;AAAA;AAAA;AAAA;AAAA,4BAFF,eAgBE;AAAM,sBAAA,SAAS,EAAC,iBAAhB;AAAA,6CACE;AAAK,wBAAA,GAAG,EAAElE,QAAV;AAAoB,wBAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BAhBF,EAoBG+D,WAAW,IAAI,CAAAd,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAE0C,MAAb,IAAsB,CAArC,gBACC;AAAM,sBAAA,SAAS,EAAC,aAAhB;AAAA,6CACE;AACE,wBAAA,GAAG,EAAE1F,KADP;AAEE,wBAAA,GAAG,EAAC,OAFN;AAGE,wBAAA,OAAO,EAAE,MAAM;AACbiD,0BAAAA,cAAc,CAAC,EAAD,CAAd;AACAI,0BAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,4BADD,GAWG,IA/BN;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAmCG,CAAA4J,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEvH,MAAb,KACD5B,WADC,IAED,CAAAd,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAE0C,MAAb,IAAsB,CAFrB,gBAGC;AACE,oBAAA,SAAS,EAAC,gCADZ;AAEE,oBAAA,EAAE,EAAC,iCAFL;AAAA,2CAIE;AAAK,sBAAA,SAAS,EAAC,iCAAf;AAAA,6CACE;AAAK,wBAAA,SAAS,EAAC,eAAf;AAAA,mCACG,CAAC,CAAClC,MAAM,CAAC8J,mBAAT,iBACC;AAAM,0BAAA,SAAS,EAAC,WAAhB;AAAA,oCACG9J,MAAM,CAAC8J;AADV;AAAA;AAAA;AAAA;AAAA,gCAFJ,EAMGH,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANd,EAQGF,WAAW,CAACpG,GAAZ,CAAiB6F,UAAD,IAAqB;AACpC,gCAAMW,SAAS,GACb,mCADF;AAEA,gCAAME,KAAK,GAAGb,UAAU,CAACc,MAAX,GACV;AACEC,4BAAAA,eAAe,EAAE,SADnB;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BADU,GAKV;AACED,4BAAAA,eAAe,EAAE,SADnB;AAEEC,4BAAAA,MAAM,EAAE;AAFV,2BALJ;AASA,8CACE,oBACMR,sBAAsB,CAACR,UAAD,EAAa;AACrCW,8BAAAA,SADqC;AAErCE,8BAAAA;AAFqC,6BAAb,CAD5B;AAAA,oDAME;AAAA,wCACGb,UAAU,CAACG,mBAAX,CAA+BhD;AADlC;AAAA;AAAA;AAAA;AAAA,oCANF,eASE;AAAM,8BAAA,SAAS,EAAC,MAAhB;AAAA,wCAEI6C,UAAU,CAACG,mBAAX,CACG/C;AAHP;AAAA;AAAA;AAAA;AAAA,oCATF;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF;AAkBD,yBA9BA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,0BAHD,GAkDGhG,WAAW,IACb,EAACmJ,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEvH,MAAd,CADE,IAEF,CAACI,MAAM,CAACC,IAAP,CAAY3C,eAAZ,EAA6BsC,MAF5B,gBAGF;AACE,oBAAA,KAAK,EAAE;AAAEiI,sBAAAA,SAAS,EAAE;AAAb,qBADT;AAEE,oBAAA,SAAS,EAAC,gCAFZ;AAGE,oBAAA,EAAE,EAAC,iCAHL;AAAA,2CAKE;AAAK,sBAAA,SAAS,EAAC,iCAAf;AAAA,6CACE;AAAK,wBAAA,SAAS,EAAC,eAAf;AAAA,+CACE;AAAK,0BAAA,SAAS,EAAC,iBAAf;AAAA,oCACG;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,0BAHE,GAgBA,IArGN;AAAA;AAAA;AAAA;AAAA;AAAA;AA/CJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EA6JG,CAAC,CAACnK,MAAM,CAAC8J,mBAAT,iBACC;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,sBAA6B9J,MAAM,CAAC8J;AAApC;AAAA;AAAA;AAAA;AAAA,kBA9JJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDF,EAsNG,EAACtK,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAE0C,MAAd,KAAwB5B,WAAxB,gBACC;AACE,UAAA,SAAS,EAAC,gCADZ;AAEE,UAAA,EAAE,EAAC,6BAFL;AAAA,kCAIE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAA+B,YAAA,OAAO,EAAE8G,kBAAxC;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,UAAhB;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAE3K,KAAV;AAAiB,gBAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,EAIG,0BAJH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAUGyC,cAAc,KAAK,QAAnB,iBACC;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,sBAEI;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAiBE;AAAK,YAAA,SAAS,EAAC,iCAAf;AAAA,uBACG,CAAAR,KAAK,SAAL,IAAAA,KAAK,WAAL,qCAAAA,KAAK,CAAEuD,kBAAP,gFAA2BC,MAA3B,IAAoC,CAApC,iBACC;AAAM,cAAA,SAAS,EAAC,WAAhB;AAAA,wBAA6B;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAFJ,EAIGxD,KAJH,aAIGA,KAJH,iDAIGA,KAAK,CAAEuD,kBAJV,2DAIG,uBAA2BoB,GAA3B,CAAgCxB,IAAD,IAAe;AAAA;;AAC7C,qBACE,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEqC,OAAN,gEAAehC,MAAf,IAAwB,CAAxB,iBACE;AACE,gBAAA,SAAS,EAAC,eADZ;AAEE,gBAAA,OAAO,EAAE,MAAM;AAAA;;AACbzC,kBAAAA,cAAc,iBAAC+F,IAAI,CAACY,KAAL,CAAWvE,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAEqC,OAAjB,CAAD,iDAAC,aAA2BmC,QAA5B,CAAd;AACAxG,kBAAAA,kBAAkB,CAAC;AACjBmE,oBAAAA,GAAG,EAAEnC,IAAF,aAAEA,IAAF,yCAAEA,IAAI,CAAEgC,QAAR,mDAAE,eAAgBC,WAAhB,CAA4B,CAA5B,CADY;AAEjBC,oBAAAA,GAAG,EAAElC,IAAF,aAAEA,IAAF,0CAAEA,IAAI,CAAEgC,QAAR,oDAAE,gBAAgBC,WAAhB,CAA4B,CAA5B;AAFY,mBAAD,CAAlB;AAIAjD,kBAAAA,aAAa,CAAC2E,IAAI,CAACY,KAAL,CAAWvE,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAEqC,OAAjB,CAAD,CAAb;AACD,iBATH;AAAA,uCAWE;AAAK,kBAAA,SAAS,EAAC,mCAAf;AAAA,0CACE;AAAA,8CAAOsB,IAAI,CAACY,KAAL,CAAWvE,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAEqC,OAAjB,CAAP,iDAAO,aAA2BmC;AAAlC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAM,oBAAA,SAAS,EAAC,MAAhB;AAAA,8CACGb,IAAI,CAACY,KAAL,CAAWvE,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAEqC,OAAjB,CADH,iDACG,aAA2BoC;AAD9B;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAsBD,aAvBA,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAgDG,IAtQN,eAuQE;AACE,UAAA,SAAS,EAAG,YACV,CAAA5F,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAExC,SAAhB,IAA4B,YAA5B,GAA2C,EAC5C,EAHH;AAIE,UAAA,KAAK,EAAE;AAAE6K,YAAAA,OAAO,EAAE;AAAX,WAJT;AAAA,iCAME;AACE,YAAA,GAAG,EAAEpH,WADP;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAGE,YAAA,EAAE,EAAC,gBAHL;AAAA,oCAKE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,EAAE,EAAC,gBAFL;AAGE,gBAAA,WAAW,EAAE0G,gBAAgB,CAAC3H,cAAD,CAH/B;AAIE,gBAAA,YAAY,EAAC,MAJf;AAKE,gBAAA,OAAO,EAAE,MAAM;AACbD,kBAAAA,cAAc,CAAC,IAAD,CAAd;AACAJ,kBAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,kBAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AATH;AAAA;AAAA;AAAA;AAAA,sBAFF,EAaG,CAAAG,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAExC,SAAhB,KAA6BsC,WAA7B,iBACC;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,uCACE;AACE,kBAAA,GAAG,EAAEhE,KADP;AAEE,kBAAA,GAAG,EAAC,OAFN;AAGE,kBAAA,OAAO,EAAE,MAAM;AACbmE,oBAAAA,iBAAiB,CAAC;AAChBzC,sBAAAA,SAAS,EAAE,EADK;AAEhBC,sBAAAA,OAAO,EAAE,EAFO;AAGhBC,sBAAAA,GAAG,EAAE;AAHW,qBAAD,CAAjB;AAKD;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAmCGoC,WAAW,gBACV;AACE,cAAA,SAAS,EAAC,uBADZ;AAEE,cAAA,EAAE,EAAC,uBAFL;AAAA,qCAIE,QAAC,SAAD;AACE,gBAAA,QAAQ,EAAEoB,mBADZ;AAEE,gBAAA,MAAM,EACJ,CAACxE,MAAM,CAACsD,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAExC,SAAjB,CAAN,CAAkCwH,OAAlC,EAAD,GACI,CACE;AACExH,kBAAAA,SAAS,EAAE,IAAIkM,IAAJ,EADb;AAEEjM,kBAAAA,OAAO,EAAE,IAAIiM,IAAJ,EAFX;AAGEhM,kBAAAA,GAAG,EAAE;AAHP,iBADF,CADJ,GAQI,CAACsC,cAAD,CAXR;AAaE,gBAAA,yBAAyB,EAAE,KAb7B;AAcE,gBAAA,WAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,CAdf;AAeE,gBAAA,eAAe,EAAE,KAfnB;AAgBE,gBAAA,oBAAoB,EAAE,IAhBxB;AAiBE,gBAAA,MAAM,EAAE,CAjBV;AAkBE,gBAAA,WAAW,EAAE,IAlBf;AAmBE,gBAAA,OAAO,EAAE,IAAI0J,IAAJ,EAnBX;AAoBE,gBAAA,OAAO,EAAEhN,MAAM,GAAGiN,GAAT,CAAa,CAAb,EAAgB,OAAhB,EAAyB9B,MAAzB,EApBX;AAqBE,gBAAA,SAAS,EAAC,YArBZ;AAsBE,gBAAA,WAAW,EAAE;AAtBf;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBADU,GA8BR,IAjEN;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAvQF,eAiVE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,qBAFZ;AAGE,YAAA,OAAO,EAAEvD,mBAHX;AAAA,mCAKE;AAAK,cAAA,GAAG,EAAE1I,MAAV;AAAkB,cAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4WD,CA73BD;;IAAMmC,Y;UA8BmBxC,W,EAaLkB,qB,EAGEA,qB,EAOKA,qB,EAOLA,qB;;;KA5DhBsB,Y;;AA+3BN,MAAM6L,eAAe,GAAIvJ,KAAD,IAAgB;AACtC,SAAO;AACL4D,IAAAA,iBAAiB,EAAE5D,KAAK,CAACwJ,UAAN,CAAiB5F,iBAD/B;AAELxB,IAAAA,mBAAmB,EAAEpC,KAAK,CAACwJ,UAAN,CAAiBpH,mBAFjC;AAGLqH,IAAAA,iBAAiB,EAAEzJ,KAAK,CAACwJ,UAAN,CAAiBC,iBAH/B;AAILvJ,IAAAA,aAAa,EAAEF,KAAK,CAACC,IAAN,CAAWC,aAJrB;AAKLpC,IAAAA,YAAY,EAAEkC,KAAK,CAAC0J,IAAN,CAAW5L,YALpB;AAMLoD,IAAAA,kBAAkB,EAAElB,KAAK,CAACwJ,UAAN,CAAiBtI;AANhC,GAAP;AAQD,CATD;;AAWA,MAAMyI,kBAAkB,GAAIC,QAAD,IAAmB;AAC5C,SAAO9N,kBAAkB,CACvB;AACEC,IAAAA,gBADF;AAEEC,IAAAA,mBAFF;AAGEC,IAAAA,kBAHF;AAIEE,IAAAA,eAJF;AAKED,IAAAA;AALF,GADuB,EAQvB0N,QARuB,CAAzB;AAUD,CAXD;;AAaA,eAAe/N,OAAO,CAAC0N,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjM,YAA7C,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Constants from \"../../utils/constants\";\n// @ts-ignore\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport regex from \"../../utils/regex\";\n// @ts-ignore\nimport { format } from \"date-fns\";\n// @ts-ignore\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  getSearchJobList,\n  getRecentSearchList,\n  postHomeSearchData,\n  getRecentLocationList,\n} from \"../../redux/homeSearch/actions\";\nimport { isHandleChanges } from \"../../redux/jobs/actions\";\n// @ts-ignore\nimport { useDetectClickOutside } from \"react-detect-click-outside\";\nimport moment from \"moment\";\nimport Geocode from \"react-geocode\";\nimport { setShowToast } from \"../../redux/common/actions\";\n\nimport { deleteRecentSearch } from \"../../redux/homeSearch/actions\";\n\nimport { renderTime, renderTimeWithCustomFormat } from \"../../utils/common\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\n\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"au\");\n// Geocode?.setLocationType(\"ROOFTOP\");\n\ninterface PropsType {\n  history: any;\n  location?: any;\n  bannerData: any;\n  selectedItem: any;\n  selectedTrade: any;\n  current_address: any;\n  recentLocationData: Array<any>;\n\n  searchText: any;\n  stateData: any;\n  addressText: any;\n  selectedAddress: any;\n  isHandleChanges: (item: any) => void;\n  localChanges: boolean;\n  searchJobListData: Array<object>;\n  recentSearchJobData: Array<object>;\n  homeSearchJobData: Array<object>;\n  setBannerData: (data: any) => void;\n  getSearchJobList: (data: any) => void;\n  postHomeSearchData: (data: any) => void;\n  handleChangeToggle?: (data: any) => void;\n  getRecentSearchList?: () => void;\n  getRecentLocationList: () => void;\n}\n\nconst example_calender = { startDate: \"\", endDate: \"\", key: \"selection1\" };\n\nexport function useStateFromProp(initialValue: any) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => setValue(initialValue), [initialValue]);\n\n  return [value, setValue];\n}\n\nconst BannerSearch = (props: PropsType) => {\n  let props_selected = props.selectedItem;\n  const {\n    selectedItem,\n    isHandleChanges,\n    localChanges,\n    getRecentSearchList,\n    getRecentLocationList,\n  } = props;\n\n  const [checkOnChange, setOnChange] = useState(false);\n  const [showOnlyTradeName, setShowOnlyTradeName] = useState(false);\n\n  const [locationStatus, setLocationStatus] = useState(null);\n  const [stateData, setStateData] = useState<any>(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [addressText, setAddressText] = useState<any>(\"\");\n  const [recentLocation, setRecentLocation] = useState<any>([]); // recentLocation\n  const [selectedAddress, setSelectedAddress] = useState({});\n  const [enableCurrentLocation, setCurrentLocations] = useState<boolean>(false);\n  const [errors, setErrors] = useState<any>({});\n  const [selectedTrade, setSelectedTrade] = useState({});\n\n  const [inputFocus1, setInputFocus1] = useState<boolean>(false);\n  const [inputFocus2, setInputFocus2] = useState<boolean>(false);\n  const [inputFocus3, setInputFocus3] = useState<boolean>(false);\n\n  const [calenderRange1, setCalenderRange1] = useState<any>(example_calender);\n\n  const [suggestionSelected, setSuggestion] = useState({});\n  const tradeListRedux = useSelector((state: any) => state.auth.tradeListData);\n\n  const handleOnOutsideSearch = () => {\n    setOnChange(false);\n    setInputFocus1(false);\n  };\n  const handleOnOutsideLocation = () => {\n    setInputFocus2(false);\n  };\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const [addressRef, setAddressRef] = useState(\"\");\n\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch,\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: () => {\n      // if (addressText?.length > 3) {\n      handleOnOutsideLocation();\n      // }\n    },\n  });\n  const locationRefClone = useDetectClickOutside({\n    onTriggered: () => {\n      // if (!addressText || addressText?.length < 2) {\n      // handleOnOutsideLocation()\n      // }\n    },\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender,\n  });\n\n  const handleCalenderRange = (item: any) => {\n    setCalenderRange1(item.selection1);\n  };\n\n  useEffect(() => {\n    if (getRecentSearchList) {\n      getRecentSearchList();\n    }\n    if (getRecentLocationList) {\n      getRecentLocationList();\n    }\n    // getRecentLocationData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"In local-changes\", { props: props.selectedItem });\n    return () => {\n      console.log(\"local-changes\", { props: props.selectedItem });\n    };\n  }, [props]);\n\n  useEffect(() => {\n    // if (props.recentLocationData?.length && JSON.stringify(props.recentLocationData[0]?.location?.coordinates) !== JSON.stringify(recentLocation[0]?.location?.coordinates)) {\n    //     getRecentLocationData();\n    // }\n  }, [props.recentLocationData, recentLocation]);\n\n  useEffect(() => {\n    if (searchText?.length > 2) {\n      props.getSearchJobList(searchText);\n    }\n    if (!searchText?.length) {\n      setSelectedTrade({});\n    }\n  }, [searchText]);\n\n  const checkIfExist = (_id: any) => {\n    if (selectedTrade) {\n      let isLength = Object.keys(selectedTrade).length;\n      if (isLength) {\n        let item: any = selectedTrade;\n        if (item?._id === _id) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  const cleanRecentSearch = async (event: any, recentSearchId: string) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0,\n    };\n    const res = await deleteRecentSearch(data);\n    if (res.success) {\n      if (getRecentSearchList) {\n        getRecentSearchList();\n      }\n    }\n  };\n\n  const recentJobSearches = () => {\n    let props_Clone: any = props;\n    let tradeListData = props_Clone.tradeListData;\n    return (\n      <>\n        <div className=\"custom_autosuggestion\" id=\"recent-job-search-div\">\n          {props?.recentSearchJobData?.length ? (\n            <React.Fragment>\n              <span className=\"sub_title\">Recent searches</span>\n              <div className=\"flex_row recent_search\">\n                {props.recentSearchJobData?.length > 0 &&\n                  props.recentSearchJobData?.slice(0, 4).map((item: any) => {\n                    console.log(\n                      item,\n                      \"item--------------------------------------------------\"\n                    );\n                    return (\n                      <div\n                        className=\"flex_col_sm_3\"\n                        onClick={() => {\n                          let selected_address: any = selectedAddress;\n                          props.history.push({\n                            pathname: `search-tradie-results`,\n                            state: {\n                              name: item?.name,\n                              tradeId: [item?._id],\n                              specializations: \"12345\",\n                              location: Object.keys(selected_address).length\n                                ? {\n                                    coordinates: [\n                                      selected_address?.lng,\n                                      selected_address?.lat,\n                                    ],\n                                  }\n                                : null,\n                              calender: calenderRange1,\n                              address: addressText,\n                            },\n                          });\n                          // setItemSearch(item);\n                          // setSelectedTrade({});\n                        }}\n                      >\n                        <div className=\"card ico_txt_wrap\">\n                          <figure className=\"ico\">\n                            <img src={item?.image || residential} alt=\"icon\" />\n                          </figure>\n                          <div className=\"f_column\">\n                            <span>{item.name}</span>\n                            <span className=\"name\">{item.trade_name}</span>\n                          </div>\n                          <span\n                            className=\"remove_card\"\n                            onClick={(event) =>\n                              cleanRecentSearch(event, item.recentSearchId)\n                            }\n                          >\n                            <img src={close} alt=\"remove\" />\n                          </span>\n                        </div>\n                      </div>\n                    );\n                  })}\n              </div>\n            </React.Fragment>\n          ) : null}\n\n          <div className=\"select_sphere recent_search\">\n            <span className=\"sub_title\">Categories</span>\n            <ul>\n              {tradeListData?.map(\n                ({\n                  _id,\n                  trade_name,\n                  selected_url,\n                  specialisations,\n                }: {\n                  _id: string;\n                  trade_name: string;\n                  selected_url: string;\n                  specialisations: [];\n                }) => (\n                  <li\n                    onClick={() => {\n                      let item_spec: any = specialisations;\n                      if (item_spec?.length) {\n                        let getItem = item_spec[0];\n                        if (getItem) {\n                          setStateData({\n                            image: selected_url,\n                            name: getItem?.name,\n                            specializationsId: getItem?._id,\n                            trade_name: trade_name,\n                            _id: _id,\n                          });\n                          setSearchText(trade_name);\n                        }\n                        setShowOnlyTradeName(true);\n                        setSelectedTrade({\n                          _id,\n                          trade_name,\n                          selected_url,\n                          specialisations,\n                        });\n                      }\n                    }}\n                    className={checkIfExist(_id) ? \"active\" : \"\"}\n                  >\n                    <figure>\n                      <img src={selected_url} alt=\"\" />\n                    </figure>\n                    <span className=\"name\">{trade_name}</span>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  const renderJobResult = () => {\n    if (props?.searchJobListData?.length) {\n      return (\n        <div\n          className=\"custom_autosuggestion\"\n          id=\"fetched-custom-job-category-div\"\n        >\n          <div className=\"recent_search\">\n            <ul className=\"drop_data\">\n              {props.searchJobListData?.map((item: any) => {\n                return (\n                  <li\n                    onClick={() => {\n                      setItemSearch(item);\n                    }}\n                  >\n                    <figure className=\"category\">\n                      <img\n                        src={item.image ? item.image : residential}\n                        alt=\"icon\"\n                      />\n                    </figure>\n                    <div className=\"details\">\n                      <span className=\"name\">{item.name}</span>\n                      <span className=\"prof\">{item.trade_name}</span>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const onError = (status: string, clearSuggestions: Function) => {\n    console.log(\"Google Maps API returned error with status: \", status);\n    clearSuggestions();\n  };\n\n  const validateForm = () => {\n    return true;\n  };\n\n  const setItemSearch = (item: any) => {\n    setStateData(item);\n    setSelectedTrade({});\n    setSearchText(item?.name || \"\");\n  };\n\n  const bannerSearchClicked = () => {\n    let selected_address: any = selectedAddress;\n    let selected_trade: any = selectedTrade;\n    let selected_item: any = props?.selectedItem;\n    let props_trade: any = selected_item?.selectedTrade;\n\n    if (!stateData?._id && !props_trade?._id) {\n      setShowToast(true, \"Please enter the valid search text\");\n      return;\n    }\n\n    if (checkOnChange) {\n      setShowToast(true, \"Please select job type from the list\");\n      return;\n    }\n\n    if (validateForm()) {\n      let data: any = {\n        page: 1,\n        isFiltered: false,\n        tradeId: [stateData?._id],\n        specializationId: [stateData?.specializationsId],\n      };\n\n      if (Object.keys(selectedAddress).length) {\n        data[\"location\"] = {\n          coordinates: [\n            parseFloat(selected_address?.lng),\n            parseFloat(selected_address?.lat),\n          ],\n        };\n        if (addressText) {\n          data[\"address\"] =\n            addressText && Object.keys(suggestionSelected).length\n              ? JSON.stringify(suggestionSelected)\n              : \"\";\n        }\n      } else {\n        delete data.location;\n      }\n\n      if (moment(calenderRange1?.startDate).isValid()) {\n        data[\"from_date\"] = moment(calenderRange1?.startDate).format(\n          \"YYYY-MM-DD\"\n        );\n      } else {\n        delete data.from_date;\n      }\n\n      if (moment(calenderRange1?.endDate).isValid()) {\n        data[\"to_date\"] = moment(calenderRange1?.endDate).format(\"YYYY-MM-DD\");\n      } else {\n        delete data.to_date;\n      }\n\n      if (props_trade?._id) {\n        data[\"tradeId\"] = [props_trade._id];\n        if (props_trade?.specialisations?.length) {\n          data[\"specializationId\"] = props_trade.specialisations.map(\n            (item: any) => {\n              if (item?._id) {\n                return item?._id;\n              }\n              return item;\n            }\n          );\n        }\n      } else {\n        if (selected_trade) {\n          if (Object.keys(selected_trade).length) {\n            data[\"tradeId\"] = [selected_trade._id];\n            if (selected_trade?.specialisations?.length) {\n              data[\"specializationId\"] = selected_trade.specialisations.map(\n                (item: any) => item._id\n              );\n            }\n          }\n        }\n      }\n\n      if (!data?.address || !data?.address?.length) {\n        delete data?.address;\n      }\n\n      if (!localChanges) {\n        props.postHomeSearchData(data);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n          category: tradeListRedux.find((i: any) => i._id === data?.tradeId[0])\n            ?.trade_name,\n          ...(data.address && {\n            location: `${JSON.parse(data.address)?.mainText} ${\n              JSON.parse(data.address)?.secondaryText\n            }`,\n          }),\n          //'length of hire': '',\n          ...(data?.from_date && { \"start date\": data?.from_date }),\n          ...(data?.to_date && { \"end date\": data?.to_date }),\n        };\n        moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n      }\n      isHandleChanges(false);\n      props.history.push({\n        pathname: `search-tradie-results`,\n        state: {\n          name: searchText,\n          showOnlyTradeName: showOnlyTradeName,\n          tradeId: data.tradeId,\n          specializations: data.specializationId,\n          location: Object.keys(selected_address).length\n            ? { coordinates: [selected_address?.lng, selected_address?.lat] }\n            : null,\n          calender: calenderRange1,\n          address: addressText,\n          suggestionSelected: suggestionSelected,\n        },\n      });\n    }\n  };\n\n  const filterFromAddress = (response: any) => {\n    let city,\n      state,\n      country = null;\n    for (let i = 0; i < response.results[0].address_components.length; i++) {\n      for (\n        let j = 0;\n        j < response.results[0].address_components[i].types.length;\n        j++\n      ) {\n        switch (response.results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = response.results[0].address_components[i].long_name;\n            break;\n          case \"administrative_area_level_1\":\n            state = response.results[0].address_components[i].long_name;\n            break;\n          case \"country\":\n            country = response.results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n    return { city, state, country: country.toLowerCase() };\n  };\n\n  const getCurrentLocation = async () => {\n    let itemToggle: any = await navigator?.permissions?.query({\n      name: \"geolocation\",\n    });\n    setLocationStatus(itemToggle.state);\n    let local_position: any = localStorage.getItem(\"position\");\n    let position: any = JSON.parse(local_position);\n    if (position?.length) {\n      let long = position[0].toString();\n      let lat = position[1].toString();\n      let response: any = await Geocode.fromLatLng(lat, long);\n      const { city, state, country } = filterFromAddress(response);\n\n      if (response && [\"australia\", \"au\"].includes(country)) {\n        if (\n          response?.results &&\n          Array.isArray(response.results) &&\n          response?.results?.length\n        ) {\n          const address = response.results[0].formatted_address;\n          setSelectedAddress({ lat, long });\n          setAddressText(address);\n          setInputFocus2(true);\n          setInputFocus1(false);\n          setInputFocus3(false);\n          setCurrentLocations(true);\n        }\n      } else {\n        if (itemToggle?.state !== \"denied\") {\n          setShowToast(\n            true,\n            \"Uh Oh! We don't provide service currently in your location\"\n          );\n        }\n      }\n    }\n  };\n\n  let selected_trade: any = selectedTrade;\n  let length_spec = 0;\n\n  if (props?.selectedItem) {\n    let sProps = props?.selectedItem;\n    if (Array.isArray(sProps?.selectedTrade?.specialisations)) {\n      length_spec = sProps?.selectedTrade?.specialisations?.length;\n    }\n  } else {\n    length_spec = selected_trade?.specialisations?.length;\n    if (!length_spec) {\n      if (stateData?.specializationsId?.length) {\n        length_spec = 1;\n      }\n    }\n  }\n\n  const checkPlaceholder = (calenderRange1: any) => {\n    let fromDate: any = calenderRange1?.startDate;\n    let toDate: any = calenderRange1?.endDate;\n    let result = renderTimeWithCustomFormat(\n      fromDate,\n      toDate,\n      \"\",\n      [\"DD MMM\", \"DD MMM YYYY\"],\n      \"When?\"\n    );\n\n    if (!result) {\n      return \"When?\";\n    }\n\n    return result;\n  };\n\n  let custom_name = searchText;\n\n  if (!checkOnChange) {\n    if (length_spec > 1) {\n      custom_name = `${custom_name} +${length_spec - 1}`;\n    }\n  }\n\n  return (\n    <div className=\"home_search\">\n      <button\n        onClick={() => {\n          if (props?.handleChangeToggle) {\n            props.handleChangeToggle(false);\n          }\n        }}\n        className=\"modal_srch_close\"\n      >\n        <img src={close} alt=\"close\" />\n      </button>\n      <form className={`search_wrapr ${!length_spec ? \"first_input\" : \"\"}`}>\n        {/* first_input */}\n        <ul>\n          <li className=\"categ_box\">\n            <div className=\"text_field\" id=\"text-field-div\">\n              <input\n                type=\"text\"\n                ref={searchRef}\n                placeholder=\"What jobs are you after?\"\n                value={showOnlyTradeName ? searchText : custom_name}\n                onChange={(e) => {\n                  // isHandleChanges(true)\n                  setOnChange(true);\n                  setSearchText(e.target.value.trimLeft());\n                }}\n                autoComplete=\"none\"\n                // readOnly={props?.selectedItem ? true : false}\n                onFocus={() => {\n                  setInputFocus1(true);\n                  setInputFocus2(false);\n                  setInputFocus3(false);\n                }}\n              />\n              <div className=\"border_eff\"></div>\n              <span className=\"detect_icon_ltr\">\n                <img src={Searchicon} alt=\"search\" />\n              </span>\n              {searchText?.length && inputFocus1 ? (\n                <span className=\"detect_icon\">\n                  <img\n                    src={cross}\n                    alt=\"cross\"\n                    onClick={() => {\n                      // clear here\n                      // isHandleChanges(true)\n                      setOnChange(false);\n                      setSearchText(\"\");\n                      setStateData({});\n                      setSelectedTrade({});\n                    }}\n                  />\n                </span>\n              ) : null}\n            </div>\n            {!!errors.searchedJob && (\n              <span className=\"error_msg\">{errors.searchedJob}</span>\n            )}\n          </li>\n          {!searchText?.length && inputFocus1 ? recentJobSearches() : null}\n          {searchText?.length > 2 && inputFocus1 ? renderJobResult() : null}\n\n          {/* {'location search start here!'} */}\n          <li className=\"loc_box\" style={{ display: \"block\" }}>\n            <div id=\"location-text-field-div\">\n              <div>\n                <PlacesAutocomplete\n                  value={addressText}\n                  searchOptions={{\n                    componentRestrictions: {\n                      country: \"au\",\n                    },\n                    // types: [\"address\"]\n                    types: [\"(cities)\"],\n                  }}\n                  onChange={(item: any) => {\n                    setAddressText(item);\n                    if (!addressText.length) {\n                      setSelectedAddress({});\n                    }\n                  }}\n                  shouldFetchSuggestions={addressText?.length > 2}\n                  onSelect={async (\n                    address: string,\n                    placeId?: any,\n                    suggestion?: any\n                  ) => {\n                    console.log({ address, placeId, suggestion });\n                    let selected_address: any = address;\n                    if (address.indexOf(\",\")) {\n                      selected_address = address.split(\",\")[0];\n                    }\n                    setSuggestion(suggestion?.formattedSuggestion);\n                    setAddressText(suggestion?.formattedSuggestion?.mainText);\n                    let response = await Geocode.fromAddress(address);\n                    console.log({ selected_address });\n                    if (response?.results?.length) {\n                      const { lat, lng } =\n                        response.results[0].geometry.location;\n                      setSelectedAddress({ lat, lng });\n                      setInputFocus2(false);\n                    }\n                  }}\n                  highlightFirstSuggestion={true}\n                  onError={onError}\n                  debounce={0}\n                >\n                  {({\n                    getInputProps,\n                    suggestions,\n                    getSuggestionItemProps,\n                    loading,\n                  }: any) => (\n                    <div>\n                      <div className={`text_field`}>\n                        {/* className={`text_field ${addressText?.length > 2 ? '' : 'none'}`}> */}\n                        <input\n                          {...getInputProps({\n                            placeholder: \"Where?\",\n                            className: \"line-1\",\n                          })}\n                          id=\"location-input-tag\"\n                          ref={locationRef}\n                          autoComplete=\"off\"\n                          onFocus={() => {\n                            setInputFocus2(true);\n                            setInputFocus1(false);\n                            setInputFocus3(false);\n                          }}\n                        />\n                        <span className=\"detect_icon_ltr\">\n                          <img src={Location} alt=\"location\" />\n                        </span>\n\n                        {inputFocus2 && addressText?.length > 2 ? (\n                          <span className=\"detect_icon\">\n                            <img\n                              src={cross}\n                              alt=\"cross\"\n                              onClick={() => {\n                                setAddressText(\"\");\n                                setSelectedAddress({});\n                              }}\n                            />\n                          </span>\n                        ) : null}\n                      </div>\n\n                      {suggestions?.length &&\n                      inputFocus2 &&\n                      addressText?.length > 2 ? (\n                        <div\n                          className=\"custom_autosuggestion location\"\n                          id=\"autocomplete-dropdown-container\"\n                        >\n                          <div className=\"flex_row recent_search auto_loc\">\n                            <div className=\"flex_col_sm_4\">\n                              {!!errors.selectedMapLocation && (\n                                <span className=\"error_msg\">\n                                  {errors.selectedMapLocation}\n                                </span>\n                              )}\n                              {loading && <div>Loading...</div>}\n\n                              {suggestions.map((suggestion: any) => {\n                                const className =\n                                  \"autosuggestion_icon card loc name\";\n                                const style = suggestion.active\n                                  ? {\n                                      backgroundColor: \"#fafafa\",\n                                      cursor: \"pointer\",\n                                    }\n                                  : {\n                                      backgroundColor: \"#ffffff\",\n                                      cursor: \"pointer\",\n                                    };\n                                return (\n                                  <div\n                                    {...getSuggestionItemProps(suggestion, {\n                                      className,\n                                      style,\n                                    })}\n                                  >\n                                    <span>\n                                      {suggestion.formattedSuggestion.mainText}\n                                    </span>\n                                    <span className=\"name\">\n                                      {\n                                        suggestion.formattedSuggestion\n                                          .secondaryText\n                                      }\n                                    </span>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        </div>\n                      ) : inputFocus2 &&\n                        !suggestions?.length &&\n                        !Object.keys(selectedAddress).length ? (\n                        <div\n                          style={{ minHeight: \"50px\" }}\n                          className=\"custom_autosuggestion location\"\n                          id=\"autocomplete-dropdown-container\"\n                        >\n                          <div className=\"flex_row recent_search auto_loc\">\n                            <div className=\"flex_col_sm_4\">\n                              <div className=\"loc_suggestions\">\n                                {\"No Result Found.\"}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ) : null}\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n              </div>\n            </div>\n            {!!errors.selectedMapLocation && (\n              <span className=\"error_msg\">{errors.selectedMapLocation}</span>\n            )}\n          </li>\n\n          {/* {'location search end here!'} */}\n\n          {!addressText?.length && inputFocus2 ? (\n            <div\n              className=\"custom_autosuggestion location\"\n              id=\"current-location-search-div\"\n            >\n              <span className=\"location-btn\" onClick={getCurrentLocation}>\n                <span className=\"gps_icon\">\n                  <img src={icgps} alt=\"\" />\n                </span>\n                {\" Use my current location\"}\n              </span>\n              {locationStatus === \"denied\" && (\n                <span className=\"blocked_note\">\n                  {\n                    \"You have blocked your location. To use this, change your location settings in browser.\"\n                  }\n                </span>\n              )}\n              <div className=\"flex_row recent_search auto_loc\">\n                {props?.recentLocationData?.length > 0 && (\n                  <span className=\"sub_title\">{\"Recent searches\"}</span>\n                )}\n                {props?.recentLocationData?.map((item: any) => {\n                  return (\n                    item?.address?.length > 0 && (\n                      <div\n                        className=\"flex_col_sm_4\"\n                        onClick={() => {\n                          setAddressText(JSON.parse(item?.address)?.mainText);\n                          setSelectedAddress({\n                            lat: item?.location?.coordinates[1],\n                            lng: item?.location?.coordinates[0],\n                          });\n                          setSuggestion(JSON.parse(item?.address));\n                        }}\n                      >\n                        <div className=\"autosuggestion_icon card loc name\">\n                          <span>{JSON.parse(item?.address)?.mainText}</span>\n                          <span className=\"name\">\n                            {JSON.parse(item?.address)?.secondaryText}\n                          </span>\n                        </div>\n                      </div>\n                    )\n                  );\n                })}\n              </div>\n            </div>\n          ) : null}\n          <li\n            className={`date_box ${\n              calenderRange1?.startDate ? \"date_value\" : \"\"\n            }`}\n            style={{ display: \"block\" }}\n          >\n            <div\n              ref={calenderRef}\n              className=\"custom_date_range\"\n              id=\"date-range-div\"\n            >\n              <div className=\"text_field\">\n                <span className=\"detect_icon_ltr calendar\"></span>\n                <input\n                  type=\"text\"\n                  id=\"calender-input\"\n                  placeholder={checkPlaceholder(calenderRange1)}\n                  autoComplete=\"none\"\n                  onFocus={() => {\n                    setInputFocus3(true);\n                    setInputFocus1(false);\n                    setInputFocus2(false);\n                  }}\n                />\n                {calenderRange1?.startDate && inputFocus3 && (\n                  <span className=\"detect_icon\">\n                    <img\n                      src={cross}\n                      alt=\"cross\"\n                      onClick={() => {\n                        setCalenderRange1({\n                          startDate: \"\",\n                          endDate: \"\",\n                          key: \"selection1\",\n                        });\n                      }}\n                    />\n                  </span>\n                )}\n              </div>\n              {/* {inputFocus3 && */}\n              {inputFocus3 ? (\n                <div\n                  className=\"custom_autosuggestion\"\n                  id=\"custom-date-range-div\"\n                >\n                  <DateRange\n                    onChange={handleCalenderRange}\n                    ranges={\n                      !moment(calenderRange1?.startDate).isValid()\n                        ? [\n                            {\n                              startDate: new Date(),\n                              endDate: new Date(),\n                              key: \"selection1\",\n                            },\n                          ]\n                        : [calenderRange1]\n                    }\n                    moveRangeOnFirstSelection={false}\n                    rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                    showDateDisplay={false}\n                    showSelectionPreview={true}\n                    months={2}\n                    showPreview={true}\n                    minDate={new Date()}\n                    maxDate={moment().add(2, \"years\").toDate()}\n                    direction=\"horizontal\"\n                    fixedHeight={true}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </li>\n          <div className=\"search_btn\">\n            <button\n              type=\"button\"\n              className=\"fill_btn btn-effect\"\n              onClick={bannerSearchClicked}\n            >\n              <img src={search} alt=\"search\" />\n            </button>\n          </div>\n        </ul>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    searchJobListData: state.homeSearch.searchJobListData,\n    recentSearchJobData: state.homeSearch.recentSearchJobData,\n    homeSearchJobData: state.homeSearch.homeSearchJobData,\n    tradeListData: state.auth.tradeListData,\n    localChanges: state.jobs.localChanges,\n    recentLocationData: state.homeSearch.recentLocationData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators(\n    {\n      getSearchJobList,\n      getRecentSearchList,\n      postHomeSearchData,\n      isHandleChanges,\n      getRecentLocationList,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerSearch);\n\n/**\n\n    No-result found conditions\n    </div> : !loading || addressText?.length > 2 && !suggestions?.length && !enableCurrentLocation && !Object.keys(selectedAddress).length ? (\n\n **/\n"]},"metadata":{},"sourceType":"module"}