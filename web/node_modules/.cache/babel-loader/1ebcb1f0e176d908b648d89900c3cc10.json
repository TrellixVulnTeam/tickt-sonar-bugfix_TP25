{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import dummy from\"../../../assets/images/u_placeholder.jpg\";import{withRouter}from\"react-router\";import newApplicants from\"../../../assets/images/newApplicants.png\";import{renderTime}from\"../../../utils/common\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewApplicants=function NewApplicants(props){var dataItems=props.dataItems,jobType=props.jobType,setJobLabel=props.setJobLabel,isLoading=props.isLoading;var listData=dataItems;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRender=_useState2[0],setRender=_useState2[1];var redirectToInfo=function redirectToInfo(_ref){var jobId=_ref.jobId;var props_=props;if(jobId===null||jobId===void 0?void 0:jobId.length){// let urlEncode: any = window.btoa(`?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`)\nvar urlEncode=\"?jobId=\".concat(jobId,\"&activeType=\").concat((props_===null||props_===void 0?void 0:props_.activeType)||\"applicant\");props_.history.push(\"/job-detail?\".concat(urlEncode));}};useEffect(function(){if(isLoading==false){setRender(true);}},[isLoading]);if(!isRender){return null;}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"New Applicants\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(listData===null||listData===void 0?void 0:listData.length)?listData.map(function(_ref2){var amount=_ref2.amount,builderId=_ref2.builderId,builderImage=_ref2.builderImage,durations=_ref2.durations,fromDate=_ref2.fromDate,jobName=_ref2.jobName,jobDescription=_ref2.jobDescription,jobId=_ref2.jobId,quote=_ref2.quote,quoteCount=_ref2.quoteCount,quoteJob=_ref2.quoteJob,location=_ref2.location,location_name=_ref2.location_name,specializationName=_ref2.specializationName,specializationId=_ref2.specializationId,timeLeft=_ref2.timeLeft,toDate=_ref2.toDate,total=_ref2.total,tradeId=_ref2.tradeId,tradieId=_ref2.tradieId,tradeName=_ref2.tradeName,tradeSelectedUrl=_ref2.tradeSelectedUrl;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){redirectToInfo({jobId:jobId});},className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img icon\",children:/*#__PURE__*/_jsx(\"img\",{src:tradeSelectedUrl||dummy,alt:\"traide-img\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:tradeName}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:jobName})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para line-2\",children:jobDescription}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:total})}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]})}),quoteJob?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if((quoteCount===null||quoteCount===void 0?void 0:quoteCount.length)||quoteCount){// setJobLabel('applicantList', jobId, 1, specializationId)\n// props.history.push(`/jobs?active=open&quotes=true&jobId=${jobId}`);\nsetJobLabel(\"listQuote\");props.history.replace(\"/jobs?active=applicant&quote=true&jobId=\".concat(jobId));}},className:\"fill_grey_btn full_btn btn-effect\",children:\"\".concat((quoteCount===null||quoteCount===void 0?void 0:quoteCount.length)||quoteCount,\" Application\").concat(quoteCount===1?\"\":\"s\")}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setJobLabel(\"applicantList\",jobId,1,specializationId);},className:\"fill_grey_btn full_btn btn-effect\",children:\"Applications\"})]})});}):!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{children:/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:newApplicants,alt:\"data not found\"})})}),/*#__PURE__*/_jsx(\"span\",{className:\"empty_screen_text\",children:\"You don't have any applicants yet\"}),/*#__PURE__*/_jsx(\"span\",{className:\"empty_screen_subtext\",children:\"As soon as someone will apply for your job post you will be notified\"})]})})]});};export default withRouter(NewApplicants);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/newApplicants.tsx"],"names":["React","useEffect","useState","dummy","withRouter","newApplicants","renderTime","NewApplicants","props","dataItems","jobType","setJobLabel","isLoading","listData","isRender","setRender","redirectToInfo","jobId","props_","length","urlEncode","activeType","history","push","map","amount","builderId","builderImage","durations","fromDate","jobName","jobDescription","quote","quoteCount","quoteJob","location","location_name","specializationName","specializationId","timeLeft","toDate","total","tradeId","tradieId","tradeName","tradeSelectedUrl","e","target","onerror","src","replace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport approved from \"../../../assets/images/approved.png\";\nimport { withRouter } from \"react-router\";\nimport newApplicants from \"../../../assets/images/newApplicants.png\";\nimport noData from \"../../../assets/images/no-search-data.png\";\nimport moment from \"moment\";\nimport { renderTime } from \"../../../utils/common\";\ninterface Applicant {\n  amount: any;\n  builderId: any;\n  builderImage: any;\n  durations: any;\n  fromDate: any;\n  jobName: any;\n  jobDescription: any;\n  jobId: any;\n  quote: any;\n  quoteCount: any;\n  quoteJob: any;\n  specializationName: any;\n  timeLeft: any;\n  toDate: any;\n  total: any;\n  tradeId: any;\n  location: any;\n  location_name: any;\n  specializationId: any;\n  tradeName: any;\n  tradieId: any;\n  isLoading?: any;\n  tradeSelectedUrl: any;\n  activeType?: any;\n}\n\nconst NewApplicants = (props: any) => {\n  const { dataItems, jobType, setJobLabel, isLoading } = props;\n  let listData: any = dataItems;\n\n  const [isRender, setRender] = useState(false);\n\n  const redirectToInfo = ({ jobId }: any) => {\n    const props_: any = props;\n    if (jobId?.length) {\n      // let urlEncode: any = window.btoa(`?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`)\n      let urlEncode: any = `?jobId=${jobId}&activeType=${\n        props_?.activeType || \"applicant\"\n      }`;\n      props_.history.push(`/job-detail?${urlEncode}`);\n    }\n  };\n\n  useEffect(() => {\n    if (isLoading == false) {\n      setRender(true);\n    }\n  }, [isLoading]);\n\n  if (!isRender) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <span className=\"sub_title\">New Applicants</span>\n      <div className=\"flex_row tradies_row\">\n        {listData?.length\n          ? listData.map(\n              ({\n                amount,\n                builderId,\n                builderImage,\n                durations,\n                fromDate,\n                jobName,\n                jobDescription,\n                jobId,\n                quote,\n                quoteCount,\n                quoteJob,\n                location,\n                location_name,\n                specializationName,\n                specializationId,\n                timeLeft,\n                toDate,\n                total,\n                tradeId,\n                tradieId,\n                tradeName,\n                tradeSelectedUrl,\n              }: Applicant) => (\n                <div className=\"flex_col_sm_6\">\n                  <div\n                    className=\"tradie_card\"\n                    data-aos=\"fade-in\"\n                    data-aos-delay=\"250\"\n                    data-aos-duration=\"1000\"\n                  >\n                    <span\n                      onClick={() => {\n                        redirectToInfo({ jobId });\n                      }}\n                      className=\"more_detail circle\"\n                    ></span>\n                    <div className=\"user_wrap\">\n                      <figure className=\"u_img icon\">\n                        <img\n                          src={tradeSelectedUrl || dummy}\n                          alt=\"traide-img\"\n                          onError={(e: any) => {\n                            if (e?.target?.onerror) {\n                              e.target.onerror = null;\n                            }\n                            if (e?.target?.src) {\n                              e.target.src = dummy;\n                            }\n                          }}\n                        />\n                      </figure>\n                      <div className=\"details\">\n                        <span className=\"name\">{tradeName}</span>\n                        <p className=\"commn_para\">{jobName}</p>\n                      </div>\n                    </div>\n                    <p className=\"commn_para line-2\">{jobDescription}</p>\n                    <div className=\"job_info\">\n                      <ul>\n                        <li className=\"icon dollar\">{amount}</li>\n                        <li className=\"\">\n                          <span>{total}</span>\n                        </li>\n                        <li className=\"icon calendar\">\n                          {renderTime(fromDate, toDate)}\n                        </li>\n                        <li className=\"\">\n                          <span>{timeLeft}</span>\n                        </li>\n                      </ul>\n                    </div>\n\n                    {quoteJob ? (\n                      <button\n                        onClick={() => {\n                          if (quoteCount?.length || quoteCount) {\n                            // setJobLabel('applicantList', jobId, 1, specializationId)\n                            // props.history.push(`/jobs?active=open&quotes=true&jobId=${jobId}`);\n                            setJobLabel(\"listQuote\");\n                            props.history.replace(\n                              `/jobs?active=applicant&quote=true&jobId=${jobId}`\n                            );\n                          }\n                        }}\n                        className=\"fill_grey_btn full_btn btn-effect\"\n                      >\n                        {`${quoteCount?.length || quoteCount} Application${\n                          quoteCount === 1 ? \"\" : \"s\"\n                        }`}\n                      </button>\n                    ) : (\n                      <button\n                        onClick={() => {\n                          setJobLabel(\n                            \"applicantList\",\n                            jobId,\n                            1,\n                            specializationId\n                          );\n                        }}\n                        className=\"fill_grey_btn full_btn btn-effect\"\n                      >\n                        {\"Applications\"}\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )\n            )\n          : !isLoading && (\n              <div className=\"no_record  m-t-vh\">\n                <figure>\n                  <figure className=\"no_img\">\n                    <img src={newApplicants} alt=\"data not found\" />\n                  </figure>\n                </figure>\n                <span className=\"empty_screen_text\">\n                  You don't have any applicants yet\n                </span>\n                <span className=\"empty_screen_subtext\">\n                  As soon as someone will apply for your job post you will be\n                  notified\n                </span>\n              </div>\n            )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(NewApplicants);\n"]},"metadata":{},"sourceType":"module"}