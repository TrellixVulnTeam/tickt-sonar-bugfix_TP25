{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/milestones/jobMilestones.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from \"react-router-dom\"; // @ts-ignore\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport moment from 'moment';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { renderTimeWithFormat } from '../../../../utils/common';\nimport AddMilestones from './addEditMilestone';\nimport { updateTemplate, getMileStoneByTempId } from \"../../../../redux/jobs/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobMilestones = props => {\n  _s();\n\n  const [dataItems, setDataItems] = useState([]);\n  const [editItem, setEditItems] = useState({});\n  const [toggleAddEdit, setAddEdit] = useState({\n    toggle: false,\n    item: null,\n    index: null\n  });\n  const [open, setOpen] = React.useState(false);\n  const [deleteItem, setDeleteItem] = React.useState(null);\n  const [localMilestones, setLocalMile] = useState([]);\n  const [allMilestones, setAllMilestones] = useState({});\n\n  const handleClickOpen = id => {\n    setOpen(true);\n    setDeleteItem(id);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setDeleteItem(null);\n  };\n\n  const handleYes = () => {\n    localMilestones.splice(toggleAddEdit === null || toggleAddEdit === void 0 ? void 0 : toggleAddEdit.index, 1);\n    setOpen(false);\n    setDeleteItem(null);\n  };\n\n  const prefetch = async () => {\n    let response = await getMileStoneByTempId(props === null || props === void 0 ? void 0 : props.id);\n\n    if (response.success) {\n      var _response$data, _response$data2, _response$data2$miles;\n\n      console.log({\n        response\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.data) && Array.isArray(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.milestones) && (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$miles = _response$data2.milestones) === null || _response$data2$miles === void 0 ? void 0 : _response$data2$miles.length)) {\n        var _response$data3, _response$data4;\n\n        setDataItems(response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.milestones);\n        let filteredData = response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.milestones.map(item => {\n          return {\n            milestone_name: item === null || item === void 0 ? void 0 : item.milestoneName,\n            order: item === null || item === void 0 ? void 0 : item.order,\n            isPhotoevidence: item === null || item === void 0 ? void 0 : item.isPhotoevidence,\n            recommended_hours: item === null || item === void 0 ? void 0 : item.recommendedHours,\n            from_date: moment(item === null || item === void 0 ? void 0 : item.fromDate).isValid() ? moment(item === null || item === void 0 ? void 0 : item.fromDate).format('MM-DD-YYYY') : '',\n            to_date: moment(item === null || item === void 0 ? void 0 : item.toDate).isValid() ? moment(item === null || item === void 0 ? void 0 : item.toDate).format('MM-DD-YYYY') : ''\n          };\n        });\n        setAllMilestones(response === null || response === void 0 ? void 0 : response.data);\n        setLocalMile(filteredData);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log('Here!!!!');\n    prefetch();\n  }, []);\n\n  const checkOnClick = (e, index) => {\n    let edit_item_clone = editItem;\n    edit_item_clone[index] = e.target.checked;\n    setEditItems(prev => ({ ...prev,\n      ...edit_item_clone\n    }));\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const reOrderedMilestones = reorder(localMilestones, source.index, destination.index);\n    setLocalMile(reOrderedMilestones);\n  };\n\n  const format = 'MM-DD-YYYY';\n\n  const backToScreen = data => {\n    let local_mile = localMilestones;\n    setAddEdit({\n      toggle: false\n    });\n\n    if (data) {\n      let data_ = data === null || data === void 0 ? void 0 : data.data;\n      let index = data === null || data === void 0 ? void 0 : data.index;\n\n      if (index == undefined) {\n        local_mile.push(data_);\n      } else {\n        local_mile[index] = data_;\n      }\n\n      setLocalMile(local_mile);\n    }\n  };\n\n  if (toggleAddEdit === null || toggleAddEdit === void 0 ? void 0 : toggleAddEdit.toggle) {\n    return /*#__PURE__*/_jsxDEV(AddMilestones, {\n      backToScreen: backToScreen,\n      item: toggleAddEdit === null || toggleAddEdit === void 0 ? void 0 : toggleAddEdit.item,\n      items: localMilestones,\n      index: toggleAddEdit === null || toggleAddEdit === void 0 ? void 0 : toggleAddEdit.index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this);\n  }\n\n  const checkIfValidDates = item => {\n    let isfilter = localMilestones.filter(item_ => {\n      if (item_.hasOwnProperty('from_date')) {\n        var _item_$from_date;\n\n        if ((item_ === null || item_ === void 0 ? void 0 : item_.from_date) !== \"Invalid date\" || !(item_ === null || item_ === void 0 ? void 0 : (_item_$from_date = item_.from_date) === null || _item_$from_date === void 0 ? void 0 : _item_$from_date.length)) {\n          return item_;\n        }\n      }\n    });\n\n    if (!(isfilter === null || isfilter === void 0 ? void 0 : isfilter.length)) {\n      return true;\n    } else {\n      const newarr = isfilter.slice().sort((a, b) => {\n        return moment(a.from_date, 'MM-DD-YYYY').diff(moment(b.from_date, 'MM-DD-YYYY'));\n      });\n      let filteredItem = item.filter(item_reorder => {\n        if (item_reorder.hasOwnProperty('from_date')) {\n          var _item_reorder$from_da;\n\n          if ((item_reorder === null || item_reorder === void 0 ? void 0 : item_reorder.from_date) !== \"Invalid date\" || !(item_reorder === null || item_reorder === void 0 ? void 0 : (_item_reorder$from_da = item_reorder.from_date) === null || _item_reorder$from_da === void 0 ? void 0 : _item_reorder$from_da.length)) {\n            return item_reorder;\n          }\n        }\n      });\n      return JSON.stringify(newarr) === JSON.stringify(filteredItem);\n    }\n  };\n\n  const handleSubmit = async () => {\n    let all_milestones = allMilestones;\n    let data = {\n      \"templateId\": all_milestones === null || all_milestones === void 0 ? void 0 : all_milestones.tempId,\n      \"template_name\": all_milestones === null || all_milestones === void 0 ? void 0 : all_milestones.templateName,\n      \"milestones\": localMilestones.map((item, index) => {\n        item['order'] = index + 1;\n        return item;\n      })\n    };\n    let response = await updateTemplate(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      props.history.push({\n        pathname: '/template-sucess',\n        state: {\n          redirectTo: '/update-user-info'\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom_container\",\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Are you sure you want to delete the milestone ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleYes,\n          color: \"primary\",\n          autoFocus: true,\n          children: 'Yes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: 'No'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relate\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                zIndex: 999,\n                cursor: 'pointer'\n              },\n              onClick: () => {\n                props.backToScreen();\n              },\n              className: \"back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: 'Job Milestones'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_5\",\n          children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"milestones\",\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"ul\", {\n                ref: provided.innerRef,\n                className: `milestones${snapshot.isDraggingOver ? ' dragging-over' : ''}`,\n                children: [(localMilestones === null || localMilestones === void 0 ? void 0 : localMilestones.length) > 0 && localMilestones.map(({\n                  milestone_name,\n                  isPhotoevidence,\n                  recommended_hours,\n                  from_date,\n                  to_date,\n                  order\n                }, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: `${milestone_name}-${index}`,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    style: { ...provided.draggableProps.style\n                    },\n                    children: [editItem[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"edit_delete\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        onClick: e => {\n                          e.stopPropagation();\n                          setAddEdit({\n                            toggle: true,\n                            item: {\n                              milestone_name,\n                              isPhotoevidence,\n                              recommended_hours,\n                              from_date,\n                              to_date,\n                              order\n                            },\n                            index: index\n                          });\n                        },\n                        className: \"edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 69\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        onClick: e => {\n                          handleClickOpen(index);\n                        },\n                        className: \"delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 69\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 65\n                    }, this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"checkbox_wrap agree_check\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        checked: editItem[index],\n                        onChange: e => {\n                          checkOnClick(e, index);\n                        },\n                        className: \"filter-type filled-in\",\n                        type: \"checkbox\",\n                        id: `milestone${index}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `milestone${index}`,\n                        children: `${index + 1}. ${milestone_name}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"info\",\n                        children: [isPhotoevidence ? /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: 'Photo evidence required'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 296,\n                          columnNumber: 73\n                        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 297,\n                          columnNumber: 75\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: renderTimeWithFormat(from_date, to_date, format)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 69\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: recommended_hours\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 305,\n                          columnNumber: 69\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 61\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 57\n                  }, this)\n                }, `${index}-${milestone_name}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 49\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), !(localMilestones === null || localMilestones === void 0 ? void 0 : localMilestones.length) ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"fill_btn fill_grey_btn full_btn btn-effect\",\n                onClick: () => {\n                  // handleStepComplete({})\n                  setAddEdit({\n                    toggle: true,\n                    item: null\n                  });\n                },\n                children: '+ Add milestone'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"fill_btn fill_grey_btn full_btn btn-effect\",\n                onClick: () => {\n                  setAddEdit({\n                    toggle: true,\n                    item: null\n                  });\n                },\n                children: '+ Add milestone'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  let check = checkIfValidDates(localMilestones);\n\n                  if (check) {\n                    handleSubmit();\n                  } else {\n                    setShowToast(true, \"Please arrange milestone date wise\");\n                  }\n                },\n                className: `fill_btn full_btn btn-effect`,\n                children: 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobMilestones, \"5MAedXQcfNP9nxTxRk4bz6UODjQ=\");\n\n_c = JobMilestones;\nexport default _c2 = withRouter(JobMilestones);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JobMilestones\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/milestones/jobMilestones.tsx"],"names":["React","useEffect","useState","withRouter","DragDropContext","Droppable","Draggable","moment","setShowToast","Button","Dialog","DialogActions","DialogTitle","renderTimeWithFormat","AddMilestones","updateTemplate","getMileStoneByTempId","JobMilestones","props","dataItems","setDataItems","editItem","setEditItems","toggleAddEdit","setAddEdit","toggle","item","index","open","setOpen","deleteItem","setDeleteItem","localMilestones","setLocalMile","allMilestones","setAllMilestones","handleClickOpen","id","handleClose","handleYes","splice","prefetch","response","success","console","log","data","Array","isArray","milestones","length","filteredData","map","milestone_name","milestoneName","order","isPhotoevidence","recommended_hours","recommendedHours","from_date","fromDate","isValid","format","to_date","toDate","checkOnClick","e","edit_item_clone","target","checked","prev","reorder","list","startIndex","endIndex","result","from","removed","onDragEnd","source","destination","reOrderedMilestones","backToScreen","local_mile","data_","undefined","push","checkIfValidDates","isfilter","filter","item_","hasOwnProperty","newarr","slice","sort","a","b","diff","filteredItem","item_reorder","JSON","stringify","handleSubmit","all_milestones","tempId","templateName","history","pathname","state","redirectTo","zIndex","cursor","provided","snapshot","innerRef","isDraggingOver","draggableProps","dragHandleProps","style","stopPropagation","placeholder","check"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { withRouter } from \"react-router-dom\";\n// @ts-ignore\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport moment from 'moment';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { renderTimeWithFormat } from '../../../../utils/common';\nimport AddMilestones from './addEditMilestone';\nimport {\n  updateTemplate,\n  getMileStoneByTempId,\n} from \"../../../../redux/jobs/actions\";\n\nconst JobMilestones = (props: any) => {\n    const [dataItems, setDataItems] = useState([]);\n    const [editItem, setEditItems] = useState<{ [index: string]: any }>({});\n    const [toggleAddEdit, setAddEdit] = useState<any>({ toggle: false, item: null, index: null });\n    const [open, setOpen] = React.useState(false);\n    const [deleteItem, setDeleteItem] = React.useState(null);\n    const [localMilestones, setLocalMile] = useState([]);\n    const [allMilestones, setAllMilestones] = useState({});\n\n\n    const handleClickOpen = (id: any) => {\n        setOpen(true)\n        setDeleteItem(id);\n    };\n    const handleClose = () => {\n        setOpen(false)\n        setDeleteItem(null);\n    };\n\n    const handleYes = () => {\n        localMilestones.splice(toggleAddEdit?.index, 1)\n        setOpen(false);\n        setDeleteItem(null);\n    }\n\n    const prefetch = async () => {\n        let response = await getMileStoneByTempId(props?.id);\n        if (response.success) {\n            console.log({\n                response\n            })\n            if (response?.data && Array.isArray(response?.data?.milestones) && response?.data?.milestones?.length) {\n                setDataItems(response?.data?.milestones)\n\n                let filteredData: any = response?.data?.milestones.map((item: any) => {\n                    return {\n                        milestone_name: item?.milestoneName,\n                        order: item?.order,\n                        isPhotoevidence: item?.isPhotoevidence,\n                        recommended_hours: item?.recommendedHours,\n                        from_date: moment(item?.fromDate).isValid() ? moment(item?.fromDate).format('MM-DD-YYYY') : '',\n                        to_date: moment(item?.toDate).isValid() ? moment(item?.toDate).format('MM-DD-YYYY') : '',\n                    }\n                });\n                setAllMilestones(response?.data)\n                setLocalMile(filteredData);\n            }\n        }\n    }\n\n    useEffect(() => {\n        console.log('Here!!!!')\n        prefetch()\n    }, []);\n\n    const checkOnClick = (e: any, index: any) => {\n        let edit_item_clone: any = editItem;\n        edit_item_clone[index] = e.target.checked;\n        setEditItems((prev) => ({ ...prev, ...edit_item_clone }));\n    }\n\n    const reorder = (list: Array<any>, startIndex: number, endIndex: number) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n        return result;\n    };\n\n    const onDragEnd = (result: DropResult) => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n\n        const reOrderedMilestones: any = reorder(\n            localMilestones,\n            source.index,\n            destination.index\n        );\n\n        setLocalMile(reOrderedMilestones);\n    };\n\n    const format = 'MM-DD-YYYY';\n\n    const backToScreen = (data?: any) => {\n        let local_mile: any = localMilestones;\n        setAddEdit({ toggle: false });\n        if (data) {\n            let data_: any = data?.data;\n            let index = data?.index;\n        \n            if(index == undefined){\n                local_mile.push(data_);\n            } else {\n                local_mile[index] = data_;\n            }\n            setLocalMile(local_mile);\n        }\n    }\n\n    if (toggleAddEdit?.toggle) {\n        return (\n            <AddMilestones\n                backToScreen={backToScreen}\n                item={toggleAddEdit?.item}\n                items={localMilestones}\n                index={toggleAddEdit?.index}\n            />\n        )\n    }\n\n    const checkIfValidDates = (item: any) => {\n        let isfilter: any = localMilestones.filter((item_: any) => {\n            if (item_.hasOwnProperty('from_date')) {\n                if (item_?.from_date !== \"Invalid date\" || !item_?.from_date?.length) {\n                    return item_;\n                }\n            }\n        });\n        if (!isfilter?.length) {\n            return true;\n        } else {\n\n            const newarr: any = isfilter.slice().sort((a: any, b: any) => {\n                return moment(a.from_date, 'MM-DD-YYYY').diff(moment(b.from_date, 'MM-DD-YYYY'));\n            });\n            let filteredItem: any = item.filter((item_reorder: any) => {\n                if (item_reorder.hasOwnProperty('from_date')) {\n                    if (item_reorder?.from_date !== \"Invalid date\" || !item_reorder?.from_date?.length) {\n                        return item_reorder;\n                    }\n                }\n            });\n            return JSON.stringify(newarr) === JSON.stringify(filteredItem);\n        }\n    }\n\n    const handleSubmit = async () => {\n        let all_milestones: any = allMilestones;\n        let data = {\n            \"templateId\": all_milestones?.tempId,\n            \"template_name\": all_milestones?.templateName,\n            \"milestones\": localMilestones.map((item: any, index: any) => {\n                item['order'] = index + 1;\n                return item;\n            })\n        }\n\n        let response = await updateTemplate(data);\n        if (response?.success) {\n            props.history.push({\n                pathname: '/template-sucess',\n                state: { redirectTo: '/update-user-info' }\n            });\n        }\n    }\n\n    return (\n        <div className=\"custom_container\">\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Are you sure you want to delete the milestone ?\"}\n                </DialogTitle>\n                <DialogActions>\n                    <Button onClick={handleYes} color=\"primary\" autoFocus>\n                        {'Yes'}\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        {'No'}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <div className=\"form_field\">\n                <div className=\"flex_row\">\n                    <div className=\"flex_col_sm_12\">\n                        <div\n                            className=\"relate\">\n                            <span\n                                style={{ zIndex: 999, cursor: 'pointer' }}\n                                onClick={() => {\n                                    props.backToScreen();\n                                }}\n                                className=\"back\">\n                            </span>\n                            <span className=\"title\">\n                                {'Job Milestones'}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flex_row\">\n                    <div className=\"flex_col_sm_5\">\n                        <DragDropContext onDragEnd={onDragEnd}>\n                            <Droppable droppableId=\"milestones\">\n                                {(provided, snapshot) => (\n                                    <ul ref={provided.innerRef}\n                                        className={`milestones${snapshot.isDraggingOver ? ' dragging-over' : ''}`}>\n                                        {localMilestones?.length > 0 &&\n                                            localMilestones.map(({\n                                                milestone_name,\n                                                isPhotoevidence,\n                                                recommended_hours,\n                                                from_date,\n                                                to_date,\n                                                order\n                                            }: {\n                                                milestone_name: string,\n                                                isPhotoevidence: boolean,\n                                                from_date: string,\n                                                to_date: string,\n                                                recommended_hours: any\n                                                order: any\n                                            }, index: any) => (\n                                                <Draggable\n                                                    key={`${index}-${milestone_name}`}\n                                                    draggableId={`${milestone_name}-${index}`}\n                                                    index={index}>\n                                                    {(provided: any) => (\n                                                        <li\n                                                            key={index}\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                            style={{\n                                                                ...provided.draggableProps.style,\n                                                            }}>\n                                                            {editItem[index] ? (\n                                                                <div className=\"edit_delete\">\n                                                                    <span\n                                                                        onClick={(e) => {\n                                                                            e.stopPropagation();\n                                                                            setAddEdit({\n                                                                                toggle: true,\n                                                                                item: {\n                                                                                    milestone_name,\n                                                                                    isPhotoevidence,\n                                                                                    recommended_hours,\n                                                                                    from_date,\n                                                                                    to_date,\n                                                                                    order\n                                                                                },\n                                                                                index: index\n                                                                            });\n                                                                        }}\n                                                                        className=\"edit\">\n                                                                    </span>\n                                                                    <span\n                                                                        onClick={(e) => {\n                                                                            handleClickOpen(index);\n                                                                        }}\n                                                                        className=\"delete\"></span>\n                                                                </div>\n                                                            ) : ''}\n                                                            <div className=\"checkbox_wrap agree_check\">\n                                                                <input\n                                                                    checked={editItem[index]}\n                                                                    onChange={(e: any) => {\n                                                                        checkOnClick(e, index)\n                                                                    }}\n                                                                    className=\"filter-type filled-in\"\n                                                                    type=\"checkbox\"\n                                                                    id={`milestone${index}`} />\n                                                                <label htmlFor={`milestone${index}`}>\n                                                                    {`${index + 1}. ${milestone_name}`}\n                                                                </label>\n                                                                <div className=\"info\">\n                                                                    {isPhotoevidence ?\n                                                                        <span>{'Photo evidence required'}</span>\n                                                                        : <span></span>}\n                                                                    <span>\n                                                                        {renderTimeWithFormat(\n                                                                            from_date,\n                                                                            to_date,\n                                                                            format\n                                                                        )}\n                                                                    </span>\n                                                                    <span>\n                                                                        {recommended_hours}\n                                                                    </span>\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    )}\n                                                </Draggable>\n                                            ))}\n                                        {provided.placeholder}\n                                    </ul>\n                                )}\n                            </Droppable>\n                        </DragDropContext>\n                        {!localMilestones?.length ? (\n                            <React.Fragment>\n                                <div className=\"form_field\">\n                                    <button\n                                        className=\"fill_btn fill_grey_btn full_btn btn-effect\"\n                                        onClick={() => {\n                                            // handleStepComplete({})\n                                            setAddEdit({ toggle: true, item: null });\n                                        }}>\n                                        {'+ Add milestone'}\n                                    </button>\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <div className=\"form_field\">\n                                    <button\n                                        className=\"fill_btn fill_grey_btn full_btn btn-effect\"\n                                        onClick={() => {\n                                            setAddEdit({ toggle: true, item: null });\n                                        }}>\n                                        {'+ Add milestone'}\n                                    </button>\n                                </div>\n                                <div className=\"form_field\">\n                                    <button\n                                        onClick={() => {\n                                            let check: boolean = checkIfValidDates(localMilestones);\n                                            if (check) {\n                                                handleSubmit();\n                                            } else {\n                                                setShowToast(true, \"Please arrange milestone date wise\")\n                                            }\n                                        }}\n                                        className={`fill_btn full_btn btn-effect`}>\n                                        {'Save'}\n                                    </button>\n                                </div>\n                            </React.Fragment>\n                        )}\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(JobMilestones);\n"]},"metadata":{},"sourceType":"module"}