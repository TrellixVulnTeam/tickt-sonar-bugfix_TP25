{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/settings.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = ({\n  getSettings,\n  updateSettings,\n  settings\n}) => {\n  _s();\n\n  const [updatedSettings, setUpdatedSettings] = useState({\n    messages: {\n      email: true,\n      pushNotification: true,\n      smsMessages: true\n    },\n    reminders: {\n      email: true,\n      pushNotification: true,\n      smsMessages: true\n    }\n  });\n  useEffect(() => {\n    getSettings();\n  }, [getSettings]);\n  useEffect(() => {\n    setUpdatedSettings(settings);\n  }, [settings]);\n\n  const handleChange = (name, type) => {\n    const settings = {\n      messages: { ...updatedSettings.messages\n      },\n      reminders: { ...updatedSettings.reminders\n      }\n    };\n    settings[type][name] = !settings[type][name];\n    updateSettings({\n      [type]: {\n        [name]: !updatedSettings[type][name]\n      }\n    }, settings);\n  };\n\n  const {\n    messages = {},\n    reminders = {}\n  } = updatedSettings;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row p_settings\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_7\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title mb50\",\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inner_title\",\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info_note\",\n            children: \"Receive messages from users, including messages about new jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form_label\",\n            children: \"Push-notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle_btn\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: messages.pushNotification,\n              onClick: () => {\n                handleChange('pushNotification', 'messages');\n              },\n              name: \"pushNotification\",\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inner_title\",\n            children: \"Reminders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info_note\",\n            children: \"Receive reminders about new jobs, reviews and others related to your activity on the Tickt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form_label\",\n            children: \"Push-notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle_btn\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: reminders.pushNotification,\n              onClick: () => {\n                handleChange('pushNotification', 'reminders');\n              },\n              name: \"pushNotification\",\n              inputProps: {\n                'aria-label': 'secondary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Settings, \"zBywfYeAbf6N5nmx3A+DjkdW68w=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/settings.tsx"],"names":["useEffect","useState","Switch","Settings","getSettings","updateSettings","settings","updatedSettings","setUpdatedSettings","messages","email","pushNotification","smsMessages","reminders","handleChange","name","type"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Switch from '@material-ui/core/Switch';\n\ninterface Setting {\n  messages: {\n    email: boolean,\n    pushNotification: boolean,\n    smsMessages: boolean,\n  },\n  reminders: {\n    email: boolean,\n    pushNotification: boolean,\n    smsMessages: boolean,\n  },\n}\n\ninterface Props {\n  getSettings: () => void;\n  updateSettings: (settings: any, newSettings: any) => void;\n  settings: Setting;\n}\n\nconst Settings = ({ getSettings, updateSettings, settings }: Props) => {\n  const [updatedSettings, setUpdatedSettings] = useState<any>({\n    messages: { email: true, pushNotification: true, smsMessages: true },\n    reminders: { email: true, pushNotification: true, smsMessages: true }\n  });\n\n  useEffect(() => {\n    getSettings();\n  }, [getSettings]);\n\n  useEffect(() => {\n    setUpdatedSettings(settings);\n  }, [settings]);\n\n  const handleChange = (name: 'email' | 'pushNotification' | 'smsMessages', type: 'messages' | 'reminders') => {\n    const settings = { messages: { ...updatedSettings.messages }, reminders: { ...updatedSettings.reminders } };\n\n    settings[type][name] = !settings[type][name];\n    updateSettings({\n        [type]: {\n          [name]: !updatedSettings[type][name]\n        },\n      },\n      settings,\n    );\n  };\n\n  const { messages = {}, reminders = {} } = updatedSettings;\n\n  return (\n    <>\n      <div className=\"flex_row p_settings\">\n        <div className=\"flex_col_sm_7\">\n          <span className=\"sub_title mb50\">Settings</span>\n          <div className=\"form_field\">\n            <span className=\"inner_title\">Messages</span>\n            <span className=\"info_note\">\n              Receive messages from users, including messages about new jobs\n            </span>\n          </div>\n          {/* <div className=\"f_spacebw form_field\">\n            <span className=\"form_label\">Email</span>\n            <div className=\"toggle_btn\">\n              <Switch\n                checked={messages.email}\n                onClick={() => { handleChange('email', 'messages'); }}\n                name=\"email\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </div> */}\n          <div className=\"f_spacebw form_field\">\n            <span className=\"form_label\">Push-notifications</span>\n            <div className=\"toggle_btn\">\n              <Switch\n                checked={messages.pushNotification}\n                onClick={() => { handleChange('pushNotification', 'messages'); }}\n                name=\"pushNotification\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </div>\n          {/* <div className=\"f_spacebw form_field\">\n            <span className=\"form_label\">SMS messages</span>\n            <div className=\"toggle_btn\">\n              <Switch\n                checked={messages.smsMessages}\n                onClick={() => { handleChange('smsMessages', 'messages'); }}\n                name=\"smsMessages\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </div> */}\n\n          <div className=\"form_field\">\n            <span className=\"inner_title\">Reminders</span>\n            <span className=\"info_note\">\n              Receive reminders about new jobs, reviews and others related to\n              your activity on the Tickt\n            </span>\n          </div>\n          {/* <div className=\"f_spacebw form_field\">\n            <span className=\"form_label\">Email</span>\n            <div className=\"toggle_btn\">\n              <Switch\n                checked={reminders.email}\n                onClick={() => { handleChange('email', 'reminders'); }}\n                name=\"email\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </div> */}\n          <div className=\"f_spacebw form_field\">\n            <span className=\"form_label\">Push-notifications</span>\n            <div className=\"toggle_btn\">\n              <Switch\n                checked={reminders.pushNotification}\n                onClick={() => { handleChange('pushNotification', 'reminders'); }}\n                name=\"pushNotification\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </div>\n          {/* <div className=\"f_spacebw form_field\">\n            <span className=\"form_label\">SMS messages</span>\n            <div className=\"toggle_btn\">\n              <Switch\n                checked={reminders.smsMessages}\n                onClick={() => { handleChange('smsMessages', 'reminders'); }}\n                name=\"smsMessages\"\n                inputProps={{ 'aria-label': 'secondary checkbox' }}\n              />\n            </div>\n          </div> */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}