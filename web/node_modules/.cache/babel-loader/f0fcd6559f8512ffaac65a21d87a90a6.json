{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/login/login.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { callLogin } from \"../../redux/auth/actions\";\nimport eyeIconClose from \"../../assets/images/icon-eye-closed.png\";\nimport eyeIconOpen from \"../../assets/images/icon-eye-open.png\";\nimport AuthParent from \"../../common/auth/authParent\";\nimport Constants, { MoEConstants } from \"../../utils/constants\";\nimport regex from \"../../utils/regex\";\nimport SocialAuth from \"../../common/auth/socialAuth\";\nimport { loginAnonymously } from \"../../services/firebase\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  let window_ = window;\n  window_.Intercom(\"shutdown\");\n\n  const backButtonHandler = () => {\n    var _props$history;\n\n    props === null || props === void 0 ? void 0 : (_props$history = props.history) === null || _props$history === void 0 ? void 0 : _props$history.push(\"/signup\");\n  };\n\n  useEffect(() => {\n    if (window_ === null || window_ === void 0 ? void 0 : window_.Intercom) {\n      window_.Intercom(\"shutdown\");\n      window_.Intercom(\"hide\");\n      localStorage.clear();\n    }\n  }, []);\n\n  const changeHandler = e => {\n    setLoginData(prevData => ({ ...prevData,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!loginData.email) {\n      newErrors.email = Constants.errorStrings.emailEmpty;\n    } else {\n      const emailRegex = new RegExp(regex.email);\n\n      if (!emailRegex.test(loginData.email)) {\n        newErrors.email = Constants.errorStrings.emailErr;\n      }\n    }\n\n    if (!loginData.password) {\n      newErrors.password = Constants.errorStrings.password;\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onNewAccount = (profileData, socialType) => {\n    console.log(\"profileData: \", profileData);\n    const newProfileData = {\n      firstName: profileData.name,\n      authType: \"signup\",\n      email: profileData.email,\n      accountType: socialType,\n      user_image: profileData === null || profileData === void 0 ? void 0 : profileData.imageUrl,\n      ...(socialType === \"google\" && {\n        socialId: profileData.googleId\n      }),\n      ...(socialType === \"linkedIn\" && {\n        socialId: profileData.socialId\n      })\n    };\n\n    if (props.showModal) {\n      props.modalUpdateSteps(2);\n      props.setSocialData(newProfileData);\n      return;\n    }\n\n    props.history.push({\n      pathname: \"/signup\",\n      redirect: \"socialRedirectFromLogin\",\n      state: {\n        profileData: newProfileData\n      }\n    });\n  };\n\n  const forgetPasswordClicked = e => {\n    e.preventDefault();\n\n    if (props.showModal) {\n      props.modalUpdateSteps(1);\n      return;\n    }\n\n    props.history.push(\"/reset-password\");\n  };\n\n  const phoneViewHandler = e => {\n    e.preventDefault();\n\n    if (props.showModal) {\n      props.modalUpdateSteps(2);\n      return;\n    }\n\n    props.history.push(\"/signup\");\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    let newData = {\n      email: loginData.email,\n      password: loginData.password\n    };\n\n    if (validateForm()) {\n      const res = await callLogin(newData);\n\n      if (res.success) {\n        var _res$data, _res$data2, _res$data3, _props$history2;\n\n        // const authData = {\n        //     email: newData.email,\n        //     password: '12345678'\n        // }\n        loginAnonymously(); // firebaseLogInWithEmailPassword(authData, res?.data);\n\n        if (props.showModal) {\n          props.setShowModal(!props.showModal);\n        }\n\n        moengage.moE_LoginEvent({\n          email: (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.email,\n          userName: (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.userName,\n          userId: (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3._id\n        });\n        moengage.moE_SendEvent(MoEConstants.APP_OPEN, {\n          app_open: true\n        });\n        mixPanel.mixP_SendEvent(MoEConstants.APP_OPEN, {\n          app_open: true\n        });\n        props === null || props === void 0 ? void 0 : (_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : _props$history2.push(\"/\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthParent, {\n    sliderType: \"signup\",\n    backButtonHandler: backButtonHandler,\n    header: {\n      title: \"Log In\"\n    },\n    history: props.history,\n    showModal: props.showModal,\n    modalUpdateSteps: props.modalUpdateSteps,\n    setSocialData: props.setSocialData,\n    modalLoginBackBtn: props.modalLoginBackBtn,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Email\",\n              name: \"email\",\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), !!errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? \"text\" : \"password\",\n              className: \"detect_input\",\n              placeholder: \"Enter Password\",\n              name: \"password\",\n              onChange: changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              onClick: () => setShowPassword(!showPassword),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showPassword ? eyeIconOpen : eyeIconClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), !!errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            onClick: forgetPasswordClicked,\n            children: \"Forgotten your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn btn-effect\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"show_label text-center\",\n        children: \"or continue with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SocialAuth, {\n        onNewAccount: onNewAccount,\n        history: props.history,\n        showModal: props.showModal,\n        setShowModal: props.setShowModal,\n        modalUpdateSteps: props.modalUpdateSteps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field hide text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reg\",\n          children: [\"No account?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"link\",\n            onClick: phoneViewHandler,\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"Tpt9O8IMtfIAqJ6rv51iUUvAxbU=\");\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/login/login.tsx"],"names":["useState","useEffect","callLogin","eyeIconClose","eyeIconOpen","AuthParent","Constants","MoEConstants","regex","SocialAuth","loginAnonymously","moengage","mixPanel","LoginPage","props","errors","setErrors","loginData","setLoginData","email","password","showPassword","setShowPassword","window_","window","Intercom","backButtonHandler","history","push","localStorage","clear","changeHandler","e","prevData","target","name","value","validateForm","newErrors","errorStrings","emailEmpty","emailRegex","RegExp","test","emailErr","Object","keys","length","onNewAccount","profileData","socialType","console","log","newProfileData","firstName","authType","accountType","user_image","imageUrl","socialId","googleId","showModal","modalUpdateSteps","setSocialData","pathname","redirect","state","forgetPasswordClicked","preventDefault","phoneViewHandler","onSubmit","newData","res","success","setShowModal","moE_LoginEvent","data","userName","userId","_id","moE_SendEvent","APP_OPEN","app_open","mixP_SendEvent","title","modalLoginBackBtn"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { callLogin } from \"../../redux/auth/actions\";\nimport eyeIconClose from \"../../assets/images/icon-eye-closed.png\";\nimport eyeIconOpen from \"../../assets/images/icon-eye-open.png\";\nimport AuthParent from \"../../common/auth/authParent\";\nimport Constants, { MoEConstants } from \"../../utils/constants\";\nimport regex from \"../../utils/regex\";\nimport SocialAuth from \"../../common/auth/socialAuth\";\nimport { loginAnonymously } from \"../../services/firebase\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\n\ninterface Propstype {\n  history: any;\n  showModal?: boolean;\n  modalUpdateSteps: (data: any) => void;\n  setShowModal: (data: any) => void;\n  setSocialData: (data: any) => void;\n  modalLoginBackBtn?: string;\n}\n\nconst LoginPage = (props: Propstype) => {\n  const [errors, setErrors] = useState<any>({});\n  const [loginData, setLoginData] = useState<any>({\n    email: \"\",\n    password: \"\",\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  let window_: any = window;\n  window_.Intercom(\"shutdown\");\n\n  const backButtonHandler = () => {\n    props?.history?.push(\"/signup\");\n  };\n\n  useEffect(() => {\n    if (window_?.Intercom) {\n      window_.Intercom(\"shutdown\");\n      window_.Intercom(\"hide\");\n      localStorage.clear();\n    }\n  }, []);\n\n  const changeHandler = (e: any) => {\n    setLoginData((prevData: any) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors: any = {};\n\n    if (!loginData.email) {\n      newErrors.email = Constants.errorStrings.emailEmpty;\n    } else {\n      const emailRegex = new RegExp(regex.email);\n      if (!emailRegex.test(loginData.email)) {\n        newErrors.email = Constants.errorStrings.emailErr;\n      }\n    }\n\n    if (!loginData.password) {\n      newErrors.password = Constants.errorStrings.password;\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onNewAccount = (profileData: any, socialType: string) => {\n    console.log(\"profileData: \", profileData);\n    const newProfileData = {\n      firstName: profileData.name,\n      authType: \"signup\",\n      email: profileData.email,\n      accountType: socialType,\n      user_image: profileData?.imageUrl,\n      ...(socialType === \"google\" && { socialId: profileData.googleId }),\n      ...(socialType === \"linkedIn\" && { socialId: profileData.socialId }),\n    };\n    if (props.showModal) {\n      props.modalUpdateSteps(2);\n      props.setSocialData(newProfileData);\n      return;\n    }\n    props.history.push({\n      pathname: \"/signup\",\n      redirect: \"socialRedirectFromLogin\",\n      state: { profileData: newProfileData },\n    });\n  };\n\n  const forgetPasswordClicked = (e: any) => {\n    e.preventDefault();\n    if (props.showModal) {\n      props.modalUpdateSteps(1);\n      return;\n    }\n    props.history.push(\"/reset-password\");\n  };\n\n  const phoneViewHandler = (e: any) => {\n    e.preventDefault();\n    if (props.showModal) {\n      props.modalUpdateSteps(2);\n      return;\n    }\n    props.history.push(\"/signup\");\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    let newData = { email: loginData.email, password: loginData.password };\n    if (validateForm()) {\n      const res: any = await callLogin(newData);\n      if (res.success) {\n        // const authData = {\n        //     email: newData.email,\n        //     password: '12345678'\n        // }\n        loginAnonymously();\n        // firebaseLogInWithEmailPassword(authData, res?.data);\n        if (props.showModal) {\n          props.setShowModal(!props.showModal);\n        }\n        moengage.moE_LoginEvent({\n          email: res.data?.email,\n          userName: res.data?.userName,\n          userId: res.data?._id,\n        });\n        moengage.moE_SendEvent(MoEConstants.APP_OPEN, { app_open: true });\n        mixPanel.mixP_SendEvent(MoEConstants.APP_OPEN, { app_open: true });\n        props?.history?.push(\"/\");\n      }\n    }\n  };\n\n  return (\n    <AuthParent\n      sliderType=\"signup\"\n      backButtonHandler={backButtonHandler}\n      header={{ title: \"Log In\" }}\n      history={props.history}\n      showModal={props.showModal}\n      modalUpdateSteps={props.modalUpdateSteps}\n      setSocialData={props.setSocialData}\n      modalLoginBackBtn={props.modalLoginBackBtn}\n    >\n      <div className=\"form_wrapper\">\n        <form onSubmit={onSubmit}>\n          <div className=\"form_field\">\n            <label className=\"form_label\">Email</label>\n            <div className=\"text_field\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter Email\"\n                name=\"email\"\n                onChange={changeHandler}\n              />\n            </div>\n            {!!errors.email && (\n              <span className=\"error_msg\">{errors.email}</span>\n            )}\n          </div>\n          <div className=\"form_field\">\n            <label className=\"form_label\">Password</label>\n            <div className=\"text_field\">\n              <input\n                type={showPassword ? \"text\" : \"password\"}\n                className=\"detect_input\"\n                placeholder=\"Enter Password\"\n                name=\"password\"\n                onChange={changeHandler}\n              />\n              <span\n                className=\"detect_icon\"\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                <img src={showPassword ? eyeIconOpen : eyeIconClose} />\n              </span>\n            </div>\n            {!!errors.password && (\n              <span className=\"error_msg\">{errors.password}</span>\n            )}\n          </div>\n          <div className=\"form_field\">\n            <a className=\"link\" onClick={forgetPasswordClicked}>\n              Forgotten your password?\n            </a>\n          </div>\n          <div className=\"form_field\">\n            <button className=\"fill_btn btn-effect\">Log in</button>\n          </div>\n        </form>\n        <span className=\"show_label text-center\">or continue with</span>\n        <SocialAuth\n          onNewAccount={onNewAccount}\n          history={props.history}\n          showModal={props.showModal}\n          setShowModal={props.setShowModal}\n          modalUpdateSteps={props.modalUpdateSteps}\n        />\n        <div className=\"form_field hide text-center\">\n          <span className=\"reg\">\n            No account?{\" \"}\n            <a className=\"link\" onClick={phoneViewHandler}>\n              Signup\n            </a>\n          </span>\n        </div>\n      </div>\n    </AuthParent>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}