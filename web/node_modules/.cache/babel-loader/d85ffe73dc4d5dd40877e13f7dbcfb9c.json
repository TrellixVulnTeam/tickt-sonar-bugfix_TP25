{"ast":null,"code":"import{connect}from'react-redux';import{bindActionCreators}from'redux';import JobDashboard from'./jobDashboard';import{getActiveJobsBuilder,getPastJobsBuilder,getOpenJobsBuilder,getNewApplicantsBuilder,getnewJobApplicationListBuilder,getNewApprovalList}from'../../redux/jobs/actions';import{recallHeaderNotification}from'../../redux/homeSearch/actions';import{getClearJobs}from'../../redux/jobs/actions';var mapStateToProps=function mapStateToProps(state){console.log({state:state});var _state$jobs=state.jobs,builderActionJobs=_state$jobs.builderActionJobs,builderOpenJobs=_state$jobs.builderOpenJobs,builderPastJobs=_state$jobs.builderPastJobs,builderNewApplicants=_state$jobs.builderNewApplicants,builderNewApplicantsList=_state$jobs.builderNewApplicantsList,newApprovalList=_state$jobs.newApprovalList;return{activeJobs:builderActionJobs,openJobs:builderOpenJobs,pastJobs:builderPastJobs,applicantJobs:builderNewApplicants,approvalJobs:newApprovalList,applicantsListJobs:builderNewApplicantsList,isLoading:state.common.isLoading};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({getClearJobs:getClearJobs,getActiveJobsBuilder:getActiveJobsBuilder,getPastJobsBuilder:getPastJobsBuilder,getOpenJobsBuilder:getOpenJobsBuilder,getNewApplicantsBuilder:getNewApplicantsBuilder,getnewJobApplicationListBuilder:getnewJobApplicationListBuilder,getNewApprovalList:getNewApprovalList,recallHeaderNotification:recallHeaderNotification},dispatch);};var JobDashboardPage=connect(mapStateToProps,mapDispatchToProps)(JobDashboard);export default JobDashboardPage;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/index.tsx"],"names":["connect","bindActionCreators","JobDashboard","getActiveJobsBuilder","getPastJobsBuilder","getOpenJobsBuilder","getNewApplicantsBuilder","getnewJobApplicationListBuilder","getNewApprovalList","recallHeaderNotification","getClearJobs","mapStateToProps","state","console","log","jobs","builderActionJobs","builderOpenJobs","builderPastJobs","builderNewApplicants","builderNewApplicantsList","newApprovalList","activeJobs","openJobs","pastJobs","applicantJobs","approvalJobs","applicantsListJobs","isLoading","common","mapDispatchToProps","dispatch","JobDashboardPage"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OACIC,oBADJ,CAEIC,kBAFJ,CAGIC,kBAHJ,CAIIC,uBAJJ,CAKIC,+BALJ,CAMIC,kBANJ,KAOO,0BAPP,CAQA,OAASC,wBAAT,KAAyC,gCAAzC,CAEA,OACIC,YADJ,KAEO,0BAFP,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAgB,CACpCC,OAAO,CAACC,GAAR,CAAY,CAAEF,KAAK,CAALA,KAAF,CAAZ,EACA,gBASIA,KATJ,CACIG,IADJ,CAEQC,iBAFR,aAEQA,iBAFR,CAGQC,eAHR,aAGQA,eAHR,CAIQC,eAJR,aAIQA,eAJR,CAKQC,oBALR,aAKQA,oBALR,CAMQC,wBANR,aAMQA,wBANR,CAOQC,eAPR,aAOQA,eAPR,CAUA,MAAO,CACHC,UAAU,CAAEN,iBADT,CAEHO,QAAQ,CAAEN,eAFP,CAGHO,QAAQ,CAAEN,eAHP,CAIHO,aAAa,CAAEN,oBAJZ,CAKHO,YAAY,CAAEL,eALX,CAMHM,kBAAkB,CAAEP,wBANjB,CAOHQ,SAAS,CAAEhB,KAAK,CAACiB,MAAN,CAAaD,SAPrB,CAAP,CASH,CArBD,CAuBA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAmB,CAC1C,MAAO9B,CAAAA,kBAAkB,CACrB,CACIS,YAAY,CAAZA,YADJ,CAEIP,oBAAoB,CAApBA,oBAFJ,CAGIC,kBAAkB,CAAlBA,kBAHJ,CAIIC,kBAAkB,CAAlBA,kBAJJ,CAKIC,uBAAuB,CAAvBA,uBALJ,CAMIC,+BAA+B,CAA/BA,+BANJ,CAOIC,kBAAkB,CAAlBA,kBAPJ,CAQIC,wBAAwB,CAAxBA,wBARJ,CADqB,CAWrBsB,QAXqB,CAAzB,CAaH,CAdD,CAgBA,GAAMC,CAAAA,gBAAgB,CAAGhC,OAAO,CAC5BW,eAD4B,CAE5BmB,kBAF4B,CAAP,CAGvB5B,YAHuB,CAAzB,CAKA,cAAe8B,CAAAA,gBAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport JobDashboard from './jobDashboard';\nimport {\n    getActiveJobsBuilder,\n    getPastJobsBuilder,\n    getOpenJobsBuilder,\n    getNewApplicantsBuilder,\n    getnewJobApplicationListBuilder,\n    getNewApprovalList,\n} from '../../redux/jobs/actions';\nimport { recallHeaderNotification } from '../../redux/homeSearch/actions';\n\nimport {\n    getClearJobs\n} from '../../redux/jobs/actions';\n\n\nconst mapStateToProps = (state: any) => {\n    console.log({ state });\n    const {\n        jobs: {\n            builderActionJobs,\n            builderOpenJobs,\n            builderPastJobs,\n            builderNewApplicants,\n            builderNewApplicantsList,\n            newApprovalList\n        },\n    } = state;\n    return {\n        activeJobs: builderActionJobs,\n        openJobs: builderOpenJobs,\n        pastJobs: builderPastJobs,\n        applicantJobs: builderNewApplicants,\n        approvalJobs: newApprovalList,\n        applicantsListJobs: builderNewApplicantsList,\n        isLoading: state.common.isLoading\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators(\n        {\n            getClearJobs,\n            getActiveJobsBuilder,\n            getPastJobsBuilder,\n            getOpenJobsBuilder,\n            getNewApplicantsBuilder,\n            getnewJobApplicationListBuilder,\n            getNewApprovalList,\n            recallHeaderNotification,\n        },\n        dispatch\n    );\n};\n\nconst JobDashboardPage = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(JobDashboard);\n\nexport default JobDashboardPage;\n"]},"metadata":{},"sourceType":"module"}