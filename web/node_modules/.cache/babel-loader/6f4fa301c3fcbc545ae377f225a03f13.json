{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/applicantsList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TradieBox from \"../../shared/tradieBox\";\nimport Menu from \"@material-ui/core/Menu\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ApplicantsList = props => {\n  _s();\n\n  const {\n    items,\n    jobid,\n    specializationId,\n    setJobLabel,\n    isLoading,\n    activeType\n  } = props;\n  const [isRender, setRender] = useState(false);\n  const [sortBySorting, setSortBySorting] = useState({\n    sortBySorting: false,\n    sortBy: 1\n  });\n  const [sortingAnchorEl, setSortingAnchorEl] = useState(null);\n\n  const sortBySortingClick = event => {\n    setSortingAnchorEl(event.currentTarget);\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBySorting: true\n    }));\n  };\n\n  const sortBySortingClose = () => {\n    setSortingAnchorEl(null);\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBySorting: false\n    }));\n  };\n\n  const sortByButtonClicked = num => {\n    setSortBySorting(prevData => ({ ...prevData,\n      sortBy: num\n    }));\n    sortBySortingClose();\n    setJobLabel(\"applicantList\", jobid, num);\n  };\n\n  useEffect(() => {\n    if (isLoading === false) {\n      setRender(true);\n    }\n  }, [isLoading]);\n\n  if (!isRender) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row center_flex\",\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relate\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xs_sub_title\",\n              children: \"New applicants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back\",\n              onClick: () => {\n                setJobLabel(activeType);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6 text-right\",\n          children: [activeType === \"applicant\" && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sortBySortingClick,\n            className: \"fill_grey_btn sort_btn\",\n            children: \"Sort by\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Menu // id=\"simple-menu\"\n          , {\n            className: \"fsp_modal range sort\",\n            anchorEl: sortingAnchorEl,\n            keepMounted: true,\n            open: Boolean(sortingAnchorEl),\n            onClose: sortBySortingClose,\n            transformOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"close_btn\",\n              onClick: sortBySortingClose,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cancel,\n                alt: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Sort by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio_wrap agree_check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"filter-type filled-in\",\n                type: \"radio\",\n                id: \"highestRated\",\n                value: \"Highest rated\",\n                checked: sortBySorting.sortBy === 1,\n                onChange: () => sortByButtonClicked(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"highestRated\",\n                children: \"Highest rated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio_wrap agree_check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"filter-type filled-in\",\n                type: \"radio\",\n                id: \"closest\",\n                value: \"Closest to me\",\n                checked: sortBySorting.sortBy === 2,\n                onChange: () => sortByButtonClicked(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"closest\",\n                children: \"Closest to me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio_wrap agree_check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"filter-type filled-in\",\n                type: \"radio\",\n                id: \"mostJob\",\n                value: \"Most jobs completed\",\n                checked: sortBySorting.sortBy === 3,\n                onChange: () => sortByButtonClicked(3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mostJob\",\n                children: \"Most jobs completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row applicants_row\",\n      children: [console.log({\n        items\n      }, \"------------>\"), (items === null || items === void 0 ? void 0 : items.length) ? items.map((item, index) => /*#__PURE__*/_jsxDEV(TradieBox, {\n        item: item,\n        index: index,\n        specializationId: specializationId,\n        jobId: jobid,\n        hideInvite: item.status === \"CANCELLED JOB\",\n        showStatus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noDataFound,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No Data Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ApplicantsList, \"iUK9A91lM9JNPmhk0vrU94y558A=\");\n\n_c = ApplicantsList;\nexport default ApplicantsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicantsList\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/applicantsList.tsx"],"names":["React","useState","useEffect","TradieBox","Menu","cancel","noDataFound","ApplicantsList","props","items","jobid","specializationId","setJobLabel","isLoading","activeType","isRender","setRender","sortBySorting","setSortBySorting","sortBy","sortingAnchorEl","setSortingAnchorEl","sortBySortingClick","event","currentTarget","prevData","sortBySortingClose","sortByButtonClicked","num","Boolean","vertical","horizontal","console","log","length","map","item","index","status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TradieBox from \"../../shared/tradieBox\";\nimport Menu from \"@material-ui/core/Menu\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\ninterface Props {\n  items: any;\n  jobid: any;\n  setJobLabel: any;\n  activeType: any;\n  history: any;\n  specializationId: any;\n  isLoading: any;\n}\n\nconst ApplicantsList = (props: Props) => {\n  const { items, jobid, specializationId, setJobLabel, isLoading, activeType } =\n    props;\n  const [isRender, setRender] = useState(false);\n  const [sortBySorting, setSortBySorting] = useState<any>({\n    sortBySorting: false,\n    sortBy: 1,\n  });\n  const [sortingAnchorEl, setSortingAnchorEl] = useState(null);\n\n  const sortBySortingClick = (event: any) => {\n    setSortingAnchorEl(event.currentTarget);\n    setSortBySorting((prevData: any) => ({ ...prevData, sortBySorting: true }));\n  };\n\n  const sortBySortingClose = () => {\n    setSortingAnchorEl(null);\n    setSortBySorting((prevData: any) => ({\n      ...prevData,\n      sortBySorting: false,\n    }));\n  };\n\n  const sortByButtonClicked = (num: number) => {\n    setSortBySorting((prevData: any) => ({ ...prevData, sortBy: num }));\n    sortBySortingClose();\n    setJobLabel(\"applicantList\", jobid, num);\n  };\n\n  useEffect(() => {\n    if (isLoading === false) {\n      setRender(true);\n    }\n  }, [isLoading]);\n\n  if (!isRender) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"flex_row center_flex\">\n        <React.Fragment>\n          <div className=\"flex_col_sm_6\">\n            <div className=\"relate\">\n              <span className=\"xs_sub_title\">{\"New applicants\"}</span>\n              <button\n                className=\"back\"\n                onClick={() => {\n                  setJobLabel(activeType);\n                }}\n              ></button>\n            </div>\n          </div>\n\n          <div className=\"flex_col_sm_6 text-right\">\n            {activeType === \"applicant\" && (\n              <button\n                onClick={sortBySortingClick}\n                className=\"fill_grey_btn sort_btn\"\n              >\n                {\"Sort by\"}\n              </button>\n            )}\n\n            <Menu\n              // id=\"simple-menu\"\n              className=\"fsp_modal range sort\"\n              anchorEl={sortingAnchorEl}\n              keepMounted\n              open={Boolean(sortingAnchorEl)}\n              onClose={sortBySortingClose}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n            >\n              <span className=\"close_btn\" onClick={sortBySortingClose}>\n                <img src={cancel} alt=\"cancel\" />\n              </span>\n              <span className=\"sub_title\">Sort by</span>\n              <div className=\"radio_wrap agree_check\">\n                <input\n                  className=\"filter-type filled-in\"\n                  type=\"radio\"\n                  id=\"highestRated\"\n                  value=\"Highest rated\"\n                  checked={sortBySorting.sortBy === 1}\n                  onChange={() => sortByButtonClicked(1)}\n                />\n                <label htmlFor=\"highestRated\">Highest rated</label>\n              </div>\n              <div className=\"radio_wrap agree_check\">\n                <input\n                  className=\"filter-type filled-in\"\n                  type=\"radio\"\n                  id=\"closest\"\n                  value=\"Closest to me\"\n                  checked={sortBySorting.sortBy === 2}\n                  onChange={() => sortByButtonClicked(2)}\n                />\n                <label htmlFor=\"closest\">Closest to me</label>\n              </div>\n              <div className=\"radio_wrap agree_check\">\n                <input\n                  className=\"filter-type filled-in\"\n                  type=\"radio\"\n                  id=\"mostJob\"\n                  value=\"Most jobs completed\"\n                  checked={sortBySorting.sortBy === 3}\n                  onChange={() => sortByButtonClicked(3)}\n                />\n                <label htmlFor=\"mostJob\">Most jobs completed</label>\n              </div>\n            </Menu>\n          </div>\n        </React.Fragment>\n      </div>\n\n      <div className=\"flex_row applicants_row\">\n        {console.log({ items }, \"------------>\")}\n        {items?.length\n          ? items.map((item: any, index: any) => (\n              <TradieBox\n                item={item}\n                index={index}\n                specializationId={specializationId}\n                jobId={jobid}\n                hideInvite={item.status === \"CANCELLED JOB\"}\n                showStatus\n              />\n            ))\n          : !isLoading && (\n              <div className=\"no_record m-t-vh\">\n                <figure className=\"no_img\">\n                  <img src={noDataFound} alt=\"data not found\" />\n                </figure>\n                <span>{\"No Data Found\"}</span>\n              </div>\n            )}\n      </div>\n    </>\n  );\n};\n\nexport default ApplicantsList;\n"]},"metadata":{},"sourceType":"module"}