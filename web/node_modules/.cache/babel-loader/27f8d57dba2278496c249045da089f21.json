{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/EmailVerification.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { verifyOtp, resendOtp } from \"../../../redux/auth/actions\";\nimport Constants from \"../../../utils/constants\";\nimport regex from \"../../../utils/regex\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport OtpInput from \"react-otp-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneNumber = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [counter, setCounter] = useState(Constants.OTP_TIMER);\n  const [otp, setOTP] = useState(\"\");\n\n  const changeHandler = newOtp => {\n    setOTP(newOtp);\n  };\n\n  useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!otp) {\n      newErrors.otp = Constants.errorStrings.otpEmpty;\n    } else {\n      const otpRegex = new RegExp(regex.otp);\n\n      if (!otpRegex.test(otp)) {\n        newErrors.otp = Constants.errorStrings.otpIncorrect;\n      }\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const data = {\n        email: props.email,\n        otp: otp\n      };\n      const res = await verifyOtp(data);\n\n      if (res.success) {\n        props.updateSteps(props.step + 1, {\n          email: props.email\n        });\n      }\n    }\n  };\n\n  const resendHandler = async () => {\n    let data = {\n      email: props.email\n    };\n    let response = await resendOtp(data);\n\n    if (response.success) {\n      setShowToast(true, \"We have resent the verification code on your email. Please check your email\");\n      setCounter(Constants.OTP_TIMER);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"otp_input_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(OtpInput, {\n            className: \"sms-no-box\",\n            inputStyle: {\n              width: \"48px\"\n            },\n            value: otp,\n            onChange: changeHandler,\n            numInputs: 5,\n            isInputNum: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), !!errors.otp && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.otp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: \"We have sent a verification code to your email. Please check the messages and enter the 5-digit code here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), counter === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: \"Don\\u2019t you receive any codes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"link\",\n          onClick: resendHandler,\n          children: \"Re-send code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), counter > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label timer\",\n          children: counter > 59 ? `01 : 00` : `00 : ${counter}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PhoneNumber, \"XGLQfSpuDVTPwE7ooyO5ItBwTPM=\");\n\n_c = PhoneNumber;\nexport default PhoneNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneNumber\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/EmailVerification.tsx"],"names":["React","useState","useEffect","verifyOtp","resendOtp","Constants","regex","setShowToast","OtpInput","PhoneNumber","props","errors","setErrors","counter","setCounter","OTP_TIMER","otp","setOTP","changeHandler","newOtp","timer","setInterval","clearInterval","validateForm","newErrors","errorStrings","otpEmpty","otpRegex","RegExp","test","otpIncorrect","Object","keys","length","onSubmit","e","preventDefault","data","email","res","success","updateSteps","step","resendHandler","response","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { verifyOtp, resendOtp } from \"../../../redux/auth/actions\";\nimport Constants from \"../../../utils/constants\";\nimport regex from \"../../../utils/regex\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport OtpInput from \"react-otp-input\";\n\ninterface Propstype {\n  updateSteps: (num: number, data: any) => void;\n  step: number;\n  history?: any;\n  email: any;\n}\n\nconst PhoneNumber = (props: Propstype) => {\n  const [errors, setErrors] = useState<any>({});\n  const [counter, setCounter] = useState(Constants.OTP_TIMER);\n  const [otp, setOTP] = useState(\"\");\n\n  const changeHandler = (newOtp: any) => {\n    setOTP(newOtp);\n  };\n\n  useEffect(() => {\n    const timer: any =\n      counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  const validateForm = () => {\n    const newErrors: any = {};\n    if (!otp) {\n      newErrors.otp = Constants.errorStrings.otpEmpty;\n    } else {\n      const otpRegex = new RegExp(regex.otp);\n      if (!otpRegex.test(otp)) {\n        newErrors.otp = Constants.errorStrings.otpIncorrect;\n      }\n    }\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    if (validateForm()) {\n      const data = {\n        email: props.email,\n        otp: otp,\n      };\n      const res: any = await verifyOtp(data);\n      if (res.success) {\n        props.updateSteps(props.step + 1, {\n          email: props.email,\n        });\n      }\n    }\n  };\n\n  const resendHandler = async () => {\n    let data = {\n      email: props.email,\n    };\n    let response = await resendOtp(data);\n    if (response.success) {\n      setShowToast(\n        true,\n        \"We have resent the verification code on your email. Please check your email\"\n      );\n      setCounter(Constants.OTP_TIMER);\n    }\n  };\n\n  return (\n    <div className=\"form_wrapper\">\n      <form onSubmit={onSubmit}>\n        <div className=\"form_field\">\n          <div className=\"otp_input_wrapper\">\n            <OtpInput\n              className=\"sms-no-box\"\n              inputStyle={{ width: \"48px\" }}\n              value={otp}\n              onChange={changeHandler}\n              numInputs={5}\n              isInputNum\n            />\n          </div>\n          {!!errors.otp && <span className=\"error_msg\">{errors.otp}</span>}\n        </div>\n\n        <div className=\"form_field\">\n          <span className=\"show_label\">\n            {\n              \"We have sent a verification code to your email. Please check the messages and enter the 5-digit code here.\"\n            }\n            {/* We have sent a verification code to your email. Please check email and enter the 5-digit code here. */}\n          </span>\n        </div>\n\n        {counter === 0 && (\n          <div className=\"form_field text-center\">\n            <span className=\"show_label\">Don’t you receive any codes?</span>\n            <a href=\"#\" className=\"link\" onClick={resendHandler}>\n              Re-send code\n            </a>\n          </div>\n        )}\n\n        {counter > 0 && (\n          <div className=\"form_field text-center\">\n            <span className=\"show_label timer\">\n              {counter > 59 ? `01 : 00` : `00 : ${counter}`}\n            </span>\n          </div>\n        )}\n\n        <div className=\"form_field\">\n          <button className=\"fill_btn btn-effect\">Next</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PhoneNumber;\n"]},"metadata":{},"sourceType":"module"}