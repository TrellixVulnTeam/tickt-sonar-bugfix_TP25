{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/routes/index.tsx\";\nimport routes from \"./routesData\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./privateRoute\";\nimport Header from \"../common/header/index\";\nimport ScrollToTop from \"../common/scrollToTop\";\nimport CustomNotification from \"../common/customNotification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst Routes = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map(route => {\n        if (route.redirectTO) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: route.redirectTO\n          }, route.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (route.privateRoute) {\n          // return <PrivateRoute path={route.path} component={route.component} />\n          return /*#__PURE__*/_createElement(PrivateRoute, { ...route,\n            key: route.path,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 20\n            }\n          });\n        }\n\n        if (route.authRoute) {\n          // return <PrivateRoute path={route.path} Component={route.component} authRoute />\n          return /*#__PURE__*/_createElement(PrivateRoute, { ...route,\n            key: route.path,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 20\n            }\n          });\n        }\n\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          component: route.component,\n          exact: route.exact\n        }, route.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/routes/index.tsx"],"names":["routes","BrowserRouter","Router","Switch","Route","Redirect","Provider","PrivateRoute","Header","ScrollToTop","CustomNotification","Routes","store","map","route","redirectTO","path","privateRoute","authRoute","component","exact"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,MAAD;AAAA,gBACGZ,MAAM,CAACa,GAAP,CAAYC,KAAD,IAAgB;AAC1B,YAAIA,KAAK,CAACC,UAAV,EAAsB;AACpB,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAED,KAAK,CAACC;AAApB,aAAqCD,KAAK,CAACE,IAA3C;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACD,YAAIF,KAAK,CAACG,YAAV,EAAwB;AACtB;AACA,8BAAO,eAAC,YAAD,OAAkBH,KAAlB;AAAyB,YAAA,GAAG,EAAEA,KAAK,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,YAAIF,KAAK,CAACI,SAAV,EAAqB;AACnB;AACA,8BAAO,eAAC,YAAD,OAAkBJ,KAAlB;AAAyB,YAAA,GAAG,EAAEA,KAAK,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,4BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEF,KAAK,CAACE,IADd;AAEE,UAAA,SAAS,EAAEF,KAAK,CAACK,SAFnB;AAGE,UAAA,KAAK,EAAEL,KAAK,CAACM;AAHf,WAION,KAAK,CAACE,IAJb;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OApBA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAnCD;;KAAML,M;AAqCN,eAAeA,MAAf","sourcesContent":["import routes from \"./routesData\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./privateRoute\";\nimport Header from \"../common/header/index\";\nimport ScrollToTop from \"../common/scrollToTop\";\nimport CustomNotification from \"../common/customNotification\";\n\nconst Routes = () => {\n  return (\n    <Router>\n      <ScrollToTop />\n      <Provider store={store}>\n        <Header />\n      </Provider>\n\n      <CustomNotification />\n      <Switch>\n        {routes.map((route: any) => {\n          if (route.redirectTO) {\n            return <Redirect to={route.redirectTO} key={route.path} />;\n          }\n          if (route.privateRoute) {\n            // return <PrivateRoute path={route.path} component={route.component} />\n            return <PrivateRoute {...route} key={route.path} />;\n          }\n          if (route.authRoute) {\n            // return <PrivateRoute path={route.path} Component={route.component} authRoute />\n            return <PrivateRoute {...route} key={route.path} />;\n          }\n          return (\n            <Route\n              path={route.path}\n              component={route.component}\n              exact={route.exact}\n              key={route.path}\n            />\n          );\n        })}\n        {/* <Redirect from='*' to='/' /> */}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}