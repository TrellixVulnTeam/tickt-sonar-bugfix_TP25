{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/phoneNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { checkMobileNumber } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { setShowToast } from '../../../redux/common/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PhoneNumber = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [mobileNumb, setMobileNumb] = useState(props.mobileNumber);\n\n  const changeHandler = e => {\n    let inputVal = e.target.value.replaceAll(' ', '');\n    console.log(inputVal, inputVal.length, mobileNumb, \"okok\");\n\n    if (regex.numeric.test(inputVal) || !inputVal) {\n      if (inputVal.length === 3) {\n        if (inputVal.length == mobileNumb.replaceAll(' ', '').length) {\n          inputVal = inputVal.slice(0, 2);\n          setMobileNumb(inputVal);\n          return;\n        } else if (inputVal.length < mobileNumb.replaceAll(' ', '').length) {\n          inputVal = inputVal.slice(0, 3);\n          setMobileNumb(inputVal);\n          return;\n        }\n      }\n\n      if (inputVal.length >= 3 && inputVal.length < 6) {\n        inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, inputVal.length);\n        setMobileNumb(inputVal);\n        return;\n      }\n\n      if (inputVal.length === 6) {\n        console.log(\"OK\");\n\n        if (inputVal.length == mobileNumb.replaceAll(' ', '').length) {\n          inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 5);\n        } else if (inputVal.length < mobileNumb.replaceAll(' ', '').length) {\n          inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 6);\n        } else {\n          inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 6) + \" \";\n        }\n\n        setMobileNumb(inputVal);\n        return;\n      }\n\n      if (inputVal.length > 6) {\n        inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 6) + \" \" + inputVal.slice(6, inputVal.length);\n      }\n\n      setMobileNumb(inputVal);\n    } // const key = inputVal.charCodeAt(inputVal.length - 1)\n    // if ((key == NaN || inputVal == \"\") && mobileNumber.length === 1) {\n    //     setMobileNumber('');\n    //     return;\n    // }\n    // if ((key > 47 && key < 58) || key === 8) {\n    //     e.preventDefault();\n    //     setMobileNumber(e.target.value)\n    // }\n\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!mobileNumb) {\n      newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n    } else {\n      const phoneRegex = new RegExp(regex.mobile);\n\n      if (!phoneRegex.test(mobileNumb.replaceAll(' ', ''))) {\n        newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr;\n      }\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const res = await checkMobileNumber(mobileNumb.replaceAll(' ', ''));\n      (res === null || res === void 0 ? void 0 : res.isProfileCompleted) && setShowToast(true, res.message);\n\n      if (!res.isProfileCompleted && res.success) {\n        const mobileNumber = mobileNumb.replaceAll(' ', '');\n        props.updateSteps(props.step + 1, {\n          mobileNumber\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"detect_input_ltr\",\n            placeholder: \"400 123 456\",\n            value: mobileNumb,\n            onChange: changeHandler,\n            maxLength: 11\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"detect_icon_ltr\",\n            children: \"+61\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), !!errors.mobileNumber && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PhoneNumber, \"tr1LzJ2q3ytvW0mpZ2oSoLVO1HQ=\");\n\n_c = PhoneNumber;\nexport default PhoneNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhoneNumber\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/phoneNumber.tsx"],"names":["React","useState","checkMobileNumber","Constants","regex","setShowToast","PhoneNumber","props","errors","setErrors","mobileNumb","setMobileNumb","mobileNumber","changeHandler","e","inputVal","target","value","replaceAll","console","log","length","numeric","test","slice","validateForm","newErrors","errorStrings","phoneNumberEmpty","phoneRegex","RegExp","mobile","phoneNumberErr","Object","keys","onSubmit","preventDefault","res","isProfileCompleted","message","success","updateSteps","step"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { checkMobileNumber } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { setShowToast } from '../../../redux/common/actions';\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void\n    step: number\n    history?: any\n    mobileNumber: any,\n}\n\nconst PhoneNumber = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [mobileNumb, setMobileNumb] = useState<any>(props.mobileNumber)\n\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let inputVal = e.target.value.replaceAll(' ', '');\n        console.log(inputVal, inputVal.length, mobileNumb, \"okok\")\n\n        if (regex.numeric.test(inputVal) || !inputVal) {\n            if (inputVal.length === 3) {\n                if (inputVal.length == mobileNumb.replaceAll(' ', '').length) {\n                    inputVal = inputVal.slice(0, 2);\n                    setMobileNumb(inputVal);\n                    return;\n                } else if (inputVal.length < mobileNumb.replaceAll(' ', '').length) {\n                    inputVal = inputVal.slice(0, 3);\n                    setMobileNumb(inputVal);\n                    return;\n                }\n            }\n\n            if (inputVal.length >= 3 && inputVal.length < 6) {\n                inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, inputVal.length);\n                setMobileNumb(inputVal);\n                return;\n            }\n\n            if (inputVal.length === 6) {\n                console.log(\"OK\")\n                if (inputVal.length == mobileNumb.replaceAll(' ', '').length) {\n                    inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 5);\n                } else if (inputVal.length < mobileNumb.replaceAll(' ', '').length) {\n                    inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 6);\n                } else {\n                    inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 6) + \" \";\n                }\n                setMobileNumb(inputVal);\n                return;\n            }\n            if (inputVal.length > 6) {\n                inputVal = inputVal.slice(0, 3) + \" \" + inputVal.slice(3, 6) + \" \" + inputVal.slice(6, inputVal.length);\n            }\n            setMobileNumb(inputVal)\n        }\n        // const key = inputVal.charCodeAt(inputVal.length - 1)\n        // if ((key == NaN || inputVal == \"\") && mobileNumber.length === 1) {\n        //     setMobileNumber('');\n        //     return;\n        // }\n        // if ((key > 47 && key < 58) || key === 8) {\n        //     e.preventDefault();\n        //     setMobileNumber(e.target.value)\n        // }\n    }\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!mobileNumb) {\n            newErrors.mobileNumber = Constants.errorStrings.phoneNumberEmpty;\n        } else {\n            const phoneRegex = new RegExp(regex.mobile);\n            if (!phoneRegex.test(mobileNumb.replaceAll(' ', ''))) {\n                newErrors.mobileNumber = Constants.errorStrings.phoneNumberErr\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const res: any = await checkMobileNumber(mobileNumb.replaceAll(' ', ''))\n            res?.isProfileCompleted && setShowToast(true, res.message);\n            if (!res.isProfileCompleted && res.success) {\n                const mobileNumber = mobileNumb.replaceAll(' ', '');\n                props.updateSteps(props.step + 1, { mobileNumber })\n            }\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Phone Number</label>\n                    <div className=\"text_field\">\n                        <input type=\"text\" className=\"detect_input_ltr\" placeholder=\"400 123 456\" value={mobileNumb} onChange={changeHandler} maxLength={11} />\n                        <span className=\"detect_icon_ltr\">+61</span>\n                    </div>\n                    {!!errors.mobileNumber && <span className=\"error_msg\">{errors.mobileNumber}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\nexport default PhoneNumber\n\n"]},"metadata":{},"sourceType":"module"}