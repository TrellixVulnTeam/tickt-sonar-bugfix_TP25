{"ast":null,"code":"import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{NavLink,useHistory}from'react-router-dom';import InfiniteScroll from'react-infinite-scroll-component';import dummy from'../../../assets/images/u_placeholder.jpg';import noDataFound from\"../../../assets/images/no-search-data.png\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";;var AppliedJobs=function AppliedJobs(_ref){var loading=_ref.loading,getAppliedJobList=_ref.getAppliedJobList,appliedJobList=_ref.appliedJobList,newJobsCount=_ref.newJobsCount,resetAppliedJobList=_ref.resetAppliedJobList;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobList=_useState2[0],setJobList=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),pageNo=_useState4[0],setPageNo=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hasMoreItems=_useState6[0],setHasMoreItems=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoad=_useState8[0],setIsLoad=_useState8[1];var history=useHistory();var totalJobsCount=newJobsCount;console.log(totalJobsCount,\"totalJobsCount\",jobList,\"jobList\",hasMoreItems,\"hasMoreItems\");useEffect(function(){callJobList();return function(){return resetAppliedJobList();};},[]);var callJobList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// if (newJobsCount && jobList.length >= totalJobsCount) {\n//   setHasMoreItems(false);\n//   return;\n// }\ngetAppliedJobList(pageNo);case 1:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref2.apply(this,arguments);};}();useEffect(function(){if((appliedJobList===null||appliedJobList===void 0?void 0:appliedJobList.length)||Array.isArray(appliedJobList)){var allJobs=[].concat(_toConsumableArray(jobList),_toConsumableArray(appliedJobList));console.log(jobList,\"jobList\",appliedJobList,\"props.appliedJobList\",allJobs,\"allJobs\");setJobList(allJobs);setIsLoad(false);setPageNo(pageNo+1);if(appliedJobList.length<10){setHasMoreItems(false);}resetAppliedJobList();}},[appliedJobList]);return/*#__PURE__*/_jsx(\"div\",{className:\"detail_col\",children:/*#__PURE__*/_jsxs(InfiniteScroll,{dataLength:jobList.length,next:callJobList,style:{overflowX:'hidden'},hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(_Fragment,{}),children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"Applied Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:!isLoad&&!loading&&jobList.length?jobList.map(function(_ref3){var jobId=_ref3.jobId,tradeSelectedUrl=_ref3.tradeSelectedUrl,tradeId=_ref3.tradeId,specializationId=_ref3.specializationId,jobName=_ref3.jobName,tradeName=_ref3.tradeName,time=_ref3.time,amount=_ref3.amount,locationName=_ref3.locationName,durations=_ref3.durations,milestoneNumber=_ref3.milestoneNumber,totalMilestones=_ref3.totalMilestones,status=_ref3.status,builderName=_ref3.builderName,builderImage=_ref3.builderImage,quoteJob=_ref3.quoteJob,quoteSent=_ref3.quoteSent;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(NavLink,{to:\"/job-details-page?jobId=\".concat(jobId,\"&redirect_from=jobs\"),className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img\",children:/*#__PURE__*/_jsx(\"img\",{src:builderImage||dummy,alt:\"\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:jobName}),/*#__PURE__*/_jsx(\"span\",{className:\"prof\",children:builderName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon clock\",children:time}),/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"icon location line-1\",children:locationName}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:durations})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"job_progress_wrap\",id:\"scroll-progress-bar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress_wrapper\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"completed-digit\",id:\"digit-progress\",children:[/*#__PURE__*/_jsxs(\"b\",{children:[\"Job Milestones \",milestoneNumber]}),\" of \",totalMilestones]}),/*#__PURE__*/_jsx(\"span\",{className:\"progress_bar\",children:/*#__PURE__*/_jsx(\"input\",{className:\"done_progress\",id:\"progress-bar\",type:\"range\",min:\"0\",value:milestoneNumber,max:totalMilestones})})]})}),quoteJob&&/*#__PURE__*/_jsx(\"div\",{className:\"quote-text\",onClick:function onClick(){history.push({pathname:\"/quote-job\",state:{jobData:{jobId:jobId,tradeId:tradeId,specializationId:specializationId},redirect_from:'appliedJobs'}});},children:'Quote sent'})]})});}):!isLoad&&!loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noDataFound,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"No Data Found\"})]})})]})});};export default AppliedJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/appliedJobs.tsx"],"names":["useState","useEffect","NavLink","useHistory","InfiniteScroll","dummy","noDataFound","AppliedJobs","loading","getAppliedJobList","appliedJobList","newJobsCount","resetAppliedJobList","jobList","setJobList","pageNo","setPageNo","hasMoreItems","setHasMoreItems","isLoad","setIsLoad","history","totalJobsCount","console","log","callJobList","length","Array","isArray","allJobs","overflowX","map","jobId","tradeSelectedUrl","tradeId","specializationId","jobName","tradeName","time","amount","locationName","durations","milestoneNumber","totalMilestones","status","builderName","builderImage","quoteJob","quoteSent","e","target","onerror","src","push","pathname","state","jobData","redirect_from"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\ninterface Proptypes {\n  loading: boolean;\n  newJobsCount: number,\n  appliedJobList: any,\n  getAppliedJobList: (page: number) => void,\n  resetAppliedJobList: () => void;\n};\n\nconst AppliedJobs = ({ loading, getAppliedJobList, appliedJobList, newJobsCount, resetAppliedJobList }: Proptypes) => {\n  const [jobList, setJobList] = useState<Array<any>>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n  const [isLoad, setIsLoad] = useState(true);\n  const history: any = useHistory();\n  let totalJobsCount: number = newJobsCount;\n  console.log(totalJobsCount, \"totalJobsCount\", jobList, \"jobList\", hasMoreItems, \"hasMoreItems\");\n\n  useEffect(() => {\n    callJobList();\n\n    return () => resetAppliedJobList();\n  }, []);\n\n  const callJobList = async () => {\n    // if (newJobsCount && jobList.length >= totalJobsCount) {\n    //   setHasMoreItems(false);\n    //   return;\n    // }\n    getAppliedJobList(pageNo);\n  }\n\n  useEffect(() => {\n    if (appliedJobList?.length || Array.isArray(appliedJobList)) {\n      const allJobs = [...jobList, ...appliedJobList];\n      console.log(jobList, \"jobList\", appliedJobList, \"props.appliedJobList\", allJobs, \"allJobs\");\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n      if (appliedJobList.length < 10) { setHasMoreItems(false); }\n      resetAppliedJobList();\n    }\n  }, [appliedJobList]);\n\n\n  return (\n    <div className=\"detail_col\">\n      <InfiniteScroll\n        dataLength={jobList.length}\n        next={callJobList}\n        style={{ overflowX: 'hidden' }}\n        hasMore={hasMoreItems}\n        loader={<></>}\n      >\n        <span className=\"sub_title\">Applied Jobs</span>\n        <div className=\"flex_row tradies_row\">\n          {!isLoad && !loading && jobList.length ? jobList.map(({ jobId, tradeSelectedUrl, tradeId, specializationId, jobName, tradeName, time, amount, locationName, durations, milestoneNumber, totalMilestones, status, builderName, builderImage, quoteJob, quoteSent }) => (\n            <div className=\"flex_col_sm_6\">\n              <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                <NavLink to={`/job-details-page?jobId=${jobId}&redirect_from=jobs`} className=\"more_detail circle\"></NavLink>\n                <div className=\"user_wrap\">\n                  <figure className=\"u_img\">\n                    <img\n                      src={builderImage || dummy}\n                      alt=\"\"\n                      onError={(e: any) => {\n                        if (e?.target?.onerror) {\n                          e.target.onerror = null;\n                        }\n                        if (e?.target?.src) {\n                          e.target.src = dummy;\n                        }\n                      }}\n                    />\n                  </figure>\n                  <div className=\"details\">\n                    <span className=\"name\">{jobName}</span>\n                    <span className=\"prof\">{builderName}</span>\n                  </div>\n                </div>\n                <div className=\"job_info\">\n                  <ul>\n                    <li className=\"icon clock\">{time}</li>\n                    <li className=\"icon dollar\">{amount}</li>\n                    <li className=\"icon location line-1\">{locationName}</li>\n                    <li className=\"icon calendar\">{durations}</li>\n                  </ul>\n                </div>\n                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                  <div className=\"progress_wrapper\">\n                    <span className=\"completed-digit\" id=\"digit-progress\">\n                      <b>Job Milestones {milestoneNumber}</b> of {totalMilestones}\n                    </span>\n                    <span className=\"progress_bar\">\n                      <input\n                        className=\"done_progress\"\n                        id=\"progress-bar\"\n                        type=\"range\"\n                        min=\"0\"\n                        value={milestoneNumber}\n                        max={totalMilestones}\n                      />\n                    </span>\n                  </div>\n                </div>\n                {quoteJob && <div className=\"quote-text\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `/quote-job`,\n                      state: {\n                        jobData: {\n                          jobId: jobId,\n                          tradeId: tradeId,\n                          specializationId: specializationId\n                        },\n                        redirect_from: 'appliedJobs'\n                      }\n                    })\n                  }}>\n                  {'Quote sent'}\n                </div>}\n              </div>\n            </div>\n          )) : !isLoad && !loading && (\n            <div className=\"no_record  m-t-vh\">\n              <figure className=\"no_img\">\n                <img src={noDataFound} alt=\"data not found\" />\n              </figure>\n              <span>No Data Found</span>\n            </div>\n          )}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default AppliedJobs;\n"]},"metadata":{},"sourceType":"module"}