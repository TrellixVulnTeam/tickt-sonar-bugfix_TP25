{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/fixedRate.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ConfirmPay from './confirmAndPay';\nimport { lastUsedCard } from '../../../../redux/jobs/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FixedRate = props => {\n  _s();\n\n  var _props$data, _props$data$selectedM, _props$data2, _props$data2$itemDeta;\n\n  console.log({\n    props\n  });\n  const indexMile = props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : (_props$data$selectedM = _props$data.selectedMilestoneIndex) === null || _props$data$selectedM === void 0 ? void 0 : _props$data$selectedM.index;\n  const milestones = props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : (_props$data2$itemDeta = _props$data2.itemDetails) === null || _props$data2$itemDeta === void 0 ? void 0 : _props$data2$itemDeta.milestones;\n  const selectedItems = milestones[indexMile];\n  const [toggle, setToggle] = useState(false);\n  const [lastCard, setLastCard] = useState({});\n  const [toggleDetails, setToggleDetails] = useState({\n    toggle: false,\n    data: null\n  });\n\n  const backToScreen = () => {\n    setToggle(false);\n    setToggleDetails({\n      toggle: false,\n      data: null\n    });\n    fetchLastCard();\n  };\n\n  const fetchLastCard = async () => {\n    let response = await lastUsedCard();\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      setLastCard(response.data);\n    }\n  };\n\n  useEffect(() => {\n    fetchLastCard();\n  }, []);\n  useEffect(() => {}, [toggle]);\n\n  if (toggle) {\n    return /*#__PURE__*/_jsxDEV(ConfirmPay, {\n      toggleDetails: toggleDetails,\n      jobName: props === null || props === void 0 ? void 0 : props.jobName,\n      dataItem: props === null || props === void 0 ? void 0 : props.data,\n      backToScreen: backToScreen,\n      total: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.total,\n      onSubmitAccept: props.onSubmitAccept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n  const renderItem = ({\n    title,\n    value,\n    bold\n  }) => {\n    if (value) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f_spacebw\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form_label\",\n          children: bold ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this) : title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form_label\",\n          children: bold ? /*#__PURE__*/_jsxDEV(\"b\", {\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this) : value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.toggleBack();\n          },\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: props === null || props === void 0 ? void 0 : props.jobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: 'Confirm and pay'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment_details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inner_title\",\n          children: \"Milestone payment details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), renderItem({\n          title: 'Hours worked',\n          value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.hoursWorked\n        }), renderItem({\n          title: 'Hours rate',\n          value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.hourlyRate\n        }), renderItem({\n          title: 'Milestone Amount',\n          value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.milestoneAmount\n        }), renderItem({\n          title: 'Taxes',\n          value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.taxes\n        }), renderItem({\n          title: 'Platform fees',\n          value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.platformFees\n        }), renderItem({\n          title: 'Total',\n          value: selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.total,\n          bold: true\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), !(lastCard === null || lastCard === void 0 ? void 0 : lastCard.last4) ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setToggle(true);\n          setToggleDetails({\n            toggle: true,\n            data: lastCard\n          });\n        },\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"bank_detail view_more\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_head\",\n          children: `${lastCard === null || lastCard === void 0 ? void 0 : lastCard.funding} card`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: `xxxx ${lastCard === null || lastCard === void 0 ? void 0 : lastCard.last4}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('Here!!!');\n          setToggle(true);\n        },\n        className: \"fill_btn full_btn btn-effect\",\n        children: 'Pay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FixedRate, \"otx9GaRM8yLCN4ffQhWYaMo3idQ=\");\n\n_c = FixedRate;\nexport default FixedRate;\n\nvar _c;\n\n$RefreshReg$(_c, \"FixedRate\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/confirmAndPay/fixedRate.tsx"],"names":["React","useEffect","useState","ConfirmPay","lastUsedCard","FixedRate","props","console","log","indexMile","data","selectedMilestoneIndex","index","milestones","itemDetails","selectedItems","toggle","setToggle","lastCard","setLastCard","toggleDetails","setToggleDetails","backToScreen","fetchLastCard","response","success","jobName","total","onSubmitAccept","renderItem","title","value","bold","toggleBack","hoursWorked","hourlyRate","milestoneAmount","taxes","platformFees","last4","cursor","funding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAAA;;AAAA;;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;AACA,QAAMG,SAAc,GAAGH,KAAH,aAAGA,KAAH,sCAAGA,KAAK,CAAEI,IAAV,yEAAG,YAAaC,sBAAhB,0DAAG,sBAAqCC,KAA5D;AACA,QAAMC,UAAe,GAAGP,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEI,IAAV,0EAAG,aAAaI,WAAhB,0DAAG,sBAA0BD,UAAlD;AACA,QAAME,aAAkB,GAAGF,UAAU,CAACJ,SAAD,CAArC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAM,EAAN,CAAxC;AACA,QAAM,CAACkB,aAAD,EAAgBC,gBAAhB,IAAoCnB,QAAQ,CAAM;AAAEc,IAAAA,MAAM,EAAE,KAAV;AAAiBN,IAAAA,IAAI,EAAE;AAAvB,GAAN,CAAlD;;AAEA,QAAMY,YAAY,GAAG,MAAM;AACvBL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAI,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,MAAM,EAAE,KAAV;AAAiBN,MAAAA,IAAI,EAAE;AAAvB,KAAD,CAAhB;AACAa,IAAAA,aAAa;AAChB,GAJD;;AAMA,QAAMA,aAAa,GAAG,YAAY;AAC9B,QAAIC,QAAQ,GAAG,MAAMpB,YAAY,EAAjC;;AACA,QAAIoB,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEC,OAAd,EAAuB;AACnBN,MAAAA,WAAW,CAACK,QAAQ,CAACd,IAAV,CAAX;AACH;AACJ,GALD;;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,aAAa;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACe,MAAD,CADM,CAAT;;AAGA,MAAIA,MAAJ,EAAY;AACR,wBACI,QAAC,UAAD;AACI,MAAA,aAAa,EAAEI,aADnB;AAEI,MAAA,OAAO,EAAEd,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEoB,OAFpB;AAGI,MAAA,QAAQ,EAAEpB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEI,IAHrB;AAII,MAAA,YAAY,EAAEY,YAJlB;AAKI,MAAA,KAAK,EAAEP,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEY,KAL1B;AAMI,MAAA,cAAc,EAAErB,KAAK,CAACsB;AAN1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAED,QAAMC,UAAU,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,GAAD,KAAiC;AAChD,QAAID,KAAJ,EAAW;AACP,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBACKC,IAAI,gBACD;AAAA,sBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,kBADC,GAEDA;AAHR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBACKE,IAAI,gBAAG;AAAA,sBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAAH,GAAoBA;AAD7B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAYH;;AACD,WAAO,IAAP;AACH,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AACI,UAAA,OAAO,EAAE,MAAM;AACXzB,YAAAA,KAAK,CAAC2B,UAAN;AACH,WAHL;AAII,UAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA,oBACK3B,KADL,aACKA,KADL,uBACKA,KAAK,CAAEoB;AADZ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBACK;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ,eAgBI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGKG,UAAU,CAAC;AACRC,UAAAA,KAAK,EAAE,cADC;AAERC,UAAAA,KAAK,EAAEhB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEmB;AAFd,SAAD,CAHf,EAQKL,UAAU,CAAC;AACRC,UAAAA,KAAK,EAAE,YADC;AAERC,UAAAA,KAAK,EAAEhB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEoB;AAFd,SAAD,CARf,EAaKN,UAAU,CAAC;AACRC,UAAAA,KAAK,EAAE,kBADC;AAERC,UAAAA,KAAK,EAAEhB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEqB;AAFd,SAAD,CAbf,EAkBKP,UAAU,CAAC;AACRC,UAAAA,KAAK,EAAE,OADC;AAERC,UAAAA,KAAK,EAAEhB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEsB;AAFd,SAAD,CAlBf,EAuBKR,UAAU,CAAC;AACRC,UAAAA,KAAK,EAAE,eADC;AAERC,UAAAA,KAAK,EAAEhB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEuB;AAFd,SAAD,CAvBf,EA4BKT,UAAU,CAAC;AACRC,UAAAA,KAAK,EAAE,OADC;AAERC,UAAAA,KAAK,EAAEhB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEY,KAFd;AAGRK,UAAAA,IAAI,EAAE;AAHE,SAAD,CA5Bf;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,EAmDK,EAACd,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEqB,KAAX,iBACG,QAAC,KAAD,CAAO,QAAP;AAAA,kBACK;AADL;AAAA;AAAA;AAAA;AAAA,cADH,gBAKG;AACI,QAAA,OAAO,EAAE,MAAM;AACXtB,UAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,UAAAA,gBAAgB,CAAC;AACbL,YAAAA,MAAM,EAAE,IADK;AAEbN,YAAAA,IAAI,EAAEQ;AAFO,WAAD,CAAhB;AAIH,SAPL;AAQI,QAAA,KAAK,EAAE;AAAEsB,UAAAA,MAAM,EAAE;AAAV,SARX;AASI,QAAA,SAAS,EAAC,uBATd;AAAA,gCAUI;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,oBAA4B,GAAEtB,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEuB,OAAQ;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA+B,QAAOvB,QAAR,aAAQA,QAAR,uBAAQA,QAAQ,CAAEqB,KAAM;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxDR,eAuEI;AACI,QAAA,OAAO,EAAE,MAAM;AACXhC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAS,UAAAA,SAAS,CAAC,IAAD,CAAT;AACH,SAJL;AAKI,QAAA,SAAS,EAAC,8BALd;AAAA,kBAMK;AANL;AAAA;AAAA;AAAA;AAAA,cAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqFH,CAjJD;;GAAMZ,S;;KAAAA,S;AAmJN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ConfirmPay from './confirmAndPay';\nimport { lastUsedCard } from '../../../../redux/jobs/actions';\n\nconst FixedRate = (props: any) => {\n    console.log({ props });\n    const indexMile: any = props?.data?.selectedMilestoneIndex?.index;\n    const milestones: any = props?.data?.itemDetails?.milestones;\n    const selectedItems: any = milestones[indexMile];\n    const [toggle, setToggle] = useState(false);\n    const [lastCard, setLastCard] = useState<any>({});\n    const [toggleDetails, setToggleDetails] = useState<any>({ toggle: false, data: null })\n\n    const backToScreen = () => {\n        setToggle(false);\n        setToggleDetails({ toggle: false, data: null });\n        fetchLastCard();\n    }\n\n    const fetchLastCard = async () => {\n        let response = await lastUsedCard();\n        if (response?.success) {\n            setLastCard(response.data);\n        }\n    }\n\n    useEffect(() => {\n        fetchLastCard();\n    }, [])\n\n    useEffect(() => {\n    }, [toggle])\n\n    if (toggle) {\n        return (\n            <ConfirmPay\n                toggleDetails={toggleDetails}\n                jobName={props?.jobName}\n                dataItem={props?.data}\n                backToScreen={backToScreen}\n                total={selectedItems?.total}\n                onSubmitAccept={props.onSubmitAccept}\n            />\n        )\n    }\n\n    const renderItem = ({ title, value, bold }: any) => {\n        if (value) {\n            return (\n                <div className=\"f_spacebw\">\n                    <span className=\"form_label\">\n                        {bold ? (\n                            <b>{title}</b>\n                        ) : title}\n                    </span>\n                    <span className=\"form_label\">\n                        {bold ? <b>{value}</b> : value}\n                    </span>\n                </div>\n            )\n        }\n        return null;\n    }\n\n    return (\n        <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n                <div className=\"relate\">\n                    <button\n                        onClick={() => {\n                            props.toggleBack()\n                        }}\n                        className=\"back\"></button>\n                    <span className=\"xs_sub_title\">\n                        {props?.jobName}\n                    </span>\n                </div>\n                <div className=\"form_field\">\n                    <span className=\"sub_title\">\n                        {'Confirm and pay'}\n                    </span>\n                </div>\n                <div className=\"payment_details\">\n                    <span className=\"inner_title\">Milestone payment details</span>\n\n                    {renderItem({\n                        title: 'Hours worked',\n                        value: selectedItems?.hoursWorked\n                    })}\n\n                    {renderItem({\n                        title: 'Hours rate',\n                        value: selectedItems?.hourlyRate\n                    })}\n\n                    {renderItem({\n                        title: 'Milestone Amount',\n                        value: selectedItems?.milestoneAmount\n                    })}\n\n                    {renderItem({\n                        title: 'Taxes',\n                        value: selectedItems?.taxes\n                    })}\n\n                    {renderItem({\n                        title: 'Platform fees',\n                        value: selectedItems?.platformFees\n                    })}\n\n                    {renderItem({\n                        title: 'Total',\n                        value: selectedItems?.total,\n                        bold: true\n                    })}\n\n                </div>\n                {!lastCard?.last4 ? (\n                    <React.Fragment>\n                        {''}\n                    </React.Fragment>\n                ) : (\n                    <div\n                        onClick={() => {\n                            setToggle(true);\n                            setToggleDetails({\n                                toggle: true,\n                                data: lastCard\n                            })\n                        }}\n                        style={{ cursor: 'pointer' }}\n                        className=\"bank_detail view_more\">\n                        <span className=\"xs_head\">{`${lastCard?.funding} card`}</span>\n                        <span className=\"show_label\">{`xxxx ${lastCard?.last4}`}</span>\n\n                    </div>\n                )}\n                <button\n                    onClick={() => {\n                        console.log('Here!!!')\n                        setToggle(true);\n                    }}\n                    className=\"fill_btn full_btn btn-effect\">\n                    {'Pay'}\n                </button>\n            </div>\n        </div>\n\n    )\n}\n\nexport default FixedRate;\n"]},"metadata":{},"sourceType":"module"}