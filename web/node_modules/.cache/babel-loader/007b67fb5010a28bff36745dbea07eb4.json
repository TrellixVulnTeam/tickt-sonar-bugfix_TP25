{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/addMilestone.tsx\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { renderTimeWithCustomFormat } from '../../../utils/common'; // Please add a unique date\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultStates = {\n  isToggleOpen: false,\n  milestone_name: '',\n  isPhotoevidence: false,\n  from_date: '',\n  to_date: '',\n  recommended_hours: ''\n}; // for error messages\n\nconst label = {\n  milestone_name: 'Milestone Name',\n  from_date: 'From Date',\n  recommended_hours: 'Recommended Hours'\n};\nconst pattern = \"^([0-9][0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\nexport default class AddMilestone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleOpen = () => {\n      this.setState({\n        isToggleOpen: !this.state.isToggleOpen\n      });\n    };\n\n    this.setLocalValueByCompare = (prop, state, name) => {\n      if (name === \"isPhotoevidence\") {\n        if (prop !== state) {\n          this.setState({ ...this.state,\n            [name]: prop\n          });\n        }\n      } else {\n        if ((prop === null || prop === void 0 ? void 0 : prop.length) !== (state === null || state === void 0 ? void 0 : state.length)) {\n          this.setState({ ...this.state,\n            [name]: prop\n          });\n        }\n      }\n    };\n\n    this.handleChange = (name, value) => {\n      let error_clone = this.state.errors;\n\n      if (name === \"milestone_name\") {\n        value = value.trimLeft().replace(/[^a-zA-Z|0-9 ]/g, \"\");\n      }\n\n      if (name === \"recommended_hours\") {\n        value = value.trimLeft();\n      }\n\n      if (['milestone_name', 'from_date', 'recommended_hours'].includes(name)) {\n        error_clone[name] = this.isInvalid(name, value);\n      }\n\n      this.setState({ ...this.state,\n        [name]: value,\n        errors: error_clone\n      }, () => {\n        this.setItems();\n      });\n    };\n\n    this.addAnotherMilestone = e => {\n      e.preventDefault();\n      const {\n        milestones,\n        newMileStoneScreen\n      } = this.props;\n      let milestone_index = milestones.length ? milestones.length - 1 : 0;\n\n      if (!this.checkErrors()) {\n        this.setItems();\n        newMileStoneScreen(milestone_index + 1);\n      }\n    };\n\n    this.checkHoursVal = (value, name) => {\n      if (value === null || value === void 0 ? void 0 : value.length) {\n        if (value.match(pattern) !== null) {\n          if (!(+value.split(':')[1] % 15 === 0)) {\n            return 'Time should be in mutiples of 15 like 10:15, 10:30';\n          }\n        } else {\n          return 'Please enter a valid pattern like : 10:15';\n        }\n      } else {\n        return `${label[name]} is required.`;\n      }\n    };\n\n    this.isInvalid = (name, value) => {\n      switch (name) {\n        case 'milestone_name':\n          return !value.length ? `${label[name]} is required.` : value.length > 50 ? 'Maximum 50 characters are allowed.' : '';\n\n        case 'from_date':\n          return !value.length ? `${label[name]} is required.` : '';\n\n        case 'recommended_hours':\n          return this.checkHoursVal(value, name);\n      }\n    };\n\n    this.checkErrors = isTrue => {\n      let {\n        milestone_name,\n        recommended_hours,\n        errors: {\n          pattern_error\n        }\n      } = this.state;\n\n      if (milestone_name === null || milestone_name === void 0 ? void 0 : milestone_name.length) {\n        let errorItems = {};\n        let error_1 = this.isInvalid('milestone_name', milestone_name);\n        let error_3 = this.isInvalid('recommended_hours', recommended_hours);\n\n        if (milestone_name === null || milestone_name === void 0 ? void 0 : milestone_name.length) {\n          errorItems['milestone_name'] = error_1;\n        }\n\n        if ((recommended_hours === null || recommended_hours === void 0 ? void 0 : recommended_hours.length) && (error_3 === null || error_3 === void 0 ? void 0 : error_3.length)) {\n          errorItems['recommended_hours'] = error_3;\n        }\n\n        if (JSON.stringify(this.state.errors) !== JSON.stringify(errorItems)) {\n          this.setState({\n            errors: errorItems\n          });\n        }\n\n        if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length) && ((recommended_hours === null || recommended_hours === void 0 ? void 0 : recommended_hours.length) === 0 || !(pattern_error === null || pattern_error === void 0 ? void 0 : pattern_error.length))) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.setItems = is_remove => {\n      const {\n        milestones,\n        handleStepMileStone,\n        removeMilestoneByIndex\n      } = this.props;\n      let {\n        milestone_name,\n        isPhotoevidence,\n        recommended_hours\n      } = this.state;\n      let milestone_index = milestones.length ? milestones.length - 1 : 0;\n\n      if (is_remove) {\n        removeMilestoneByIndex(milestone_index);\n        return;\n      } else {\n        var _milestones$milestone, _milestones$milestone2;\n\n        handleStepMileStone({\n          \"milestone_name\": milestone_name,\n          \"isPhotoevidence\": isPhotoevidence,\n          \"from_date\": ((_milestones$milestone = milestones[milestone_index]) === null || _milestones$milestone === void 0 ? void 0 : _milestones$milestone.from_date) || '',\n          \"to_date\": ((_milestones$milestone2 = milestones[milestone_index]) === null || _milestones$milestone2 === void 0 ? void 0 : _milestones$milestone2.to_date) || '',\n          \"recommended_hours\": recommended_hours\n        }, milestone_index);\n      }\n    };\n\n    this.state = {\n      isToggleOpen: false,\n      milestone_name: '',\n      isPhotoevidence: false,\n      from_date: '',\n      to_date: '',\n      recommended_hours: '',\n      errors: {\n        milestone_name: '',\n        from_date: '',\n        recommended_hours: '',\n        pattern_error: ''\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    let nextProps = this.props;\n    let {\n      milestone_name,\n      isPhotoevidence,\n      from_date,\n      to_date,\n      recommended_hours\n    } = this.state;\n\n    if (nextProps.milestones.length) {\n      console.log({\n        mile: nextProps.milestones\n      });\n      let milestones_items = nextProps.milestones;\n      let item = milestones_items[milestones_items.length - 1];\n\n      if ('milestone_name' in item) {\n        this.setLocalValueByCompare(item === null || item === void 0 ? void 0 : item.milestone_name, milestone_name, 'milestone_name');\n      } else {\n        if (milestone_name === null || milestone_name === void 0 ? void 0 : milestone_name.length) {\n          this.setState({\n            milestone_name: ''\n          });\n        }\n      }\n\n      if ('isPhotoevidence' in item) {\n        this.setLocalValueByCompare(item === null || item === void 0 ? void 0 : item.isPhotoevidence, isPhotoevidence, 'isPhotoevidence');\n      } else {\n        if (isPhotoevidence) {\n          this.setState({\n            isPhotoevidence: false\n          });\n        }\n      }\n\n      if ('from_date' in item) {\n        this.setLocalValueByCompare(item === null || item === void 0 ? void 0 : item.from_date, from_date, 'from_date');\n      } else {\n        if (from_date === null || from_date === void 0 ? void 0 : from_date.length) {\n          this.setState({\n            from_date: ''\n          });\n        }\n      }\n\n      if ('to_date' in item) {\n        this.setLocalValueByCompare(item === null || item === void 0 ? void 0 : item.to_date, to_date, 'to_date');\n      } else {\n        if (to_date === null || to_date === void 0 ? void 0 : to_date.length) {\n          this.setState({\n            to_date: ''\n          });\n        }\n      }\n\n      if ('recommended_hours' in item) {\n        this.setLocalValueByCompare(item === null || item === void 0 ? void 0 : item.recommended_hours, recommended_hours, 'recommended_hours');\n      } else {\n        if (recommended_hours === null || recommended_hours === void 0 ? void 0 : recommended_hours.length) {\n          this.setState({\n            recommended_hours: ''\n          });\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    const {\n      updateMileStoneIndex,\n      newMileStoneScreen,\n      milestones\n    } = this.props;\n    let milestone_index = !(milestones === null || milestones === void 0 ? void 0 : milestones.length) ? milestones === null || milestones === void 0 ? void 0 : milestones.length : 0;\n    newMileStoneScreen(milestone_index);\n    updateMileStoneIndex(null);\n  }\n\n  render() {\n    const {\n      newMileStoneScreen,\n      handleStepForward,\n      handleStepBack,\n      milestones\n    } = this.props;\n    let {\n      milestone_name,\n      isPhotoevidence,\n      recommended_hours,\n      errors,\n      isToggleOpen\n    } = this.state;\n    let from_date_format = '';\n    let to_date_format = '';\n\n    if (milestones.length) {\n      let date_from_moment = milestones[milestones.length - 1].from_date;\n      let date_to_moment = milestones[milestones.length - 1].to_date;\n\n      if (date_from_moment === null || date_from_moment === void 0 ? void 0 : date_from_moment.length) {\n        from_date_format = date_from_moment; //moment(date_from_moment, 'MM-DD-YYYY').format('MMM DD');\n      }\n\n      if (date_to_moment === null || date_to_moment === void 0 ? void 0 : date_to_moment.length) {\n        to_date_format = date_to_moment; //moment(date_to_moment, 'MM-DD-YYYY').format('MMM DD');\n      }\n    }\n\n    let check_errors = this.checkErrors();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_container\",\n          children: [/*#__PURE__*/_jsxDEV(Dialog, {\n            open: isToggleOpen // onClose={handleClose}\n            ,\n            \"aria-labelledby\": \"alert-dialog-title\",\n            \"aria-describedby\": \"alert-dialog-description\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"alert-dialog-title\",\n              className: \"xs_alert_dialog_title\",\n              children: 'Heads Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                children: 'If you go back, you will lose all your changes.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  this.toggleOpen();\n                },\n                color: \"primary\",\n                children: 'Yes'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  var _from_date_format;\n\n                  if ((milestone_name === null || milestone_name === void 0 ? void 0 : milestone_name.length) || isPhotoevidence == true || (recommended_hours === null || recommended_hours === void 0 ? void 0 : recommended_hours.length) || ((_from_date_format = from_date_format) === null || _from_date_format === void 0 ? void 0 : _from_date_format.length)) {\n                    this.setState(defaultStates, () => {\n                      this.setItems(true);\n                      handleStepBack();\n                    });\n                  }\n                },\n                color: \"primary\",\n                autoFocus: true,\n                children: 'No'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_5\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"relate\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"back\",\n                    onClick: () => {\n                      if (check_errors) {\n                        var _from_date_format2;\n\n                        if ((milestone_name === null || milestone_name === void 0 ? void 0 : milestone_name.length) || isPhotoevidence == true || (recommended_hours === null || recommended_hours === void 0 ? void 0 : recommended_hours.length) || ((_from_date_format2 = from_date_format) === null || _from_date_format2 === void 0 ? void 0 : _from_date_format2.length)) {\n                          // this.setItems(true);\n                          this.toggleOpen();\n                        } else {\n                          // this.setItems(true);\n                          handleStepBack();\n                        }\n                      } else {\n                        var _from_date_format3;\n\n                        if ((milestone_name === null || milestone_name === void 0 ? void 0 : milestone_name.length) || isPhotoevidence == true || (recommended_hours === null || recommended_hours === void 0 ? void 0 : recommended_hours.length) || ((_from_date_format3 = from_date_format) === null || _from_date_format3 === void 0 ? void 0 : _from_date_format3.length)) {\n                          this.toggleOpen();\n                        } else {\n                          handleStepBack();\n                        }\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"title\",\n                    children: `Milestone ${milestones === null || milestones === void 0 ? void 0 : milestones.length}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: 'Milestone Name'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Enter Milestone Name\",\n                    onChange: e => {\n                      this.handleChange('milestone_name', e.target.value);\n                    },\n                    value: milestone_name,\n                    name: \"milestone_name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors === null || errors === void 0 ? void 0 : errors.milestone_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox_wrap agree_check\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: () => {\n                      this.handleChange('isPhotoevidence', !isPhotoevidence);\n                    },\n                    checked: isPhotoevidence,\n                    className: \"filter-type filled-in\",\n                    type: \"checkbox\",\n                    id: \"milestone1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"milestone1\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: 'Photo evidence required'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"f_spacebw\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form_label\",\n                    children: 'Duration of milestone (optional)'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      handleStepForward(8);\n                    },\n                    className: \"fill_btn fill_grey_btn choose_btn\",\n                    children: renderTimeWithCustomFormat(from_date_format, to_date_format, 'MM-DD-YYYY', ['DD MMM', 'DD MMM YYYY'] // ['MMM DD', 'MMM DD YYYY'] // to keep the date format stable on front-end (TIC-2467)\n                    )\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form_label\",\n                  children: 'Estimated Hours (optional)'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text_field\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    onChange: e => {\n                      this.setState({\n                        recommended_hours: e.target.value.trimLeft()\n                      }, () => {\n                        this.setItems();\n                        let rh_value = this.state.recommended_hours;\n                        let error_item = this.state.errors; // \"^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$\";\n\n                        if (!(rh_value === null || rh_value === void 0 ? void 0 : rh_value.length) || rh_value.match(pattern) !== null) {\n                          error_item['pattern_error'] = '';\n\n                          if (!(+rh_value.split(':')[1] % 15 === 0)) {\n                            error_item['pattern_error'] = 'Time should be in multiples of 15 like 10:15, 10:30';\n                          }\n                        } else {\n                          error_item['pattern_error'] = 'Please enter a valid pattern like : 10:15';\n                        }\n\n                        this.setState({\n                          errors: error_item\n                        });\n                      });\n                    },\n                    autoComplete: \"off\",\n                    value: recommended_hours,\n                    type: \"text\",\n                    placeholder: \"Enter Estimated Hours\",\n                    name: \"recommended_hours\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors.recommended_hours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_msg\",\n                  children: errors.pattern_error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.addAnotherMilestone,\n                  className: `fill_grey_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`,\n                  children: 'Add milestone'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    // newMileStoneScreen(milestone_index + 1);\n                    handleStepForward(6);\n                  },\n                  className: `fill_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`,\n                  children: 'Continue'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/addMilestone.tsx"],"names":["React","Component","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","renderTimeWithCustomFormat","defaultStates","isToggleOpen","milestone_name","isPhotoevidence","from_date","to_date","recommended_hours","label","pattern","AddMilestone","constructor","props","toggleOpen","setState","state","setLocalValueByCompare","prop","name","length","handleChange","value","error_clone","errors","trimLeft","replace","includes","isInvalid","setItems","addAnotherMilestone","e","preventDefault","milestones","newMileStoneScreen","milestone_index","checkErrors","checkHoursVal","match","split","isTrue","pattern_error","errorItems","error_1","error_3","JSON","stringify","is_remove","handleStepMileStone","removeMilestoneByIndex","componentDidUpdate","prevProps","nextProps","console","log","mile","milestones_items","item","componentDidMount","updateMileStoneIndex","render","handleStepForward","handleStepBack","from_date_format","to_date_format","date_from_moment","date_to_moment","check_errors","target","rh_value","error_item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { renderTimeWithCustomFormat } from '../../../utils/common';\n\n// Please add a unique date\ninterface Props {\n    data: any;\n    stepCompleted: boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepForward: (data: any) => void;\n    newMileStoneScreen: (data: any) => void;\n    handleStepMileStone: (data: any, index: any) => void;\n    handleStepBack: () => void;\n    updateMileStoneIndex: (data: any) => void;\n    removeMilestoneByIndex: (data: any) => void;\n    milestones: any;\n}\ninterface State {\n    isToggleOpen: boolean,\n    milestone_name: string,\n    isPhotoevidence: boolean,\n    from_date: string,\n    to_date: string,\n    recommended_hours: any\n    errors: any;\n}\n\nconst defaultStates = {\n    isToggleOpen: false,\n    milestone_name: '',\n    isPhotoevidence: false,\n    from_date: '',\n    to_date: '',\n    recommended_hours: '',\n}\n\n// for error messages\nconst label: { [index: string]: string } = {\n    milestone_name: 'Milestone Name',\n    from_date: 'From Date',\n    recommended_hours: 'Recommended Hours',\n}\n\nconst pattern = \"^([0-9][0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\nexport default class AddMilestone extends Component<Props, State> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            isToggleOpen: false,\n            milestone_name: '',\n            isPhotoevidence: false,\n            from_date: '',\n            to_date: '',\n            recommended_hours: '',\n            errors: {\n                milestone_name: '',\n                from_date: '',\n                recommended_hours: '',\n                pattern_error: ''\n            }\n        }\n    }\n\n    toggleOpen = () => { this.setState({ isToggleOpen: !this.state.isToggleOpen }) }\n\n    componentDidUpdate(prevProps: any) {\n        let nextProps = this.props;\n\n        let { milestone_name, isPhotoevidence, from_date, to_date, recommended_hours } = this.state;\n        if (nextProps.milestones.length) {\n            console.log({\n                mile: nextProps.milestones\n            })\n            let milestones_items = nextProps.milestones;\n            let item = milestones_items[milestones_items.length - 1];\n            if ('milestone_name' in item) {\n                this.setLocalValueByCompare(item?.milestone_name, milestone_name, 'milestone_name');\n            } else {\n                if (milestone_name?.length) {\n                    this.setState({ milestone_name: '' })\n                }\n            }\n            if ('isPhotoevidence' in item) {\n                this.setLocalValueByCompare(item?.isPhotoevidence, isPhotoevidence, 'isPhotoevidence');\n            } else {\n                if (isPhotoevidence) {\n                    this.setState({ isPhotoevidence: false })\n                }\n            }\n            if ('from_date' in item) {\n                this.setLocalValueByCompare(item?.from_date, from_date, 'from_date');\n            } else {\n                if (from_date?.length) {\n                    this.setState({ from_date: '' })\n                }\n            }\n            if ('to_date' in item) {\n                this.setLocalValueByCompare(item?.to_date, to_date, 'to_date');\n            } else {\n                if (to_date?.length) {\n                    this.setState({ to_date: '' })\n                }\n            }\n            if ('recommended_hours' in item) {\n                this.setLocalValueByCompare(item?.recommended_hours, recommended_hours, 'recommended_hours');\n            } else {\n                if (recommended_hours?.length) {\n                    this.setState({ recommended_hours: '' })\n                }\n            }\n        }\n\n    }\n\n    setLocalValueByCompare = (prop: any, state: any, name: any) => {\n        if (name === \"isPhotoevidence\") {\n            if (prop !== state) {\n                this.setState({ ...this.state, [name]: prop });\n            }\n        } else {\n            if (prop?.length !== state?.length) {\n                this.setState({ ...this.state, [name]: prop });\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        const { updateMileStoneIndex, newMileStoneScreen, milestones } = this.props;\n        let milestone_index = !milestones?.length ? milestones?.length : 0;\n        newMileStoneScreen(milestone_index);\n        updateMileStoneIndex(null);\n    }\n\n    handleChange = (name: string, value: any) => {\n\n        let error_clone: any = this.state.errors;\n\n        if (name === \"milestone_name\") {\n            value = (value).trimLeft().replace(/[^a-zA-Z|0-9 ]/g, \"\")\n        }\n\n        if (name === \"recommended_hours\") {\n            value = (value).trimLeft();\n        }\n\n        if (['milestone_name', 'from_date', 'recommended_hours'].includes(name)) {\n            error_clone[name] = this.isInvalid(name, value)\n        }\n\n        this.setState({\n            ...this.state,\n            [name]: value,\n            errors: error_clone\n        }, () => {\n            this.setItems();\n        });\n    }\n\n    addAnotherMilestone = (e: any) => {\n        e.preventDefault();\n        const { milestones, newMileStoneScreen } = this.props;\n        let milestone_index = milestones.length ? milestones.length - 1 : 0;\n        if (!this.checkErrors()) {\n            this.setItems();\n            newMileStoneScreen(milestone_index + 1);\n        }\n    }\n\n    checkHoursVal = (value: any, name: any) => {\n        if (value?.length) {\n            if (value.match(pattern) !== null) {\n                if (!((+value.split(':')[1]) % 15 === 0)) {\n                    return 'Time should be in mutiples of 15 like 10:15, 10:30';\n                }\n            } else {\n                return 'Please enter a valid pattern like : 10:15';\n            }\n        } else {\n            return `${label[name]} is required.`\n        }\n    }\n\n    isInvalid = (name: string, value: string) => {\n        switch (name) {\n            case 'milestone_name':\n                return !value.length ? `${label[name]} is required.` : value.length > 50 ? 'Maximum 50 characters are allowed.' : '';\n            case 'from_date':\n                return !value.length ? `${label[name]} is required.` : '';\n            case 'recommended_hours':\n                return this.checkHoursVal(value, name);\n        }\n    }\n\n    checkErrors = (isTrue?: boolean) => {\n        let { milestone_name, recommended_hours, errors: { pattern_error } } = this.state;\n        if (milestone_name?.length) {\n            let errorItems: any = {};\n            let error_1 = this.isInvalid('milestone_name', milestone_name);\n            let error_3 = this.isInvalid('recommended_hours', recommended_hours);\n\n            if (milestone_name?.length) {\n                errorItems['milestone_name'] = error_1;\n            }\n\n            if (recommended_hours?.length && error_3?.length) {\n                errorItems['recommended_hours'] = error_3;\n            }\n\n            if (JSON.stringify(this.state.errors) !== JSON.stringify(errorItems)) {\n                this.setState({ errors: errorItems })\n            }\n            if (!error_1?.length && (recommended_hours?.length === 0 || !pattern_error?.length)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    setItems = (is_remove?: boolean) => {\n        const { milestones, handleStepMileStone, removeMilestoneByIndex } = this.props;\n        let { milestone_name, isPhotoevidence, recommended_hours } = this.state;\n        let milestone_index = milestones.length ? milestones.length - 1 : 0;\n\n        if (is_remove) {\n            removeMilestoneByIndex(milestone_index);\n            return\n        } else {\n            handleStepMileStone({\n                \"milestone_name\": milestone_name,\n                \"isPhotoevidence\": isPhotoevidence,\n                \"from_date\": milestones[milestone_index]?.from_date || '',\n                \"to_date\": milestones[milestone_index]?.to_date || '',\n                \"recommended_hours\": recommended_hours\n            }, milestone_index);\n        }\n    }\n\n    render() {\n        const { newMileStoneScreen, handleStepForward, handleStepBack, milestones } = this.props;\n        let { milestone_name, isPhotoevidence, recommended_hours, errors, isToggleOpen } = this.state;\n\n        let from_date_format = '';\n        let to_date_format = '';\n        if (milestones.length) {\n            let date_from_moment = milestones[milestones.length - 1].from_date;\n            let date_to_moment = milestones[milestones.length - 1].to_date;\n            if (date_from_moment?.length) {\n                from_date_format = date_from_moment //moment(date_from_moment, 'MM-DD-YYYY').format('MMM DD');\n            }\n\n            if (date_to_moment?.length) {\n                to_date_format = date_to_moment //moment(date_to_moment, 'MM-DD-YYYY').format('MMM DD');\n            }\n        }\n\n        let check_errors = this.checkErrors();\n        return (\n            <div className=\"app_wrapper\">\n                <div className=\"section_wrapper\">\n                    <div className=\"custom_container\">\n                        <Dialog\n                            open={isToggleOpen}\n                            // onClose={handleClose}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                        >\n                            <DialogTitle id=\"alert-dialog-title\" className=\"xs_alert_dialog_title\">\n                                {'Heads Up'}\n                            </DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                {'If you go back, you will lose all your changes.'}\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button\n                                    onClick={() => { this.toggleOpen() }}\n                                    color=\"primary\">\n                                    {'Yes'}\n                                </Button>\n                                <Button\n                                    onClick={() => {\n                                        if (milestone_name?.length || isPhotoevidence == true || recommended_hours?.length || from_date_format?.length) {\n                                            this.setState(defaultStates, () => {\n                                                this.setItems(true);\n                                                handleStepBack();\n                                            });\n                                        }\n                                    }}\n                                    color=\"primary\" autoFocus>\n                                    {'No'}\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                        <div className=\"form_field\">\n                            <div className=\"flex_row\">\n                                <div className=\"flex_col_sm_5\">\n                                    <div className=\"relate\">\n                                        <button\n                                            className=\"back\"\n                                            onClick={() => {\n                                                if (check_errors) {\n                                                    if (milestone_name?.length || isPhotoevidence == true || recommended_hours?.length || from_date_format?.length) {\n                                                        // this.setItems(true);\n                                                        this.toggleOpen()\n                                                    } else {\n                                                        // this.setItems(true);\n                                                        handleStepBack();\n                                                    }\n                                                } else {\n                                                    if (milestone_name?.length || isPhotoevidence == true || recommended_hours?.length || from_date_format?.length) {\n                                                        this.toggleOpen()\n                                                    } else {\n                                                        handleStepBack()\n                                                    }\n                                                }\n                                            }}>\n                                        </button>\n                                        <span className=\"title\">\n                                            {`Milestone ${milestones?.length}`}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">\n                                        {'Milestone Name'}\n                                    </label>\n                                    <div className=\"text_field\">\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter Milestone Name\"\n                                            onChange={(e) => { this.handleChange('milestone_name', e.target.value) }}\n                                            value={milestone_name}\n                                            name=\"milestone_name\" />\n                                    </div>\n                                    <span className=\"error_msg\">{errors?.milestone_name}</span>\n                                </div>\n                                <div className=\"form_field\">\n\n                                    <div className=\"checkbox_wrap agree_check\">\n                                        <input\n                                            onChange={() => { this.handleChange('isPhotoevidence', !isPhotoevidence) }}\n                                            checked={isPhotoevidence}\n                                            className=\"filter-type filled-in\"\n                                            type=\"checkbox\"\n                                            id=\"milestone1\" />\n                                        <label htmlFor=\"milestone1\">\n                                            <b>\n                                                {'Photo evidence required'}\n                                            </b>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"form_field\">\n                                    <div className=\"f_spacebw\">\n                                        <label className=\"form_label\">\n                                            {'Duration of milestone (optional)'}\n                                        </label>\n                                        <button\n                                            onClick={() => { handleStepForward(8) }}\n                                            className=\"fill_btn fill_grey_btn choose_btn\">\n                                            {renderTimeWithCustomFormat(\n                                                from_date_format,\n                                                to_date_format,\n                                                'MM-DD-YYYY',\n                                                ['DD MMM', 'DD MMM YYYY']\n                                                // ['MMM DD', 'MMM DD YYYY'] // to keep the date format stable on front-end (TIC-2467)\n                                            )}\n                                        </button>\n                                    </div>\n                                </div>\n                                <div className=\"form_field\">\n                                    <label className=\"form_label\">\n                                        {'Estimated Hours (optional)'}\n                                    </label>\n                                    <div className=\"text_field\">\n                                        <input\n                                            onChange={(e) => {\n                                                this.setState({\n                                                    recommended_hours: (e.target.value).trimLeft()\n                                                }, () => {\n                                                    this.setItems();\n                                                    let rh_value = this.state.recommended_hours;\n                                                    let error_item = this.state.errors;\n                                                    // \"^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$\";\n\n                                                    if (!rh_value?.length || rh_value.match(pattern) !== null) {\n                                                        error_item['pattern_error'] = '';\n                                                        if (!((+rh_value.split(':')[1]) % 15 === 0)) {\n                                                            error_item['pattern_error'] = 'Time should be in multiples of 15 like 10:15, 10:30';\n                                                        }\n                                                    } else {\n                                                        error_item['pattern_error'] = 'Please enter a valid pattern like : 10:15';\n                                                    }\n                                                    this.setState({ errors: error_item });\n                                                });\n                                            }}\n                                            autoComplete='off'\n                                            value={recommended_hours}\n                                            type=\"text\"\n                                            placeholder=\"Enter Estimated Hours\"\n                                            name=\"recommended_hours\" />\n                                    </div>\n                                    <span className=\"error_msg\">{errors.recommended_hours}</span>\n                                    <span className=\"error_msg\">{errors.pattern_error}</span>\n                                </div>\n\n                                <div className=\"form_field\">\n                                    <button\n                                        onClick={this.addAnotherMilestone}\n                                        className={`fill_grey_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`}>\n                                        {'Add milestone'}\n                                    </button>\n                                </div>\n                                <div className=\"form_field\">\n                                    <button\n                                        onClick={() => {\n                                            // newMileStoneScreen(milestone_index + 1);\n                                            handleStepForward(6)\n                                        }}\n                                        className={`fill_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`}>\n                                        {'Continue'}\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}