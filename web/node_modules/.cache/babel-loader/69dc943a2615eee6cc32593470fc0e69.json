{"ast":null,"code":"export var thumbnailExtract=function thumbnailExtract(_ref){var videoId=_ref.videoId,canvasId=_ref.canvasId;var _VIDEO=document.querySelector(videoId),_CANVAS=document.querySelector(canvasId),_CANVAS_CTX=_CANVAS.getContext(\"2d\");// Video metadata is loaded\n_VIDEO.addEventListener('loadedmetadata',function(){// Set canvas dimensions same as video dimensions\n_CANVAS.width=_VIDEO.videoWidth;_CANVAS.height=_VIDEO.videoHeight;});// Video playback position is changed\ndocument.querySelector(videoId).addEventListener('timeupdate',function(){// You are now ready to grab the thumbnail from the <canvas> element\n});// Placing the current frame image of the video in the canvas\n_CANVAS_CTX.drawImage(_VIDEO,0,0,_VIDEO.videoWidth,_VIDEO.videoHeight);var img=new Image();img.crossOrigin=\"anonymous\";img.src=_CANVAS===null||_CANVAS===void 0?void 0:_CANVAS.toDataURL();console.log({src:img});return img.src;};","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/thumbnail.js"],"names":["thumbnailExtract","videoId","canvasId","_VIDEO","document","querySelector","_CANVAS","_CANVAS_CTX","getContext","addEventListener","width","videoWidth","height","videoHeight","drawImage","img","Image","crossOrigin","src","toDataURL","console","log"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA2B,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CACvD,GAAIC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuBJ,OAAvB,CAAb,CACIK,OAAO,CAAGF,QAAQ,CAACC,aAAT,CAAuBH,QAAvB,CADd,CAEIK,WAAW,CAAGD,OAAO,CAACE,UAAR,CAAmB,IAAnB,CAFlB,CAIA;AACAL,MAAM,CAACM,gBAAP,CAAwB,gBAAxB,CAA0C,UAAY,CAClD;AACAH,OAAO,CAACI,KAAR,CAAgBP,MAAM,CAACQ,UAAvB,CACAL,OAAO,CAACM,MAAR,CAAiBT,MAAM,CAACU,WAAxB,CACH,CAJD,EAMA;AACAT,QAAQ,CAACC,aAAT,CAAuBJ,OAAvB,EAAgCQ,gBAAhC,CAAiD,YAAjD,CAA+D,UAAY,CACvE;AACH,CAFD,EAIA;AACAF,WAAW,CAACO,SAAZ,CAAsBX,MAAtB,CAA8B,CAA9B,CAAiC,CAAjC,CAAoCA,MAAM,CAACQ,UAA3C,CAAuDR,MAAM,CAACU,WAA9D,EAEA,GAAIE,CAAAA,GAAG,CAAG,GAAIC,CAAAA,KAAJ,EAAV,CACAD,GAAG,CAACE,WAAJ,CAAkB,WAAlB,CACAF,GAAG,CAACG,GAAJ,CAAUZ,OAAV,SAAUA,OAAV,iBAAUA,OAAO,CAAEa,SAAT,EAAV,CACAC,OAAO,CAACC,GAAR,CAAY,CACRH,GAAG,CAAEH,GADG,CAAZ,EAGA,MAAOA,CAAAA,GAAG,CAACG,GAAX,CACH,CA3BM","sourcesContent":["export const thumbnailExtract = ({ videoId, canvasId }) => {\n    let _VIDEO = document.querySelector(videoId),\n        _CANVAS = document.querySelector(canvasId),\n        _CANVAS_CTX = _CANVAS.getContext(\"2d\");\n\n    // Video metadata is loaded\n    _VIDEO.addEventListener('loadedmetadata', function () {\n        // Set canvas dimensions same as video dimensions\n        _CANVAS.width = _VIDEO.videoWidth;\n        _CANVAS.height = _VIDEO.videoHeight;\n    });\n\n    // Video playback position is changed\n    document.querySelector(videoId).addEventListener('timeupdate', function () {\n        // You are now ready to grab the thumbnail from the <canvas> element\n    });\n\n    // Placing the current frame image of the video in the canvas\n    _CANVAS_CTX.drawImage(_VIDEO, 0, 0, _VIDEO.videoWidth, _VIDEO.videoHeight);\n\n    var img = new Image();\n    img.crossOrigin = \"anonymous\"\n    img.src = _CANVAS?.toDataURL()\n    console.log({\n        src: img\n    })\n    return img.src;\n}"]},"metadata":{},"sourceType":"module"}