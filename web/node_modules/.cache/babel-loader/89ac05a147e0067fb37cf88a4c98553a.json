{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/selectYourSphere.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport spherePlaceholder from \"../../../assets/images/tick-grey.svg\";\nimport noData from \"../../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCategories = props => {\n  _s();\n\n  var _props$tradeListData;\n\n  const [trade, setTrade] = useState(props.trade);\n  const [imgPath, setimagePath] = useState([]);\n\n  const onClick = item => {\n    if (item == trade) {\n      return setTrade(\"\");\n    }\n\n    setTrade(item);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (trade) {\n      props.updateSteps(props.step + 1, {\n        trade\n      });\n    } else {\n      setShowToast(true, \"Please select a trade\");\n    }\n  };\n\n  const onImageError = index => {\n    let tmp = [...imgPath];\n    tmp[index] = true;\n    setimagePath(tmp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select_sphere form_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ((_props$tradeListData = props.tradeListData) === null || _props$tradeListData === void 0 ? void 0 : _props$tradeListData.length) ? props.tradeListData.map((item, index) => {\n        const active = trade === item._id;\n        const imgSrc = item.selected_url && !imgPath[index] ? item.selected_url : spherePlaceholder; // const imgSrc = spherePlaceholder;\n        // console.log(index,imgSrc, \"imgSrc\")\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: active ? \"active\" : \"\",\n          onClick: () => onClick(item._id),\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onError: () => onImageError(index),\n              src: imgSrc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: item.trade_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"no_data\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: noData,\n          alt: \"no-data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fill_btn btn-effect\",\n      onClick: onSubmit,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectCategories, \"SMbSmUtziTpSnfqnXqjlaAcxU4Q=\");\n\n_c = SelectCategories;\nexport default SelectCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCategories\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/selectYourSphere.tsx"],"names":["useState","setShowToast","noData","SelectCategories","props","trade","setTrade","imgPath","setimagePath","onClick","item","onSubmit","e","preventDefault","updateSteps","step","onImageError","index","tmp","tradeListData","length","map","active","_id","imgSrc","selected_url","spherePlaceholder","trade_name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,YAAT,QAA6B,+BAA7B;;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;;;AASA,MAAMC,gBAAgB,GAAIC,KAAD,IAAsB;AAAA;;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,YAAV,IAA0BR,QAAQ,CAAM,EAAN,CAAxC;;AAEA,QAAMS,OAAO,GAAIC,IAAD,IAAkB;AAChC,QAAIA,IAAI,IAAIL,KAAZ,EAAmB;AACjB,aAAOC,QAAQ,CAAC,EAAD,CAAf;AACD;;AACDA,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAkB;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIR,KAAJ,EAAW;AACTD,MAAAA,KAAK,CAACU,WAAN,CAAkBV,KAAK,CAACW,IAAN,GAAa,CAA/B,EAAkC;AAAEV,QAAAA;AAAF,OAAlC;AACD,KAFD,MAEO;AACLJ,MAAAA,YAAY,CAAC,IAAD,EAAO,uBAAP,CAAZ;AACD;AACF,GAPD;;AASA,QAAMe,YAAY,GAAIC,KAAD,IAAmB;AACtC,QAAIC,GAAG,GAAG,CAAC,GAAGX,OAAJ,CAAV;AACAW,IAAAA,GAAG,CAACD,KAAD,CAAH,GAAa,IAAb;AACAT,IAAAA,YAAY,CAACU,GAAD,CAAZ;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,4BACE;AAAA,gBACG,yBAAAd,KAAK,CAACe,aAAN,8EAAqBC,MAArB,IACChB,KAAK,CAACe,aAAN,CAAoBE,GAApB,CAAwB,CAACX,IAAD,EAAOO,KAAP,KAAiB;AACvC,cAAMK,MAAM,GAAGjB,KAAK,KAAKK,IAAI,CAACa,GAA9B;AACA,cAAMC,MAAM,GACVd,IAAI,CAACe,YAAL,IAAqB,CAAClB,OAAO,CAACU,KAAD,CAA7B,GACIP,IAAI,CAACe,YADT,GAEIC,iBAHN,CAFuC,CAMvC;AAEA;;AACA,4BACE;AAEE,UAAA,SAAS,EAAEJ,MAAM,GAAG,QAAH,GAAc,EAFjC;AAGE,UAAA,OAAO,EAAE,MAAMb,OAAO,CAACC,IAAI,CAACa,GAAN,CAHxB;AAAA,kCAKE;AAAA,mCACE;AAAK,cAAA,OAAO,EAAE,MAAMP,YAAY,CAACC,KAAD,CAAhC;AAAyC,cAAA,GAAG,EAAEO;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF,eAQE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAwBd,IAAI,CAACiB;AAA7B;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WACOjB,IAAI,CAACa,GADZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OArBD,CADD,gBAwBC;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,+BACE;AAAK,UAAA,GAAG,EAAErB,MAAV;AAAkB,UAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,YADF,eA+BE;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAES,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CA/DD;;GAAMR,gB;;KAAAA,gB;AAiEN,eAAeA,gBAAf","sourcesContent":["import { useState } from \"react\";\nimport Constants from \"../../../utils/constants\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport spherePlaceholder from \"../../../assets/images/tick-grey.svg\";\nimport noData from \"../../../assets/images/no-search-data.png\";\n\ninterface Propstype {\n  updateSteps: (num: number, data: any) => void;\n  step: number;\n  tradeListData: Array<any>;\n  trade: string;\n}\n\nconst SelectCategories = (props: Propstype) => {\n  const [trade, setTrade] = useState(props.trade);\n  const [imgPath, setimagePath] = useState<any>([]);\n\n  const onClick = (item: string) => {\n    if (item == trade) {\n      return setTrade(\"\");\n    }\n    setTrade(item);\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    if (trade) {\n      props.updateSteps(props.step + 1, { trade });\n    } else {\n      setShowToast(true, \"Please select a trade\");\n    }\n  };\n\n  const onImageError = (index: number) => {\n    let tmp = [...imgPath];\n    tmp[index] = true;\n    setimagePath(tmp);\n  };\n\n  return (\n    <div className=\"select_sphere form_wrapper\">\n      <ul>\n        {props.tradeListData?.length ? (\n          props.tradeListData.map((item, index) => {\n            const active = trade === item._id;\n            const imgSrc =\n              item.selected_url && !imgPath[index]\n                ? item.selected_url\n                : spherePlaceholder;\n            // const imgSrc = spherePlaceholder;\n\n            // console.log(index,imgSrc, \"imgSrc\")\n            return (\n              <li\n                key={item._id}\n                className={active ? \"active\" : \"\"}\n                onClick={() => onClick(item._id)}\n              >\n                <figure>\n                  <img onError={() => onImageError(index)} src={imgSrc} />\n                </figure>\n                <span className=\"name\">{item.trade_name}</span>\n              </li>\n            );\n          })\n        ) : (\n          <li className=\"no_data\">\n            <img src={noData} alt=\"no-data\" />\n          </li>\n        )}\n      </ul>\n      <button className=\"fill_btn btn-effect\" onClick={onSubmit}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default SelectCategories;\n"]},"metadata":{},"sourceType":"module"}