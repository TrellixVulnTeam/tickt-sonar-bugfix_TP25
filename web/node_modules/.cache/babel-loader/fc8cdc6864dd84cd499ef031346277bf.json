{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/addBankDetails/paymentSetupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { getStripeClientSecretkey, saveStripeTransaction } from '../../../../redux/auth/actions';\nimport { milestoneAcceptOrDecline } from '../../../../redux/homeSearch/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport { useStripe, useElements, AuBankAccountElement } from '@stripe/react-stripe-js';\nimport BecsForm from './becsForm';\nimport { useHistory } from 'react-router-dom';\nimport { moengage, mixPanel } from '../../../../services/analyticsTools';\nimport { MoEConstants } from '../../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaymentSetupForm(props) {\n  _s();\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory(); //   const stripe = useStripe('stripePublishableKey', {\n  //     stripeAccount: 'stripeAccountId',\n  //   });\n\n  const handleSubmit = async (e, accountName, accountEmail) => {\n    var _props$milestoneTotal;\n\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      console.log('Stripe.js has not yet loaded');\n      return;\n    }\n\n    const auBankAccount = elements.getElement(AuBankAccountElement);\n    const res = await getStripeClientSecretkey({\n      amount: (_props$milestoneTotal = props.milestoneTotalAmount) === null || _props$milestoneTotal === void 0 ? void 0 : _props$milestoneTotal.slice(1),\n      tradieId: props.tradieId,\n      builderId: props.builderId,\n      jobId: props.jobId,\n      milestoneId: props.milestoneId\n    });\n\n    if (res.success) {\n      const result = await stripe.confirmAuBecsDebitPayment(res.stripeClientSecretkey, {\n        payment_method: {\n          au_becs_debit: props.isAddnewAccount ? auBankAccount : null,\n          // au_becs_debit: { bsb_number: '000000', account_number: '000123456' },\n          billing_details: {\n            name: accountName,\n            email: accountEmail\n          }\n        }\n      });\n\n      if (result.error) {\n        setShowToast(true, 'Milestone payment failed. Please try after some time');\n        console.log('STRIPE payment error: ', result.error.message);\n      } else {\n        var _props$milestoneTotal2;\n\n        setShowToast(true, 'Milestone payment initiated, will take upto 3 business days to settle.');\n        const {\n          paymentIntent\n        } = result;\n        const data = {\n          amount: `${(_props$milestoneTotal2 = props.milestoneTotalAmount) === null || _props$milestoneTotal2 === void 0 ? void 0 : _props$milestoneTotal2.slice(1)}`,\n          builderId: props.builderId,\n          tradieId: props.tradieId,\n          transactionId: paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.id,\n          jobId: props.jobId,\n          milestoneId: props.milestoneId,\n          status: paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.status\n        };\n        const res = await saveStripeTransaction(data);\n\n        if (res.success) {\n          var _props$milestoneAmoun;\n\n          let data_ = {\n            \"status\": 1,\n            \"jobId\": props.jobId,\n            \"milestoneId\": props.milestoneId,\n            \"paymentMethodId\": 'Bank Account',\n            \"milestoneAmount\": `${(_props$milestoneAmoun = props.milestoneAmount) === null || _props$milestoneAmoun === void 0 ? void 0 : _props$milestoneAmoun.slice(1)}`,\n            \"amount\": `${paymentIntent === null || paymentIntent === void 0 ? void 0 : paymentIntent.amount}`\n          };\n          const mData1 = {\n            Category: props === null || props === void 0 ? void 0 : props.category,\n            timeStamp: moengage.getCurrentTimeStamp()\n          };\n          moengage.moE_SendEvent(MoEConstants.MADE_PAYMENT, mData1);\n          mixPanel.mixP_SendEvent(MoEConstants.MADE_PAYMENT, mData1);\n          let response = await milestoneAcceptOrDecline(data_);\n\n          if (response === null || response === void 0 ? void 0 : response.success) {\n            const mData2 = { ...mData1,\n              'Milestone number': (props === null || props === void 0 ? void 0 : props.milestoneNumber) + 1\n            };\n            moengage.moE_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED, mData2);\n            mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED, mData2);\n            history.push('/need-approval-success?payMode=bank');\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BecsForm, {\n    onSubmit: handleSubmit,\n    disabled: !stripe,\n    jobName: props.jobName,\n    milestoneTotalAmount: props.milestoneTotalAmount,\n    backToScreen: props.backToScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PaymentSetupForm, \"qR3gbbvs4teUWPxva4JkQUPVF7A=\", false, function () {\n  return [useStripe, useElements, useHistory];\n});\n\n_c = PaymentSetupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentSetupForm\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/addBankDetails/paymentSetupForm.jsx"],"names":["getStripeClientSecretkey","saveStripeTransaction","milestoneAcceptOrDecline","setShowToast","useStripe","useElements","AuBankAccountElement","BecsForm","useHistory","moengage","mixPanel","MoEConstants","PaymentSetupForm","props","stripe","elements","history","handleSubmit","e","accountName","accountEmail","preventDefault","console","log","auBankAccount","getElement","res","amount","milestoneTotalAmount","slice","tradieId","builderId","jobId","milestoneId","success","result","confirmAuBecsDebitPayment","stripeClientSecretkey","payment_method","au_becs_debit","isAddnewAccount","billing_details","name","email","error","message","paymentIntent","data","transactionId","id","status","data_","milestoneAmount","mData1","Category","category","timeStamp","getCurrentTimeStamp","moE_SendEvent","MADE_PAYMENT","mixP_SendEvent","response","mData2","milestoneNumber","MILESTONE_CHECKED_AND_APPROVED","push","jobName","backToScreen"],"mappings":"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","sourcesContent":["import { getStripeClientSecretkey, saveStripeTransaction } from '../../../../redux/auth/actions';\nimport { milestoneAcceptOrDecline } from '../../../../redux/homeSearch/actions';\nimport { setShowToast } from '../../../../redux/common/actions';\nimport { useStripe, useElements, AuBankAccountElement } from '@stripe/react-stripe-js';\nimport BecsForm from './becsForm';\nimport { useHistory } from 'react-router-dom';\nimport { moengage, mixPanel } from '../../../../services/analyticsTools';\nimport { MoEConstants } from '../../../../utils/constants';\n\nexport default function PaymentSetupForm(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const history = useHistory();\n  //   const stripe = useStripe('stripePublishableKey', {\n  //     stripeAccount: 'stripeAccountId',\n  //   });\n\n  const handleSubmit = async (e, accountName, accountEmail) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      console.log('Stripe.js has not yet loaded');\n      return;\n    }\n\n    const auBankAccount = elements.getElement(AuBankAccountElement);\n\n    const res = await getStripeClientSecretkey({\n      amount: props.milestoneTotalAmount?.slice(1),\n      tradieId: props.tradieId,\n      builderId: props.builderId,\n      jobId: props.jobId,\n      milestoneId: props.milestoneId,\n    });\n    if (res.success) {\n      const result = await stripe.confirmAuBecsDebitPayment(res.stripeClientSecretkey, {\n        payment_method: {\n          au_becs_debit: props.isAddnewAccount ? auBankAccount : null,\n          // au_becs_debit: { bsb_number: '000000', account_number: '000123456' },\n          billing_details: {\n            name: accountName,\n            email: accountEmail,\n          },\n        }\n      });\n\n      if (result.error) {\n        setShowToast(true, 'Milestone payment failed. Please try after some time')\n        console.log('STRIPE payment error: ', result.error.message);\n      } else {\n        setShowToast(true, 'Milestone payment initiated, will take upto 3 business days to settle.');\n        const { paymentIntent } = result;\n        const data = {\n          amount: `${props.milestoneTotalAmount?.slice(1)}`,\n          builderId: props.builderId,\n          tradieId: props.tradieId,\n          transactionId: paymentIntent?.id,\n          jobId: props.jobId,\n          milestoneId: props.milestoneId,\n          status: paymentIntent?.status,\n        };\n        const res = await saveStripeTransaction(data);\n        if (res.success) {\n          let data_ = {\n            \"status\": 1,\n            \"jobId\": props.jobId,\n            \"milestoneId\": props.milestoneId,\n            \"paymentMethodId\": 'Bank Account',\n            \"milestoneAmount\": `${props.milestoneAmount?.slice(1)}`,\n            \"amount\": `${paymentIntent?.amount}`,\n          }\n          const mData1 = {\n            Category: props?.category,\n            timeStamp: moengage.getCurrentTimeStamp(),\n          }\n          moengage.moE_SendEvent(MoEConstants.MADE_PAYMENT, mData1);\n          mixPanel.mixP_SendEvent(MoEConstants.MADE_PAYMENT, mData1);\n          let response = await milestoneAcceptOrDecline(data_);\n          if (response?.success) {\n            const mData2 = {\n              ...mData1,\n              'Milestone number': props?.milestoneNumber + 1,\n          }\n            moengage.moE_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED, mData2);\n            mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_CHECKED_AND_APPROVED, mData2);\n            history.push('/need-approval-success?payMode=bank');\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <BecsForm\n      onSubmit={handleSubmit}\n      disabled={!stripe}\n      jobName={props.jobName}\n      milestoneTotalAmount={props.milestoneTotalAmount}\n      backToScreen={props.backToScreen}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}