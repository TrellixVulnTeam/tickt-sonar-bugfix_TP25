{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/declineMilestone.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport close from \"../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../assets/images/add-image.png\";\nimport { onFileUpload } from \"../../../redux/auth/actions\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\n\nconst DeclineMilestone = ({\n  milestoneAcceptOrDecline,\n  toggleBack,\n  jobId,\n  jobName,\n  milestoneId,\n  resetStateLocal\n}) => {\n  _s();\n\n  const [reason, setReason] = useState(\"\");\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n\n  const onSubmitDecline = async () => {\n    if (!(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length)) {\n      setShowToast(true, \"Please attach at least one media file\");\n      return true;\n    }\n\n    let data = {\n      status: 2,\n      jobId: jobId,\n      milestoneId: milestoneId,\n      reason: reason,\n      url: filesUrl.length ? filesUrl.map(file => file.link) : []\n    };\n    let response = await milestoneAcceptOrDecline(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      moengage.moE_SendEvent(MoEConstants.MILESTONE_DECLINED, {\n        timeStamp: moengage.getCurrentTimeStamp()\n      });\n      mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_DECLINED, {\n        timeStamp: moengage.getCurrentTimeStamp()\n      });\n      resetStateLocal(true);\n    }\n  };\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if ((filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) === 6) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      let link = res.imgUrl;\n      let check_type = imageFormats.includes(fileType) ? 1 : 2;\n      setFilesUrl(prev => [...prev, {\n        mediaType: check_type,\n        link: link\n      }]);\n      setLocalFiles(prev => ({ ...prev,\n        newFile\n      }));\n    }\n  };\n\n  const renderbyFileFormat = (item, index) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          title: get_split_name,\n          src: item,\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            removeFromItem(index);\n          },\n          src: close,\n          alt: \"remove\",\n          className: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const isValidCheck = () => {\n    if (!(reason === null || reason === void 0 ? void 0 : reason.length) || (reason === null || reason === void 0 ? void 0 : reason.length) > 1000) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleBack,\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: jobName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Decline milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"commn_para\",\n        children: \"Please write your reason for declining the milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Your reason\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: reason,\n                maxLength: 1000,\n                onChange: e => {\n                  setReason(e.target.value.trimLeft());\n                },\n                placeholder: \"Your reason...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char_count\",\n                children: [\"character length: \", (reason === null || reason === void 0 ? void 0 : reason.length) + \" / 1000\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), (reason === null || reason === void 0 ? void 0 : reason.length) > 1000 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: \"Maximum 1000 characters are allowed.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_img_video pt-10\",\n        children: [(filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) ? filesUrl.map((item, index) => renderbyFileFormat(item.link, index)) : null, (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) < 6 ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"upload_media\",\n            htmlFor: \"upload_img_video\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: addMedia,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\",\n            style: {\n              display: \"none\"\n            },\n            onChange: onFileChange,\n            id: \"upload_img_video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmitDecline,\n        className: `fill_btn full_btn btn-effect ${isValidCheck() ? \"disable_btn\" : \"\"}`,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DeclineMilestone, \"eYjMeclEncPe6q+25h3D0JqydtY=\");\n\n_c = DeclineMilestone;\nexport default DeclineMilestone;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeclineMilestone\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/declineMilestone.tsx"],"names":["React","useState","close","addMedia","onFileUpload","setShowToast","moengage","mixPanel","MoEConstants","imageFormats","DeclineMilestone","milestoneAcceptOrDecline","toggleBack","jobId","jobName","milestoneId","resetStateLocal","reason","setReason","filesUrl","setFilesUrl","localFiles","setLocalFiles","update","forceUpdate","onSubmitDecline","length","data","status","url","map","file","link","response","success","moE_SendEvent","MILESTONE_DECLINED","timeStamp","getCurrentTimeStamp","mixP_SendEvent","removeFromItem","index","splice","Array","isArray","onFileChange","e","formData","FormData","newFile","target","files","fileType","type","split","toLowerCase","selectedFileSize","size","indexOf","includes","append","res","imgUrl","check_type","prev","mediaType","renderbyFileFormat","item","split_item_format","get_split_fromat","split_item_name","get_split_name","image_render","isValidCheck","value","trimLeft","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport close from \"../../../assets/images/icon-close-1.png\";\nimport addMedia from \"../../../assets/images/add-image.png\";\nimport { onFileUpload } from \"../../../redux/auth/actions\";\nimport { setShowToast } from \"../../../redux/common/actions\";\n\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\ninterface Props {\n  milestoneAcceptOrDecline: any;\n  jobId: any;\n  jobName: any;\n  milestoneId: any;\n  toggleBack: () => void;\n  resetStateLocal: any;\n}\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\n\nconst DeclineMilestone = ({\n  milestoneAcceptOrDecline,\n  toggleBack,\n  jobId,\n  jobName,\n  milestoneId,\n  resetStateLocal,\n}: Props) => {\n  const [reason, setReason] = useState(\"\");\n  const [filesUrl, setFilesUrl] = useState([] as any);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n\n  const onSubmitDecline = async () => {\n    if (!filesUrl?.length) {\n      setShowToast(true, \"Please attach at least one media file\");\n      return true;\n    }\n\n    let data = {\n      status: 2,\n      jobId: jobId,\n      milestoneId: milestoneId,\n      reason: reason,\n      url: filesUrl.length ? filesUrl.map((file: any) => file.link) : [],\n    };\n\n    let response: any = await milestoneAcceptOrDecline(data);\n    if (response?.success) {\n      moengage.moE_SendEvent(MoEConstants.MILESTONE_DECLINED, {\n        timeStamp: moengage.getCurrentTimeStamp(),\n      });\n      mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_DECLINED, {\n        timeStamp: moengage.getCurrentTimeStamp(),\n      });\n      resetStateLocal(true);\n    }\n  };\n\n  const removeFromItem = (index: any) => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async (e: any) => {\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if (filesUrl?.length === 6) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    var fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n    var selectedFileSize = newFile?.size / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    const res = await onFileUpload(formData);\n    if (res.success) {\n      let link: string = res.imgUrl;\n      let check_type: any = imageFormats.includes(fileType) ? 1 : 2;\n      setFilesUrl((prev: Array<any>) => [\n        ...prev,\n        {\n          mediaType: check_type,\n          link: link,\n        },\n      ]);\n      setLocalFiles((prev: any) => ({ ...prev, newFile }));\n    }\n  };\n\n  const renderbyFileFormat = (item: any, index: any) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render: any = null;\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = <img title={get_split_name} src={item} alt=\"media\" />;\n      }\n      return (\n        <figure className=\"img_video\">\n          {image_render}\n          <img\n            onClick={() => {\n              removeFromItem(index);\n            }}\n            src={close}\n            alt=\"remove\"\n            className=\"remove\"\n          />\n        </figure>\n      );\n    }\n  };\n\n  const isValidCheck = () => {\n    if (!reason?.length || reason?.length > 1000) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"flex_row\">\n      <div className=\"flex_col_sm_12\">\n        <div className=\"relate\">\n          <button onClick={toggleBack} className=\"back\"></button>\n          <span className=\"xs_sub_title\">{jobName}</span>\n        </div>\n        <span className=\"sub_title\">Decline milestone</span>\n        <p className=\"commn_para\">\n          Please write your reason for declining the milestone\n        </p>\n        <div className=\"flex_row\">\n          <div className=\"flex_col_sm_7\">\n            <div className=\"form_field\">\n              <label className=\"form_label\">Your reason</label>\n              <div className=\"text_field\">\n                <textarea\n                  value={reason}\n                  maxLength={1000}\n                  onChange={(e: any) => {\n                    setReason(e.target.value.trimLeft());\n                  }}\n                  placeholder=\"Your reason...\"\n                ></textarea>\n                <span className=\"char_count\">\n                  {\"character length: \"}\n                  {reason?.length + \" / 1000\"}\n                </span>\n              </div>\n              {reason?.length > 1000 && (\n                <span className=\"error_msg\">\n                  {\"Maximum 1000 characters are allowed.\"}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"upload_img_video pt-10\">\n          {filesUrl?.length\n            ? filesUrl.map((item: any, index: number) =>\n                renderbyFileFormat(item.link, index)\n              )\n            : null}\n\n          {filesUrl?.length < 6 ? (\n            <React.Fragment>\n              <label className=\"upload_media\" htmlFor=\"upload_img_video\">\n                <img src={addMedia} alt=\"\" />\n              </label>\n\n              <input\n                type=\"file\"\n                accept=\"image/png,image/jpg,image/jpeg,.pdf, .doc, video/mp4, video/wmv, video/avi\"\n                style={{ display: \"none\" }}\n                onChange={onFileChange}\n                id=\"upload_img_video\"\n              />\n            </React.Fragment>\n          ) : null}\n        </div>\n        <button\n          onClick={onSubmitDecline}\n          className={`fill_btn full_btn btn-effect ${\n            isValidCheck() ? \"disable_btn\" : \"\"\n          }`}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DeclineMilestone;\n"]},"metadata":{},"sourceType":"module"}