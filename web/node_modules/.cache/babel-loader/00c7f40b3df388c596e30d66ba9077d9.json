{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{connect}from'react-redux';import InfiniteScroll from'react-infinite-scroll-component';import TradieJobInfoBox from'../../common/tradieJobInfoBox';import{getMostViewedJobs}from'../../redux/homeSearch/actions';import noData from'../../assets/images/no-search-data.png';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{createElement as _createElement}from\"react\";var MostViewedJobs=function MostViewedJobs(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobList=_useState2[0],setJobList=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),totalCount=_useState4[0],setTotalCount=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),pageNo=_useState6[0],setPageNo=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),hasMoreItems=_useState8[0],setHasMoreItems=_useState8[1];useEffect(function(){callJobList();},[]);var callJobList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,res,_res$result,_res$result2,_res$result3,allJobs,_res$result4;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(jobList.length>=totalCount)){_context.next=3;break;}setHasMoreItems(false);return _context.abrupt(\"return\");case 3:data={page:pageNo,perPage:10};_context.next=6;return getMostViewedJobs(data);case 6:res=_context.sent;if(res.success){allJobs=[].concat(_toConsumableArray(jobList),_toConsumableArray((_res$result=res.result)===null||_res$result===void 0?void 0:_res$result.data));if(((_res$result2=res.result)===null||_res$result2===void 0?void 0:_res$result2.length)<10){setHasMoreItems(false);}setJobList(allJobs);setPageNo(pageNo+1);if(((_res$result3=res.result)===null||_res$result3===void 0?void 0:_res$result3.totalCount)!==totalCount){setTotalCount((_res$result4=res.result)===null||_res$result4===void 0?void 0:_res$result4.totalCount);}}case 8:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref.apply(this,arguments);};}();var backButtonClicked=function backButtonClicked(){var _props$history;(_props$history=props.history)===null||_props$history===void 0?void 0:_props$history.goBack();};// const mostViewJobsData = props.jobDataWithJobTypeLatLong?.most_viewed_jobs;\nreturn/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:jobList.length,next:callJobList,style:{overflowX:'hidden'},hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(_Fragment,{}),children:/*#__PURE__*/_jsx(\"div\",{className:'app_wrapper',children:/*#__PURE__*/_jsx(\"div\",{className:\"section_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom_container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:backButtonClicked}),/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Most viewed jobs\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(jobList===null||jobList===void 0?void 0:jobList.length)>0||props.isLoading?jobList===null||jobList===void 0?void 0:jobList.map(function(jobData){return/*#__PURE__*/_createElement(TradieJobInfoBox,_objectSpread(_objectSpread({item:jobData},props),{},{key:jobData.jobId}));}):/*#__PURE__*/_jsxs(\"div\",{className:\"no_record\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noData,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"No Data Found\"})]})})]})})})});};var mapStateToProps=function mapStateToProps(state){return{isLoading:state.common.isLoading};};export default connect(mapStateToProps,null)(MostViewedJobs);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/mostViewedJobs/mostViewedJobs.tsx"],"names":["useState","useEffect","connect","InfiniteScroll","TradieJobInfoBox","getMostViewedJobs","noData","MostViewedJobs","props","jobList","setJobList","totalCount","setTotalCount","pageNo","setPageNo","hasMoreItems","setHasMoreItems","callJobList","length","data","page","perPage","res","success","allJobs","result","backButtonClicked","history","goBack","overflowX","isLoading","map","jobData","jobId","mapStateToProps","state","common"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport TradieJobInfoBox from '../../common/tradieJobInfoBox';\nimport { getMostViewedJobs } from '../../redux/homeSearch/actions';\n\nimport noData from '../../assets/images/no-search-data.png';\n\nconst MostViewedJobs = (props: any) => {\n    const [jobList, setJobList] = useState<Array<any>>([]);\n    const [totalCount, setTotalCount] = useState<number>(1);\n    const [pageNo, setPageNo] = useState<number>(1);\n    const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n\n    useEffect(() => {\n        callJobList();\n    }, []);\n\n    const callJobList = async () => {\n        if (jobList.length >= totalCount) {\n            setHasMoreItems(false);\n            return;\n        }\n        const data = {\n            page: pageNo,\n            perPage: 10\n        }\n        const res = await getMostViewedJobs(data);\n        if (res.success) {\n            const allJobs = [...jobList, ...res.result?.data];\n            if (res.result?.length < 10) {\n                setHasMoreItems(false);\n            }\n            setJobList(allJobs);\n            setPageNo(pageNo + 1);\n            if (res.result?.totalCount !== totalCount) {\n                setTotalCount(res.result?.totalCount);\n            }\n        }\n    }\n\n    const backButtonClicked = () => {\n        props.history?.goBack();\n    }\n    // const mostViewJobsData = props.jobDataWithJobTypeLatLong?.most_viewed_jobs;\n\n    return (\n        <InfiniteScroll\n            dataLength={jobList.length}\n            next={callJobList}\n            style={{ overflowX: 'hidden' }}\n            hasMore={hasMoreItems}\n            loader={<></>}\n        >\n            <div className={'app_wrapper'} >\n                <div className=\"section_wrapper\">\n                    <div className=\"custom_container\">\n                        <div className=\"relate\">\n                            <button className=\"back\" onClick={backButtonClicked}></button>\n                            <span className=\"title\">Most viewed jobs</span>\n                        </div>\n                        <div className=\"flex_row tradies_row\">\n                            {(jobList?.length > 0 || props.isLoading) ?\n                                (jobList?.map((jobData: any) => {\n                                    return <TradieJobInfoBox item={jobData} {...props} key={jobData.jobId} />\n                                })) : <div className=\"no_record\">\n                                    <figure className=\"no_img\">\n                                        <img src={noData} alt=\"data not found\" />\n                                    </figure>\n                                    <span>No Data Found</span>\n                                </div>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </InfiniteScroll>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        isLoading: state.common.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps, null)(MostViewedJobs);\n"]},"metadata":{},"sourceType":"module"}