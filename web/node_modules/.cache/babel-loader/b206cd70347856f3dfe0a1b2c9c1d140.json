{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{setLoading}from'../../../redux/common/actions';import colorLogo from'../../../assets/images/ic-logo-yellow.png';import templateImage from'../../../assets/images/lets-go-bg.jpg';import storageService from'../../../utils/storageService';import{loginAnonymously}from'../../../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LetsGo=function LetsGo(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoad=_useState2[0],setImageLoad=_useState2[1];useEffect(function(){setLoading(true);},[]);useEffect(function(){if(!isLoad){setLoading(false);}},[isLoad]);var goToLogin=function goToLogin(){if(storageService.getItem('jwtToken')){var _props$history,_props$history$locati;// const authData = {\n//     email: storageService.getItem('userInfo')?.email,\n//     password: '12345678',\n// }\nloginAnonymously();// firebaseLogInWithEmailPassword(authData, '', true);\n(_props$history=props.history)===null||_props$history===void 0?void 0:_props$history.push({pathname:'/',state:{path:props===null||props===void 0?void 0:(_props$history$locati=props.history.location)===null||_props$history$locati===void 0?void 0:_props$history$locati.pathname}});return;}if(props.showModal){props.setShowModal(!props.showModal);props.modalUpdateSteps(0);return;}props.history.push('/login');};return/*#__PURE__*/_jsx(\"div\",{className:\"img_text_wrap\",children:/*#__PURE__*/_jsxs(\"figure\",{className:\"full_image\",children:[/*#__PURE__*/_jsx(\"img\",{src:templateImage,alt:\"template\",onLoad:function onLoad(){setImageLoad(false);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"short_info\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"logo_img\",children:/*#__PURE__*/_jsx(\"img\",{src:colorLogo,alt:\"Tickt-logo\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Congratulations!\"}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label msg\",children:\"Your account has been created. You are one step closer to growing your business.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect\",onClick:goToLogin,children:\"Let\\u2019s go\"})]})]})]})});};export default LetsGo;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/letsGo.tsx"],"names":["React","useState","useEffect","setLoading","colorLogo","templateImage","storageService","loginAnonymously","LetsGo","props","isLoad","setImageLoad","goToLogin","getItem","history","push","pathname","state","path","location","showModal","setShowModal","modalUpdateSteps"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAAyC,+BAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,2CAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uCAA1B,CAEA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,OAAyCC,gBAAzC,KAAiE,4BAAjE,C,wFASA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAsB,CACjC,cAA+BR,QAAQ,CAAC,IAAD,CAAvC,wCAAOS,MAAP,eAAeC,YAAf,eAEAT,SAAS,CAAC,UAAM,CAAEC,UAAU,CAAC,IAAD,CAAV,CAAkB,CAA3B,CAA6B,EAA7B,CAAT,CAEAD,SAAS,CAAC,UAAM,CACZ,GAAI,CAACQ,MAAL,CAAa,CAAEP,UAAU,CAAC,KAAD,CAAV,CAAmB,CACrC,CAFQ,CAEN,CAACO,MAAD,CAFM,CAAT,CAIA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAIN,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAAJ,CAAwC,0CACpC;AACA;AACA;AACA;AACAN,gBAAgB,GAChB;AACA,gBAAAE,KAAK,CAACK,OAAN,wDAAeC,IAAf,CAAoB,CAChBC,QAAQ,CAAE,GADM,CAEhBC,KAAK,CAAE,CAAEC,IAAI,CAAET,KAAF,SAAEA,KAAF,wCAAEA,KAAK,CAAEK,OAAP,CAAeK,QAAjB,gDAAE,sBAAyBH,QAAjC,CAFS,CAApB,EAIA,OACH,CACD,GAAIP,KAAK,CAACW,SAAV,CAAqB,CACjBX,KAAK,CAACY,YAAN,CAAmB,CAACZ,KAAK,CAACW,SAA1B,EACAX,KAAK,CAACa,gBAAN,CAAuB,CAAvB,EACA,OACH,CACDb,KAAK,CAACK,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACH,CApBD,CAsBA,mBACI,YAAK,SAAS,CAAC,eAAf,uBACI,gBAAQ,SAAS,CAAC,YAAlB,wBACI,YACI,GAAG,CAAEV,aADT,CAEI,GAAG,CAAC,UAFR,CAGI,MAAM,CAAE,iBAAM,CACVM,YAAY,CAAC,KAAD,CAAZ,CACH,CALL,EADJ,cASI,aAAK,SAAS,CAAC,YAAf,wBACI,eAAQ,SAAS,CAAC,UAAlB,uBACI,YAAK,GAAG,CAAEP,SAAV,CAAqB,GAAG,CAAC,YAAzB,EADJ,EADJ,cAII,aAAK,SAAS,CAAC,SAAf,wBACI,WAAI,SAAS,CAAC,OAAd,8BADJ,cAEI,aAAM,SAAS,CAAC,gBAAhB,8FAFJ,cAGI,eAAQ,SAAS,CAAC,8BAAlB,CAAiD,OAAO,CAAEQ,SAA1D,2BAHJ,GAJJ,GATJ,GADJ,EADJ,CAwBH,CAvDD,CAyDA,cAAeJ,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { setLoading, setShowToast } from '../../../redux/common/actions';\nimport colorLogo from '../../../assets/images/ic-logo-yellow.png';\nimport templateImage from '../../../assets/images/lets-go-bg.jpg';\n\nimport storageService from '../../../utils/storageService';\nimport { firebaseLogInWithEmailPassword, loginAnonymously } from '../../../services/firebase';\n\ninterface Propstype {\n    history: any,\n    showModal: boolean,\n    modalUpdateSteps: (data: any) => void,\n    setShowModal: (data: any) => void,\n}\n\nconst LetsGo = (props: Propstype) => {\n    const [isLoad, setImageLoad] = useState(true);\n\n    useEffect(() => { setLoading(true) }, [])\n\n    useEffect(() => {\n        if (!isLoad) { setLoading(false) }\n    }, [isLoad])\n\n    const goToLogin = () => {\n        if (storageService.getItem('jwtToken')) {\n            // const authData = {\n            //     email: storageService.getItem('userInfo')?.email,\n            //     password: '12345678',\n            // }\n            loginAnonymously();\n            // firebaseLogInWithEmailPassword(authData, '', true);\n            props.history?.push({\n                pathname: '/',\n                state: { path: props?.history.location?.pathname }\n            });\n            return\n        }\n        if (props.showModal) {\n            props.setShowModal(!props.showModal);\n            props.modalUpdateSteps(0);\n            return;\n        }\n        props.history.push('/login')\n    }\n\n    return (\n        <div className=\"img_text_wrap\">\n            <figure className=\"full_image\">\n                <img\n                    src={templateImage}\n                    alt=\"template\"\n                    onLoad={() => {\n                        setImageLoad(false)\n                    }}\n                />\n\n                <div className=\"short_info\">\n                    <figure className=\"logo_img\">\n                        <img src={colorLogo} alt=\"Tickt-logo\" />\n                    </figure>\n                    <div className=\"content\">\n                        <h1 className=\"title\">Congratulations!</h1>\n                        <span className=\"show_label msg\">Your account has been created. You are one step closer to growing your business.</span>\n                        <button className=\"fill_btn full_btn btn-effect\" onClick={goToLogin}>Letâ€™s go</button>\n                    </div>\n                </div>\n            </figure>\n        </div>\n    )\n}\n\nexport default LetsGo\n"]},"metadata":{},"sourceType":"module"}