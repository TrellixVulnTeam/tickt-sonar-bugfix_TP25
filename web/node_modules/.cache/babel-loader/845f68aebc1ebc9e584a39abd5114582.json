{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CreateAccount from './components/createAccount';\nimport InitialSignupPage from './components/initialSignupPage';\nimport LetsGo from './components/letsGo';\nimport SelectYourSphere from './components/selectYourSphere';\nimport PhoneNumber from './components/phoneNumber';\nimport VerifyPhoneNumber from './components/verifyPhoneNumber';\nimport CreatePassword from './components/createPassword';\nimport Specialization from './components/specialization';\nimport AlmostDone from './components/almostDone';\nimport AddQualification from './components/addQualification';\nimport AddABN from './components/addABN';\nimport { postSignup, socialSignupLogin } from '../../redux/auth/actions';\nimport AuthParent from '../../common/auth/authParent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA = [{\n  title: 'Welcome to Tickt',\n  subTitle: 'A new marketplace for builders and tradies'\n}, {\n  title: 'Create account'\n}, {\n  title: 'Phone number'\n}, {\n  title: 'Verify your number'\n}, {\n  title: 'Create password'\n}, {\n  title: 'Select the trade you used the most',\n  tradieTitle: 'What is your trade?'\n}, {\n  title: 'What Specialisation?'\n}, {\n  title: 'Almost done',\n  tradieTitle: 'Add qualification'\n}, // { title: 'Add ABN' }\n{\n  title: 'Almost done'\n}];\n\nconst Signup = props => {\n  _s();\n\n  const [steps, setSteps] = useState(0);\n  const [signupData, setSignupData] = useState({\n    firstName: '',\n    mobileNumber: '',\n    email: '',\n    user_image: '',\n    password: '',\n    socialId: '',\n    accountType: '',\n    trade: '',\n    specialization: [],\n    qualification: [],\n    user_type: 0,\n    location: {\n      type: \"Point\",\n      coordinates: [144.9631, -37.8136]\n    } // companyName: '',\n    // position: '',\n    // abn: '',\n\n  });\n  useEffect(() => {\n    // props.callTradeList();\n    var locationNew = {\n      location: {\n        type: \"Point\",\n        coordinates: [144.9631, //long\n        37.8136 //lat\n        ]\n      }\n    };\n\n    const showPosition = position => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      locationNew.location.coordinates[0] = long;\n      locationNew.location.coordinates[1] = lat;\n      setSignupData(prevData => ({ ...prevData,\n        ...locationNew\n      }));\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    }\n  }, []);\n\n  const backButtonHandler = () => {\n    var _props$history, _props$history$locati;\n\n    let minStep = 1;\n    let stateStepsValue = steps;\n\n    if (stateStepsValue === 4) {\n      minStep = 2;\n    }\n\n    if (stateStepsValue === 2 && (props.socialData || ((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.redirect) === \"socialRedirectFromLogin\")) {\n      minStep = 2;\n    }\n\n    if (stateStepsValue === 7 && signupData.user_type === 2) {\n      stateStepsValue = 5;\n    }\n\n    if (stateStepsValue === 5 && signupData.socialId) {\n      minStep = 3;\n    }\n\n    setSteps(stateStepsValue - minStep);\n  };\n\n  const updateSteps = (step, newData) => {\n    var _props$history2, _props$history2$locat, _props$history5, _props$history5$locat;\n\n    var newStep = step;\n\n    if (!signupData.socialId && (props.socialData || ((_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : (_props$history2$locat = _props$history2.location) === null || _props$history2$locat === void 0 ? void 0 : _props$history2$locat.redirect) === \"socialRedirectFromLogin\")) {\n      var _props$history3, _props$history3$locat, _props$history3$locat2, _props$history4, _props$history4$locat, _props$history4$locat2;\n\n      const profile = props.socialData ? props.socialData : (_props$history3 = props.history) === null || _props$history3 === void 0 ? void 0 : (_props$history3$locat = _props$history3.location) === null || _props$history3$locat === void 0 ? void 0 : (_props$history3$locat2 = _props$history3$locat.state) === null || _props$history3$locat2 === void 0 ? void 0 : _props$history3$locat2.profileData;\n      console.log(profile, \"profile updateSteps\", props.history);\n\n      if (props.socialData) {\n        setSignupData(prevData => ({ ...prevData,\n          ...profile\n        }));\n      }\n\n      if ((_props$history4 = props.history) === null || _props$history4 === void 0 ? void 0 : (_props$history4$locat = _props$history4.location) === null || _props$history4$locat === void 0 ? void 0 : (_props$history4$locat2 = _props$history4$locat.state) === null || _props$history4$locat2 === void 0 ? void 0 : _props$history4$locat2.profileData) {\n        setSignupData(prevData => ({ ...prevData,\n          ...profile\n        }));\n      }\n\n      newStep += 1;\n    }\n\n    if (newStep === 1 && (props.socialData || ((_props$history5 = props.history) === null || _props$history5 === void 0 ? void 0 : (_props$history5$locat = _props$history5.location) === null || _props$history5$locat === void 0 ? void 0 : _props$history5$locat.redirect) === \"socialRedirectFromLogin\")) {\n      newStep += 1;\n    }\n\n    if (newStep === 4 && signupData.socialId) {\n      newStep += 1;\n    }\n\n    if (newStep === 5 && signupData.user_type === 2) {\n      newStep += 2;\n    }\n\n    setSteps(newStep);\n\n    if (newData) {\n      setSignupData(prevData => ({ ...prevData,\n        ...newData\n      }));\n    }\n  };\n\n  const onNewAccount = (profileData, socialType) => {\n    console.log('profileData: ', profileData);\n    setSteps(steps + 1);\n    const newProfileData = {\n      firstName: profileData.name,\n      authType: \"signup\",\n      email: profileData.email,\n      accountType: socialType,\n      user_image: (profileData === null || profileData === void 0 ? void 0 : profileData.imageUrl) || '',\n      ...(socialType === 'google' && {\n        socialId: profileData.googleId\n      }),\n      ...(socialType === 'linkedIn' && {\n        socialId: profileData.socialId\n      })\n    };\n    setSignupData(prevData => ({ ...prevData,\n      ...newProfileData\n    }));\n  };\n\n  const onSubmitSignup = async lastStepFields => {\n    var res;\n    const newData = { ...signupData,\n      ...lastStepFields\n    };\n    let data = { ...newData,\n      //company_name: newData.companyName,\n      trade: [newData.trade],\n      user_type: signupData.user_type // deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\n\n    }; //delete data.companyName;\n\n    if (data.user_type === 2) {\n      delete data.trade;\n      delete data.specialization;\n      delete data.qualification;\n    }\n\n    if (signupData.accountType) {\n      delete data.password;\n      res = await socialSignupLogin(data);\n    } else {\n      delete data.socialId;\n      delete data.accountType;\n      res = await postSignup(data);\n    }\n\n    if (res.success) {\n      // firebaseSignUpWithEmailPassword({  //firebase signup with email password\n      //     email: res.result?.email,\n      //     password: '12345678',\n      //     id: res.result?._id,\n      //     fullName: res.result?.firstName,\n      //     user_type: res.result?.user_type\n      // });\n      if (signupData.user_type === 2) {\n        setSteps(8);\n      } else {\n        setSteps(9);\n      }\n    }\n  };\n\n  console.log(\"signupData ==>\", signupData);\n\n  const renderPages = () => {\n    switch (steps) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(InitialSignupPage, {\n          updateSteps: updateSteps,\n          history: props.history,\n          step: steps,\n          showModal: props.showModal,\n          modalUpdateSteps: props.modalUpdateSteps,\n          callTradeList: props.callTradeList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 24\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CreateAccount, {\n          updateSteps: updateSteps,\n          history: props.history,\n          step: steps,\n          data: signupData,\n          onNewAccount: onNewAccount,\n          showModal: props.showModal,\n          setShowModal: props.setShowModal,\n          modalUpdateSteps: props.modalUpdateSteps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 24\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(PhoneNumber, {\n          updateSteps: updateSteps,\n          step: steps,\n          mobileNumber: signupData.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 24\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(VerifyPhoneNumber, {\n          updateSteps: updateSteps,\n          step: steps,\n          mobileNumber: signupData.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 24\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(CreatePassword, {\n          updateSteps: updateSteps,\n          step: steps,\n          password: signupData.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 24\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(SelectYourSphere, {\n          updateSteps: updateSteps,\n          step: steps,\n          tradeListData: props.tradeListData,\n          trade: signupData.trade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 24\n        }, this);\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(Specialization, {\n          updateSteps: updateSteps,\n          step: steps,\n          tradeListData: props.tradeListData,\n          trade: signupData.trade,\n          specialization: signupData.specialization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 24\n        }, this);\n\n      case 7:\n        if (signupData.user_type === 2) {\n          return /*#__PURE__*/_jsxDEV(AlmostDone, {\n            onSubmitSignup: onSubmitSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 28\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(AddQualification, {\n            updateSteps: updateSteps,\n            step: steps,\n            tradeListData: props.tradeListData,\n            trade: signupData.trade,\n            qualification: signupData.qualification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 28\n          }, this);\n        }\n\n      case 8:\n        if (signupData.user_type === 2) {\n          return /*#__PURE__*/_jsxDEV(LetsGo, {\n            history: props.history,\n            showModal: props.showModal,\n            setShowModal: props.setShowModal,\n            modalUpdateSteps: props.modalUpdateSteps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 28\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(AddABN, {\n            onSubmitSignup: onSubmitSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 28\n          }, this);\n        }\n\n      case 9:\n        return /*#__PURE__*/_jsxDEV(LetsGo, {\n          history: props.history,\n          showModal: props.showModal,\n          setShowModal: props.setShowModal,\n          modalUpdateSteps: props.modalUpdateSteps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  const header = DATA[steps];\n  const isSuccess = signupData.user_type === 2 ? steps === 8 : steps === 9;\n  return !isSuccess ? /*#__PURE__*/_jsxDEV(AuthParent, {\n    sliderType: \"login\",\n    backButtonHandler: backButtonHandler,\n    header: header,\n    userType: signupData.user_type,\n    steps: steps,\n    history: props.history,\n    showModal: props.showModal,\n    setShowModal: props.setShowModal,\n    modalUpdateSteps: props.modalUpdateSteps,\n    socialId: signupData.socialId,\n    children: renderPages()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this) : renderPages();\n};\n\n_s(Signup, \"FGiO48UjACo2+4RYB0OfXKRM0aE=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/signup.tsx"],"names":["useState","useEffect","CreateAccount","InitialSignupPage","LetsGo","SelectYourSphere","PhoneNumber","VerifyPhoneNumber","CreatePassword","Specialization","AlmostDone","AddQualification","AddABN","postSignup","socialSignupLogin","AuthParent","DATA","title","subTitle","tradieTitle","Signup","props","steps","setSteps","signupData","setSignupData","firstName","mobileNumber","email","user_image","password","socialId","accountType","trade","specialization","qualification","user_type","location","type","coordinates","locationNew","showPosition","position","lat","coords","latitude","long","longitude","prevData","navigator","geolocation","getCurrentPosition","backButtonHandler","minStep","stateStepsValue","socialData","history","redirect","updateSteps","step","newData","newStep","profile","state","profileData","console","log","onNewAccount","socialType","newProfileData","name","authType","imageUrl","googleId","onSubmitSignup","lastStepFields","res","data","success","renderPages","showModal","modalUpdateSteps","callTradeList","setShowModal","tradeListData","header","isSuccess"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport CreateAccount from './components/createAccount';\nimport InitialSignupPage from './components/initialSignupPage';\nimport LetsGo from './components/letsGo';\nimport SelectYourSphere from './components/selectYourSphere';\nimport PhoneNumber from './components/phoneNumber';\nimport VerifyPhoneNumber from './components/verifyPhoneNumber';\nimport CreatePassword from './components/createPassword';\nimport Specialization from './components/specialization';\nimport AlmostDone from './components/almostDone';\nimport AddQualification from './components/addQualification';\nimport AddABN from './components/addABN';\nimport { postSignup, socialSignupLogin } from '../../redux/auth/actions';\nimport AuthParent from '../../common/auth/authParent';\nimport { firebaseSignUpWithEmailPassword } from '../../services/firebase';\n\ninterface Propstype {\n    history?: any,\n    showModal: boolean,\n    callTradeList: () => void,\n    tradeListData: Array<any>,\n    modalUpdateSteps: (data: any) => void,\n    setShowModal: (data: any) => void,\n    socialData: any,\n}\n\nconst DATA = [\n    { title: 'Welcome to Tickt', subTitle: 'A new marketplace for builders and tradies' },\n    { title: 'Create account' },\n    { title: 'Phone number' },\n    { title: 'Verify your number' },\n    { title: 'Create password' },\n    { title: 'Select the trade you used the most', tradieTitle: 'What is your trade?' },\n    { title: 'What Specialisation?' },\n    { title: 'Almost done', tradieTitle: 'Add qualification' },\n    // { title: 'Add ABN' }\n    { title: 'Almost done' }\n]\n\nconst Signup = (props: Propstype) => {\n    const [steps, setSteps] = useState<number>(0);\n    const [signupData, setSignupData] = useState<any>({\n        firstName: '',\n        mobileNumber: '',\n        email: '',\n        user_image: '',\n        password: '',\n        socialId: '',\n        accountType: '',\n        trade: '',\n        specialization: [],\n        qualification: [],\n        user_type: 0,\n        location: {\n            type: \"Point\",\n            coordinates: [\n                144.9631,\n                -37.8136\n            ]\n        }\n        // companyName: '',\n        // position: '',\n        // abn: '',\n    });\n\n    useEffect(() => {\n        // props.callTradeList();\n        var locationNew: any = {\n            location: {\n                type: \"Point\",\n                coordinates: [\n                    144.9631, //long\n                    37.8136 //lat\n                ]\n            }\n        }\n\n        const showPosition = (position: any) => {\n            const lat = position.coords.latitude;\n            const long = position.coords.longitude;\n            locationNew.location.coordinates[0] = long;\n            locationNew.location.coordinates[1] = lat;\n            setSignupData((prevData: any) => ({ ...prevData, ...locationNew }));\n        }\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition);\n        }\n    }, [])\n\n    const backButtonHandler = () => {\n        let minStep = 1;\n        let stateStepsValue = steps;\n        if (stateStepsValue === 4) {\n            minStep = 2;\n        }\n        if (stateStepsValue === 2 && (props.socialData || props.history?.location?.redirect === \"socialRedirectFromLogin\")) {\n            minStep = 2;\n        }\n        if (stateStepsValue === 7 && signupData.user_type === 2) {\n            stateStepsValue = 5;\n        }\n        if (stateStepsValue === 5 && signupData.socialId) {\n            minStep = 3;\n        }\n        setSteps(stateStepsValue - minStep);\n    }\n\n    const updateSteps = (step: number, newData?: any) => {\n        var newStep = step;\n        if (!signupData.socialId && (props.socialData || props.history?.location?.redirect === \"socialRedirectFromLogin\")) {\n            const profile = props.socialData ? props.socialData : props.history?.location?.state?.profileData;\n            console.log(profile, \"profile updateSteps\", props.history)\n            if (props.socialData) {\n                setSignupData((prevData: any) => ({ ...prevData, ...profile }))\n            }\n            if (props.history?.location?.state?.profileData) {\n                setSignupData((prevData: any) => ({ ...prevData, ...profile }))\n            }\n            newStep += 1;\n        }\n        if (newStep === 1 && (props.socialData || props.history?.location?.redirect === \"socialRedirectFromLogin\")) {\n            newStep += 1;\n        }\n        if (newStep === 4 && signupData.socialId) {\n            newStep += 1;\n        }\n        if (newStep === 5 && signupData.user_type === 2) {\n            newStep += 2;\n        }\n        setSteps(newStep);\n        if (newData) {\n            setSignupData((prevData: any) => ({ ...prevData, ...newData }))\n        }\n    }\n\n    const onNewAccount = (profileData: any, socialType: string) => {\n        console.log('profileData: ', profileData);\n        setSteps(steps + 1);\n        const newProfileData = {\n            firstName: profileData.name,\n            authType: \"signup\",\n            email: profileData.email,\n            accountType: socialType,\n            user_image: profileData?.imageUrl || '', \n            ...(socialType === 'google' && { socialId: profileData.googleId }),\n            ...(socialType === 'linkedIn' && { socialId: profileData.socialId })\n        }\n        setSignupData((prevData: any) => ({ ...prevData, ...newProfileData }))\n    }\n\n    const onSubmitSignup = async (lastStepFields: any) => {\n        var res: any;\n        const newData = { ...signupData, ...lastStepFields };\n        let data = {\n            ...newData,\n            //company_name: newData.companyName,\n            trade: [newData.trade],\n            user_type: signupData.user_type,\n            // deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\n        }\n        //delete data.companyName;\n        if (data.user_type === 2) {\n            delete data.trade;\n            delete data.specialization;\n            delete data.qualification;\n        }\n        if (signupData.accountType) {\n            delete data.password;\n            res = await socialSignupLogin(data);\n        } else {\n            delete data.socialId;\n            delete data.accountType;\n            res = await postSignup(data);\n        }\n        if (res.success) {\n            // firebaseSignUpWithEmailPassword({  //firebase signup with email password\n            //     email: res.result?.email,\n            //     password: '12345678',\n            //     id: res.result?._id,\n            //     fullName: res.result?.firstName,\n            //     user_type: res.result?.user_type\n            // });\n            if (signupData.user_type === 2) {\n                setSteps(8);\n            } else {\n                setSteps(9)\n            }\n        }\n    }\n\n    console.log(\"signupData ==>\", signupData)\n\n    const renderPages = () => {\n        switch (steps) {\n            case 0:\n                return <InitialSignupPage updateSteps={updateSteps} history={props.history} step={steps} showModal={props.showModal} modalUpdateSteps={props.modalUpdateSteps} callTradeList={props.callTradeList} />\n            case 1:\n                return <CreateAccount updateSteps={updateSteps} history={props.history} step={steps} data={signupData} onNewAccount={onNewAccount} showModal={props.showModal} setShowModal={props.setShowModal} modalUpdateSteps={props.modalUpdateSteps} />\n            case 2:\n                return <PhoneNumber updateSteps={updateSteps} step={steps} mobileNumber={signupData.mobileNumber} />\n            case 3:\n                return <VerifyPhoneNumber updateSteps={updateSteps} step={steps} mobileNumber={signupData.mobileNumber} />\n            case 4:\n                return <CreatePassword updateSteps={updateSteps} step={steps} password={signupData.password} />\n            case 5:\n                return <SelectYourSphere updateSteps={updateSteps} step={steps} tradeListData={props.tradeListData} trade={signupData.trade} />\n            case 6:\n                return <Specialization updateSteps={updateSteps} step={steps} tradeListData={props.tradeListData} trade={signupData.trade} specialization={signupData.specialization} />\n            case 7:\n                if (signupData.user_type === 2) {\n                    return <AlmostDone onSubmitSignup={onSubmitSignup} />\n                } else {\n                    return <AddQualification updateSteps={updateSteps} step={steps} tradeListData={props.tradeListData} trade={signupData.trade} qualification={signupData.qualification} />\n                }\n            case 8:\n                if (signupData.user_type === 2) {\n                    return <LetsGo history={props.history} showModal={props.showModal} setShowModal={props.setShowModal} modalUpdateSteps={props.modalUpdateSteps} />\n                } else {\n                    return <AddABN onSubmitSignup={onSubmitSignup} />\n                }\n            case 9:\n                return <LetsGo history={props.history} showModal={props.showModal} setShowModal={props.setShowModal} modalUpdateSteps={props.modalUpdateSteps} />\n            default:\n                return null\n        }\n    }\n\n    const header = DATA[steps];\n    const isSuccess = signupData.user_type === 2 ? steps === 8 : steps === 9;\n\n    return !isSuccess ? (\n        <AuthParent sliderType='login' backButtonHandler={backButtonHandler} header={header} userType={signupData.user_type} steps={steps} history={props.history} showModal={props.showModal} setShowModal={props.setShowModal} modalUpdateSteps={props.modalUpdateSteps} socialId={signupData.socialId} >{renderPages()}</AuthParent>\n    ) : renderPages()\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}