{"ast":null,"code":"import _toConsumableArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import{NavLink,useHistory}from\"react-router-dom\";import InfiniteScroll from\"react-infinite-scroll-component\";import dummy from\"../../../assets/images/u_placeholder.jpg\";import noDataFound from\"../../../assets/images/no-search-data.png\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewJobs=function NewJobs(_ref){var loading=_ref.loading,getNewJobList=_ref.getNewJobList,newJobList=_ref.newJobList,newJobsCount=_ref.newJobsCount,resetNewJobList=_ref.resetNewJobList;var history=useHistory();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),jobList=_useState2[0],setJobList=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),pageNo=_useState4[0],setPageNo=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),hasMoreItems=_useState6[0],setHasMoreItems=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isLoad=_useState8[0],setIsLoad=_useState8[1];var totalJobsCount=newJobsCount;console.log(totalJobsCount,\"totalJobsCount\",jobList,\"jobList\",hasMoreItems,\"hasMoreItems\");useEffect(function(){callJobList();return function(){return resetNewJobList();};},[]);var callJobList=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// if (newJobsCount && jobList.length >= totalJobsCount) {\n//   setHasMoreItems(false);\n//   return;\n// }\ngetNewJobList(pageNo);case 1:case\"end\":return _context.stop();}}},_callee);}));return function callJobList(){return _ref2.apply(this,arguments);};}();useEffect(function(){if((newJobList===null||newJobList===void 0?void 0:newJobList.length)||Array.isArray(newJobList)){var allJobs=[].concat(_toConsumableArray(jobList),_toConsumableArray(newJobList));console.log(jobList,\"jobList\",newJobList,\"props.newJobList\",allJobs,\"allJobs\");setJobList(allJobs);setIsLoad(false);setPageNo(pageNo+1);if(newJobList.length<10){setHasMoreItems(false);}resetNewJobList();}},[newJobList]);return/*#__PURE__*/_jsx(\"div\",{className:\"detail_col\",children:/*#__PURE__*/_jsxs(InfiniteScroll,{dataLength:jobList.length,next:callJobList,style:{overflowX:\"hidden\"},hasMore:hasMoreItems,loader:/*#__PURE__*/_jsx(_Fragment,{}),children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"New Jobs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:!isLoad&&!loading&&jobList.length?jobList.map(function(_ref3){var jobId=_ref3.jobId,tradeId=_ref3.tradeId,specializationId=_ref3.specializationId,tradeSelectedUrl=_ref3.tradeSelectedUrl,jobName=_ref3.jobName,tradeName=_ref3.tradeName,jobDescription=_ref3.jobDescription,time=_ref3.time,amount=_ref3.amount,locationName=_ref3.locationName,durations=_ref3.durations,viewersCount=_ref3.viewersCount,questionsCount=_ref3.questionsCount,builderName=_ref3.builderName,builderImage=_ref3.builderImage;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(NavLink,{to:\"/job-details-page?jobId=\".concat(jobId,\"&redirect_from=jobs&jobAction=invite\"),className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img\",children:/*#__PURE__*/_jsx(\"img\",{src:builderImage||dummy,alt:\"\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:jobName}),/*#__PURE__*/_jsx(\"span\",{className:\"prof\",children:builderName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon clock\",children:time}),/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"icon location line-1\",children:locationName}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:durations})]})}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para line-2\",children:jobDescription}),/*#__PURE__*/_jsxs(\"ul\",{className:\"count_wrap\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon view\",children:viewersCount}),/*#__PURE__*/_jsx(\"li\",{className:\"icon comment\",children:questionsCount})]})]})});}):!isLoad&&!loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noDataFound,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"No Data Found\"})]})// <div className=\"no_record  m-t-vh\">\n//   <figure>\n//     <figure className=\"no_img\">\n//       <img src={newJobs} alt=\"data not found\" />\n//     </figure>\n//   </figure>\n//   <span className=\"empty_screen_text\">\n//     You don't have any new job yet\n//   </span>\n//   <button\n//     className=\"empty_screen_button\"\n//     onClick={() => history.push(\"/\")}\n//   >\n//     View recommened jobs\n//   </button>\n// </div>\n})]})});};export default NewJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/newJobs.tsx"],"names":["useState","useEffect","NavLink","useHistory","InfiniteScroll","dummy","noDataFound","NewJobs","loading","getNewJobList","newJobList","newJobsCount","resetNewJobList","history","jobList","setJobList","pageNo","setPageNo","hasMoreItems","setHasMoreItems","isLoad","setIsLoad","totalJobsCount","console","log","callJobList","length","Array","isArray","allJobs","overflowX","map","jobId","tradeId","specializationId","tradeSelectedUrl","jobName","tradeName","jobDescription","time","amount","locationName","durations","viewersCount","questionsCount","builderName","builderImage","e","target","onerror","src"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport newJobs from \"../../../assets/images/newJobs.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\ninterface Proptypes {\n  loading: boolean;\n  newJobsCount: number;\n  newJobList: any;\n  getNewJobList: (page: number) => void;\n  resetNewJobList: () => void;\n}\n\nconst NewJobs = ({\n  loading,\n  getNewJobList,\n  newJobList,\n  newJobsCount,\n  resetNewJobList,\n}: Proptypes) => {\n  const history = useHistory();\n  const [jobList, setJobList] = useState<Array<any>>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n  const [isLoad, setIsLoad] = useState(true);\n\n  let totalJobsCount: number = newJobsCount;\n  console.log(\n    totalJobsCount,\n    \"totalJobsCount\",\n    jobList,\n    \"jobList\",\n    hasMoreItems,\n    \"hasMoreItems\"\n  );\n\n  useEffect(() => {\n    callJobList();\n\n    return () => resetNewJobList();\n  }, []);\n\n  const callJobList = async () => {\n    // if (newJobsCount && jobList.length >= totalJobsCount) {\n    //   setHasMoreItems(false);\n    //   return;\n    // }\n    getNewJobList(pageNo);\n  };\n\n  useEffect(() => {\n    if (newJobList?.length || Array.isArray(newJobList)) {\n      const allJobs = [...jobList, ...newJobList];\n      console.log(\n        jobList,\n        \"jobList\",\n        newJobList,\n        \"props.newJobList\",\n        allJobs,\n        \"allJobs\"\n      );\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n      if (newJobList.length < 10) {\n        setHasMoreItems(false);\n      }\n      resetNewJobList();\n    }\n  }, [newJobList]);\n\n  return (\n    <div className=\"detail_col\">\n      <InfiniteScroll\n        dataLength={jobList.length}\n        next={callJobList}\n        style={{ overflowX: \"hidden\" }}\n        hasMore={hasMoreItems}\n        loader={<></>}\n      >\n        <span className=\"sub_title\">New Jobs</span>\n        <div className=\"flex_row tradies_row\">\n          {!isLoad && !loading && jobList.length\n            ? jobList.map(\n                ({\n                  jobId,\n                  tradeId,\n                  specializationId,\n                  tradeSelectedUrl,\n                  jobName,\n                  tradeName,\n                  jobDescription,\n                  time,\n                  amount,\n                  locationName,\n                  durations,\n                  viewersCount,\n                  questionsCount,\n                  builderName,\n                  builderImage,\n                }) => (\n                  <div className=\"flex_col_sm_6\">\n                    <div\n                      className=\"tradie_card\"\n                      data-aos=\"fade-in\"\n                      data-aos-delay=\"250\"\n                      data-aos-duration=\"1000\"\n                    >\n                      <NavLink\n                        to={`/job-details-page?jobId=${jobId}&redirect_from=jobs&jobAction=invite`}\n                        className=\"more_detail circle\"\n                      ></NavLink>\n                      <div className=\"user_wrap\">\n                        <figure className=\"u_img\">\n                          <img\n                            src={builderImage || dummy}\n                            alt=\"\"\n                            onError={(e: any) => {\n                              if (e?.target?.onerror) {\n                                e.target.onerror = null;\n                              }\n                              if (e?.target?.src) {\n                                e.target.src = dummy;\n                              }\n                            }}\n                          />\n                        </figure>\n                        <div className=\"details\">\n                          <span className=\"name\">{jobName}</span>\n                          <span className=\"prof\">{builderName}</span>\n                        </div>\n                      </div>\n                      <div className=\"job_info\">\n                        <ul>\n                          <li className=\"icon clock\">{time}</li>\n                          <li className=\"icon dollar\">{amount}</li>\n                          <li className=\"icon location line-1\">\n                            {locationName}\n                          </li>\n                          <li className=\"icon calendar\">{durations}</li>\n                        </ul>\n                      </div>\n                      <p className=\"commn_para line-2\">{jobDescription}</p>\n                      <ul className=\"count_wrap\">\n                        <li className=\"icon view\">{viewersCount}</li>\n                        <li className=\"icon comment\">{questionsCount}</li>\n                      </ul>\n                    </div>\n                  </div>\n                )\n              )\n            : !isLoad &&\n              !loading && (\n                <div className=\"no_record  m-t-vh\">\n                  <figure className=\"no_img\">\n                    <img src={noDataFound} alt=\"data not found\" />\n                  </figure>\n                  <span>{\"No Data Found\"}</span>\n                </div>\n                // <div className=\"no_record  m-t-vh\">\n                //   <figure>\n                //     <figure className=\"no_img\">\n                //       <img src={newJobs} alt=\"data not found\" />\n                //     </figure>\n                //   </figure>\n\n                //   <span className=\"empty_screen_text\">\n                //     You don't have any new job yet\n                //   </span>\n                //   <button\n                //     className=\"empty_screen_button\"\n                //     onClick={() => history.push(\"/\")}\n                //   >\n                //     View recommened jobs\n                //   </button>\n                // </div>\n              )}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default NewJobs;\n"]},"metadata":{},"sourceType":"module"}