{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/bankingDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport storageService from \"../../../utils/storageService\";\nimport Modal from \"@material-ui/core/Modal\";\nimport DigitalIdVerification from \"./digitalIdVerification\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport verifiedIcon from \"../../../assets/images/checked-2.png\";\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst digitalInfoPoints = [\"Passport\", \"Driver Licence (Driver's license) - scans of front and back are required\", \"Photo Card - scans of front and back are required\", \"New South Wales Driving Instructor Licence - scans of front and back are required\", \"Tasmanian Government Personal Information Card - scans of front and back are required\", \"ImmiCard - scans of front and back are required\", \"Proof of Age card - scans of front and back are required\", \"Australian Defence Force (ADF) identification card (Military ID) - scans of front and back are required\"];\n\nconst BankingDetails = ({\n  getBankDetails,\n  addBankDetails,\n  updateBankDetails,\n  bankDetails\n}) => {\n  _s();\n\n  var _data$account_name2, _bankDetails$account_;\n\n  const [data, setData] = useState({\n    accountVerified: false,\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n    stripeAccountId: \"\"\n  });\n  const [errors, setErrors] = useState({\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\"\n  });\n  const [submitClicked, setSubmitClicked] = useState(false);\n  const [digitalIdInfo, setDigitalIdInfo] = useState(false);\n  const [idVerifClicked, setIdVerifClicked] = useState(false);\n  const errorLabel = {\n    account_number: \"Account Number\",\n    account_name: \"Account Name\",\n    bsb_number: \"BSB Number\"\n  };\n  useEffect(() => {\n    getBankDetails();\n  }, [getBankDetails]);\n  useEffect(() => {\n    setData(Object.keys(bankDetails).length ? bankDetails : {\n      accountVerified: false,\n      account_name: \"\",\n      account_number: \"\",\n      bsb_number: \"\",\n      stripeAccountId: \"\"\n    });\n  }, [bankDetails]);\n\n  const validate = (name, value) => {\n    if (value && !value.trimLeft()) {\n      return `${errorLabel[name]} is required`;\n    } // return value.replace(/[^a-z0-9]+/gi, '').replace(/(.{4})/g, '$1 ');\n\n\n    switch (name) {\n      case \"account_number\":\n        return value.length > 10 ? \"Maximum 10 digits are allowed\" : value.length < 6 ? \"Minimum 6 digits are required\" : \"\";\n\n      case \"bsb_number\":\n        return !/^\\d{3}-\\d{3}$/.test(value) ? \"Please enter valid BSB Number like 123-444\" : \"\";\n    }\n\n    return \"\";\n  };\n\n  const [input, setInput] = useState();\n\n  function transform({\n    target\n  }) {\n    // let regex = [0 - 9] + (-[0 - 9] +) + $;\n    setInput(target.value);\n\n    if (target.value.length === 5 && target.value.includes(\"-\")) {\n      setInput(target.value.replace(\"-\", \"\"));\n    }\n\n    if (target.value.length === 4) {\n      setInput(target.value + \"-\");\n    }\n  }\n\n  const handleChange = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setData(prevData => ({ ...prevData,\n      [name]: value === null || value === void 0 ? void 0 : value.trimLeft()\n    }));\n\n    if (submitClicked) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        [name]: validate(name, value)\n      }));\n    }\n  };\n\n  const handleSave = () => {\n    var _data$account_name;\n\n    if (!submitClicked) {\n      setSubmitClicked(true);\n    }\n\n    const hasErrors = Object.keys(data).reduce((prevValue, name) => {\n      const error = validate(name, data[name]);\n      setErrors(prevErrors => ({ ...prevErrors,\n        [name]: error\n      }));\n      return prevValue || error;\n    }, \"\");\n    const updatedBankDetails = {\n      account_name: (_data$account_name = data.account_name) === null || _data$account_name === void 0 ? void 0 : _data$account_name.trim(),\n      account_number: data.account_number,\n      bsb_number: data.bsb_number\n    };\n\n    if (!hasErrors) {\n      if (bankDetails.userId) {\n        updateBankDetails({\n          userId: data.userId,\n          ...updatedBankDetails\n        });\n      } else {\n        addBankDetails(updatedBankDetails);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp()\n        };\n        moengage.moE_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n      }\n    }\n  };\n\n  const masks = {\n    cpf: [/\\d/, /\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/],\n    cnpj: [/\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, \".\", /\\d/, /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/],\n    phone: [\"(\", /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/],\n    cep: [/\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/],\n    cardNumber: [/\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/],\n    cardNumberAmex: [/\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n    cardNumberHipercard: [/\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, \" \", /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n    cardCVC: [/\\d/, /\\d/, /\\d/],\n    cardCVCAmex: [/\\d/, /\\d/, /\\d/, /\\d/],\n    date: [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/],\n    registration: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/],\n    cardExpireDate: [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/]\n  };\n  const userType = storageService.getItem(\"userType\");\n  const updated = ((_data$account_name2 = data.account_name) === null || _data$account_name2 === void 0 ? void 0 : _data$account_name2.trim()) !== ((_bankDetails$account_ = bankDetails.account_name) === null || _bankDetails$account_ === void 0 ? void 0 : _bankDetails$account_.trim()) || data.account_number !== bankDetails.account_number || data.bsb_number !== bankDetails.bsb_number;\n  return idVerifClicked ? /*#__PURE__*/_jsxDEV(DigitalIdVerification, {\n    setIdVerifClicked: setIdVerifClicked,\n    stripeAccountId: data.stripeAccountId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_8\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Payment details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"info_note\",\n        children: userType === 1 ? \"Enter your Bank account details\" : \"Enter your card details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Account Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Account Name\",\n            name: \"account_name\",\n            value: data.account_name,\n            onChange: handleChange,\n            maxLength: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.account_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"BSB Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: [console.log(data.bsb_number, \"12@@@@@@@@@@@@\"), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onKeyUp: transform,\n            placeholder: \"Enter BSB Number\",\n            name: \"bsb_number\",\n            value: data.bsb_number,\n            onChange: handleChange,\n            maxLength: 7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.bsb_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter Account Number\",\n            name: \"account_number\",\n            value: data.account_number,\n            onChange: handleChange,\n            maxLength: 10,\n            max: 9999999999\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errors.account_number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), data.account_name && data.account_number && data.bsb_number && data.stripeAccountId && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_grey_btn full_btn btn-effect id_verified\",\n            onClick: () => {\n              if (data === null || data === void 0 ? void 0 : data.accountVerified) return;\n              setIdVerifClicked(true);\n            },\n            children: [(data === null || data === void 0 ? void 0 : data.accountVerified) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: verifiedIcon,\n              alt: \"verified\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this), `${(data === null || data === void 0 ? void 0 : data.accountVerified) ? \"ID Verified\" : \"Add ID Verification\"}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label id_info\",\n          onClick: () => setDigitalIdInfo(true),\n          children: \"ID verification is required as part of Stripe ID verification process.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `fill_btn full_btn btn-effect${!updated ? \" disabled\" : \"\"}`,\n        onClick: handleSave,\n        children: \"Save changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"custom_modal\",\n      open: digitalIdInfo,\n      onClose: () => setDigitalIdInfo(false),\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_wh profile_modal\",\n        \"data-aos\": \"zoom-in\",\n        \"data-aos-delay\": \"30\",\n        \"data-aos-duration\": \"1000\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"ID verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close_btn\",\n            onClick: () => setDigitalIdInfo(false),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancel,\n              alt: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner_wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: \"ID verification is required as part of Stripe ID verification process.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: \"Below is a spansting of documents that can accept as proof of identity, address, and entity.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"verificationid_list\",\n            children: digitalInfoPoints.map((info, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"show_label\",\n              children: info\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bottom_btn custom_btn center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect`,\n              onClick: () => setDigitalIdInfo(false),\n              children: \"Ok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BankingDetails, \"dhhi+JhqJUSEzS3UXL7X3S10SAs=\");\n\n_c = BankingDetails;\nexport default BankingDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankingDetails\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/bankingDetails.tsx"],"names":["useEffect","useState","storageService","Modal","DigitalIdVerification","cancel","verifiedIcon","moengage","mixPanel","MoEConstants","digitalInfoPoints","BankingDetails","getBankDetails","addBankDetails","updateBankDetails","bankDetails","data","setData","accountVerified","account_name","account_number","bsb_number","stripeAccountId","errors","setErrors","submitClicked","setSubmitClicked","digitalIdInfo","setDigitalIdInfo","idVerifClicked","setIdVerifClicked","errorLabel","Object","keys","length","validate","name","value","trimLeft","test","input","setInput","transform","target","includes","replace","handleChange","prevData","prevErrors","handleSave","hasErrors","reduce","prevValue","error","updatedBankDetails","trim","userId","mData","timeStamp","getCurrentTimeStamp","moE_SendEvent","ADDED_PAYMENT_DETAILS","mixP_SendEvent","masks","cpf","cnpj","phone","cep","cardNumber","cardNumberAmex","cardNumberHipercard","cardCVC","cardCVCAmex","date","registration","cardExpireDate","userType","getItem","updated","console","log","map","info","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport storageService from \"../../../utils/storageService\";\nimport Modal from \"@material-ui/core/Modal\";\nimport DigitalIdVerification from \"./digitalIdVerification\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport verifiedIcon from \"../../../assets/images/checked-2.png\";\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\n\ninterface BankDetails {\n  userId: string;\n  account_name: string;\n  account_number: string;\n  bsb_number: string;\n  accountVerified: boolean;\n  stripeAccountId: string;\n}\n\ninterface Props {\n  getBankDetails: () => void;\n  addBankDetails: (data: any) => void;\n  updateBankDetails: (data: any) => void;\n  bankDetails: BankDetails;\n}\n\nconst digitalInfoPoints: Array<string> = [\n  \"Passport\",\n  \"Driver Licence (Driver's license) - scans of front and back are required\",\n  \"Photo Card - scans of front and back are required\",\n  \"New South Wales Driving Instructor Licence - scans of front and back are required\",\n  \"Tasmanian Government Personal Information Card - scans of front and back are required\",\n  \"ImmiCard - scans of front and back are required\",\n  \"Proof of Age card - scans of front and back are required\",\n  \"Australian Defence Force (ADF) identification card (Military ID) - scans of front and back are required\",\n];\n\nconst BankingDetails = ({\n  getBankDetails,\n  addBankDetails,\n  updateBankDetails,\n  bankDetails,\n}: Props) => {\n  const [data, setData] = useState<any>({\n    accountVerified: false,\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n    stripeAccountId: \"\",\n  });\n  const [errors, setErrors] = useState({\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n  });\n  const [submitClicked, setSubmitClicked] = useState<boolean>(false);\n  const [digitalIdInfo, setDigitalIdInfo] = useState<boolean>(false);\n  const [idVerifClicked, setIdVerifClicked] = useState<boolean>(false);\n\n  const errorLabel = {\n    account_number: \"Account Number\",\n    account_name: \"Account Name\",\n    bsb_number: \"BSB Number\",\n  } as { [key: string]: string };\n\n  useEffect(() => {\n    getBankDetails();\n  }, [getBankDetails]);\n\n  useEffect(() => {\n    setData(\n      Object.keys(bankDetails).length\n        ? bankDetails\n        : {\n            accountVerified: false,\n            account_name: \"\",\n            account_number: \"\",\n            bsb_number: \"\",\n            stripeAccountId: \"\",\n          }\n    );\n  }, [bankDetails]);\n\n  const validate = (name: string, value: string) => {\n    if (value && !value.trimLeft()) {\n      return `${errorLabel[name]} is required`;\n    }\n    // return value.replace(/[^a-z0-9]+/gi, '').replace(/(.{4})/g, '$1 ');\n\n    switch (name) {\n      case \"account_number\":\n        return value.length > 10\n          ? \"Maximum 10 digits are allowed\"\n          : value.length < 6\n          ? \"Minimum 6 digits are required\"\n          : \"\";\n      case \"bsb_number\":\n        return !/^\\d{3}-\\d{3}$/.test(value)\n          ? \"Please enter valid BSB Number like 123-444\"\n          : \"\";\n    }\n\n    return \"\";\n  };\n  const [input, setInput] = useState<any>();\n  function transform({ target }: any) {\n    // let regex = [0 - 9] + (-[0 - 9] +) + $;\n    setInput(target.value);\n    if (target.value.length === 5 && target.value.includes(\"-\")) {\n      setInput(target.value.replace(\"-\", \"\"));\n    }\n    if (target.value.length === 4) {\n      setInput(target.value + \"-\");\n    }\n  }\n\n  const handleChange = ({ target: { name, value } }: any) => {\n    setData((prevData: any) => ({\n      ...prevData,\n      [name]: value?.trimLeft(),\n    }));\n\n    if (submitClicked) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: validate(name, value),\n      }));\n    }\n  };\n\n  const handleSave = () => {\n    if (!submitClicked) {\n      setSubmitClicked(true);\n    }\n\n    const hasErrors = Object.keys(data).reduce((prevValue, name) => {\n      const error = validate(name, data[name]);\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: error,\n      }));\n\n      return prevValue || error;\n    }, \"\");\n\n    const updatedBankDetails = {\n      account_name: data.account_name?.trim(),\n      account_number: data.account_number,\n      bsb_number: data.bsb_number,\n    };\n    if (!hasErrors) {\n      if (bankDetails.userId) {\n        updateBankDetails({\n          userId: data.userId,\n          ...updatedBankDetails,\n        });\n      } else {\n        addBankDetails(updatedBankDetails);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        };\n        moengage.moE_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n      }\n    }\n  };\n  const masks = {\n    cpf: [\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \".\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \".\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \"-\",\n      /\\d/,\n      /\\d/,\n    ],\n    cnpj: [\n      /\\d/,\n      /\\d/,\n      \".\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \".\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \"/\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \"-\",\n      /\\d/,\n      /\\d/,\n    ],\n    phone: [\n      \"(\",\n      /\\d/,\n      /\\d/,\n      \")\",\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \"-\",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n    ],\n    cep: [/\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/],\n    cardNumber: [\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n    ],\n    cardNumberAmex: [\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n    ],\n    cardNumberHipercard: [\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      \" \",\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n      /\\d/,\n    ],\n    cardCVC: [/\\d/, /\\d/, /\\d/],\n    cardCVCAmex: [/\\d/, /\\d/, /\\d/, /\\d/],\n    date: [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/],\n    registration: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/],\n    cardExpireDate: [/\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/],\n  };\n  const userType = storageService.getItem(\"userType\");\n  const updated =\n    data.account_name?.trim() !== bankDetails.account_name?.trim() ||\n    data.account_number !== bankDetails.account_number ||\n    data.bsb_number !== bankDetails.bsb_number;\n\n  return idVerifClicked ? (\n    <DigitalIdVerification\n      setIdVerifClicked={setIdVerifClicked}\n      stripeAccountId={data.stripeAccountId}\n    />\n  ) : (\n    <div className=\"flex_row\">\n      <div className=\"flex_col_sm_8\">\n        <span className=\"sub_title\">Payment details</span>\n        <span className=\"info_note\">\n          {userType === 1\n            ? \"Enter your Bank account details\"\n            : \"Enter your card details\"}\n        </span>\n        <div className=\"form_field\">\n          <label className=\"form_label\">Account Name</label>\n          <div className=\"text_field\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Account Name\"\n              name=\"account_name\"\n              value={data.account_name}\n              onChange={handleChange}\n              maxLength={50}\n            />\n          </div>\n          <span className=\"error_msg\">{errors.account_name}</span>\n        </div>\n        <div className=\"form_field\">\n          <label className=\"form_label\">BSB Number</label>\n\n          <div className=\"text_field\">\n            {console.log(data.bsb_number, \"12@@@@@@@@@@@@\")}\n            <input\n              type=\"text\"\n              onKeyUp={transform}\n              placeholder=\"Enter BSB Number\"\n              name=\"bsb_number\"\n              value={data.bsb_number}\n              onChange={handleChange}\n              maxLength={7}\n            />\n          </div>\n          <span className=\"error_msg\">{errors.bsb_number}</span>\n        </div>\n        <div className=\"form_field\">\n          <label className=\"form_label\">Account Number</label>\n          <div className=\"text_field\">\n            <input\n              type=\"number\"\n              placeholder=\"Enter Account Number\"\n              name=\"account_number\"\n              value={data.account_number}\n              onChange={handleChange}\n              maxLength={10}\n              max={9999999999}\n            />\n          </div>\n          <span className=\"error_msg\">{errors.account_number}</span>\n        </div>\n\n        {data.account_name &&\n          data.account_number &&\n          data.bsb_number &&\n          data.stripeAccountId && (\n            <>\n              <div className=\"form_field\">\n                <button\n                  className=\"fill_grey_btn full_btn btn-effect id_verified\"\n                  onClick={() => {\n                    if (data?.accountVerified) return;\n                    setIdVerifClicked(true);\n                  }}\n                >\n                  {data?.accountVerified && (\n                    <img src={verifiedIcon} alt=\"verified\" />\n                  )}\n                  {`${\n                    data?.accountVerified\n                      ? \"ID Verified\"\n                      : \"Add ID Verification\"\n                  }`}\n                </button>\n              </div>\n              <span\n                className=\"show_label id_info\"\n                onClick={() => setDigitalIdInfo(true)}\n              >\n                ID verification is required as part of Stripe ID verification\n                process.\n              </span>\n            </>\n          )}\n\n        <button\n          className={`fill_btn full_btn btn-effect${\n            !updated ? \" disabled\" : \"\"\n          }`}\n          onClick={handleSave}\n        >\n          Save changes\n        </button>\n      </div>\n\n      <Modal\n        className=\"custom_modal\"\n        open={digitalIdInfo}\n        onClose={() => setDigitalIdInfo(false)}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div\n          className=\"custom_wh profile_modal\"\n          data-aos=\"zoom-in\"\n          data-aos-delay=\"30\"\n          data-aos-duration=\"1000\"\n        >\n          <div className=\"heading\">\n            <span className=\"sub_title\">ID verification</span>\n            <button\n              className=\"close_btn\"\n              onClick={() => setDigitalIdInfo(false)}\n            >\n              <img src={cancel} alt=\"cancel\" />\n            </button>\n          </div>\n          <div className=\"inner_wrap\">\n            <span className=\"show_label\">\n              ID verification is required as part of Stripe ID verification\n              process.\n            </span>\n            <span className=\"show_label\">\n              Below is a spansting of documents that can accept as proof of\n              identity, address, and entity.\n            </span>\n            <ul className=\"verificationid_list\">\n              {digitalInfoPoints.map((info, index) => (\n                <li className=\"show_label\" key={index}>\n                  {info}\n                </li>\n              ))}\n            </ul>\n            <div className=\"bottom_btn custom_btn center\">\n              <button\n                className={`fill_btn full_btn btn-effect`}\n                onClick={() => setDigitalIdInfo(false)}\n              >\n                Ok\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BankingDetails;\n"]},"metadata":{},"sourceType":"module"}