{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/routes/privateRoute.tsx\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport storageService from \"../utils/storageService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  authRoute,\n  ...rest\n}) => {\n  const token = storageService.getItem('jwtToken') ? storageService.getItem('jwtToken') : storageService.getItem('guestToken');\n  const routeScreen = authRoute ? !token : token;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => routeScreen ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: authRoute ? \"/\" : \"/signup\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/routes/privateRoute.tsx"],"names":["Route","Redirect","storageService","PrivateRoute","component","Component","authRoute","rest","token","getItem","routeScreen","props","pathname","state","from","location"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,SAAxB;AAAmC,KAAGC;AAAtC,CAAD,KAAuD;AAC1E,QAAMC,KAAK,GAAGN,cAAc,CAACO,OAAf,CAAuB,UAAvB,IAAqCP,cAAc,CAACO,OAAf,CAAuB,UAAvB,CAArC,GAA0EP,cAAc,CAACO,OAAf,CAAuB,YAAvB,CAAxF;AACA,QAAMC,WAAW,GAAGJ,SAAS,GAAG,CAACE,KAAJ,GAAYA,KAAzC;AACA,sBACE,QAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAEI,KAAK,IACXD,WAAW,gBACT,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAEN,SAAS,GAAG,GAAH,GAAS,SAD1B;AAEFO,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApBD;;KAAMZ,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { Route, Redirect } from \"react-router-dom\";\nimport storageService from \"../utils/storageService\";\n\nconst PrivateRoute = ({ component: Component, authRoute, ...rest }: any) => {\n  const token = storageService.getItem('jwtToken') ? storageService.getItem('jwtToken') : storageService.getItem('guestToken');\n  const routeScreen = authRoute ? !token : token;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        routeScreen ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: authRoute ? \"/\" : \"/signup\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}