{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/common/tradieBannerSearch/tradieBannerSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Constants, { MoEConstants } from \"../../utils/constants\";\nimport { useDetectClickOutside } from \"react-detect-click-outside\";\nimport { deleteRecentSearch } from \"../../redux/homeSearch/actions\";\nimport { setShowToast } from \"../../redux/common/actions\"; // @ts-ignore\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\"; // @ts-ignore\n\nimport { format, differenceInCalendarYears } from \"date-fns\"; // @ts-ignore\n\nimport moment from \"moment\"; // @ts-ignore\n\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\";\nimport \"react-date-range/dist/theme/default.css\";\nimport Geocode from \"react-geocode\";\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"au\");\n\nconst TradieBannerSearch = props => {\n  _s();\n\n  var _props$history3, _props$history3$locat, _stateData$searchedJo, _props$recentLocation, _props$recentLocation2;\n\n  const {\n    paramsData\n  } = props;\n  const [stateData, setStateData] = useState({\n    page: 1,\n    searchedJob: \"\",\n    isFiltered: false,\n    isSearchedJobSelected: false,\n    tradeId: [],\n    specializationId: [],\n    searchedJobId: null,\n    location: {\n      coordinates: [144.9631, //long\n      -37.8136 //lat\n      ]\n    },\n    bannerLocation: \"\",\n    locationDenied: false,\n    selectedMapLocation: \"\",\n    isMapLocationSelected: false,\n    from_date: \"\",\n    startDate: \"\",\n    to_date: \"\",\n    endDate: \"\"\n  });\n  const [inputFocus1, setInputFocus1] = useState(false);\n  const [inputFocus2, setInputFocus2] = useState(false);\n  const [inputFocus3, setInputFocus3] = useState(false);\n  const [calenderRange1, setCalenderRange1] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: \"selection1\"\n  });\n\n  const handleOnOutsideSearch = () => setInputFocus1(false);\n\n  const handleOnOutsideLocation = () => setInputFocus2(false);\n\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideLocation\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender\n  });\n  const [suggestionSelected, setSuggestion] = useState(\"\");\n  console.log(inputFocus1, inputFocus2, inputFocus3, \"inputfocus---------\");\n  useEffect(() => {\n    props.getRecentSearchList();\n    props.getRecentLocationList(); // getRecentLocationData();\n  }, []);\n  useEffect(() => {\n    if (paramsData) {\n      var _paramsData$specializ, _paramsData$specializ2, _paramsData$tradeId, _paramsData$specializ3;\n\n      var data = {\n        page: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.page) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.page : 1,\n        // searchedJob: paramsData?.searchJob ? paramsData?.specializationId?.length >= 2 ? `${paramsData?.searchJob} +${paramsData?.specializationId?.length - 1}` : paramsData?.searchJob : '',\n        searchedJob: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.isFilterOn) === \"isFilterOn\" ? \"\" : (paramsData === null || paramsData === void 0 ? void 0 : paramsData.jobResults) === \"jobTypeList\" ? \"\" : (paramsData === null || paramsData === void 0 ? void 0 : paramsData.isAllFilterSpecs) ? paramsData.searchJob : (paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$specializ = paramsData.specializationId) === null || _paramsData$specializ === void 0 ? void 0 : _paramsData$specializ.length) >= 2 ? `${paramsData === null || paramsData === void 0 ? void 0 : paramsData.searchJob} +${(paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$specializ2 = paramsData.specializationId) === null || _paramsData$specializ2 === void 0 ? void 0 : _paramsData$specializ2.length) - 1}` : (paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$tradeId = paramsData.tradeId) === null || _paramsData$tradeId === void 0 ? void 0 : _paramsData$tradeId.length) > 0 ? paramsData.searchJob : \"\",\n        isFiltered: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.isFiltered) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.isFiltered : false,\n        isSearchedJobSelected: (paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$specializ3 = paramsData.specializationId) === null || _paramsData$specializ3 === void 0 ? void 0 : _paramsData$specializ3.length) > 1 ? false : true,\n        tradeId: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.tradeId) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.tradeId : [],\n        specializationId: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.specializationId) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.specializationId : [],\n        location: {\n          coordinates: [(paramsData === null || paramsData === void 0 ? void 0 : paramsData.long) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.long : paramsData === null || paramsData === void 0 ? void 0 : paramsData.defaultLong, (paramsData === null || paramsData === void 0 ? void 0 : paramsData.lat) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.lat : paramsData === null || paramsData === void 0 ? void 0 : paramsData.defaultLat]\n        },\n        selectedMapLocation: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.addres) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.addres : \"\",\n        isMapLocationSelected: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.addres) ? true : false,\n        from_date: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date : \"\",\n        startDate: \"\",\n        to_date: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date : \"\",\n        endDate: \"\"\n      };\n\n      if ((paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date) || (paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date)) {\n        const differenceInYears = differenceInCalendarYears(new Date(), paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date);\n\n        if (differenceInYears !== 0) {\n          data.startDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date).format(\"DD MMM YYYY\");\n          data.endDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date).format(\"DD MMM YYYY\");\n        } else {\n          data.startDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date).format(\"DD MMM\");\n          data.endDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date).format(\"DD MMM\");\n        }\n      }\n\n      setStateData(prevData => ({ ...prevData,\n        ...data\n      }));\n    }\n  }, [paramsData]);\n  useEffect(() => {\n    if (calenderRange1 && inputFocus3) {\n      const differenceInYears = differenceInCalendarYears(new Date(), calenderRange1.endDate);\n      var startDate;\n      var endDate;\n\n      if (differenceInYears !== 0) {\n        startDate = format(new Date(calenderRange1.startDate), \"dd MMM yyyy\");\n        endDate = format(new Date(calenderRange1.endDate), \"dd MMM yyyy\");\n      } else {\n        startDate = format(new Date(calenderRange1.startDate), \"dd MMM\");\n        endDate = format(new Date(calenderRange1.endDate), \"dd MMM\");\n      }\n\n      const from_date = format(new Date(calenderRange1.startDate), \"yyyy-MM-dd\");\n      const to_date = format(new Date(calenderRange1.endDate), \"yyyy-MM-dd\");\n      setStateData(prevData => ({ ...prevData,\n        startDate: startDate,\n        endDate: endDate\n      }));\n      setStateData(prevData => ({ ...prevData,\n        from_date: from_date,\n        to_date: to_date\n      }));\n    }\n  }, [calenderRange1]);\n  useEffect(() => {\n    if (props.currentCoordinates) {\n      setStateData(prevData => ({ ...prevData,\n        location: props.currentCoordinates\n      }));\n    }\n  }, [props.currentCoordinates]);\n\n  const handleCalenderRange = item => {\n    setCalenderRange1(item.selection1);\n  };\n\n  const handleJobChange = e => {\n    e.target.value.length >= 3 && props.getSearchJobList(e.target.value);\n    setStateData(prevData => ({ ...prevData,\n      searchedJob: e.target.value,\n      isSearchedJobSelected: false\n    }));\n  };\n\n  const cleanInputData = item => {\n    if (item === \"calender\") {\n      setStateData(prevData => ({ ...prevData,\n        from_date: \"\",\n        to_date: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      }));\n      return;\n    }\n\n    if (item == \"searchedJob\") {\n      setStateData(prevData => ({ ...prevData,\n        [item]: \"\",\n        isSearchedJobSelected: false\n      }));\n    }\n\n    setStateData(prevData => ({ ...prevData,\n      [item]: \"\"\n    }));\n  };\n\n  const searchedJobClicked = (item, isRecentSearchesClicked) => {\n    setStateData(prevData => ({ ...prevData,\n      searchedJob: item.name,\n      tradeId: [item._id],\n      specializationId: [item.specializationsId],\n      isSearchedJobSelected: true,\n      isFirstJobSelectedCount: 1\n    }));\n    setInputFocus1(false);\n\n    if (isRecentSearchesClicked === \"isRecentSearchesClicked\") {\n      const newSearchData = {\n        tradeId: [item._id],\n        specializationId: [item.specializationsId],\n        searchedJob: item.name,\n        isRecentSearchesClicked: \"isRecentSearchesClicked\"\n      };\n      bannerSearchClicked(newSearchData);\n    }\n  };\n\n  const cleanRecentSearch = async (event, recentSearchId) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0\n    };\n    const res = await deleteRecentSearch(data);\n\n    if (res.success) {\n      props.getRecentSearchList();\n    }\n  };\n\n  const recentJobSearches = () => {\n    var _props$recentSearchJo, _props$recentSearchJo2, _props$recentSearchJo3;\n\n    return ((_props$recentSearchJo = props.recentSearchJobData) === null || _props$recentSearchJo === void 0 ? void 0 : _props$recentSearchJo.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_autosuggestion\",\n      id: \"recent-job-search-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Recent searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row recent_search\",\n        children: (_props$recentSearchJo2 = props.recentSearchJobData) === null || _props$recentSearchJo2 === void 0 ? void 0 : (_props$recentSearchJo3 = _props$recentSearchJo2.slice(0, 4)) === null || _props$recentSearchJo3 === void 0 ? void 0 : _props$recentSearchJo3.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card ico_txt_wrap\",\n              onClick: () => searchedJobClicked(item, \"isRecentSearchesClicked\"),\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"ico\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (item === null || item === void 0 ? void 0 : item.image) || residential,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"f_column\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: item.trade_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"remove_card\",\n                onClick: event => cleanRecentSearch(event, item.recentSearchId),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: close,\n                  alt: \"remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)\n          }, item.recentSearchId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this);\n  };\n\n  const renderJobResult = () => {\n    var _props$searchJobListD, _props$searchJobListD2;\n\n    return ((_props$searchJobListD = props.searchJobListData) === null || _props$searchJobListD === void 0 ? void 0 : _props$searchJobListD.length) > 0 && stateData.searchedJob.length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_autosuggestion\",\n      id: \"fetched-custom-job-category-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent_search\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"drop_data\",\n          children: (_props$searchJobListD2 = props.searchJobListData) === null || _props$searchJobListD2 === void 0 ? void 0 : _props$searchJobListD2.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => searchedJobClicked(item),\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"category\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image ? item.image : residential,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"prof\",\n                  children: item.trade_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this);\n  };\n\n  const locationSelectedHandler = (address, placeId, suggestion) => {\n    console.log(address, \"address\", placeId, \"placeId\", suggestion, \"suggestion\");\n    setSuggestion(suggestion === null || suggestion === void 0 ? void 0 : suggestion.formattedSuggestion);\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(({\n      lat,\n      lng\n    }) => {\n      const locationNew = {\n        location: {\n          coordinates: [lng, lat]\n        }\n      };\n      setStateData(prevData => {\n        var _suggestion$formatted;\n\n        return { ...prevData,\n          ...locationNew,\n          selectedMapLocation: suggestion === null || suggestion === void 0 ? void 0 : (_suggestion$formatted = suggestion.formattedSuggestion) === null || _suggestion$formatted === void 0 ? void 0 : _suggestion$formatted.mainText,\n          isMapLocationSelected: true\n        };\n      });\n      setInputFocus2(false);\n    });\n  };\n\n  const filterFromAddress = results => {\n    let city,\n        state,\n        country = null;\n\n    for (let i = 0; i < results[0].address_components.length; i++) {\n      for (let j = 0; j < results[0].address_components[i].types.length; j++) {\n        switch (results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = results[0].address_components[i].long_name;\n            break;\n\n          case \"administrative_area_level_1\":\n            state = results[0].address_components[i].long_name;\n            break;\n\n          case \"country\":\n            country = results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n\n    return {\n      city,\n      state,\n      country: country.toLowerCase()\n    };\n  };\n\n  const getCurrentLocation = e => {\n    e.preventDefault();\n\n    const showPosition = position => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      var latlng = new google.maps.LatLng(lat, long);\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        location: latlng\n      }, function (results, status) {\n        if (status !== google.maps.GeocoderStatus.OK) {\n          alert(status);\n        }\n\n        if (status === google.maps.GeocoderStatus.OK) {\n          const {\n            country\n          } = filterFromAddress(results);\n\n          if ([\"australia\", \"au\"].includes(country)) {\n            setInputFocus2(false);\n\n            if (results && Array.isArray(results) && results[0]) {\n              setStateData(prevData => ({ ...prevData,\n                selectedMapLocation: results[0].formatted_address,\n                isMapLocationSelected: true,\n                locationDenied: false\n              }));\n            }\n          } else {\n            setInputFocus2(false);\n            setShowToast(true, \"Uh Oh! We don't provide service currently in your Location\");\n          }\n        }\n      });\n    };\n\n    const showError = error => {\n      if (error.code === error.PERMISSION_DENIED) {\n        setStateData(prevData => ({ ...prevData,\n          bannerLocation: \"\",\n          locationDenied: true\n        }));\n      }\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition, showError);\n    }\n  };\n\n  const validateForm = type => {\n    var _props$history, _props$history$locati;\n\n    if (type === \"isRecentSearchesClicked\" && ((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.pathname) === \"/\") {\n      return true;\n    }\n\n    const newErrors = {};\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : stateData.isSearchedJobSelected)) {\n      newErrors.searchedJob = Constants.errorStrings.bannerSearchJob;\n    } else if (!(stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob)) {\n      newErrors.searchedJob = Constants.errorStrings.bannerSearchJobEmpty;\n    }\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : stateData.isMapLocationSelected) && (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation)) {\n      newErrors.selectedMapLocation = Constants.errorStrings.bannerSearchLocation;\n    }\n\n    if (type === \"showErrorToast\") {\n      return newErrors;\n    } // setErrors(newErrors);\n\n\n    return !Object.keys(newErrors).length;\n  };\n\n  const bannerSearchClicked = newSearchData => {\n    const newErrors = validateForm((newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.isRecentSearchesClicked) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.isRecentSearchesClicked : \"showErrorToast\");\n\n    if (!!newErrors.searchedJob || !!newErrors.selectedMapLocation) {\n      if (!!newErrors.searchedJob) {\n        setShowToast(true, \"Please select job type from the list\");\n        return;\n      }\n\n      if (!!newErrors.selectedMapLocation) {\n        setShowToast(true, \"Please select location from the list\");\n        return;\n      }\n    }\n\n    if (validateForm(newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.isRecentSearchesClicked)) {\n      var _props$location, _props$location2, _props$currentCoordin, _props$currentCoordin2, _props$currentCoordin3, _props$currentCoordin4, _props$location3, _props$history2, _props$history2$locat;\n\n      const params = new URLSearchParams((_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search);\n      const queryParamsData = {\n        defaultLat: Number(params.get(\"defaultLat\")),\n        defaultLong: Number(params.get(\"defaultLong\"))\n      };\n      const data = {\n        page: stateData.page,\n        isFiltered: false,\n        ...(suggestionSelected && {\n          address: JSON.stringify(suggestionSelected)\n        }),\n        tradeId: (newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.tradeId) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.tradeId : stateData === null || stateData === void 0 ? void 0 : stateData.tradeId,\n        ...(stateData.isMapLocationSelected && {\n          location: stateData === null || stateData === void 0 ? void 0 : stateData.location\n        }),\n        // location: stateData?.location,\n        specializationId: (newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.specializationId) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.specializationId : stateData === null || stateData === void 0 ? void 0 : stateData.specializationId,\n        ...((stateData === null || stateData === void 0 ? void 0 : stateData.from_date) && {\n          from_date: stateData === null || stateData === void 0 ? void 0 : stateData.from_date\n        }),\n        ...((stateData === null || stateData === void 0 ? void 0 : stateData.to_date) && {\n          to_date: stateData === null || stateData === void 0 ? void 0 : stateData.to_date\n        })\n      };\n      console.log(\"data: \", data, \"suggestionSelected\", suggestionSelected);\n\n      if ((props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.pathname) === \"/search-job-results\") {\n        var _props$tradeListData, _props$tradeListData$, _JSON$parse, _JSON$parse2;\n\n        props.postHomeSearchData(data);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n          category: (_props$tradeListData = props.tradeListData) === null || _props$tradeListData === void 0 ? void 0 : (_props$tradeListData$ = _props$tradeListData.find(i => {\n            var _data$tradeId;\n\n            return i._id === (data === null || data === void 0 ? void 0 : (_data$tradeId = data.tradeId) === null || _data$tradeId === void 0 ? void 0 : _data$tradeId[0]);\n          })) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.trade_name,\n          ...(data.address && {\n            location: `${(_JSON$parse = JSON.parse(data.address)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.mainText} ${(_JSON$parse2 = JSON.parse(data.address)) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.secondaryText}`\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.max_budget) && {\n            \"Max budget\": data === null || data === void 0 ? void 0 : data.max_budget\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.from_date) && {\n            \"start date\": data === null || data === void 0 ? void 0 : data.from_date\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.to_date) && {\n            \"end date\": data === null || data === void 0 ? void 0 : data.to_date\n          })\n        };\n        moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n      } // delete data.address;\n\n\n      const newData = { ...data,\n        lat: stateData.location.coordinates[1],\n        long: stateData.location.coordinates[0],\n        defaultLat: ((_props$currentCoordin = props.currentCoordinates) === null || _props$currentCoordin === void 0 ? void 0 : _props$currentCoordin.coordinates[1]) ? (_props$currentCoordin2 = props.currentCoordinates) === null || _props$currentCoordin2 === void 0 ? void 0 : _props$currentCoordin2.coordinates[1] : queryParamsData.defaultLat,\n        defaultLong: ((_props$currentCoordin3 = props.currentCoordinates) === null || _props$currentCoordin3 === void 0 ? void 0 : _props$currentCoordin3.coordinates[0]) ? (_props$currentCoordin4 = props.currentCoordinates) === null || _props$currentCoordin4 === void 0 ? void 0 : _props$currentCoordin4.coordinates[0] : queryParamsData.defaultLong,\n        ...(stateData.selectedMapLocation && {\n          addres: stateData.selectedMapLocation.replaceAll(\"#\", \"\")\n        }),\n        searchJob: (newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.searchedJob) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.searchedJob.replaceAll(\"&\", \"xxx\") : stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob.replaceAll(\"&\", \"xxx\"),\n        jobResults: null\n      };\n\n      if ((props === null || props === void 0 ? void 0 : (_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : _props$location3.pathname) === \"/search-job-results\" && newData.address) {\n        setTimeout(() => {\n          props.getRecentLocationList();\n        }, 500);\n      }\n\n      delete newData.location;\n      delete newData.isFilterOn;\n\n      if (newData.searchJob) {\n        delete newData.heading;\n        delete newData.jobResults;\n      }\n\n      Object.keys(newData).forEach(key => (newData[key] === \"\" || newData[key] === undefined || newData[key] === null || newData[key] === 0 || newData[key] == \"0\") && delete newData[key]);\n      var url = \"search-job-results?\";\n\n      for (let [key, value] of Object.entries(newData)) {\n        url += `${key}=${value}&`;\n      }\n\n      const newUrl = url.slice(0, url.length - 1);\n      console.log(newUrl, \"newUrl\", data, \"data\", newData, \"newData\");\n\n      if (((_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : (_props$history2$locat = _props$history2.location) === null || _props$history2$locat === void 0 ? void 0 : _props$history2$locat.pathname) === \"/\") {\n        props.history.push(newUrl);\n      } else {\n        props.history.replace(newUrl);\n\n        if (props === null || props === void 0 ? void 0 : props.refreshParams) {\n          props === null || props === void 0 ? void 0 : props.refreshParams(data);\n        }\n      }\n    }\n  };\n\n  const renderPlacesData = ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n          placeholder: \"Where?\",\n          className: \"line-1\"\n        }),\n        id: \"location-input-tag\",\n        onFocus: () => {\n          setInputFocus2(true);\n          setInputFocus1(false);\n          setInputFocus3(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"detect_icon_ltr\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Location,\n          alt: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) && inputFocus2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"detect_icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cross,\n          alt: \"cross\",\n          onClick: () => {\n            setSuggestion(\"\");\n            setStateData(prevData => ({ ...prevData,\n              selectedMapLocation: \"\",\n              isMapLocationSelected: false\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this), (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) > 0 && (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation.length) >= 3 && inputFocus2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_autosuggestion location\",\n      id: \"autocomplete-dropdown-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row recent_search auto_loc\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_4\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 27\n          }, this), suggestions.map(suggestion => {\n            const className = \"autosuggestion_icon card loc name\";\n            const style = suggestion.active ? {\n              backgroundColor: \"#fafafa\",\n              cursor: \"pointer\"\n            } : {\n              backgroundColor: \"#ffffff\",\n              cursor: \"pointer\"\n            };\n            return /*#__PURE__*/_createElement(\"div\", { ...getSuggestionItemProps(suggestion, {\n                className,\n                style\n              }),\n              key: suggestion.formattedSuggestion.mainText,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: suggestion.formattedSuggestion.mainText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: suggestion.formattedSuggestion.secondaryText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 21\n            }, this));\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 9\n    }, this) : !loading && !(stateData === null || stateData === void 0 ? void 0 : stateData.isMapLocationSelected) && (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation.length) >= 3 && inputFocus2 && (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) < 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"50px\"\n      },\n      className: \"custom_autosuggestion location\",\n      id: \"autocomplete-dropdown-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row recent_search auto_loc\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loc_suggestions\",\n            children: \"No Result Found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 602,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_search\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modal_srch_close\",\n      onClick: () => {\n        if (props === null || props === void 0 ? void 0 : props.handleChangeToggle) {\n          props.handleChangeToggle(false);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `search_wrapr ${((_props$history3 = props.history) === null || _props$history3 === void 0 ? void 0 : (_props$history3$locat = _props$history3.location) === null || _props$history3$locat === void 0 ? void 0 : _props$history3$locat.pathname) === \"/\" ? (stateData === null || stateData === void 0 ? void 0 : stateData.isFirstJobSelectedCount) ? \"\" : \"first_input\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categ_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            id: \"text-field-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: searchRef,\n              placeholder: \"What jobs are you after?\",\n              value: stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob,\n              onChange: handleJobChange,\n              onFocus: () => {\n                setInputFocus1(true);\n                setInputFocus2(false);\n                setInputFocus3(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border_eff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon_ltr\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Searchicon,\n                alt: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this), !!(stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob) && inputFocus1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cross,\n                alt: \"cross\",\n                onClick: () => cleanInputData(\"searchedJob\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), !(stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob) && inputFocus1 && !inputFocus2 && recentJobSearches(), (stateData === null || stateData === void 0 ? void 0 : (_stateData$searchedJo = stateData.searchedJob) === null || _stateData$searchedJo === void 0 ? void 0 : _stateData$searchedJo.length) >= 1 && inputFocus1 && !inputFocus2 && renderJobResult(), /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: locationRef,\n          className: \"loc_box\",\n          style: {\n            display: \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"location-text-field-div\",\n            children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n              value: (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) !== \"{}\" ? stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation : \"\",\n              onChange: city => setStateData(prevData => ({ ...prevData,\n                selectedMapLocation: city,\n                isMapLocationSelected: false\n              })),\n              shouldFetchSuggestions: true,\n              onSelect: locationSelectedHandler,\n              highlightFirstSuggestion: true,\n              searchOptions: {\n                componentRestrictions: {\n                  country: \"au\"\n                },\n                // types: [\"address\"]\n                types: [\"(cities)\"]\n              } // debounce={400}\n              ,\n              children: renderPlacesData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), (!(stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) || (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) === \"{}\") && inputFocus2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom_autosuggestion location\",\n            id: \"current-location-search-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"location-btn\",\n              onClick: getCurrentLocation,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gps_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: icgps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 789,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 21\n              }, this), \" \", \"Use my current location\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 19\n            }, this), (stateData === null || stateData === void 0 ? void 0 : stateData.locationDenied) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blocked_note\",\n              children: \"You have blocked your location. To use this, change your location settings in browser.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent_search auto_loc\",\n              children: [console.log({\n                recent: props === null || props === void 0 ? void 0 : props.recentLocationData\n              }), (props === null || props === void 0 ? void 0 : (_props$recentLocation = props.recentLocationData) === null || _props$recentLocation === void 0 ? void 0 : _props$recentLocation.length) > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: \"Recent searches\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 23\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_row\",\n                children: props === null || props === void 0 ? void 0 : (_props$recentLocation2 = props.recentLocationData) === null || _props$recentLocation2 === void 0 ? void 0 : _props$recentLocation2.map(item => {\n                  var _item$address, _JSON$parse4, _JSON$parse5;\n\n                  return (item === null || item === void 0 ? void 0 : (_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex_col_sm_4\",\n                    onClick: () => {\n                      setStateData(prevData => {\n                        var _JSON$parse3;\n\n                        return { ...prevData,\n                          location: item.location,\n                          selectedMapLocation: (_JSON$parse3 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.mainText,\n                          //item.allText?.mainText,\n                          isMapLocationSelected: true\n                        };\n                      });\n                      setSuggestion(JSON.parse(item === null || item === void 0 ? void 0 : item.address)); // let location_coordinates: any = item.location.coordinates\n                      // setAddressText(item.formatted_address);\n                      // setSelectedAddress({\n                      //     lat: location_coordinates[1],\n                      //     lng: location_coordinates[0]\n                      // });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"autosuggestion_icon card loc name\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: (_JSON$parse4 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.mainText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 841,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"name\",\n                        children: (_JSON$parse5 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse5 === void 0 ? void 0 : _JSON$parse5.secondaryText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 844,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 820,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `date_box ${stateData.startDate ? \"date_value\" : \"\"}`,\n          style: {\n            display: \"block\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: calenderRef,\n            className: \"custom_date_range\",\n            id: \"date-range-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon_ltr calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"calender-input\",\n                placeholder: (stateData === null || stateData === void 0 ? void 0 : stateData.startDate) ? `${stateData === null || stateData === void 0 ? void 0 : stateData.startDate} - ${stateData === null || stateData === void 0 ? void 0 : stateData.endDate}` : \"When?\",\n                onFocus: () => {\n                  setInputFocus3(true);\n                  setInputFocus1(false);\n                  setInputFocus2(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 17\n              }, this), (stateData === null || stateData === void 0 ? void 0 : stateData.startDate) && inputFocus3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cross,\n                  alt: \"cross\",\n                  onClick: () => cleanInputData(\"calender\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 884,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 883,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 15\n            }, this), inputFocus3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom_autosuggestion\",\n              id: \"custom-date-range-div\",\n              children: /*#__PURE__*/_jsxDEV(DateRange, {\n                onChange: handleCalenderRange,\n                ranges: [calenderRange1],\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                months: 2,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: new Date(new Date().setFullYear(new Date().getFullYear() + 2)),\n                direction: \"horizontal\",\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"fill_btn btn-effect\",\n            onClick: bannerSearchClicked,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: search,\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 689,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TradieBannerSearch, \"IHgiEIIrwRbsFrDDzTCws+ts2bE=\", false, function () {\n  return [useDetectClickOutside, useDetectClickOutside, useDetectClickOutside];\n});\n\n_c = TradieBannerSearch;\nexport default TradieBannerSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradieBannerSearch\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/tradieBannerSearch/tradieBannerSearch.tsx"],"names":["React","useState","useEffect","Constants","MoEConstants","useDetectClickOutside","deleteRecentSearch","setShowToast","PlacesAutocomplete","geocodeByAddress","getLatLng","format","differenceInCalendarYears","moment","DateRange","Geocode","Searchicon","search","Location","cross","icgps","residential","close","moengage","mixPanel","setApiKey","SocialAuth","GOOGLE_GEOCODE_KEY","setLanguage","setRegion","TradieBannerSearch","props","paramsData","stateData","setStateData","page","searchedJob","isFiltered","isSearchedJobSelected","tradeId","specializationId","searchedJobId","location","coordinates","bannerLocation","locationDenied","selectedMapLocation","isMapLocationSelected","from_date","startDate","to_date","endDate","inputFocus1","setInputFocus1","inputFocus2","setInputFocus2","inputFocus3","setInputFocus3","calenderRange1","setCalenderRange1","Date","key","handleOnOutsideSearch","handleOnOutsideLocation","handleOnOutsideCalender","searchRef","onTriggered","locationRef","calenderRef","suggestionSelected","setSuggestion","console","log","getRecentSearchList","getRecentLocationList","data","isFilterOn","jobResults","isAllFilterSpecs","searchJob","length","long","defaultLong","lat","defaultLat","addres","differenceInYears","prevData","currentCoordinates","handleCalenderRange","item","selection1","handleJobChange","e","target","value","getSearchJobList","cleanInputData","searchedJobClicked","isRecentSearchesClicked","name","_id","specializationsId","isFirstJobSelectedCount","newSearchData","bannerSearchClicked","cleanRecentSearch","event","recentSearchId","stopPropagation","id","status","res","success","recentJobSearches","recentSearchJobData","slice","map","image","trade_name","renderJobResult","searchJobListData","locationSelectedHandler","address","placeId","suggestion","formattedSuggestion","then","results","lng","locationNew","mainText","filterFromAddress","city","state","country","i","address_components","j","types","long_name","toLowerCase","getCurrentLocation","preventDefault","showPosition","position","coords","latitude","longitude","latlng","google","maps","LatLng","geocoder","Geocoder","geocode","GeocoderStatus","OK","alert","includes","Array","isArray","formatted_address","showError","error","code","PERMISSION_DENIED","navigator","geolocation","getCurrentPosition","validateForm","type","history","pathname","newErrors","errorStrings","bannerSearchJob","bannerSearchJobEmpty","bannerSearchLocation","Object","keys","params","URLSearchParams","queryParamsData","Number","get","JSON","stringify","postHomeSearchData","mData","timeStamp","getCurrentTimeStamp","category","tradeListData","find","parse","secondaryText","max_budget","moE_SendEvent","SEARCHED_FOR_JOBS","mixP_SendEvent","newData","replaceAll","setTimeout","heading","forEach","undefined","url","entries","newUrl","push","replace","refreshParams","renderPlacesData","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","style","active","backgroundColor","cursor","minHeight","handleChangeToggle","display","componentRestrictions","recent","recentLocationData","setFullYear","getFullYear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Constants,{ MoEConstants } from \"../../utils/constants\";\nimport { useDetectClickOutside } from \"react-detect-click-outside\";\nimport { deleteRecentSearch } from \"../../redux/homeSearch/actions\";\nimport { setShowToast } from \"../../redux/common/actions\";\n// @ts-ignore\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n// @ts-ignore\nimport { format, differenceInCalendarYears } from \"date-fns\";\n// @ts-ignore\nimport moment from \"moment\";\n// @ts-ignore\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\";\nimport \"react-date-range/dist/theme/default.css\";\nimport Geocode from \"react-geocode\";\n\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\n\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"au\");\ninterface PropsType {\n  history: any;\n  location?: any;\n  paramsData?: any;\n  currentCoordinates?: any;\n  searchJobListData: Array<any>;\n  recentSearchJobData: Array<any>;\n  recentLocationData: Array<any>;\n  homeSearchJobData: Array<any>;\n  tradeListData: Array<any>;\n  setTradieHomeData?: (data: any) => void;\n  getSearchJobList: (data: any) => void;\n  postHomeSearchData: (data: any) => void;\n  getRecentSearchList: () => void;\n  getRecentLocationList: () => void;\n  refreshParams?: (data: any) => void;\n  handleChangeToggle?: (data: boolean) => void;\n}\n\nconst TradieBannerSearch = (props: PropsType) => {\n  const { paramsData } = props;\n  const [stateData, setStateData] = useState<any>({\n    page: 1,\n    searchedJob: \"\",\n    isFiltered: false,\n    isSearchedJobSelected: false,\n    tradeId: [],\n    specializationId: [],\n    searchedJobId: null,\n    location: {\n      coordinates: [\n        144.9631, //long\n        -37.8136, //lat\n      ],\n    },\n    bannerLocation: \"\",\n    locationDenied: false,\n    selectedMapLocation: \"\",\n    isMapLocationSelected: false,\n    from_date: \"\",\n    startDate: \"\",\n    to_date: \"\",\n    endDate: \"\",\n  });\n  const [inputFocus1, setInputFocus1] = useState<boolean>(false);\n  const [inputFocus2, setInputFocus2] = useState<boolean>(false);\n  const [inputFocus3, setInputFocus3] = useState<boolean>(false);\n  const [calenderRange1, setCalenderRange1] = useState<any>({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: \"selection1\",\n  });\n\n\n  const handleOnOutsideSearch = () => setInputFocus1(false);\n  const handleOnOutsideLocation = () => setInputFocus2(false);\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch,\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideLocation,\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender,\n  });\n\n  const [suggestionSelected, setSuggestion] = useState<any>(\"\");\n\n  console.log(inputFocus1, inputFocus2, inputFocus3, \"inputfocus---------\");\n\n  useEffect(() => {\n    props.getRecentSearchList();\n    props.getRecentLocationList();\n    // getRecentLocationData();\n  }, []);\n\n  useEffect(() => {\n    if (paramsData) {\n      var data = {\n        page: paramsData?.page ? paramsData?.page : 1,\n        // searchedJob: paramsData?.searchJob ? paramsData?.specializationId?.length >= 2 ? `${paramsData?.searchJob} +${paramsData?.specializationId?.length - 1}` : paramsData?.searchJob : '',\n        searchedJob:\n          paramsData?.isFilterOn === \"isFilterOn\"\n            ? \"\"\n            : paramsData?.jobResults === \"jobTypeList\"\n            ? \"\"\n            : paramsData?.isAllFilterSpecs\n            ? paramsData.searchJob\n            : paramsData?.specializationId?.length >= 2\n            ? `${paramsData?.searchJob} +${\n                paramsData?.specializationId?.length - 1\n              }`\n            : paramsData?.tradeId?.length > 0\n            ? paramsData.searchJob\n            : \"\",\n        isFiltered: paramsData?.isFiltered ? paramsData?.isFiltered : false,\n        isSearchedJobSelected:\n          paramsData?.specializationId?.length > 1 ? false : true,\n        tradeId: paramsData?.tradeId ? paramsData?.tradeId : [],\n        specializationId: paramsData?.specializationId\n          ? paramsData?.specializationId\n          : [],\n        location: {\n          coordinates: [\n            paramsData?.long ? paramsData?.long : paramsData?.defaultLong,\n            paramsData?.lat ? paramsData?.lat : paramsData?.defaultLat,\n          ],\n        },\n        selectedMapLocation: paramsData?.addres ? paramsData?.addres : \"\",\n        isMapLocationSelected: paramsData?.addres ? true : false,\n        from_date: paramsData?.from_date ? paramsData?.from_date : \"\",\n        startDate: \"\",\n        to_date: paramsData?.to_date ? paramsData?.to_date : \"\",\n        endDate: \"\",\n      };\n      if (paramsData?.from_date || paramsData?.to_date) {\n        const differenceInYears: number = differenceInCalendarYears(\n          new Date(),\n          paramsData?.to_date\n        );\n        if (differenceInYears !== 0) {\n          data.startDate = moment(paramsData?.from_date).format(\"DD MMM YYYY\");\n          data.endDate = moment(paramsData?.to_date).format(\"DD MMM YYYY\");\n        } else {\n          data.startDate = moment(paramsData?.from_date).format(\"DD MMM\");\n          data.endDate = moment(paramsData?.to_date).format(\"DD MMM\");\n        }\n      }\n      setStateData((prevData: any) => ({ ...prevData, ...data }));\n    }\n  }, [paramsData]);\n\n  useEffect(() => {\n    if (calenderRange1 && inputFocus3) {\n      const differenceInYears: number = differenceInCalendarYears(\n        new Date(),\n        calenderRange1.endDate\n      );\n      var startDate: string;\n      var endDate: string;\n      if (differenceInYears !== 0) {\n        startDate = format(new Date(calenderRange1.startDate), \"dd MMM yyyy\");\n        endDate = format(new Date(calenderRange1.endDate), \"dd MMM yyyy\");\n      } else {\n        startDate = format(new Date(calenderRange1.startDate), \"dd MMM\");\n        endDate = format(new Date(calenderRange1.endDate), \"dd MMM\");\n      }\n      const from_date = format(\n        new Date(calenderRange1.startDate),\n        \"yyyy-MM-dd\"\n      );\n      const to_date = format(new Date(calenderRange1.endDate), \"yyyy-MM-dd\");\n      setStateData((prevData: any) => ({\n        ...prevData,\n        startDate: startDate,\n        endDate: endDate,\n      }));\n      setStateData((prevData: any) => ({\n        ...prevData,\n        from_date: from_date,\n        to_date: to_date,\n      }));\n    }\n  }, [calenderRange1]);\n\n  useEffect(() => {\n    if (props.currentCoordinates) {\n      setStateData((prevData: any) => ({\n        ...prevData,\n        location: props.currentCoordinates,\n      }));\n    }\n  }, [props.currentCoordinates]);\n\n  const handleCalenderRange = (item: any) => {\n    setCalenderRange1(item.selection1);\n  };\n\n  const handleJobChange = (e: any) => {\n    e.target.value.length >= 3 && props.getSearchJobList(e.target.value);\n    setStateData((prevData: any) => ({\n      ...prevData,\n      searchedJob: e.target.value,\n      isSearchedJobSelected: false,\n    }));\n  };\n\n  const cleanInputData = (item: string) => {\n    if (item === \"calender\") {\n      setStateData((prevData: any) => ({\n        ...prevData,\n        from_date: \"\",\n        to_date: \"\",\n        startDate: \"\",\n        endDate: \"\",\n      }));\n      return;\n    }\n    if (item == \"searchedJob\") {\n      setStateData((prevData: any) => ({\n        ...prevData,\n        [item]: \"\",\n        isSearchedJobSelected: false,\n      }));\n    }\n    setStateData((prevData: any) => ({ ...prevData, [item]: \"\" }));\n  };\n\n  const searchedJobClicked = (item: any, isRecentSearchesClicked?: string) => {\n    setStateData((prevData: any) => ({\n      ...prevData,\n      searchedJob: item.name,\n      tradeId: [item._id],\n      specializationId: [item.specializationsId],\n      isSearchedJobSelected: true,\n      isFirstJobSelectedCount: 1,\n    }));\n    setInputFocus1(false);\n    if (isRecentSearchesClicked === \"isRecentSearchesClicked\") {\n      const newSearchData = {\n        tradeId: [item._id],\n        specializationId: [item.specializationsId],\n        searchedJob: item.name,\n        isRecentSearchesClicked: \"isRecentSearchesClicked\",\n      };\n      bannerSearchClicked(newSearchData);\n    }\n  };\n\n  const cleanRecentSearch = async (event: any, recentSearchId: string) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0,\n    };\n    const res = await deleteRecentSearch(data);\n    if (res.success) {\n      props.getRecentSearchList();\n    }\n  };\n\n  const recentJobSearches = () => {\n    return (\n      props.recentSearchJobData?.length > 0 && (\n        <div className=\"custom_autosuggestion\" id=\"recent-job-search-div\">\n          <span className=\"sub_title\">Recent searches</span>\n          <div className=\"flex_row recent_search\">\n            {props.recentSearchJobData?.slice(0, 4)?.map((item: any) => {\n              return (\n                <div className=\"flex_col_sm_3\" key={item.recentSearchId}>\n                  <div\n                    className=\"card ico_txt_wrap\"\n                    onClick={() =>\n                      searchedJobClicked(item, \"isRecentSearchesClicked\")\n                    }\n                  >\n                    <figure className=\"ico\">\n                      <img src={item?.image || residential} alt=\"icon\" />\n                    </figure>\n                    <div className=\"f_column\">\n                      <span>{item.name}</span>\n                      <span className=\"name\">{item.trade_name}</span>\n                    </div>\n                    <span\n                      className=\"remove_card\"\n                      onClick={(event) =>\n                        cleanRecentSearch(event, item.recentSearchId)\n                      }\n                    >\n                      <img src={close} alt=\"remove\" />\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )\n    );\n  };\n\n  const renderJobResult = () => {\n    return (\n      props.searchJobListData?.length > 0 &&\n      stateData.searchedJob.length >= 3 && (\n        <div\n          className=\"custom_autosuggestion\"\n          id=\"fetched-custom-job-category-div\"\n        >\n          <div className=\"recent_search\">\n            <ul className=\"drop_data\">\n              {props.searchJobListData?.map((item: any) => {\n                return (\n                  <li key={item._id} onClick={() => searchedJobClicked(item)}>\n                    <figure className=\"category\">\n                      <img\n                        src={item.image ? item.image : residential}\n                        alt=\"icon\"\n                      />\n                    </figure>\n                    <div className=\"details\">\n                      <span className=\"name\">{item.name}</span>\n                      <span className=\"prof\">{item.trade_name}</span>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      )\n    );\n  };\n\n  const locationSelectedHandler = (\n    address: string,\n    placeId?: any,\n    suggestion?: any\n  ) => {\n    console.log(\n      address,\n      \"address\",\n      placeId,\n      \"placeId\",\n      suggestion,\n      \"suggestion\"\n    );\n    setSuggestion(suggestion?.formattedSuggestion);\n    geocodeByAddress(address)\n      .then((results: any) => getLatLng(results[0]))\n      .then(({ lat, lng }: any) => {\n        const locationNew: any = {\n          location: {\n            coordinates: [lng, lat],\n          },\n        };\n        setStateData((prevData: any) => ({\n          ...prevData,\n          ...locationNew,\n          selectedMapLocation: suggestion?.formattedSuggestion?.mainText,\n          isMapLocationSelected: true,\n        }));\n        setInputFocus2(false);\n      });\n  };\n\n  const filterFromAddress = (results: any) => {\n    let city,\n      state,\n      country = null;\n    for (let i = 0; i < results[0].address_components.length; i++) {\n      for (let j = 0; j < results[0].address_components[i].types.length; j++) {\n        switch (results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = results[0].address_components[i].long_name;\n            break;\n          case \"administrative_area_level_1\":\n            state = results[0].address_components[i].long_name;\n            break;\n          case \"country\":\n            country = results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n    return { city, state, country: country.toLowerCase() };\n  };\n\n  const getCurrentLocation = (e: any) => {\n    e.preventDefault();\n    const showPosition = (position: any) => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      var latlng = new google.maps.LatLng(lat, long);\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({ location: latlng }, function (results, status) {\n        if (status !== google.maps.GeocoderStatus.OK) {\n          alert(status);\n        }\n        if (status === google.maps.GeocoderStatus.OK) {\n          const { country } = filterFromAddress(results);\n          if ([\"australia\", \"au\"].includes(country)) {\n            setInputFocus2(false);\n            if (results && Array.isArray(results) && results[0]) {\n              setStateData((prevData: any) => ({\n                ...prevData,\n                selectedMapLocation: results[0].formatted_address,\n                isMapLocationSelected: true,\n                locationDenied: false,\n              }));\n            }\n          } else {\n            setInputFocus2(false);\n            setShowToast(\n              true,\n              \"Uh Oh! We don't provide service currently in your Location\"\n            );\n          }\n        }\n      });\n    };\n\n    const showError = (error: any) => {\n      if (error.code === error.PERMISSION_DENIED) {\n        setStateData((prevData: any) => ({\n          ...prevData,\n          bannerLocation: \"\",\n          locationDenied: true,\n        }));\n      }\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition, showError);\n    }\n  };\n\n  const validateForm = (type?: string) => {\n    if (\n      type === \"isRecentSearchesClicked\" &&\n      props.history?.location?.pathname === \"/\"\n    ) {\n      return true;\n    }\n    const newErrors: any = {};\n    if (!stateData?.isSearchedJobSelected) {\n      newErrors.searchedJob = Constants.errorStrings.bannerSearchJob;\n    } else if (!stateData?.searchedJob) {\n      newErrors.searchedJob = Constants.errorStrings.bannerSearchJobEmpty;\n    }\n    if (!stateData?.isMapLocationSelected && stateData?.selectedMapLocation) {\n      newErrors.selectedMapLocation =\n        Constants.errorStrings.bannerSearchLocation;\n    }\n    if (type === \"showErrorToast\") {\n      return newErrors;\n    }\n    // setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const bannerSearchClicked = (newSearchData?: any) => {\n    const newErrors = validateForm(\n      newSearchData?.isRecentSearchesClicked\n        ? newSearchData?.isRecentSearchesClicked\n        : \"showErrorToast\"\n    );\n    if (!!newErrors.searchedJob || !!newErrors.selectedMapLocation) {\n      if (!!newErrors.searchedJob) {\n        setShowToast(true, \"Please select job type from the list\");\n        return;\n      }\n      if (!!newErrors.selectedMapLocation) {\n        setShowToast(true, \"Please select location from the list\");\n        return;\n      }\n    }\n    if (validateForm(newSearchData?.isRecentSearchesClicked)) {\n      const params = new URLSearchParams(props.location?.search);\n      const queryParamsData: any = {\n        defaultLat: Number(params.get(\"defaultLat\")),\n        defaultLong: Number(params.get(\"defaultLong\")),\n      };\n      const data = {\n        page: stateData.page,\n        isFiltered: false,\n        ...(suggestionSelected && {\n          address: JSON.stringify(suggestionSelected),\n        }),\n        tradeId: newSearchData?.tradeId\n          ? newSearchData?.tradeId\n          : stateData?.tradeId,\n        ...(stateData.isMapLocationSelected && {\n          location: stateData?.location,\n        }),\n        // location: stateData?.location,\n        specializationId: newSearchData?.specializationId\n          ? newSearchData?.specializationId\n          : stateData?.specializationId,\n        ...(stateData?.from_date && { from_date: stateData?.from_date }),\n        ...(stateData?.to_date && { to_date: stateData?.to_date }),\n      };\n      console.log(\"data: \", data, \"suggestionSelected\", suggestionSelected);\n      if (props?.location?.pathname === \"/search-job-results\") {\n        props.postHomeSearchData(data);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n          category: props.tradeListData?.find(\n            (i: any) => i._id === data?.tradeId?.[0]\n          )?.trade_name,\n          ...(data.address && {\n            location: `${JSON.parse(data.address)?.mainText} ${\n              JSON.parse(data.address)?.secondaryText\n            }`,\n          }),\n          ...(data?.max_budget && { \"Max budget\": data?.max_budget }),\n          ...(data?.from_date && { \"start date\": data?.from_date }),\n          ...(data?.to_date && { \"end date\": data?.to_date }),\n        };\n        moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n      }\n      // delete data.address;\n      const newData = {\n        ...data,\n        lat: stateData.location.coordinates[1],\n        long: stateData.location.coordinates[0],\n        defaultLat: props.currentCoordinates?.coordinates[1]\n          ? props.currentCoordinates?.coordinates[1]\n          : queryParamsData.defaultLat,\n        defaultLong: props.currentCoordinates?.coordinates[0]\n          ? props.currentCoordinates?.coordinates[0]\n          : queryParamsData.defaultLong,\n        ...(stateData.selectedMapLocation && {\n          addres: stateData.selectedMapLocation.replaceAll(\"#\", \"\"),\n        }),\n        searchJob: newSearchData?.searchedJob\n          ? newSearchData?.searchedJob.replaceAll(\"&\", \"xxx\")\n          : stateData?.searchedJob.replaceAll(\"&\", \"xxx\"),\n        jobResults: null,\n      };\n      if (\n        props?.location?.pathname === \"/search-job-results\" &&\n        newData.address\n      ) {\n        setTimeout(() => {\n          props.getRecentLocationList();\n        }, 500);\n      }\n      delete newData.location;\n      delete newData.isFilterOn;\n      if (newData.searchJob) {\n        delete newData.heading;\n        delete newData.jobResults;\n      }\n      Object.keys(newData).forEach(\n        (key) =>\n          (newData[key] === \"\" ||\n            newData[key] === undefined ||\n            newData[key] === null ||\n            newData[key] === 0 ||\n            newData[key] == \"0\") &&\n          delete newData[key]\n      );\n      var url = \"search-job-results?\";\n      for (let [key, value] of Object.entries(newData)) {\n        url += `${key}=${value}&`;\n      }\n      const newUrl = url.slice(0, url.length - 1);\n      console.log(newUrl, \"newUrl\", data, \"data\", newData, \"newData\");\n      if (props.history?.location?.pathname === \"/\") {\n        props.history.push(newUrl);\n      } else {\n        props.history.replace(newUrl);\n        if (props?.refreshParams) {\n          props?.refreshParams(data);\n        }\n      }\n    }\n  };\n\n  const renderPlacesData = ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading,\n  }: any) => (\n    <React.Fragment>\n      <div className=\"text_field\">\n        <input\n          {...getInputProps({ placeholder: \"Where?\", className: \"line-1\" })}\n          id=\"location-input-tag\"\n          onFocus={() => {\n            setInputFocus2(true);\n            setInputFocus1(false);\n            setInputFocus3(false);\n          }}\n        />\n        <span className=\"detect_icon_ltr\">\n          <img src={Location} alt=\"location\" />\n        </span>\n        {stateData?.selectedMapLocation && inputFocus2 && (\n          <span className=\"detect_icon\">\n            <img\n              src={cross}\n              alt=\"cross\"\n              onClick={() => {\n                setSuggestion(\"\");\n                setStateData((prevData: any) => ({\n                  ...prevData,\n                  selectedMapLocation: \"\",\n                  isMapLocationSelected: false,\n                }));\n              }}\n            />\n          </span>\n        )}\n        {/* {!!errors.selectedMapLocation && <span className=\"error_msg\">{errors.selectedMapLocation}</span>} */}\n      </div>\n      {suggestions?.length > 0 &&\n      stateData?.selectedMapLocation.length >= 3 &&\n      inputFocus2 ? (\n        <div\n          className=\"custom_autosuggestion location\"\n          id=\"autocomplete-dropdown-container\"\n        >\n          <div className=\"flex_row recent_search auto_loc\">\n            <div className=\"flex_col_sm_4\">\n              {loading && <div>Loading...</div>}\n\n              {suggestions.map((suggestion: any) => {\n                const className = \"autosuggestion_icon card loc name\";\n                const style = suggestion.active\n                  ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\n                  : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                    key={suggestion.formattedSuggestion.mainText}\n                  >\n                    <span>{suggestion.formattedSuggestion.mainText}</span>\n                    <span className=\"name\">\n                      {suggestion.formattedSuggestion.secondaryText}\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      ) : !loading &&\n        !stateData?.isMapLocationSelected &&\n        stateData?.selectedMapLocation.length >= 3 &&\n        inputFocus2 &&\n        suggestions?.length < 1 ? (\n        <div\n          style={{ minHeight: \"50px\" }}\n          className=\"custom_autosuggestion location\"\n          id=\"autocomplete-dropdown-container\"\n        >\n          <div className=\"flex_row recent_search auto_loc\">\n            <div className=\"flex_col_sm_4\">\n              <div className=\"loc_suggestions\">{\"No Result Found.\"}</div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n\n  return (\n    <div className=\"home_search\">\n      <button\n        className=\"modal_srch_close\"\n        onClick={() => {\n          if (props?.handleChangeToggle) {\n            props.handleChangeToggle(false);\n          }\n        }}\n      >\n        <img src={close} alt=\"close\" />\n      </button>\n      <form\n        className={`search_wrapr ${\n          props.history?.location?.pathname === \"/\"\n            ? stateData?.isFirstJobSelectedCount\n              ? \"\"\n              : \"first_input\"\n            : \"\"\n        }`}\n      >\n        <ul>\n          <li className=\"categ_box\">\n            <div className=\"text_field\" id=\"text-field-div\">\n              <input\n                type=\"text\"\n                ref={searchRef}\n                placeholder=\"What jobs are you after?\"\n                value={stateData?.searchedJob}\n                onChange={handleJobChange}\n                onFocus={() => {\n                  setInputFocus1(true);\n                  setInputFocus2(false);\n                  setInputFocus3(false);\n                }}\n              />\n              <div className=\"border_eff\"></div>\n              <span className=\"detect_icon_ltr\">\n                <img src={Searchicon} alt=\"search\" />\n              </span>\n              {!!stateData?.searchedJob && inputFocus1 && (\n                <span className=\"detect_icon\">\n                  <img\n                    src={cross}\n                    alt=\"cross\"\n                    onClick={() => cleanInputData(\"searchedJob\")}\n                  />\n                </span>\n              )}\n            </div>\n            {/* {!!errors.searchedJob && <span className=\"error_msg\">{errors.searchedJob}</span>} */}\n          </li>\n          {!stateData?.searchedJob &&\n            inputFocus1 &&\n            !inputFocus2 &&\n            recentJobSearches()}\n          {stateData?.searchedJob?.length >= 1 &&\n            inputFocus1 &&\n            !inputFocus2 &&\n            renderJobResult()}\n          <li\n            ref={locationRef}\n            className=\"loc_box\"\n            style={{ display: \"block\" }}\n          >\n            <div id=\"location-text-field-div\">\n              <PlacesAutocomplete\n                value={\n                  stateData?.selectedMapLocation !== \"{}\"\n                    ? stateData?.selectedMapLocation\n                    : \"\"\n                }\n                onChange={(city: string) =>\n                  setStateData((prevData: any) => ({\n                    ...prevData,\n                    selectedMapLocation: city,\n                    isMapLocationSelected: false,\n                  }))\n                }\n                shouldFetchSuggestions={true}\n                onSelect={locationSelectedHandler}\n                highlightFirstSuggestion={true}\n                searchOptions={{\n                  componentRestrictions: { country: \"au\" },\n                  // types: [\"address\"]\n                  types: [\"(cities)\"],\n                }}\n                // debounce={400}\n              >\n                {renderPlacesData}\n              </PlacesAutocomplete>\n            </div>\n            {(!stateData?.selectedMapLocation ||\n              stateData?.selectedMapLocation === \"{}\") &&\n              inputFocus2 && (\n                <div\n                  className=\"custom_autosuggestion location\"\n                  id=\"current-location-search-div\"\n                >\n                  <a className=\"location-btn\" onClick={getCurrentLocation}>\n                    <span className=\"gps_icon\">\n                      <img src={icgps} />\n                    </span>{\" \"}\n                    Use my current location\n                  </a>\n                  {stateData?.locationDenied && (\n                    <span className=\"blocked_note\">\n                      You have blocked your location. To use this, change your\n                      location settings in browser.\n                    </span>\n                  )}\n                  <div className=\"recent_search auto_loc\">\n                    {console.log({\n                      recent: props?.recentLocationData,\n                    })}\n                    {props?.recentLocationData?.length > 0 ? (\n                      <span className=\"sub_title\">Recent searches</span>\n                    ) : null}\n                    {/* {recentLocation?.map((item: any) => {\n                                        return (\n                                            <div className=\"flex_col_sm_4\"\n                                                onClick={() => setStateData((prevData: any) => ({ ...prevData, location: item.location, selectedMapLocation: item.allText?.mainText, isMapLocationSelected: true }))}>\n                                                <div className=\"autosuggestion_icon card loc name\">\n                                                    <span>{item.allText?.mainText}</span>\n                                                    <span className=\"name\">{item.allText?.secondaryText}</span>\n                                                </div>\n                                            </div>)\n                                    })} */}\n                    <div className=\"flex_row\">\n                      {props?.recentLocationData?.map((item: any) => {\n                        return (\n                          item?.address?.length > 0 && (\n                            <div\n                              className=\"flex_col_sm_4\"\n                              onClick={() => {\n                                setStateData((prevData: any) => ({\n                                  ...prevData,\n                                  location: item.location,\n                                  selectedMapLocation: JSON.parse(item?.address)\n                                    ?.mainText, //item.allText?.mainText,\n                                  isMapLocationSelected: true,\n                                }));\n                                setSuggestion(JSON.parse(item?.address));\n\n                                // let location_coordinates: any = item.location.coordinates\n                                // setAddressText(item.formatted_address);\n                                // setSelectedAddress({\n                                //     lat: location_coordinates[1],\n                                //     lng: location_coordinates[0]\n                                // });\n                              }}\n                            >\n                              <div className=\"autosuggestion_icon card loc name\">\n                                <span>\n                                  {JSON.parse(item?.address)?.mainText}\n                                </span>\n                                <span className=\"name\">\n                                  {JSON.parse(item?.address)?.secondaryText}\n                                </span>\n                              </div>\n                            </div>\n                          )\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n              )}\n          </li>\n          <li\n            className={`date_box ${stateData.startDate ? \"date_value\" : \"\"}`}\n            style={{ display: \"block\" }}\n          >\n            <div\n              ref={calenderRef}\n              className=\"custom_date_range\"\n              id=\"date-range-div\"\n            >\n              <div className=\"text_field\">\n                <span className=\"detect_icon_ltr calendar\"></span>\n                <input\n                  type=\"text\"\n                  id=\"calender-input\"\n                  placeholder={\n                    stateData?.startDate\n                      ? `${stateData?.startDate} - ${stateData?.endDate}`\n                      : \"When?\"\n                  }\n                  onFocus={() => {\n                    setInputFocus3(true);\n                    setInputFocus1(false);\n                    setInputFocus2(false);\n                  }}\n                />\n                {stateData?.startDate && inputFocus3 && (\n                  <span className=\"detect_icon\">\n                    <img\n                      src={cross}\n                      alt=\"cross\"\n                      onClick={() => cleanInputData(\"calender\")}\n                    />\n                  </span>\n                )}\n              </div>\n              {inputFocus3 && (\n                <div\n                  className=\"custom_autosuggestion\"\n                  id=\"custom-date-range-div\"\n                >\n                  <DateRange\n                    onChange={handleCalenderRange}\n                    ranges={[calenderRange1]}\n                    moveRangeOnFirstSelection={false}\n                    rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                    showDateDisplay={false}\n                    showSelectionPreview={true}\n                    months={2}\n                    showPreview={true}\n                    minDate={new Date()}\n                    maxDate={\n                      new Date(\n                        new Date().setFullYear(new Date().getFullYear() + 2)\n                      )\n                    }\n                    direction=\"horizontal\"\n                    fixedHeight={true}\n                  />\n                </div>\n              )}\n            </div>\n          </li>\n          <div className=\"search_btn\">\n            <button\n              type=\"button\"\n              className=\"fill_btn btn-effect\"\n              onClick={bannerSearchClicked}\n            >\n              <img src={search} alt=\"search\" />\n            </button>\n          </div>\n        </ul>\n      </form>\n    </div>\n  );\n};\n\nexport default TradieBannerSearch;\n"]},"metadata":{},"sourceType":"module"}