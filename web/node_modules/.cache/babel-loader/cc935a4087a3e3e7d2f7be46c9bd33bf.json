{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/userMessages.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { getJobDetails } from \"../../redux/jobs/actions\";\nimport storageService from \"../../utils/storageService\";\nimport notFound from \"../../assets/images/not-found.png\";\nimport chatVideoIcon from \"../../assets/images/video@3x.png\";\nimport dummy from \"../../assets/images/u_placeholder.jpg\";\nimport viewMore from \"../../assets/images/icon-direction-blue.png\";\nimport close from \"../../assets/images/ic-cancel-blue.png\";\nimport sendMedia from \"../../assets/images/ic-media.png\";\nimport sendBtn from \"../../assets/images/ic-send.png\";\nimport loader from \"../../assets/images/loader.gif\";\nimport { formatDateTime, renderTime } from \"../../utils/common\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport { onFileUpload } from \"../../redux/auth/actions\";\nimport { getMessagesOfRoom, sendTextMessage, sendImageVideoMessage } from \"../../services/firebase\";\nimport Constants from \"../../utils/constants\"; //@ts-ignore\n\nimport FsLightbox from \"fslightbox-react\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet lastDate = \"\";\nconst docTypes = [\"jpeg\", \"jpg\", \"png\", \"mp4\", \"wmv\", \"avi\"];\n\nconst UserMessages = props => {\n  _s();\n\n  var _storageService$getIt, _props$roomData16, _props$roomData16$opp, _props$roomData19, _props$roomData19$opp, _props$roomData21, _props$roomData21$opp, _props$roomData22, _props$roomData22$opp;\n\n  const divRref = useRef(null);\n  const [userId] = useState((_storageService$getIt = storageService.getItem(\"userInfo\")) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id);\n  const [toggle, setToggle] = useState(false);\n  const [jobDetailLoader, setJobDetailLoader] = useState(false);\n  const [currentJobDetails, setCurrentJobDetails] = useState(null);\n  const [messageText, setMessageText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isDocUploading, setIsDocUploading] = useState(false);\n  const [itemsMedia, setItemsMedia] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [fsSlideListner, setFsSlideListner] = useState({});\n  const [oppUserFcmToken, setOppUserFcmToken] = useState(\"\");\n  useEffect(() => {\n    if (props.roomId !== \"\") {\n      lastDate = \"\";\n      getMessagesOfRoom(props.roomId, onReceiveOfNewMsg);\n      setSelectSlide(1);\n      setFsSlideListner({});\n      setItemsMedia([]);\n      setCurrentJobDetails(null);\n      setToggle(false);\n    }\n  }, [props.roomId]); // }, [props.roomId, props.roomData]);\n  //console.log('props.roomData: ', props.roomData);\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  const scrollToBottom = () => {\n    if (null !== (divRref === null || divRref === void 0 ? void 0 : divRref.current)) {\n      const scroll = divRref.current.scrollHeight - divRref.current.clientHeight; // divRref.current.scrollIntoView({ behavior: \"smooth\" })\n\n      divRref.current.scrollTo(0, scroll);\n    }\n  };\n\n  const onReceiveOfNewMsg = arrmsg => {\n    // console.log('arrmsg: ', arrmsg);\n    setMessages(arrmsg);\n  };\n\n  useEffect(() => {\n    let fsSlideObj = {};\n    let mediaMsgs = [];\n    let slideCount = 1;\n\n    if (messages.length) {\n      mediaMsgs = messages.filter((item, index) => {\n        if (item.messageType === \"image\" || item.messageType === \"video\") {\n          fsSlideObj[`${index}`] = slideCount++;\n          return item;\n        }\n      });\n      setItemsMedia(mediaMsgs);\n      setFsSlideListner(fsSlideObj);\n    }\n  }, [messages]); // console.log('itemsMedia: ', itemsMedia, \"fsSlideListner\", fsSlideListner);\n\n  const setInboxToTopWithLastMsg = lastMsg => {\n    const newInboxData = [...props.inBoxData];\n    const currentIndex = newInboxData.findIndex(i => i.roomId === props.roomId);\n    newInboxData[currentIndex].lastMsg = lastMsg;\n    newInboxData.splice(currentIndex, 1);\n    newInboxData.unshift(props.inBoxData[currentIndex]);\n    props.setInBoxData(newInboxData); // console.log('lastMsg: ', lastMsg);\n    // console.log('currentIndex: ', currentIndex);\n    // console.log('newInboxData: ', newInboxData);\n  };\n\n  const sendMessage = async () => {\n    //setIsLoading(true);\n    if (messageText && messageText.trimLeft() !== \"\") {\n      var _props$roomData, _props$roomData$oppUs, _props$roomData2, _props$roomData2$oppU, _props$roomData3, _props$roomData3$oppU, _props$roomData4, _props$roomData4$oppU;\n\n      setMessageText(\"\");\n      const lastMsg = await sendTextMessage(props.roomId, messageText);\n\n      if (lastMsg && ((_props$roomData = props.roomData) === null || _props$roomData === void 0 ? void 0 : (_props$roomData$oppUs = _props$roomData.oppUserInfo) === null || _props$roomData$oppUs === void 0 ? void 0 : _props$roomData$oppUs.deviceToken) && ((_props$roomData2 = props.roomData) === null || _props$roomData2 === void 0 ? void 0 : (_props$roomData2$oppU = _props$roomData2.oppUserInfo) === null || _props$roomData2$oppU === void 0 ? void 0 : _props$roomData2$oppU.deviceType) && (((_props$roomData3 = props.roomData) === null || _props$roomData3 === void 0 ? void 0 : (_props$roomData3$oppU = _props$roomData3.oppUserInfo) === null || _props$roomData3$oppU === void 0 ? void 0 : _props$roomData3$oppU.hasOwnProperty(\"isNotification\")) ? (_props$roomData4 = props.roomData) === null || _props$roomData4 === void 0 ? void 0 : (_props$roomData4$oppU = _props$roomData4.oppUserInfo) === null || _props$roomData4$oppU === void 0 ? void 0 : _props$roomData4$oppU.isNotification : true)) {\n        sendFCMPushNotificationToOppUser(lastMsg);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp()\n        };\n        moengage.moE_SendEvent(MoEConstants.CHAT, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.CHAT, mData);\n      }\n\n      setInboxToTopWithLastMsg(lastMsg);\n    }\n  };\n\n  const handleKeyDown = event => {\n    console.log(\"event.key => \", event.key);\n    console.log(\"evt.keyCode => \", event.keyCode);\n    console.log(\"evt.shiftKey => \", event.shiftKey);\n\n    if (!event.shiftKey && event.key === \"Enter\") {\n      event.preventDefault();\n      sendMessage();\n      event.target.value = null;\n      setMessageText(\"\");\n      console.log(\"after \", event.target.value);\n    } //  else if (event.key === \"Enter\") {\n    //     // if (event.key === \"Enter\" && event.key === \"Enter\") {\n    //     // }\n    //     event.preventDefault();\n    //     sendMessage();\n    //     console.log(\"before \", event.target.value);\n    //     event.target.value = null;\n    //     setMessageText(\"\");\n    //     console.log(\"after \", event.target.value);\n    //   }\n\n  };\n\n  const sendImageVideoMsg = async (url, msgType) => {\n    //setIsLoading(true);\n    if (url && url !== \"\") {\n      var _props$roomData5, _props$roomData5$oppU, _props$roomData6, _props$roomData6$oppU, _props$roomData7, _props$roomData7$oppU, _props$roomData8, _props$roomData8$oppU;\n\n      const lastMsg = await sendImageVideoMessage(props.roomId, url, msgType);\n\n      if (lastMsg && ((_props$roomData5 = props.roomData) === null || _props$roomData5 === void 0 ? void 0 : (_props$roomData5$oppU = _props$roomData5.oppUserInfo) === null || _props$roomData5$oppU === void 0 ? void 0 : _props$roomData5$oppU.deviceToken) && ((_props$roomData6 = props.roomData) === null || _props$roomData6 === void 0 ? void 0 : (_props$roomData6$oppU = _props$roomData6.oppUserInfo) === null || _props$roomData6$oppU === void 0 ? void 0 : _props$roomData6$oppU.deviceType) && (((_props$roomData7 = props.roomData) === null || _props$roomData7 === void 0 ? void 0 : (_props$roomData7$oppU = _props$roomData7.oppUserInfo) === null || _props$roomData7$oppU === void 0 ? void 0 : _props$roomData7$oppU.hasOwnProperty(\"isNotification\")) ? (_props$roomData8 = props.roomData) === null || _props$roomData8 === void 0 ? void 0 : (_props$roomData8$oppU = _props$roomData8.oppUserInfo) === null || _props$roomData8$oppU === void 0 ? void 0 : _props$roomData8$oppU.isNotification : true)) {\n        sendFCMPushNotificationToOppUser(lastMsg);\n      }\n\n      setInboxToTopWithLastMsg(lastMsg);\n    }\n\n    setMessageText(\"\");\n  };\n\n  const fetchJobDetail = async jobId => {\n    setJobDetailLoader(true);\n    const res = await getJobDetails(jobId);\n\n    if (res.success) {\n      var _res$data, _res$data2, _res$data3, _res$data4, _res$data5, _res$data6, _res$data7, _res$data8, _res$data9;\n\n      const jobInfo = {\n        jobDescription: ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.details) || \"\",\n        jobId: ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.jobId) || \"\",\n        jobName: ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.jobName) || \"\",\n        amount: ((_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.amount) || \"\",\n        locationName: ((_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : _res$data5.locationName) || \"\",\n        fromDate: ((_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.fromDate) || \"\",\n        toDate: ((_res$data7 = res.data) === null || _res$data7 === void 0 ? void 0 : _res$data7.toDate) || \"\",\n        duration: ((_res$data8 = res.data) === null || _res$data8 === void 0 ? void 0 : _res$data8.duration) || \"\",\n        status: ((_res$data9 = res.data) === null || _res$data9 === void 0 ? void 0 : _res$data9.status) || \"\"\n      };\n      setCurrentJobDetails(jobInfo);\n      setJobDetailLoader(false);\n    }\n  };\n\n  const renderMediaItems = itemsMedia => {\n    let sources = [];\n    let types = [];\n\n    if (itemsMedia.length) {\n      itemsMedia.forEach(item => {\n        if (item.messageType === \"video\") {\n          sources.push(item.mediaUrl);\n          types.push(\"video\");\n        }\n\n        if (item.messageType === \"image\") {\n          sources.push(item.mediaUrl);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const setResDeviceType = (deviceType, msg) => {\n    var _storageService$getIt2, _storageService$getIt3, _storageService$getIt4, _storageService$getIt5, _storageService$getIt6, _msg$messageRoomId, _msg$messageRoomId$sp, _storageService$getIt7, _props$roomData9, _storageService$getIt8, _storageService$getIt9, _storageService$getIt10, _msg$messageRoomId2, _msg$messageRoomId2$s, _storageService$getIt11, _props$roomData10;\n\n    switch (Number(deviceType)) {\n      case 1:\n        return {\n          app_icon: \"https://appinventiv-development.s3.amazonaws.com/1628513615740ic-logo-yellow.png\",\n          title: \"Tickt App\",\n          notificationText: `${(_storageService$getIt2 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt2 === void 0 ? void 0 : _storageService$getIt2.userName} send you a message`,\n          senderName: `${(_storageService$getIt3 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt3 === void 0 ? void 0 : _storageService$getIt3.userName}`,\n          messageType: `${msg === null || msg === void 0 ? void 0 : msg.messageType}`,\n          messageText: `${(msg === null || msg === void 0 ? void 0 : msg.messageType) === \"text\" ? msg === null || msg === void 0 ? void 0 : msg.messageText : \"\"}`,\n          room_id: msg === null || msg === void 0 ? void 0 : msg.messageRoomId,\n          image: (_storageService$getIt4 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt4 === void 0 ? void 0 : _storageService$getIt4.user_image,\n          notificationType: 25,\n          sound: \"default\"\n        };\n\n      case 2:\n        return {\n          body: msg === null || msg === void 0 ? void 0 : msg.messageText,\n          messageText: msg === null || msg === void 0 ? void 0 : msg.messageText,\n          sender: {\n            first_name: (_storageService$getIt5 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt5 === void 0 ? void 0 : _storageService$getIt5.userName,\n            device_token: storageService.getItem(\"fcmToken\"),\n            user_id: (_storageService$getIt6 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt6 === void 0 ? void 0 : _storageService$getIt6._id,\n            device_type: 2\n          },\n          jobId: msg === null || msg === void 0 ? void 0 : (_msg$messageRoomId = msg.messageRoomId) === null || _msg$messageRoomId === void 0 ? void 0 : (_msg$messageRoomId$sp = _msg$messageRoomId.split(\"_\")) === null || _msg$messageRoomId$sp === void 0 ? void 0 : _msg$messageRoomId$sp[0],\n          badge: 1,\n          device_type: 2,\n          title: (_storageService$getIt7 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt7 === void 0 ? void 0 : _storageService$getIt7.userName,\n          jobName: (_props$roomData9 = props.roomData) === null || _props$roomData9 === void 0 ? void 0 : _props$roomData9.jobName,\n          notification_type: 50,\n          sound: \"default\",\n          messageId: msg === null || msg === void 0 ? void 0 : msg.messageId\n        };\n\n      case 3:\n        return {\n          notification: {\n            body: msg === null || msg === void 0 ? void 0 : msg.messageText,\n            title: (_storageService$getIt8 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt8 === void 0 ? void 0 : _storageService$getIt8.userName\n          },\n          data: {\n            body: msg === null || msg === void 0 ? void 0 : msg.messageText,\n            messageText: msg === null || msg === void 0 ? void 0 : msg.messageText,\n            sender: {\n              first_name: (_storageService$getIt9 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt9 === void 0 ? void 0 : _storageService$getIt9.userName,\n              device_token: storageService.getItem(\"fcmToken\"),\n              user_id: (_storageService$getIt10 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt10 === void 0 ? void 0 : _storageService$getIt10._id,\n              device_type: 2\n            },\n            jobId: msg === null || msg === void 0 ? void 0 : (_msg$messageRoomId2 = msg.messageRoomId) === null || _msg$messageRoomId2 === void 0 ? void 0 : (_msg$messageRoomId2$s = _msg$messageRoomId2.split(\"_\")) === null || _msg$messageRoomId2$s === void 0 ? void 0 : _msg$messageRoomId2$s[0],\n            badge: 1,\n            device_type: 2,\n            title: (_storageService$getIt11 = storageService.getItem(\"userInfo\")) === null || _storageService$getIt11 === void 0 ? void 0 : _storageService$getIt11.userName,\n            jobName: (_props$roomData10 = props.roomData) === null || _props$roomData10 === void 0 ? void 0 : _props$roomData10.jobName,\n            notification_type: 50,\n            sound: \"default\",\n            messageId: msg === null || msg === void 0 ? void 0 : msg.messageId\n          }\n        };\n\n      default:\n        return;\n    }\n  };\n\n  const sendFCMPushNotificationToOppUser = async msg => {\n    var _props$roomData11, _props$roomData11$opp, _props$roomData12, _props$roomData12$opp, _props$roomData13, _props$roomData13$opp, _props$roomData14, _props$roomData14$opp, _props$roomData15, _props$roomData15$opp;\n\n    let data = setResDeviceType((_props$roomData11 = props.roomData) === null || _props$roomData11 === void 0 ? void 0 : (_props$roomData11$opp = _props$roomData11.oppUserInfo) === null || _props$roomData11$opp === void 0 ? void 0 : _props$roomData11$opp.deviceType, msg);\n    let newData = {\n      to: `${(_props$roomData12 = props.roomData) === null || _props$roomData12 === void 0 ? void 0 : (_props$roomData12$opp = _props$roomData12.oppUserInfo) === null || _props$roomData12$opp === void 0 ? void 0 : _props$roomData12$opp.deviceToken}`,\n      ...(((_props$roomData13 = props.roomData) === null || _props$roomData13 === void 0 ? void 0 : (_props$roomData13$opp = _props$roomData13.oppUserInfo) === null || _props$roomData13$opp === void 0 ? void 0 : _props$roomData13$opp.deviceType) == 1 && {\n        data: data\n      }),\n      ...(((_props$roomData14 = props.roomData) === null || _props$roomData14 === void 0 ? void 0 : (_props$roomData14$opp = _props$roomData14.oppUserInfo) === null || _props$roomData14$opp === void 0 ? void 0 : _props$roomData14$opp.deviceType) == 2 && {\n        notification: data\n      }),\n      ...(((_props$roomData15 = props.roomData) === null || _props$roomData15 === void 0 ? void 0 : (_props$roomData15$opp = _props$roomData15.oppUserInfo) === null || _props$roomData15$opp === void 0 ? void 0 : _props$roomData15$opp.deviceType) == 3 && {\n        notification: data === null || data === void 0 ? void 0 : data.notification,\n        data: data === null || data === void 0 ? void 0 : data.data\n      })\n    };\n    const headers_ = {\n      \"Content-Type\": \"application/json\",\n      Authorization: Constants.FcmHeaderAuthorizationKey\n    };\n    const response = await fetch(`https://fcm.googleapis.com/fcm/send`, {\n      method: \"POST\",\n      headers: headers_,\n      body: JSON.stringify(newData)\n    }); // const res: any = await response.json();\n\n    if (response.status === 200) {\n      console.log(\"Chat push notification send to opposite user: success\");\n    } else {\n      console.log(\"Chat push notification send to opposite user: failure\");\n    }\n  };\n\n  const handleUpload = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    let maxFileSize = 10;\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mb\n\n    if ([\"mp4\", \"wmv\", \"avi\"].includes(fileType)) {\n      maxFileSize = 20;\n    }\n\n    if (docTypes.indexOf(fileType) < 0 || selectedFileSize > maxFileSize) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    setIsDocUploading(true);\n    let check_type = [\"jpeg\", \"jpg\", \"png\"].includes(fileType) ? 1 : [\"mp4\", \"wmv\", \"avi\"].includes(fileType) ? 2 : null;\n    const res = await onFileUpload(formData);\n\n    if (res.success && res.imgUrl) {\n      if (check_type === 1) {\n        sendImageVideoMsg(res.imgUrl, \"image\");\n      } else if (check_type === 2) {\n        sendImageVideoMsg(res.imgUrl, \"video\");\n      } else {\n        setShowToast(true, \"There is some technical issue\");\n      }\n\n      setIsDocUploading(false); // setLocalFiles((prev: any) => ({ ...prev, [filesUrl?.length]: URL.createObjectURL(newFile) }));\n    }\n  };\n\n  const renderTextMsg = msg => {\n    let curDate = formatDateTime(msg.messageTimestamp, \"day\");\n    const messageClass = msg.senderId === userId ? \"message\" : \"message recive_msg\";\n\n    if (lastDate === \"\" || lastDate !== curDate) {\n      lastDate = curDate;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: curDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `${msg.senderId === userId ? \"mark\" : \"\"}`,\n            children: [msg.messageText, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: formatDateTime(msg.messageTimestamp, \"time\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${messageClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.senderId === userId ? \"mark\" : \"\"}`,\n        children: [msg.messageText, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: formatDateTime(msg.messageTimestamp, \"time\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this);\n  };\n\n  const renderImageMsg = (msg, index) => {\n    let curDate = formatDateTime(msg.messageTimestamp, \"day\");\n    const messageClass = msg.senderId === userId ? \"message\" : \"message recive_msg\";\n\n    if (lastDate === \"\" || lastDate !== curDate) {\n      lastDate = curDate;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: curDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"media\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.mediaUrl || notFound,\n              alt: \"media\",\n              \"async-src\": msg.mediaUrl || notFound,\n              decoding: \"async\",\n              loading: \"lazy\",\n              onError: e => {\n                var _e$target, _e$target2;\n\n                if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                  e.target.onerror = null;\n                }\n\n                if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                  e.target.src = notFound;\n                }\n              },\n              onClick: () => {\n                setToggler(prev => !prev);\n                setSelectSlide(fsSlideListner[`${index}`]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: formatDateTime(msg.messageTimestamp, \"time\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${messageClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"media\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.mediaUrl || notFound,\n          alt: \"media\",\n          \"async-src\": msg.mediaUrl || notFound,\n          decoding: \"async\",\n          loading: \"lazy\",\n          onError: e => {\n            var _e$target3, _e$target4;\n\n            if (e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.onerror) {\n              e.target.onerror = null;\n            }\n\n            if (e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.src) {\n              e.target.src = notFound;\n            }\n          },\n          onClick: () => {\n            setToggler(prev => !prev);\n            setSelectSlide(fsSlideListner[`${index}`]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: formatDateTime(msg.messageTimestamp, \"time\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this);\n  };\n\n  const renderVideoMsg = (msg, index) => {\n    let curDate = formatDateTime(msg.messageTimestamp, \"day\");\n    const messageClass = msg.senderId === userId ? \"message\" : \"message recive_msg\";\n\n    if (lastDate === \"\" || lastDate !== curDate) {\n      lastDate = curDate;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: curDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"media media_video \",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              src: msg.mediaUrl || notFound,\n              poster: chatVideoIcon,\n              onClick: () => {\n                setToggler(prev => !prev);\n                setSelectSlide(fsSlideListner[`${index}`]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: formatDateTime(msg.messageTimestamp, \"time\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${messageClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"media media_video \",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          src: msg.mediaUrl || notFound,\n          poster: chatVideoIcon,\n          onClick: () => {\n            setToggler(prev => !prev);\n            setSelectSlide(fsSlideListner[`${index}`]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: formatDateTime(msg.messageTimestamp, \"time\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }, this);\n  };\n\n  const displayMessages = (msg, index) => {\n    if (index === 0) lastDate = \"\";\n\n    switch (msg.messageType) {\n      case \"text\":\n        return renderTextMsg(msg);\n\n      case \"image\":\n        return renderImageMsg(msg, index);\n\n      case \"video\":\n        return renderVideoMsg(msg, index);\n    }\n  };\n\n  const {\n    sources,\n    types\n  } = renderMediaItems(itemsMedia);\n  return props.isNoRecords ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FsLightbox, {\n      toggler: toggler,\n      slide: selectedSlide,\n      sources: sources,\n      types: types,\n      // disableLocalStorage={true}\n      onClose: () => {\n        setSelectSlide(1);\n      }\n    }, sources === null || sources === void 0 ? void 0 : sources.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail_col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat_col ${toggle ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_user\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_props$roomData16 = props.roomData) === null || _props$roomData16 === void 0 ? void 0 : (_props$roomData16$opp = _props$roomData16.oppUserInfo) === null || _props$roomData16$opp === void 0 ? void 0 : _props$roomData16$opp.image) || dummy,\n                alt: \"user-img\",\n                onError: e => {\n                  var _e$target5, _e$target6;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target5 = e.target) === null || _e$target5 === void 0 ? void 0 : _e$target5.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target6 = e.target) === null || _e$target6 === void 0 ? void 0 : _e$target6.src) {\n                    e.target.src = dummy;\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              onClick: () => {\n                if (storageService.getItem(\"userType\") === 2) {\n                  var _props$roomData17, _props$roomData17$opp;\n\n                  props.history.push(`/tradie-info?tradeId=${(_props$roomData17 = props.roomData) === null || _props$roomData17 === void 0 ? void 0 : (_props$roomData17$opp = _props$roomData17.oppUserInfo) === null || _props$roomData17$opp === void 0 ? void 0 : _props$roomData17$opp.userId}&hideInvite=true`);\n                } else {\n                  var _props$roomData18, _props$roomData18$opp;\n\n                  props.history.push(`/builder-info?builderId=${(_props$roomData18 = props.roomData) === null || _props$roomData18 === void 0 ? void 0 : (_props$roomData18$opp = _props$roomData18.oppUserInfo) === null || _props$roomData18$opp === void 0 ? void 0 : _props$roomData18$opp.userId}`);\n                }\n              },\n              children: (_props$roomData19 = props.roomData) === null || _props$roomData19 === void 0 ? void 0 : (_props$roomData19$opp = _props$roomData19.oppUserInfo) === null || _props$roomData19$opp === void 0 ? void 0 : _props$roomData19$opp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this), !toggle && /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                var _props$roomData20;\n\n                setToggle(true);\n                if (currentJobDetails) return;\n                fetchJobDetail((_props$roomData20 = props.roomData) === null || _props$roomData20 === void 0 ? void 0 : _props$roomData20.jobId);\n              },\n              className: \"view_detail\",\n              children: [\"View Job Details\", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: viewMore,\n                alt: \"view-more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message_wrapr\",\n            ref: divRref,\n            children: [messages.length > 0 && messages.map((msg, index) => {\n              return displayMessages(msg, index);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date_time\",\n              children: ((_props$roomData21 = props.roomData) === null || _props$roomData21 === void 0 ? void 0 : (_props$roomData21$opp = _props$roomData21.oppUserInfo) === null || _props$roomData21$opp === void 0 ? void 0 : _props$roomData21$opp.isBlock) && /*#__PURE__*/_jsxDEV(\"i\", {\n                style: {\n                  color: \"#929292\"\n                },\n                children: \"You can no longer chat with the user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), !((_props$roomData22 = props.roomData) === null || _props$roomData22 === void 0 ? void 0 : (_props$roomData22$opp = _props$roomData22.oppUserInfo) === null || _props$roomData22$opp === void 0 ? void 0 : _props$roomData22$opp.isBlock) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send_msg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload_item\",\n                htmlFor: \"upload_item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detect_icon_ltr\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: sendMedia,\n                    alt: \"media\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"upload_item\",\n                className: \"hide\",\n                type: \"file\",\n                accept: \"image/png,image/jpg,image/jpeg, video/mp4, video/wmv, video/avi\",\n                onChange: handleUpload,\n                disabled: isDocUploading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Message..\",\n                onKeyDown: handleKeyDown,\n                value: messageText,\n                onChange: e => setMessageText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: sendBtn,\n                  alt: \"send\",\n                  onClick: sendMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 11\n        }, this), toggle && jobDetailLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view_detail_col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no_record\",\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loader,\n                alt: \"loader\",\n                width: \"130px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this) : toggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view_detail_col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"f_spacebw relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title line-2 pr-20\",\n              children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                setToggle(prev => !prev);\n              },\n              className: \"close\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: close,\n                alt: \"close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon clock\",\n                children: renderTime(currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.fromDate, currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.toDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon location line-1\",\n                children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.locationName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para\",\n            children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn full_btn btn-effect\",\n            onClick: () => {\n              if (storageService.getItem(\"userType\") === 1) {\n                props.history.push(`/job-details-page?jobId=${currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobId}&redirect_from=jobs`);\n              } else {\n                // let urlEncode: any = window.btoa(`?jobId=${currentJobDetails?.jobId}&status=${currentJobDetails?.status}&edit=true&activeType=active`)\n                let urlEncode = `?jobId=${currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobId}&status=${currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.status}&edit=true&activeType=active`;\n                props.history.push(`/job-detail?${urlEncode}`);\n              }\n            },\n            children: \"View Job details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserMessages, \"MGD1Q1j3QlKIzjJl3KAyft+fNOY=\");\n\n_c = UserMessages;\nexport default UserMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserMessages\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/userMessages.tsx"],"names":["React","useState","useEffect","useRef","getJobDetails","storageService","notFound","chatVideoIcon","dummy","viewMore","close","sendMedia","sendBtn","loader","formatDateTime","renderTime","setShowToast","onFileUpload","getMessagesOfRoom","sendTextMessage","sendImageVideoMessage","Constants","FsLightbox","moengage","mixPanel","MoEConstants","lastDate","docTypes","UserMessages","props","divRref","userId","getItem","_id","toggle","setToggle","jobDetailLoader","setJobDetailLoader","currentJobDetails","setCurrentJobDetails","messageText","setMessageText","messages","setMessages","isDocUploading","setIsDocUploading","itemsMedia","setItemsMedia","toggler","setToggler","selectedSlide","setSelectSlide","fsSlideListner","setFsSlideListner","oppUserFcmToken","setOppUserFcmToken","roomId","onReceiveOfNewMsg","scrollToBottom","current","scroll","scrollHeight","clientHeight","scrollTo","arrmsg","fsSlideObj","mediaMsgs","slideCount","length","filter","item","index","messageType","setInboxToTopWithLastMsg","lastMsg","newInboxData","inBoxData","currentIndex","findIndex","i","splice","unshift","setInBoxData","sendMessage","trimLeft","roomData","oppUserInfo","deviceToken","deviceType","hasOwnProperty","isNotification","sendFCMPushNotificationToOppUser","mData","timeStamp","getCurrentTimeStamp","moE_SendEvent","CHAT","mixP_SendEvent","handleKeyDown","event","console","log","key","keyCode","shiftKey","preventDefault","target","value","sendImageVideoMsg","url","msgType","fetchJobDetail","jobId","res","success","jobInfo","jobDescription","data","details","jobName","amount","locationName","fromDate","toDate","duration","status","renderMediaItems","sources","types","forEach","push","mediaUrl","setResDeviceType","msg","Number","app_icon","title","notificationText","userName","senderName","room_id","messageRoomId","image","user_image","notificationType","sound","body","sender","first_name","device_token","user_id","device_type","split","badge","notification_type","messageId","notification","newData","to","headers_","Authorization","FcmHeaderAuthorizationKey","response","fetch","method","headers","JSON","stringify","handleUpload","e","maxFileSize","formData","FormData","newFile","files","fileType","type","toLowerCase","selectedFileSize","size","includes","indexOf","append","check_type","imgUrl","renderTextMsg","curDate","messageTimestamp","messageClass","senderId","renderImageMsg","onerror","src","prev","renderVideoMsg","displayMessages","isNoRecords","history","name","map","isBlock","color","urlEncode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { getJobDetails } from \"../../redux/jobs/actions\";\nimport storageService from \"../../utils/storageService\";\n\nimport notFound from \"../../assets/images/not-found.png\";\nimport chatVideoIcon from \"../../assets/images/video@3x.png\";\nimport dummy from \"../../assets/images/u_placeholder.jpg\";\nimport viewMore from \"../../assets/images/icon-direction-blue.png\";\nimport close from \"../../assets/images/ic-cancel-blue.png\";\nimport sendMedia from \"../../assets/images/ic-media.png\";\nimport sendBtn from \"../../assets/images/ic-send.png\";\nimport loader from \"../../assets/images/loader.gif\";\n\nimport { formatDateTime, renderTime } from \"../../utils/common\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport { onFileUpload } from \"../../redux/auth/actions\";\nimport {\n  getMessagesOfRoom,\n  sendTextMessage,\n  sendImageVideoMessage,\n} from \"../../services/firebase\";\n\nimport Constants from \"../../utils/constants\";\n\n//@ts-ignore\nimport FsLightbox from \"fslightbox-react\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\ninterface Types {\n  [key: string]: any | string;\n}\n\nlet lastDate = \"\";\nconst docTypes: Array<any> = [\"jpeg\", \"jpg\", \"png\", \"mp4\", \"wmv\", \"avi\"];\n\nconst UserMessages = (props: any) => {\n  const divRref = useRef<HTMLDivElement>(null);\n  const [userId] = useState<string>(storageService.getItem(\"userInfo\")?._id);\n  const [toggle, setToggle] = useState<boolean>(false);\n  const [jobDetailLoader, setJobDetailLoader] = useState<boolean>(false);\n  const [currentJobDetails, setCurrentJobDetails] = useState<any>(null);\n  const [messageText, setMessageText] = useState<any>(\"\");\n  const [messages, setMessages] = useState<Array<any>>([]);\n  const [isDocUploading, setIsDocUploading] = useState<boolean>(false);\n\n  const [itemsMedia, setItemsMedia] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState<any>(1);\n  const [fsSlideListner, setFsSlideListner] = useState<any>({});\n  const [oppUserFcmToken, setOppUserFcmToken] = useState<any>(\"\");\n\n  useEffect(() => {\n    if (props.roomId !== \"\") {\n      lastDate = \"\";\n      getMessagesOfRoom(props.roomId, onReceiveOfNewMsg);\n      setSelectSlide(1);\n      setFsSlideListner({});\n      setItemsMedia([]);\n      setCurrentJobDetails(null);\n      setToggle(false);\n    }\n  }, [props.roomId]);\n  // }, [props.roomId, props.roomData]);\n  //console.log('props.roomData: ', props.roomData);\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  const scrollToBottom = () => {\n    if (null !== divRref?.current) {\n      const scroll =\n        divRref.current.scrollHeight - divRref.current.clientHeight;\n      // divRref.current.scrollIntoView({ behavior: \"smooth\" })\n      divRref.current.scrollTo(0, scroll);\n    }\n  };\n\n  const onReceiveOfNewMsg = (arrmsg: any) => {\n    // console.log('arrmsg: ', arrmsg);\n    setMessages(arrmsg);\n  };\n\n  useEffect(() => {\n    let fsSlideObj: any = {};\n    let mediaMsgs: any = [];\n    let slideCount = 1;\n    if (messages.length) {\n      mediaMsgs = messages.filter((item: any, index: number) => {\n        if (item.messageType === \"image\" || item.messageType === \"video\") {\n          fsSlideObj[`${index}`] = slideCount++;\n          return item;\n        }\n      });\n      setItemsMedia(mediaMsgs);\n      setFsSlideListner(fsSlideObj);\n    }\n  }, [messages]);\n  // console.log('itemsMedia: ', itemsMedia, \"fsSlideListner\", fsSlideListner);\n\n  const setInboxToTopWithLastMsg = (lastMsg: any) => {\n    const newInboxData = [...props.inBoxData];\n    const currentIndex = newInboxData.findIndex(\n      (i) => i.roomId === props.roomId\n    );\n    newInboxData[currentIndex].lastMsg = lastMsg;\n    newInboxData.splice(currentIndex, 1);\n    newInboxData.unshift(props.inBoxData[currentIndex]);\n    props.setInBoxData(newInboxData);\n    // console.log('lastMsg: ', lastMsg);\n    // console.log('currentIndex: ', currentIndex);\n    // console.log('newInboxData: ', newInboxData);\n  };\n\n  const sendMessage = async () => {\n    //setIsLoading(true);\n    if (messageText && messageText.trimLeft() !== \"\") {\n      setMessageText(\"\");\n      const lastMsg: any = await sendTextMessage(props.roomId, messageText);\n      if (\n        lastMsg &&\n        props.roomData?.oppUserInfo?.deviceToken &&\n        props.roomData?.oppUserInfo?.deviceType &&\n        (props.roomData?.oppUserInfo?.hasOwnProperty(\"isNotification\")\n          ? props.roomData?.oppUserInfo?.isNotification\n          : true)\n      ) {\n        sendFCMPushNotificationToOppUser(lastMsg);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n        };\n        moengage.moE_SendEvent(MoEConstants.CHAT, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.CHAT, mData);\n      }\n      setInboxToTopWithLastMsg(lastMsg);\n    }\n  };\n\n  const handleKeyDown = (event: any) => {\n    console.log(\"event.key => \", event.key);\n    console.log(\"evt.keyCode => \", event.keyCode);\n    console.log(\"evt.shiftKey => \", event.shiftKey);\n      if (!event.shiftKey && event.key === \"Enter\") {\n    event.preventDefault();\n    sendMessage();\n    \n    event.target.value = null;\n    setMessageText(\"\");\n    console.log(\"after \", event.target.value);\n}\n//  else if (event.key === \"Enter\") {\n//     // if (event.key === \"Enter\" && event.key === \"Enter\") {\n//     // }\n//     event.preventDefault();\n//     sendMessage();\n//     console.log(\"before \", event.target.value);\n//     event.target.value = null;\n//     setMessageText(\"\");\n//     console.log(\"after \", event.target.value);\n//   }\n  };\n\n  const sendImageVideoMsg = async (url: string, msgType: string) => {\n    //setIsLoading(true);\n    if (url && url !== \"\") {\n      const lastMsg: any = await sendImageVideoMessage(\n        props.roomId,\n        url,\n        msgType\n      );\n      if (\n        lastMsg &&\n        props.roomData?.oppUserInfo?.deviceToken &&\n        props.roomData?.oppUserInfo?.deviceType &&\n        (props.roomData?.oppUserInfo?.hasOwnProperty(\"isNotification\")\n          ? props.roomData?.oppUserInfo?.isNotification\n          : true)\n      ) {\n        sendFCMPushNotificationToOppUser(lastMsg);\n      }\n      setInboxToTopWithLastMsg(lastMsg);\n    }\n    setMessageText(\"\");\n  };\n\n  const fetchJobDetail = async (jobId: any) => {\n    setJobDetailLoader(true);\n    const res = await getJobDetails(jobId);\n    if (res.success) {\n      const jobInfo = {\n        jobDescription: res.data?.details || \"\",\n        jobId: res.data?.jobId || \"\",\n        jobName: res.data?.jobName || \"\",\n        amount: res.data?.amount || \"\",\n        locationName: res.data?.locationName || \"\",\n        fromDate: res.data?.fromDate || \"\",\n        toDate: res.data?.toDate || \"\",\n        duration: res.data?.duration || \"\",\n        status: res.data?.status || \"\",\n      };\n      setCurrentJobDetails(jobInfo);\n      setJobDetailLoader(false);\n    }\n  };\n\n  const renderMediaItems = (itemsMedia: any) => {\n    let sources: any = [];\n    let types: any = [];\n\n    if (itemsMedia.length) {\n      itemsMedia.forEach((item: any) => {\n        if (item.messageType === \"video\") {\n          sources.push(item.mediaUrl);\n          types.push(\"video\");\n        }\n        if (item.messageType === \"image\") {\n          sources.push(item.mediaUrl);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return { sources, types };\n  };\n\n  const setResDeviceType = (deviceType: number, msg: any) => {\n    switch (Number(deviceType)) {\n      case 1:\n        return {\n          app_icon:\n            \"https://appinventiv-development.s3.amazonaws.com/1628513615740ic-logo-yellow.png\",\n          title: \"Tickt App\",\n          notificationText: `${\n            storageService.getItem(\"userInfo\")?.userName\n          } send you a message`,\n          senderName: `${storageService.getItem(\"userInfo\")?.userName}`,\n          messageType: `${msg?.messageType}`,\n          messageText: `${msg?.messageType === \"text\" ? msg?.messageText : \"\"}`,\n          room_id: msg?.messageRoomId,\n          image: storageService.getItem(\"userInfo\")?.user_image,\n          notificationType: 25,\n          sound: \"default\",\n        };\n      case 2:\n        return {\n          body: msg?.messageText,\n          messageText: msg?.messageText,\n          sender: {\n            first_name: storageService.getItem(\"userInfo\")?.userName,\n            device_token: storageService.getItem(\"fcmToken\"),\n            user_id: storageService.getItem(\"userInfo\")?._id,\n            device_type: 2,\n          },\n          jobId: msg?.messageRoomId?.split(\"_\")?.[0],\n          badge: 1,\n          device_type: 2,\n          title: storageService.getItem(\"userInfo\")?.userName,\n          jobName: props.roomData?.jobName,\n          notification_type: 50,\n          sound: \"default\",\n          messageId: msg?.messageId,\n        };\n      case 3:\n        return {\n          notification: {\n            body: msg?.messageText,\n            title: storageService.getItem(\"userInfo\")?.userName,\n          },\n          data: {\n            body: msg?.messageText,\n            messageText: msg?.messageText,\n            sender: {\n              first_name: storageService.getItem(\"userInfo\")?.userName,\n              device_token: storageService.getItem(\"fcmToken\"),\n              user_id: storageService.getItem(\"userInfo\")?._id,\n              device_type: 2,\n            },\n            jobId: msg?.messageRoomId?.split(\"_\")?.[0],\n            badge: 1,\n            device_type: 2,\n            title: storageService.getItem(\"userInfo\")?.userName,\n            jobName: props.roomData?.jobName,\n            notification_type: 50,\n            sound: \"default\",\n            messageId: msg?.messageId,\n          },\n        };\n      default:\n        return;\n    }\n  };\n  const sendFCMPushNotificationToOppUser = async (msg: any) => {\n    let data = setResDeviceType(props.roomData?.oppUserInfo?.deviceType, msg);\n    let newData = {\n      to: `${props.roomData?.oppUserInfo?.deviceToken}`,\n      ...(props.roomData?.oppUserInfo?.deviceType == 1 && { data: data }),\n      ...(props.roomData?.oppUserInfo?.deviceType == 2 && {\n        notification: data,\n      }),\n      ...(props.roomData?.oppUserInfo?.deviceType == 3 && {\n        notification: data?.notification,\n        data: data?.data,\n      }),\n    };\n\n    const headers_: Types = {\n      \"Content-Type\": \"application/json\",\n      Authorization: Constants.FcmHeaderAuthorizationKey,\n    };\n    const response: any = await fetch(`https://fcm.googleapis.com/fcm/send`, {\n      method: \"POST\",\n      headers: headers_,\n      body: JSON.stringify(newData),\n    });\n    // const res: any = await response.json();\n    if (response.status === 200) {\n      console.log(\"Chat push notification send to opposite user: success\");\n    } else {\n      console.log(\"Chat push notification send to opposite user: failure\");\n    }\n  };\n\n  const handleUpload = async (e: any) => {\n    let maxFileSize: number = 10;\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n\n    var selectedFileSize = newFile?.size / 1024 / 1024; // size in mb\n    if ([\"mp4\", \"wmv\", \"avi\"].includes(fileType)) {\n      maxFileSize = 20;\n    }\n    if (docTypes.indexOf(fileType) < 0 || selectedFileSize > maxFileSize) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    setIsDocUploading(true);\n    let check_type: any = [\"jpeg\", \"jpg\", \"png\"].includes(fileType)\n      ? 1\n      : [\"mp4\", \"wmv\", \"avi\"].includes(fileType)\n      ? 2\n      : null;\n    const res = await onFileUpload(formData);\n    if (res.success && res.imgUrl) {\n      if (check_type === 1) {\n        sendImageVideoMsg(res.imgUrl, \"image\");\n      } else if (check_type === 2) {\n        sendImageVideoMsg(res.imgUrl, \"video\");\n      } else {\n        setShowToast(true, \"There is some technical issue\");\n      }\n      setIsDocUploading(false);\n      // setLocalFiles((prev: any) => ({ ...prev, [filesUrl?.length]: URL.createObjectURL(newFile) }));\n    }\n  };\n\n  const renderTextMsg = (msg: any) => {\n    let curDate = formatDateTime(msg.messageTimestamp, \"day\");\n    const messageClass =\n      msg.senderId === userId ? \"message\" : \"message recive_msg\";\n    if (lastDate === \"\" || lastDate !== curDate) {\n      lastDate = curDate;\n      return (\n        <>\n          <div className=\"date_time\">\n            <span>{curDate}</span>\n          </div>\n          <div className={`${messageClass}`}>\n            <p className={`${msg.senderId === userId ? \"mark\" : \"\"}`}>\n              {msg.messageText}\n              <span className=\"time\">\n                {formatDateTime(msg.messageTimestamp, \"time\")}\n              </span>\n            </p>\n          </div>\n        </>\n      );\n    } else\n      return (\n        <div className={`${messageClass}`}>\n          <p className={`${msg.senderId === userId ? \"mark\" : \"\"}`}>\n            {msg.messageText}\n            <span className=\"time\">\n              {formatDateTime(msg.messageTimestamp, \"time\")}\n            </span>\n          </p>\n        </div>\n      );\n  };\n\n  const renderImageMsg = (msg: any, index: number) => {\n    let curDate = formatDateTime(msg.messageTimestamp, \"day\");\n    const messageClass =\n      msg.senderId === userId ? \"message\" : \"message recive_msg\";\n    if (lastDate === \"\" || lastDate !== curDate) {\n      lastDate = curDate;\n      return (\n        <>\n          <div className=\"date_time\">\n            <span>{curDate}</span>\n          </div>\n          <div className={`${messageClass}`}>\n            <figure className=\"media\">\n              <img\n                src={msg.mediaUrl || notFound}\n                alt=\"media\"\n                async-src={msg.mediaUrl || notFound}\n                decoding=\"async\"\n                loading=\"lazy\"\n                onError={(e: any) => {\n                  if (e?.target?.onerror) {\n                    e.target.onerror = null;\n                  }\n                  if (e?.target?.src) {\n                    e.target.src = notFound;\n                  }\n                }}\n                onClick={() => {\n                  setToggler((prev: any) => !prev);\n                  setSelectSlide(fsSlideListner[`${index}`]);\n                }}\n              />\n              <span className=\"time\">\n                {formatDateTime(msg.messageTimestamp, \"time\")}\n              </span>\n            </figure>\n          </div>\n        </>\n      );\n    } else\n      return (\n        <div className={`${messageClass}`}>\n          <figure className=\"media\">\n            <img\n              src={msg.mediaUrl || notFound}\n              alt=\"media\"\n              async-src={msg.mediaUrl || notFound}\n              decoding=\"async\"\n              loading=\"lazy\"\n              onError={(e: any) => {\n                if (e?.target?.onerror) {\n                  e.target.onerror = null;\n                }\n                if (e?.target?.src) {\n                  e.target.src = notFound;\n                }\n              }}\n              onClick={() => {\n                setToggler((prev: any) => !prev);\n                setSelectSlide(fsSlideListner[`${index}`]);\n              }}\n            />\n            <span className=\"time\">\n              {formatDateTime(msg.messageTimestamp, \"time\")}\n            </span>\n          </figure>\n        </div>\n      );\n  };\n\n  const renderVideoMsg = (msg: any, index: number) => {\n    let curDate = formatDateTime(msg.messageTimestamp, \"day\");\n    const messageClass =\n      msg.senderId === userId ? \"message\" : \"message recive_msg\";\n    if (lastDate === \"\" || lastDate !== curDate) {\n      lastDate = curDate;\n      return (\n        <>\n          <div className=\"date_time\">\n            <span>{curDate}</span>\n          </div>\n          <div className={`${messageClass}`}>\n            <figure className=\"media media_video \">\n              <video\n                src={msg.mediaUrl || notFound}\n                poster={chatVideoIcon}\n                onClick={() => {\n                  setToggler((prev: any) => !prev);\n                  setSelectSlide(fsSlideListner[`${index}`]);\n                }}\n              />\n              <span className=\"time\">\n                {formatDateTime(msg.messageTimestamp, \"time\")}\n              </span>\n            </figure>\n          </div>\n        </>\n      );\n    } else\n      return (\n        <div className={`${messageClass}`}>\n          <figure className=\"media media_video \">\n            <video\n              src={msg.mediaUrl || notFound}\n              poster={chatVideoIcon}\n              onClick={() => {\n                setToggler((prev: any) => !prev);\n                setSelectSlide(fsSlideListner[`${index}`]);\n              }}\n            />\n            <span className=\"time\">\n              {formatDateTime(msg.messageTimestamp, \"time\")}\n            </span>\n          </figure>\n        </div>\n      );\n  };\n\n  const displayMessages = (msg: any, index: number) => {\n    if (index === 0) lastDate = \"\";\n    switch (msg.messageType) {\n      case \"text\":\n        return renderTextMsg(msg);\n      case \"image\":\n        return renderImageMsg(msg, index);\n      case \"video\":\n        return renderVideoMsg(msg, index);\n    }\n  };\n\n  const { sources, types } = renderMediaItems(itemsMedia);\n\n  return props.isNoRecords ? (\n    <div className=\"detail_col\">\n      <div className=\"flex_row\">\n        {/* <div>No Record Found</div> */}\n        <div></div>\n      </div>\n    </div>\n  ) : (\n    <>\n      <FsLightbox\n        toggler={toggler}\n        slide={selectedSlide}\n        sources={sources}\n        types={types}\n        key={sources?.length}\n        // disableLocalStorage={true}\n        onClose={() => {\n          setSelectSlide(1);\n        }}\n      />\n      <div className=\"detail_col\">\n        <div className=\"flex_row\">\n          <div className={`chat_col ${toggle ? \"active\" : \"\"}`}>\n            <div className=\"chat_user\">\n              <figure className=\"u_img\">\n                <img\n                  src={props.roomData?.oppUserInfo?.image || dummy}\n                  alt=\"user-img\"\n                  onError={(e: any) => {\n                    if (e?.target?.onerror) {\n                      e.target.onerror = null;\n                    }\n                    if (e?.target?.src) {\n                      e.target.src = dummy;\n                    }\n                  }}\n                />\n              </figure>\n              <span\n                className=\"name\"\n                onClick={() => {\n                  if (storageService.getItem(\"userType\") === 2) {\n                    props.history.push(\n                      `/tradie-info?tradeId=${props.roomData?.oppUserInfo?.userId}&hideInvite=true`\n                    );\n                  } else {\n                    props.history.push(\n                      `/builder-info?builderId=${props.roomData?.oppUserInfo?.userId}`\n                    );\n                  }\n                }}\n              >\n                {props.roomData?.oppUserInfo?.name}\n              </span>\n              {!toggle && (\n                <span\n                  onClick={() => {\n                    setToggle(true);\n                    if (currentJobDetails) return;\n                    fetchJobDetail(props.roomData?.jobId);\n                  }}\n                  className=\"view_detail\"\n                >\n                  View Job Details\n                  <img src={viewMore} alt=\"view-more\" />\n                </span>\n              )}\n            </div>\n            <div className=\"message_wrapr\" ref={divRref}>\n              {messages.length > 0 &&\n                messages.map((msg: any, index: number) => {\n                  return displayMessages(msg, index);\n                })}\n              <div className=\"date_time\">\n                {props.roomData?.oppUserInfo?.isBlock && (\n                  <i style={{ color: \"#929292\" }}>\n                    {\"You can no longer chat with the user\"}\n                  </i>\n                )}\n              </div>\n            </div>\n\n            {!props.roomData?.oppUserInfo?.isBlock && (\n              <div className=\"send_msg\">\n                <div className=\"text_field\">\n                  <label className=\"upload_item\" htmlFor=\"upload_item\">\n                    <span className=\"detect_icon_ltr\">\n                      <img src={sendMedia} alt=\"media\" />\n                    </span>\n                  </label>\n                  <input\n                    id=\"upload_item\"\n                    className=\"hide\"\n                    type=\"file\"\n                    accept=\"image/png,image/jpg,image/jpeg, video/mp4, video/wmv, video/avi\"\n                    onChange={handleUpload}\n                    disabled={isDocUploading}\n                  />\n                  <textarea\n                    placeholder=\"Message..\"\n                    onKeyDown={handleKeyDown}\n                    value={messageText}\n                    onChange={(e) => setMessageText(e.target.value)}\n                  />\n                  <span className=\"detect_icon\">\n                    <img src={sendBtn} alt=\"send\" onClick={sendMessage} />\n                  </span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {toggle && jobDetailLoader ? (\n            <div className=\"view_detail_col\">\n              <div className=\"no_record\">\n                <figure>\n                  <img src={loader} alt=\"loader\" width=\"130px\" />\n                </figure>\n              </div>\n            </div>\n          ) : toggle ? (\n            <div className=\"view_detail_col\">\n              <div className=\"f_spacebw relative\">\n                <span className=\"title line-2 pr-20\">\n                  {currentJobDetails?.jobName}\n                </span>\n                <span\n                  onClick={() => {\n                    setToggle((prev) => !prev);\n                  }}\n                  className=\"close\"\n                >\n                  <img src={close} alt=\"close\" />\n                </span>\n              </div>\n\n              <div className=\"job_info\">\n                <ul>\n                  <li className=\"icon clock\">\n                    {renderTime(\n                      currentJobDetails?.fromDate,\n                      currentJobDetails?.toDate\n                    )}\n                  </li>\n                  <li className=\"icon dollar\">{currentJobDetails?.amount}</li>\n                  <li className=\"icon location line-1\">\n                    {currentJobDetails?.locationName}\n                  </li>\n                  <li className=\"icon calendar\">\n                    {currentJobDetails?.duration}\n                  </li>\n                </ul>\n              </div>\n\n              <p className=\"commn_para\">{currentJobDetails?.jobDescription}</p>\n\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={() => {\n                  if (storageService.getItem(\"userType\") === 1) {\n                    props.history.push(\n                      `/job-details-page?jobId=${currentJobDetails?.jobId}&redirect_from=jobs`\n                    );\n                  } else {\n                    // let urlEncode: any = window.btoa(`?jobId=${currentJobDetails?.jobId}&status=${currentJobDetails?.status}&edit=true&activeType=active`)\n                    let urlEncode: any = `?jobId=${currentJobDetails?.jobId}&status=${currentJobDetails?.status}&edit=true&activeType=active`;\n                    props.history.push(`/job-detail?${urlEncode}`);\n                  }\n                }}\n              >\n                View Job details\n              </button>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserMessages;\n"]},"metadata":{},"sourceType":"module"}