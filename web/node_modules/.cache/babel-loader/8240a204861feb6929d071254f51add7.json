{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/common/customNotification.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setShowNotification } from '../redux/common/actions';\nimport { onNotificationClick } from '../utils/common';\nimport { markNotifAsRead } from '../redux/auth/actions';\nimport { useHistory } from 'react-router-dom';\nimport dummy from '../assets/images/u_placeholder.jpg';\nimport close from '../assets/images/icon-close-1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTIFICATION_TIMEOUT = 3750;\n\nconst CustomNotification = props => {\n  _s();\n\n  var _props$notificationDa;\n\n  const history = useHistory();\n  const notification = (_props$notificationDa = props.notificationData) === null || _props$notificationDa === void 0 ? void 0 : _props$notificationDa.data;\n  console.log('notification: ', notification);\n  useEffect(() => {\n    if (props === null || props === void 0 ? void 0 : props.showNotification) {\n      setTimeout(() => setShowNotification(false), NOTIFICATION_TIMEOUT);\n    }\n\n    return () => clearTimeout();\n  }, [props.showNotification]);\n  return !!props.showNotification ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-message active\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cross-icon\",\n      onClick: () => setShowNotification(false),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapppr\",\n      onClick: () => {\n        markNotifAsRead({\n          notificationId: notification === null || notification === void 0 ? void 0 : notification._id\n        });\n        setShowNotification(false);\n        history.push(onNotificationClick(notification));\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notif\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"not_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: (notification === null || notification === void 0 ? void 0 : notification.image) || dummy,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"who line-1\",\n            children: notification === null || notification === void 0 ? void 0 : notification.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"line-1\",\n            children: notification === null || notification === void 0 ? void 0 : notification.notificationText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: 'just now'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(CustomNotification, \"1xG8E42zL1Z4zT+0oMSUtUkhDGU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CustomNotification;\n\nconst mapStateToProps = state => {\n  return {\n    showNotification: state.common.showNotification,\n    notificationData: state.common.notificationData\n  };\n};\n\nexport default connect(mapStateToProps)(CustomNotification);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomNotification\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/customNotification.tsx"],"names":["useEffect","connect","setShowNotification","onNotificationClick","markNotifAsRead","useHistory","dummy","close","NOTIFICATION_TIMEOUT","CustomNotification","props","history","notification","notificationData","data","console","log","showNotification","setTimeout","clearTimeout","notificationId","_id","push","image","title","notificationText","mapStateToProps","state","common"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { setShowNotification } from '../redux/common/actions';\nimport { formatNotificationTime } from '../utils/common';\nimport { onNotificationClick } from '../utils/common';\nimport { markNotifAsRead } from '../redux/auth/actions';\nimport { useHistory } from 'react-router-dom';\nimport dummy from '../assets/images/u_placeholder.jpg';\nimport close from '../assets/images/icon-close-1.png';\n\nconst NOTIFICATION_TIMEOUT = 3750;\n\nconst CustomNotification = (props: any) => {\n    const history: any = useHistory();\n    const notification = props.notificationData?.data;\n    console.log('notification: ', notification);\n\n    useEffect(() => {\n        if (props?.showNotification) {\n            setTimeout(() => setShowNotification(false), NOTIFICATION_TIMEOUT);\n        }\n\n        return () => clearTimeout();\n    }, [props.showNotification]);\n\n    return !!props.showNotification ? (\n        <div className=\"body-message active\">\n            <span className=\"cross-icon\" onClick={() => setShowNotification(false)}>\n                <img src={close} alt=\"img\" />\n            </span>\n            <div className=\"wrapppr\" onClick={() => {\n                markNotifAsRead({ notificationId: notification?._id });\n                setShowNotification(false);\n                history.push(onNotificationClick(notification));\n            }}>\n                <div className=\"notif\">\n                    <figure className=\"not_img\">\n                        <img src={notification?.image || dummy} alt=\"img\" />\n                    </figure>\n                    <div className=\"info\">\n                        <span className=\"who line-1\">{notification?.title}</span>\n                        <span className=\"line-1\">{notification?.notificationText}</span>\n                    </div>\n                    {/* <span className=\"time\">{formatNotificationTime(notification?.updatedAt, 'day')}</span> */}\n                    <span className=\"time\">{'just now'}</span>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        showNotification: state.common.showNotification,\n        notificationData: state.common.notificationData,\n    }\n}\n\nexport default connect(mapStateToProps)(CustomNotification);\n"]},"metadata":{},"sourceType":"module"}