{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/addLocation.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react'; // @ts-ignore\n// import PlacesAutocomplete from 'react-places-autocomplete';\n\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport icgps from \"../../../assets/images/ic-gps.png\";\nimport Geocode from \"react-geocode\";\nimport { setShowToast, setLoading } from '../../../redux/common/actions';\nimport cross from \"../../../assets/images/close-black.png\";\nimport Constants from '../../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion('au'); // Enable or disable logs. Its optional.\n\nGeocode.enableDebug();\nconst searchOptions = {\n  componentRestrictions: {\n    country: \"au\"\n  },\n  types: [\"(cities)\"]\n};\n\nconst AddLocation = ({\n  data,\n  stepCompleted,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  const [address, setAddress] = useState('');\n  const [locationDetails, setLocationDetails] = useState({\n    location: {},\n    location_name: ''\n  });\n  const [error, setError] = useState('');\n  const [localChanges, setLocationChanges] = useState(false);\n  const [activeCurrent, setActiveCurrent] = useState(false);\n  const [inputFocus, setInputFocus] = useState(false);\n  const [locationSelected, setLocationSelected] = useState(false);\n\n  const updateLocalData = data => {\n    setLocationDetails({\n      location: {\n        type: 'Point',\n        coordinates: data === null || data === void 0 ? void 0 : data.coordinates\n      },\n      location_name: data === null || data === void 0 ? void 0 : data.location_name\n    });\n  };\n\n  useEffect(() => {\n    if (stepCompleted && !localChanges) {\n      updateLocalData(data);\n      setAddress(data === null || data === void 0 ? void 0 : data.location_name);\n      setLocationSelected(true);\n      setLocationChanges(true);\n    }\n\n    if ((address === null || address === void 0 ? void 0 : address.length) > 2) {\n      var _document$getElementB;\n\n      setActiveCurrent(false);\n      (_document$getElementB = document.getElementById('location_search_dynamic')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n    } else {\n      var _document$getElementB2;\n\n      setActiveCurrent(false);\n      (_document$getElementB2 = document.getElementById('location_search_static')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.focus();\n    }\n  }, [address, stepCompleted, data]);\n\n  const filterFromAddress = response => {\n    let city,\n        state,\n        country = null;\n\n    for (let i = 0; i < response.results[0].address_components.length; i++) {\n      for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\n        switch (response.results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = response.results[0].address_components[i].long_name;\n            break;\n\n          case \"administrative_area_level_1\":\n            state = response.results[0].address_components[i].long_name;\n            break;\n\n          case \"country\":\n            country = response.results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n\n    return {\n      city,\n      state,\n      country: country.toLowerCase()\n    };\n  };\n\n  const getCurrentLocation = async e => {\n    var _navigator, _navigator$permission;\n\n    e.preventDefault();\n    setActiveCurrent(true);\n    let permission_web = await ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : (_navigator$permission = _navigator.permissions) === null || _navigator$permission === void 0 ? void 0 : _navigator$permission.query({\n      name: 'geolocation'\n    }));\n\n    if (permission_web.state !== 'denied') {\n      var _position$, _position$2;\n\n      setLoading(true);\n      let item_position = localStorage.getItem('position');\n      let position = JSON.parse(item_position);\n      let longitude = (_position$ = position[0]) === null || _position$ === void 0 ? void 0 : _position$.toString();\n      let latitude = (_position$2 = position[1]) === null || _position$2 === void 0 ? void 0 : _position$2.toString();\n\n      try {\n        let response = await Geocode.fromLatLng(latitude, longitude);\n        console.log({\n          response\n        });\n        const {\n          city,\n          state,\n          country\n        } = filterFromAddress(response);\n\n        if (response && [\"australia\", \"au\"].includes(country)) {\n          const address = response.results[0].formatted_address;\n          let coordinates_values = [latitude, longitude];\n          setLocation({\n            coordinates: coordinates_values,\n            address: address\n          });\n          setLoading(false);\n        } else {\n          setShowToast(true, \"Uh Oh! We don't provide service currently in your location\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log({\n          err\n        });\n      }\n    } else {\n      setError('Please enable the location permission from the browser settings so that Tickt app can access your location');\n    }\n  };\n\n  const handleContinue = e => {\n    var _data$location, _data$location$coordi;\n\n    e.preventDefault();\n    let locationAddress = locationDetails;\n\n    if ((data === null || data === void 0 ? void 0 : (_data$location = data.location) === null || _data$location === void 0 ? void 0 : (_data$location$coordi = _data$location.coordinates) === null || _data$location$coordi === void 0 ? void 0 : _data$location$coordi.length) && (data === null || data === void 0 ? void 0 : data.location_name) === address) {\n      var _data$location2;\n\n      locationAddress.location['coordinates'] = data === null || data === void 0 ? void 0 : (_data$location2 = data.location) === null || _data$location2 === void 0 ? void 0 : _data$location2.coordinates;\n      handleStepComplete(locationAddress);\n      return;\n    } else {\n      var _locationAddress$loca, _locationAddress$loca2;\n\n      if (locationAddress === null || locationAddress === void 0 ? void 0 : (_locationAddress$loca = locationAddress.location) === null || _locationAddress$loca === void 0 ? void 0 : (_locationAddress$loca2 = _locationAddress$loca.coordinates) === null || _locationAddress$loca2 === void 0 ? void 0 : _locationAddress$loca2.length) {\n        handleStepComplete(locationDetails);\n        return;\n      }\n    }\n\n    setError('please choose current location or search a location.');\n  };\n\n  const setLocation = ({\n    coordinates,\n    address\n  }) => {\n    setLocationDetails({\n      location: {\n        type: 'Point',\n        coordinates: coordinates\n      },\n      location_name: address\n    });\n    setAddress(address);\n    setError('');\n  };\n\n  const handleSelect = async address => {\n    setLocationSelected(true);\n\n    try {\n      let coordinates_response = await Geocode.fromAddress(address);\n\n      if (coordinates_response) {\n        const {\n          lat,\n          lng\n        } = coordinates_response.results[0].geometry.location;\n        setLocation({\n          coordinates: [lng, lat],\n          address\n        });\n      }\n    } catch (err) {\n      console.log({\n        err\n      });\n    }\n  };\n\n  const checkErrors = () => {\n    var _location_details$loc, _location_details$loc2, _location_details$loc3;\n\n    let location_details = locationDetails;\n\n    if (!(location_details === null || location_details === void 0 ? void 0 : (_location_details$loc = location_details.location) === null || _location_details$loc === void 0 ? void 0 : (_location_details$loc2 = _location_details$loc.coordinates) === null || _location_details$loc2 === void 0 ? void 0 : _location_details$loc2.length) && !(location_details === null || location_details === void 0 ? void 0 : (_location_details$loc3 = location_details.location_name) === null || _location_details$loc3 === void 0 ? void 0 : _location_details$loc3.length) && !(address === null || address === void 0 ? void 0 : address.length)) {\n      return true;\n    }\n\n    return false;\n  }; // Please enable the location permission from the settings so that Tickt app can access your location\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: handleStepBack\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \"Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: \"Type the place for your job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `text_field ${address.length > 2 ? 'none' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Type a State, city or suburb\",\n                  value: address // style={{ display:address.length > 2  ? 'none' : '' }}\n                  ,\n                  id: \"location_search_static\",\n                  onChange: e => setAddress(e.target.value.trimLeft()),\n                  autoComplete: \"off\",\n                  onFocus: x => {// console.log('Input - 1')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete // debounce={400}\n              , {\n                value: address,\n                onChange: value => {\n                  setLocationSelected(false);\n                  setAddress(value.trimLeft());\n                },\n                searchOptions: searchOptions,\n                onSelect: handleSelect,\n                children: ({\n                  getInputProps,\n                  suggestions,\n                  getSuggestionItemProps,\n                  loading\n                }) => {\n                  var _locationDetails$loca, _locationDetails$loca2;\n\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text_field\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        id: \"location_search_dynamic\",\n                        onFocus: x => {\n                          setInputFocus(true);\n                        } // style={{ display: address?.length < 3 ? 'none+!important' : '' }}\n                        ,\n                        ...getInputProps({\n                          placeholder: 'Type a State, city or suburb',\n                          className: `${(address === null || address === void 0 ? void 0 : address.length) < 2 ? 'none' : 'location-search-input detect_input'}`\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `${(address === null || address === void 0 ? void 0 : address.length) < 2 ? 'none' : 'detect_icon'}`,\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: cross,\n                          alt: \"cross\",\n                          onClick: () => {\n                            setAddress(''); // setLocation({});\n\n                            setLocation({\n                              coordinates: [],\n                              address: ''\n                            });\n                            setLocationSelected(false);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"autocomplete-drop-down-map-container\",\n                      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 37\n                      }, this), !locationSelected && !loading && !(suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) && (address === null || address === void 0 ? void 0 : address.length) > 2 && !(locationDetails === null || locationDetails === void 0 ? void 0 : (_locationDetails$loca = locationDetails.location) === null || _locationDetails$loca === void 0 ? void 0 : (_locationDetails$loca2 = _locationDetails$loca.coordinates) === null || _locationDetails$loca2 === void 0 ? void 0 : _locationDetails$loca2.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"loc_suggestions\",\n                        children: 'No Result Found.'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 28\n                      }, this) : '', !locationSelected && !loading && (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) && (address === null || address === void 0 ? void 0 : address.length) > 2 ? suggestions.map(suggestion => {\n                        const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n                        const style = suggestion.active ? {\n                          backgroundColor: '#fafafa',\n                          cursor: 'pointer'\n                        } : {\n                          backgroundColor: '#ffffff',\n                          cursor: 'pointer'\n                        };\n                        return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                            className,\n                            style\n                          }),\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"loc_suggestions\",\n                            children: suggestion.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 262,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 31\n                        }, this);\n                      }) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: activeCurrent ? 'location-btn fill_btn' : \"location-btn\",\n                onClick: getCurrentLocation,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gps_icon\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: icgps,\n                    alt: \"gps-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this), 'Use my current location']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`,\n                onClick: handleContinue,\n                children: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddLocation, \"QF/pramV2CmWiwZNpSYl6wAtYyE=\");\n\n_c = AddLocation;\nexport default AddLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/addLocation.tsx"],"names":["useEffect","useState","PlacesAutocomplete","icgps","Geocode","setShowToast","setLoading","cross","Constants","setApiKey","SocialAuth","GOOGLE_GEOCODE_KEY","setLanguage","setRegion","enableDebug","searchOptions","componentRestrictions","country","types","AddLocation","data","stepCompleted","handleStepComplete","handleStepBack","address","setAddress","locationDetails","setLocationDetails","location","location_name","error","setError","localChanges","setLocationChanges","activeCurrent","setActiveCurrent","inputFocus","setInputFocus","locationSelected","setLocationSelected","updateLocalData","type","coordinates","length","document","getElementById","focus","filterFromAddress","response","city","state","i","results","address_components","j","long_name","toLowerCase","getCurrentLocation","e","preventDefault","permission_web","navigator","permissions","query","name","item_position","localStorage","getItem","position","JSON","parse","longitude","toString","latitude","fromLatLng","console","log","includes","formatted_address","coordinates_values","setLocation","err","handleContinue","locationAddress","handleSelect","coordinates_response","fromAddress","lat","lng","geometry","checkErrors","location_details","target","value","trimLeft","x","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react';\n// @ts-ignore\n// import PlacesAutocomplete from 'react-places-autocomplete';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport icgps from \"../../../assets/images/ic-gps.png\";\nimport Geocode from \"react-geocode\";\nimport { setShowToast, setLoading } from '../../../redux/common/actions';\nimport cross from \"../../../assets/images/close-black.png\";\nimport Constants from '../../../utils/constants';\n\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion('au');\n// Enable or disable logs. Its optional.\nGeocode.enableDebug();\ninterface Proptypes {\n  data: any;\n  stepCompleted: boolean;\n  handleStepComplete: (data: any) => void;\n  handleStepBack: () => void;\n}\n\nconst searchOptions = {\n  componentRestrictions: { country: \"au\" },\n  types: [\"(cities)\"]\n}\n\nconst AddLocation = ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n  const [address, setAddress] = useState('');\n  const [locationDetails, setLocationDetails] = useState<{ [index: string]: any }>({ location: {}, location_name: '' });\n  const [error, setError] = useState('');\n  const [localChanges, setLocationChanges] = useState(false);\n  const [activeCurrent, setActiveCurrent] = useState(false);\n  const [inputFocus, setInputFocus] = useState(false);\n  const [locationSelected, setLocationSelected] = useState(false);\n\n  const updateLocalData = (data: any) => {\n    setLocationDetails({\n      location: {\n        type: 'Point',\n        coordinates: data?.coordinates\n      },\n      location_name: data?.location_name\n    });\n  }\n\n  useEffect(() => {\n    if (stepCompleted && !localChanges) {\n      updateLocalData(data);\n      setAddress(data?.location_name);\n      setLocationSelected(true);\n      setLocationChanges(true);\n    }\n\n    if (address?.length > 2) {\n      setActiveCurrent(false);\n      document.getElementById('location_search_dynamic')?.focus();\n    } else {\n      setActiveCurrent(false);\n      document.getElementById('location_search_static')?.focus();\n    }\n  }, [address, stepCompleted, data])\n\n\n  const filterFromAddress = (response: any) => {\n    let city, state, country = null;\n    for (let i = 0; i < response.results[0].address_components.length; i++) {\n      for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\n        switch (response.results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = response.results[0].address_components[i].long_name;\n            break;\n          case \"administrative_area_level_1\":\n            state = response.results[0].address_components[i].long_name;\n            break;\n          case \"country\":\n            country = response.results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n    return { city, state, country: country.toLowerCase() };\n  }\n\n  const getCurrentLocation = async (e: any) => {\n    e.preventDefault();\n    setActiveCurrent(true);\n    let permission_web = await navigator?.permissions?.query({ name: 'geolocation' });\n\n    if (permission_web.state !== 'denied') {\n      setLoading(true)\n      let item_position: any = localStorage.getItem('position');\n      let position = JSON.parse(item_position);\n      let longitude = (position[0])?.toString();\n      let latitude = (position[1])?.toString();\n      try {\n        let response: any = await Geocode.fromLatLng(latitude, longitude);\n        console.log({response});\n        const { city, state, country } = filterFromAddress(response);\n        if (response && [\"australia\", \"au\"].includes(country)) {\n          const address = response.results[0].formatted_address;\n          let coordinates_values = [latitude, longitude];\n          setLocation({ coordinates: coordinates_values, address: address })\n          setLoading(false);\n        } else {\n          setShowToast(true, \"Uh Oh! We don't provide service currently in your location\");\n          setLoading(false);\n        }\n      } catch (err) {\n        console.log({ err });\n      }\n\n    } else {\n      setError('Please enable the location permission from the browser settings so that Tickt app can access your location');\n    }\n  }\n\n  const handleContinue = (e: any) => {\n    e.preventDefault();\n    let locationAddress: any = locationDetails;\n    if (data?.location?.coordinates?.length && data?.location_name === address) {\n      locationAddress.location['coordinates'] = data?.location?.coordinates;\n      handleStepComplete(locationAddress);\n      return\n    } else {\n      if (locationAddress?.location?.coordinates?.length) {\n        handleStepComplete(locationDetails);\n        return\n      }\n    }\n    setError('please choose current location or search a location.');\n  }\n\n  const setLocation = ({ coordinates, address }: any) => {\n    setLocationDetails({\n      location: {\n        type: 'Point',\n        coordinates: coordinates,\n      },\n      location_name: address,\n    });\n    setAddress(address);\n    setError('');\n  }\n\n  const handleSelect = async (address: any) => {\n    setLocationSelected(true);\n    try {\n      let coordinates_response = await Geocode.fromAddress(address);\n      if (coordinates_response) {\n        const { lat, lng } = coordinates_response.results[0].geometry.location;\n        setLocation({ coordinates: [lng, lat], address })\n      }\n    } catch (err) {\n      console.log({ err });\n    }\n  };\n\n  const checkErrors = () => {\n    let location_details: any = locationDetails;\n    if (!location_details?.location?.coordinates?.length && !location_details?.location_name?.length && !address?.length) {\n      return true;\n    }\n    return false;\n  }\n\n  // Please enable the location permission from the settings so that Tickt app can access your location\n  return (\n    <div className=\"app_wrapper\">\n      <div className=\"section_wrapper\">\n        <div className=\"custom_container\">\n          <div className=\"form_field\">\n            <div className=\"flex_row\">\n              <div className=\"flex_col_sm_5\">\n                <div className=\"relate\">\n                  <button className=\"back\" onClick={handleStepBack}></button>\n                  <span className=\"title\">Location</span>\n                </div>\n                <p className=\"commn_para\">Type the place for your job</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_5\">\n              <div className=\"form_field\">\n\n                <div className={`text_field ${address.length > 2 ? 'none' : ''}`}>\n                  <input\n                    placeholder='Type a State, city or suburb'\n                    value={address}\n                    // style={{ display:address.length > 2  ? 'none' : '' }}\n                    id=\"location_search_static\"\n                    onChange={(e) => setAddress((e.target.value).trimLeft())}\n                    autoComplete=\"off\"\n                    onFocus={(x) => {\n                      // console.log('Input - 1')\n                    }}\n                  />\n                </div>\n\n\n                <PlacesAutocomplete\n                  // debounce={400}\n                  value={address}\n                  onChange={(value) => {\n                    setLocationSelected(false);\n                    setAddress((value).trimLeft())\n                  }}\n                  searchOptions={searchOptions}\n                  onSelect={handleSelect}\n                >\n                  {({ getInputProps, suggestions, getSuggestionItemProps, loading }: any) => (\n                    <div>\n                      <div className=\"text_field\">\n                        <input\n                          id=\"location_search_dynamic\"\n                          onFocus={(x) => {\n                            setInputFocus(true);\n                          }}\n                          // style={{ display: address?.length < 3 ? 'none+!important' : '' }}\n                          {...getInputProps({\n                            placeholder: 'Type a State, city or suburb',\n                            className: `${address?.length < 2 ? 'none' : 'location-search-input detect_input'}`,\n                          })}\n                        />\n                        <span className={`${address?.length < 2 ? 'none' : 'detect_icon'}`}>\n                          <img\n                            src={cross}\n                            alt=\"cross\"\n                            onClick={() => {\n                              setAddress('');\n                              // setLocation({});\n                              setLocation({ coordinates: [], address: '' })\n                              setLocationSelected(false);\n                            }} />\n                        </span>\n                      </div>\n                      <div className=\"autocomplete-drop-down-map-container\">\n                        {loading && <div>Loading...</div>}\n                        {!locationSelected && !loading && !suggestions?.length && address?.length > 2 && !locationDetails?.location?.coordinates?.length ?\n                          (<div className=\"loc_suggestions\">\n                            {'No Result Found.'}\n                          </div>)\n                          : ''}\n                        {!locationSelected && !loading && suggestions?.length && address?.length > 2 ?\n                          suggestions.map((suggestion: any) => {\n                            const className = suggestion.active\n                              ? 'suggestion-item--active'\n                              : 'suggestion-item';\n                            // inline style for demonstration purpose\n                            const style = suggestion.active\n                              ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                              : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                            return (\n                              <div\n                                {...getSuggestionItemProps(suggestion, {\n                                  className,\n                                  style,\n                                })}\n                              >\n                                <div className=\"loc_suggestions\">{suggestion.description}</div>\n                              </div>\n                            );\n                          }) : null}\n                      </div>\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n\n                <span className=\"error_msg\">{error}</span>\n              </div>\n\n              <div className=\"form_field\">\n                <button\n                  className={activeCurrent ? 'location-btn fill_btn' : \"location-btn\"}\n                  onClick={getCurrentLocation}>\n                  <span className=\"gps_icon\">\n                    <img src={icgps} alt=\"gps-icon\" />\n                  </span>\n                  {'Use my current location'}\n                </button>\n              </div>\n\n              <div className=\"form_field\">\n                <button\n                  className={`fill_btn full_btn btn-effect ${checkErrors() ? 'disable_btn' : ''}`}\n                  onClick={handleContinue}>Continue</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div >\n  )\n}\n\nexport default AddLocation;\n"]},"metadata":{},"sourceType":"module"}