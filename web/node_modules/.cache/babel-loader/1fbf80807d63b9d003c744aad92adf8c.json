{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/openJobs.tsx\";\nimport React, { Component } from 'react';\nimport approved from '../../../assets/images/approved.png';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport { renderTime } from '../../../utils/common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OpenJobs extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.redirectToInfo = ({\n      jobId,\n      status\n    }) => {\n      let props = this.props;\n\n      if ((jobId === null || jobId === void 0 ? void 0 : jobId.length) && (status === null || status === void 0 ? void 0 : status.length)) {\n        // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`)\n        let urlEncode = `?jobId=${jobId}&status=${status}&activeType=${props === null || props === void 0 ? void 0 : props.activeType}`;\n        this.props.history.push(`/job-detail?${urlEncode}`);\n      } else {\n        // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`)\n        let urlEncode = `?jobId=${jobId}&status=${'open'}&activeType=${props === null || props === void 0 ? void 0 : props.activeType}`;\n        this.props.history.push(`/job-detail?${urlEncode}`);\n      }\n    };\n\n    this.setToggle = () => this.setState({\n      isToggleApplicants: !this.state.isToggleApplicants\n    });\n\n    this.state = {\n      isToggleApplicants: false\n    };\n  }\n\n  render() {\n    const {\n      setJobLabel,\n      dataItems,\n      applicantsList,\n      jobType,\n      isLoading\n    } = this.props;\n    let listData = dataItems;\n    let {\n      isToggleApplicants\n    } = this.state;\n\n    if (isLoading) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: [jobType.charAt(0).toUpperCase() + jobType.slice(1), \" Jobs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row tradies_row\",\n        children: (listData === null || listData === void 0 ? void 0 : listData.length) ? listData.map(({\n          amount,\n          durations,\n          jobId,\n          jobName,\n          fromDate,\n          toDate,\n          milestoneNumber,\n          specializationId,\n          specializationName,\n          locationName,\n          status,\n          timeLeft,\n          total,\n          totalmem,\n          totalMilestones,\n          tradieListData,\n          tradeName,\n          tradieId,\n          location,\n          tradeSelectedUrl,\n          tradieImage\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradie_card\",\n            \"data-aos\": \"fade-in\",\n            \"data-aos-delay\": \"250\",\n            \"data-aos-duration\": \"1000\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                this.redirectToInfo({\n                  jobId,\n                  status\n                });\n              },\n              className: \"more_detail circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"u_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: tradeSelectedUrl || jobTypePlaceholder,\n                  alt: \"traide-img\",\n                  onError: e => {\n                    var _e$target, _e$target2;\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                      e.target.onerror = null;\n                    }\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                      e.target.src = jobTypePlaceholder;\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: tradeName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"commn_para\",\n                  children: jobName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_info\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon dollar\",\n                  children: amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon calendar\",\n                  children: renderTime(fromDate, toDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: timeLeft\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_progress_wrap\",\n              id: \"scroll-progress-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress_wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-digit\",\n                  id: \"digit-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: `Job Milestones ${milestoneNumber} `\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 49\n                  }, this), `of ${totalMilestones}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"approval_info\",\n                  children: [status === \"Approved\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: approved,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 75\n                  }, this), status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress_bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"done_progress\",\n                    id: \"progress-bar\",\n                    type: \"range\",\n                    min: \"0\",\n                    value: milestoneNumber / totalMilestones * 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this), (tradieId === null || tradieId === void 0 ? void 0 : tradieId.length) ? /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  this.setToggle();\n                  setJobLabel('applicantList', jobId, 1, specializationId);\n                },\n                className: \"fill_grey_btn full_btn btn-effect\",\n                children: 'Applications'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 45\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_record  m-t-vh\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"no_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: noDataFound,\n              alt: \"data not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: 'No Data Found'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default OpenJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/openJobs.tsx"],"names":["React","Component","approved","noDataFound","jobTypePlaceholder","renderTime","OpenJobs","constructor","props","redirectToInfo","jobId","status","length","urlEncode","activeType","history","push","setToggle","setState","isToggleApplicants","state","render","setJobLabel","dataItems","applicantsList","jobType","isLoading","listData","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","locationName","timeLeft","total","totalmem","totalMilestones","tradieListData","tradeName","tradieId","location","tradeSelectedUrl","tradieImage","e","target","onerror","src"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport approved from '../../../assets/images/approved.png';\nimport ApplicantsList from './applicantsList';\nimport { withRouter } from 'react-router-dom'\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport moment from 'moment';\nimport { renderTime } from '../../../utils/common';\ninterface Active {\n    amount: any,\n    durations: any,\n    jobId: any,\n    jobName: any,\n    fromDate: any,\n    toDate: any,\n    milestoneNumber: any,\n    specializationId: any,\n    specializationName: any,\n    status: any,\n    timeLeft: any,\n    total: any,\n    totalmem: any,\n    location: any,\n    locationName: any,\n    totalMilestones: any,\n    tradieListData: any,\n    tradeName: any,\n    tradieId: any,\n    tradeSelectedUrl: any,\n    tradieImage: any,\n\n}\ninterface State {\n    isToggleApplicants: boolean\n}\n\ninterface Props {\n    setJobLabel: any,\n    dataItems: any,\n    applicantsList?: any,\n    jobType: any,\n    history?: any,\n    isLoading: any,\n    activeType?: any\n}\n\nclass OpenJobs extends Component<Props, State> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            isToggleApplicants: false\n        }\n    }\n\n    redirectToInfo = ({ jobId, status }: any) => {\n        let props: any = this.props;\n        if (jobId?.length && status?.length) {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`)\n            let urlEncode: any = `?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`\n            this.props.history.push(`/job-detail?${urlEncode}`);\n        } else {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`)\n            let urlEncode: any = `?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`\n            this.props.history.push(`/job-detail?${urlEncode}`);\n        }\n    }\n\n    setToggle = () => this.setState({ isToggleApplicants: !this.state.isToggleApplicants });\n\n    render() {\n        const { setJobLabel, dataItems, applicantsList, jobType, isLoading } = this.props;\n        let listData: any = dataItems\n        let { isToggleApplicants } = this.state;\n\n\n        if (isLoading) {\n            return null;\n        }\n\n        return (\n            <React.Fragment>\n                <span className=\"sub_title\">{jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n                 {/* {listData?.length} */}\n                 </span>\n                <div className=\"flex_row tradies_row\">\n                    {listData?.length ?\n                        listData.map(({\n                            amount,\n                            durations,\n                            jobId,\n                            jobName,\n                            fromDate,\n                            toDate,\n                            milestoneNumber,\n                            specializationId,\n                            specializationName,\n                            locationName,\n                            status,\n                            timeLeft,\n                            total,\n                            totalmem,\n                            totalMilestones,\n                            tradieListData,\n                            tradeName,\n                            tradieId,\n                            location,\n                            tradeSelectedUrl,\n                            tradieImage,\n                        }: Active) => (\n                            <div className=\"flex_col_sm_6\">\n                                <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                                    <span\n                                        onClick={() => { this.redirectToInfo({ jobId, status }) }}\n                                        className=\"more_detail circle\">\n                                    </span>\n                                    <div className=\"user_wrap\">\n                                        <figure className=\"u_img\">\n                                            <img\n                                                src={tradeSelectedUrl || jobTypePlaceholder}\n                                                alt=\"traide-img\"\n                                                onError={(e: any) => {\n                                                    if (e?.target?.onerror) {\n                                                        e.target.onerror = null;\n                                                    }\n                                                    if (e?.target?.src) {\n                                                        e.target.src = jobTypePlaceholder;\n                                                    }\n                                                }}\n                                            />\n                                        </figure>\n                                        <div className=\"details\">\n                                            <span className=\"name\">{tradeName}</span>\n                                            <p className=\"commn_para\">{jobName}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"job_info\">\n                                        <ul>\n                                            <li className=\"icon dollar\">{amount}</li>\n                                            <li className=\"\">\n                                                <span>\n                                                    {total}\n                                                </span>\n                                            </li>\n                                            <li className=\"icon calendar\">\n                                                {renderTime(fromDate, toDate)}\n                                            </li>\n                                            <li>\n                                                <span>\n                                                    {timeLeft}\n                                                </span>\n                                            </li>\n                                            {/* <li className=\"icon clock\">\n                                                \n                                            </li>\n                                            <li className=\"icon dollar\">{amount}</li>\n                                            <li className=\"icon location line-1\">{location}</li>\n                                            <li className=\"icon calendar\">{durations}</li> */}\n                                        </ul>\n                                    </div>\n                                    <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                        <div className=\"progress_wrapper\">\n                                            <span className=\"completed-digit\" id=\"digit-progress\">\n                                                <b>{`Job Milestones ${milestoneNumber} `}</b>{`of ${totalMilestones}`}\n                                            </span>\n                                            <span className=\"approval_info\">\n                                                {status === \"Approved\" && <img src={approved} alt=\"icon\" />}\n                                                {status}\n                                            </span>\n                                            <span className=\"progress_bar\">\n                                                <input\n                                                    className=\"done_progress\"\n                                                    id=\"progress-bar\"\n                                                    type=\"range\"\n                                                    min=\"0\"\n                                                    value={milestoneNumber / totalMilestones * 100}\n                                                />\n                                            </span>\n                                        </div>\n                                        {tradieId?.length ? (\n                                            <button\n                                                onClick={() => {\n                                                    this.setToggle();\n                                                    setJobLabel('applicantList', jobId, 1, specializationId);\n                                                }}\n                                                className=\"fill_grey_btn full_btn btn-effect\">\n                                                {'Applications'}\n                                            </button>\n                                        ) : null}\n                                    </div>\n                                </div>\n                            </div>\n                        )) : !isLoading && (\n                            <div className=\"no_record  m-t-vh\">\n                                <figure className=\"no_img\">\n                                    <img src={noDataFound} alt=\"data not found\" />\n                                </figure>\n                                <span>{'No Data Found'}</span>\n                            </div>\n                        )}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default OpenJobs;"]},"metadata":{},"sourceType":"module"}