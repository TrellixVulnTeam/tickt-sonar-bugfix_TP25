{"ast":null,"code":"import _classCallCheck from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import approved from'../../../assets/images/approved.png';import noDataFound from'../../../assets/images/no-search-data.png';import jobTypePlaceholder from'../../../assets/images/job-type-placeholder.png';import{renderTime}from'../../../utils/common';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var OpenJobs=/*#__PURE__*/function(_Component){_inherits(OpenJobs,_Component);var _super=_createSuper(OpenJobs);function OpenJobs(_props){var _this;_classCallCheck(this,OpenJobs);_this=_super.call(this,_props);_this.redirectToInfo=function(_ref){var jobId=_ref.jobId,status=_ref.status;var props=_this.props;if((jobId===null||jobId===void 0?void 0:jobId.length)&&(status===null||status===void 0?void 0:status.length)){// let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`)\nvar urlEncode=\"?jobId=\".concat(jobId,\"&status=\").concat(status,\"&activeType=\").concat(props===null||props===void 0?void 0:props.activeType);_this.props.history.push(\"/job-detail?\".concat(urlEncode));}else{// let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`)\nvar _urlEncode=\"?jobId=\".concat(jobId,\"&status=\",'open',\"&activeType=\").concat(props===null||props===void 0?void 0:props.activeType);_this.props.history.push(\"/job-detail?\".concat(_urlEncode));}};_this.setToggle=function(){return _this.setState({isToggleApplicants:!_this.state.isToggleApplicants});};_this.state={isToggleApplicants:false,quotesData:[],toggleQuoteSort:true};return _this;}_createClass(OpenJobs,[{key:\"componentDidMount\",value:function componentDidMount(){// this.preFetchForQuotes();\n}},{key:\"render\",value:function render(){var _props$history,_props$history$locati,_this2=this;// props defined & render by params\nvar props=this.props;var params=new URLSearchParams(props===null||props===void 0?void 0:(_props$history=props.history)===null||_props$history===void 0?void 0:(_props$history$locati=_props$history.location)===null||_props$history$locati===void 0?void 0:_props$history$locati.search);var quotes_param=params.get('quotes');var viewQuotesParam=params.get('viewQuotes');var jobId=params.get('jobId');var _this$props=this.props,setJobLabel=_this$props.setJobLabel,dataItems=_this$props.dataItems,applicantsList=_this$props.applicantsList,jobType=_this$props.jobType,isLoading=_this$props.isLoading;var listData=dataItems;var _this$state=this.state,isToggleApplicants=_this$state.isToggleApplicants,quotesData=_this$state.quotesData,toggleQuoteSort=_this$state.toggleQuoteSort;if(isLoading){return null;}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"sub_title\",children:[jobType.charAt(0).toUpperCase()+jobType.slice(1),\" Jobs\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(listData===null||listData===void 0?void 0:listData.length)?listData.map(function(_ref2){var amount=_ref2.amount,durations=_ref2.durations,jobId=_ref2.jobId,jobName=_ref2.jobName,fromDate=_ref2.fromDate,toDate=_ref2.toDate,milestoneNumber=_ref2.milestoneNumber,specializationId=_ref2.specializationId,specializationName=_ref2.specializationName,locationName=_ref2.locationName,status=_ref2.status,timeLeft=_ref2.timeLeft,total=_ref2.total,totalmem=_ref2.totalmem,totalMilestones=_ref2.totalMilestones,tradieListData=_ref2.tradieListData,tradeName=_ref2.tradeName,quoteCount=_ref2.quoteCount,quoteJob=_ref2.quoteJob,tradieId=_ref2.tradieId,location=_ref2.location,tradeSelectedUrl=_ref2.tradeSelectedUrl,tradieImage=_ref2.tradieImage;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){_this2.redirectToInfo({jobId:jobId,status:status});},className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img icon\",children:/*#__PURE__*/_jsx(\"img\",{src:tradeSelectedUrl||jobTypePlaceholder,alt:\"traide-img\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=jobTypePlaceholder;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:tradeName||'0'}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:jobName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:quoteJob?/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\"}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]}):/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:total})}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"job_progress_wrap\",id:\"scroll-progress-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress_wrapper\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"completed-digit\",id:\"digit-progress\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Job Milestones \".concat(milestoneNumber,\" \")}),\"of \".concat(totalMilestones)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"approval_info\",children:[status===\"Approved\"&&/*#__PURE__*/_jsx(\"img\",{src:approved,alt:\"icon\"}),status]}),/*#__PURE__*/_jsx(\"span\",{className:\"progress_bar\",children:/*#__PURE__*/_jsx(\"input\",{className:\"done_progress\",id:\"progress-bar\",type:\"range\",min:\"0\",value:milestoneNumber/totalMilestones*100})})]}),quoteJob?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if((quoteCount===null||quoteCount===void 0?void 0:quoteCount.length)||quoteCount){_this2.props.setJobLabel('listQuote');_this2.props.history.replace(\"/jobs?active=open&quote=true&jobId=\".concat(jobId));}},className:\"fill_grey_btn full_btn btn-effect\",children:\"\".concat(quoteCount,\" Quote\").concat(quoteCount===1?'':'s')}):null,!quoteJob&&(tradieId===null||tradieId===void 0?void 0:tradieId.length)?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){_this2.setToggle();setJobLabel('applicantList',jobId,1,specializationId);},className:\"fill_grey_btn full_btn btn-effect\",children:'Applications'}):null]})]})});}):!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noDataFound,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:'No Data Found'})]})})]});}}]);return OpenJobs;}(Component);export default OpenJobs;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/openJobs.tsx"],"names":["React","Component","approved","noDataFound","jobTypePlaceholder","renderTime","OpenJobs","props","redirectToInfo","jobId","status","length","urlEncode","activeType","history","push","setToggle","setState","isToggleApplicants","state","quotesData","toggleQuoteSort","params","URLSearchParams","location","search","quotes_param","get","viewQuotesParam","setJobLabel","dataItems","applicantsList","jobType","isLoading","listData","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","locationName","timeLeft","total","totalmem","totalMilestones","tradieListData","tradeName","quoteCount","quoteJob","tradieId","tradeSelectedUrl","tradieImage","e","target","onerror","src","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport approved from '../../../assets/images/approved.png';\nimport ApplicantsList from './applicantsList';\nimport { withRouter } from 'react-router-dom'\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport moment from 'moment';\nimport { renderTime } from '../../../utils/common';\nimport ListQuotes from './quoteJobs/ListQuotes';\nimport ViewQuote from './quoteJobs/viewQuote';\n\nimport { quoteByJobId } from '../../../redux/quotes/actions';\n\ninterface Active {\n    amount: any,\n    durations: any,\n    jobId: any,\n    jobName: any,\n    fromDate: any,\n    toDate: any,\n    milestoneNumber: any,\n    specializationId: any,\n    specializationName: any,\n    status: any,\n    timeLeft: any,\n    total: any,\n    totalmem: any,\n    location: any,\n    locationName: any,\n    totalMilestones: any,\n    tradieListData: any,\n    quoteCount: any,\n    quoteJob: any,\n    tradeName: any,\n    tradieId: any,\n    tradeSelectedUrl: any,\n    tradieImage: any,\n}\ninterface State {\n    isToggleApplicants: boolean,\n    quotesData: any,\n    toggleQuoteSort: boolean,\n}\n\ninterface Props {\n    setJobLabel: any,\n    dataItems: any,\n    applicantsList?: any,\n    jobType: any,\n    history?: any,\n    isLoading: any,\n    activeType?: any\n}\n\nclass OpenJobs extends Component<Props, State> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            isToggleApplicants: false,\n            quotesData: [],\n            toggleQuoteSort: true\n        }\n    }\n\n    redirectToInfo = ({ jobId, status }: any) => {\n        let props: any = this.props;\n        if (jobId?.length && status?.length) {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`)\n            let urlEncode: any = `?jobId=${jobId}&status=${status}&activeType=${props?.activeType}`\n            this.props.history.push(`/job-detail?${urlEncode}`);\n        } else {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`)\n            let urlEncode: any = `?jobId=${jobId}&status=${'open'}&activeType=${props?.activeType}`\n            this.props.history.push(`/job-detail?${urlEncode}`);\n        }\n    }\n\n    componentDidMount() {\n        // this.preFetchForQuotes();\n    }\n\n    setToggle = () => this.setState({ isToggleApplicants: !this.state.isToggleApplicants });\n\n    render() {\n        // props defined & render by params\n        const props: any = this.props;\n        const params = new URLSearchParams(props?.history?.location?.search);\n        const quotes_param: any = params.get('quotes');\n        const viewQuotesParam: any = params.get('viewQuotes');\n        const jobId: any = params.get('jobId');\n\n        const { setJobLabel, dataItems, applicantsList, jobType, isLoading } = this.props;\n        let listData: any = dataItems\n        let { isToggleApplicants, quotesData, toggleQuoteSort } = this.state;\n\n\n        if (isLoading) {\n            return null;\n        }\n\n        return (\n            <React.Fragment>\n                <span className=\"sub_title\">{jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n                    {/* {listData?.length} */}\n                </span>\n                <div className=\"flex_row tradies_row\">\n                    {listData?.length ?\n                        listData.map(({\n                            amount,\n                            durations,\n                            jobId,\n                            jobName,\n                            fromDate,\n                            toDate,\n                            milestoneNumber,\n                            specializationId,\n                            specializationName,\n                            locationName,\n                            status,\n                            timeLeft,\n                            total,\n                            totalmem,\n                            totalMilestones,\n                            tradieListData,\n                            tradeName,\n                            quoteCount,\n                            quoteJob,\n                            tradieId,\n                            location,\n                            tradeSelectedUrl,\n                            tradieImage,\n                        }: Active) => (\n                            <div className=\"flex_col_sm_6\">\n                                <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                                    <span\n                                        onClick={() => {\n                                            this.redirectToInfo({ jobId, status })\n                                        }}\n                                        className=\"more_detail circle\">\n                                    </span>\n                                    <div className=\"user_wrap\">\n                                        <figure className=\"u_img icon\">\n                                            <img\n                                                src={tradeSelectedUrl || jobTypePlaceholder}\n                                                alt=\"traide-img\"\n                                                onError={(e: any) => {\n                                                    if (e?.target?.onerror) {\n                                                        e.target.onerror = null;\n                                                    }\n                                                    if (e?.target?.src) {\n                                                        e.target.src = jobTypePlaceholder;\n                                                    }\n                                                }}\n                                            />\n                                        </figure>\n                                        <div className=\"details\">\n                                            <span className=\"name\">{tradeName || '0'}</span>\n                                            <p className=\"commn_para\">{jobName}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"job_info\">\n                                        {quoteJob ? (\n                                            <ul>\n                                                <li className=\"icon dollar\">{amount}</li>\n                                                <li className=\"\">\n                                                </li>\n                                                <li className=\"icon calendar\">\n                                                    {renderTime(fromDate, toDate)}\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        {timeLeft}\n                                                    </span>\n                                                </li>\n                                            </ul>\n                                        ) : (\n                                            <ul>\n                                                <li className=\"icon dollar\">{amount}</li>\n                                                <li className=\"\">\n                                                    <span>\n                                                        {total}\n                                                    </span>\n                                                </li>\n                                                <li className=\"icon calendar\">\n                                                    {renderTime(fromDate, toDate)}\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        {timeLeft}\n                                                    </span>\n                                                </li>\n                                            </ul>\n                                        )}\n\n                                    </div>\n                                    <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                        <div className=\"progress_wrapper\">\n                                            <span className=\"completed-digit\" id=\"digit-progress\">\n                                                <b>{`Job Milestones ${milestoneNumber} `}</b>{`of ${totalMilestones}`}\n                                            </span>\n                                            <span className=\"approval_info\">\n                                                {status === \"Approved\" && <img src={approved} alt=\"icon\" />}\n                                                {status}\n                                            </span>\n                                            <span className=\"progress_bar\">\n                                                <input\n                                                    className=\"done_progress\"\n                                                    id=\"progress-bar\"\n                                                    type=\"range\"\n                                                    min=\"0\"\n                                                    value={milestoneNumber / totalMilestones * 100}\n                                                />\n                                            </span>\n                                        </div>\n\n                                        {quoteJob ? (\n                                            <button\n                                                onClick={() => {\n                                                    if (quoteCount?.length || quoteCount) {\n                                                        this.props.setJobLabel('listQuote');\n                                                        this.props.history.replace(`/jobs?active=open&quote=true&jobId=${jobId}`)\n                                                    }\n                                                }}\n                                                className=\"fill_grey_btn full_btn btn-effect\">\n                                                {`${quoteCount} Quote${quoteCount === 1 ? '' : 's'}`}\n                                            </button>\n                                        ) : null}\n                                        {!quoteJob && tradieId?.length ? (\n                                            <button\n                                                onClick={() => {\n                                                    this.setToggle();\n                                                    setJobLabel('applicantList', jobId, 1, specializationId);\n                                                }}\n                                                className=\"fill_grey_btn full_btn btn-effect\">\n                                                {'Applications'}\n                                            </button>\n                                        ) : null}\n                                    </div>\n                                </div>\n                            </div>\n                        )) : !isLoading && (\n                            <div className=\"no_record  m-t-vh\">\n                                <figure className=\"no_img\">\n                                    <img src={noDataFound} alt=\"data not found\" />\n                                </figure>\n                                <span>{'No Data Found'}</span>\n                            </div>\n                        )}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default OpenJobs;"]},"metadata":{},"sourceType":"module"}