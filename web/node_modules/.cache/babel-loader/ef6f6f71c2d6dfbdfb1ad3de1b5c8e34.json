{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/quoteJobs/quoteOuter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport QuoteMark from \"../quoteJobs/quoteMark\";\nimport { getHomeJobDetails } from \"../../../../redux/homeSearch/actions\";\nimport dummy from \"../../../../assets/images/u_placeholder.jpg\";\nimport more from \"../../../../assets/images/icon-direction-right.png\";\nimport noDataFound from \"../../../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteOuter = props => {\n  _s();\n\n  var _props$location, _props$location$state, _props$location2;\n\n  const [dataItems, setDataItems] = useState({});\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [isLoad, setIsLoad] = useState(true);\n  var jobData = (_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.jobData;\n  const params = new URLSearchParams((_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.search);\n  let jobId = params.get(\"jobId\");\n  let tradeId = params.get(\"tradeId\");\n  let specializationId = params.get(\"specializationId\");\n  useEffect(() => {\n    if (!(jobData === null || jobData === void 0 ? void 0 : jobData.postedBy)) {\n      preFetch();\n    }\n  }, [jobData]);\n\n  const preFetch = async () => {\n    let data = {};\n\n    if (!isLoad) {\n      setIsLoad(true);\n    }\n\n    data.jobId = jobId ? jobId : jobData === null || jobData === void 0 ? void 0 : jobData.jobId;\n    data.tradeId = tradeId ? tradeId : jobData === null || jobData === void 0 ? void 0 : jobData.tradeId;\n    data.specializationId = specializationId ? specializationId : jobData === null || jobData === void 0 ? void 0 : jobData.specializationId;\n    let result = await getHomeJobDetails(data);\n\n    if (result.success) {\n      setDataItems(result === null || result === void 0 ? void 0 : result.data);\n    }\n\n    setIsLoad(false);\n  };\n\n  const dataFetched = val => {\n    setIsDataFetched(val);\n\n    if (jobData) {\n      setIsLoad(false);\n    }\n  };\n\n  const postedBy = (dataItems === null || dataItems === void 0 ? void 0 : dataItems.postedBy) || (jobData === null || jobData === void 0 ? void 0 : jobData.postedBy) || {};\n  const {\n    builderId,\n    builderImage,\n    builderName,\n    ratings,\n    reviews\n  } = postedBy;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: [/*#__PURE__*/_jsxDEV(QuoteMark, { ...props,\n        builderName: builderName,\n        jobId: jobId,\n        dataFetched: dataFetched,\n        isDataFetched: isDataFetched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), isDataFetched ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_col_sm_6 col_ruler\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sub_title\",\n          children: \"Posted by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card posted_by \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            onClick: () => {\n              props.history.push(`/builder-info?builderId=${builderId}`);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: builderImage || dummy,\n                alt: \"traide-img\",\n                onError: e => {\n                  var _e$target, _e$target2;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                    e.target.src = dummy;\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: builderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"rating\",\n                children: [ratings, \" | \", reviews, \" reviews\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relate\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Job details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"edit_icon\",\n            title: \"More\",\n            onClick: () => props.history.push(`/job-details-page?jobId=${jobId ? jobId : jobData === null || jobData === void 0 ? void 0 : jobData.jobId}&redirect_from=jobs`),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: more,\n              alt: \"more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : !props.loading && !isLoad && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_record  m-t-vh\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"no_img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: noDataFound,\n            alt: \"data not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No Data Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteOuter, \"qoCpO2Ktf1EJSvoHjC8L2Y4788M=\");\n\n_c = QuoteOuter;\nexport default QuoteOuter;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteOuter\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/quoteJobs/quoteOuter.tsx"],"names":["useEffect","useState","QuoteMark","getHomeJobDetails","dummy","more","noDataFound","QuoteOuter","props","dataItems","setDataItems","isDataFetched","setIsDataFetched","isLoad","setIsLoad","jobData","location","state","params","URLSearchParams","search","jobId","get","tradeId","specializationId","postedBy","preFetch","data","result","success","dataFetched","val","builderId","builderImage","builderName","ratings","reviews","history","push","e","target","onerror","src","loading"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AAEA,OAAOC,KAAP,MAAkB,6CAAlB;AACA,OAAOC,IAAP,MAAiB,oDAAjB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAgB;AAAA;;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAM,EAAN,CAA1C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAU,KAAV,CAAlD;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AAEA,MAAIc,OAAO,sBAAGP,KAAK,CAACQ,QAAT,6EAAG,gBAAgBC,KAAnB,0DAAG,sBAAuBF,OAArC;AACA,QAAMG,MAAM,GAAG,IAAIC,eAAJ,qBAAoBX,KAAK,CAACQ,QAA1B,qDAAoB,iBAAgBI,MAApC,CAAf;AACA,MAAIC,KAAK,GAAGH,MAAM,CAACI,GAAP,CAAW,OAAX,CAAZ;AACA,MAAIC,OAAO,GAAGL,MAAM,CAACI,GAAP,CAAW,SAAX,CAAd;AACA,MAAIE,gBAAgB,GAAGN,MAAM,CAACI,GAAP,CAAW,kBAAX,CAAvB;AACAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAACe,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEU,QAAV,CAAJ,EAAwB;AACtBC,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIN,CAACX,OAAD,CAJM,CAAT;;AAMA,QAAMW,QAAQ,GAAG,YAAY;AAC3B,QAAIC,IAAS,GAAG,EAAhB;;AACA,QAAI,CAACd,MAAL,EAAa;AACXC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDa,IAAAA,IAAI,CAACN,KAAL,GAAaA,KAAK,GAAGA,KAAH,GAAWN,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEM,KAAtC;AACAM,IAAAA,IAAI,CAACJ,OAAL,GAAeA,OAAO,GAAGA,OAAH,GAAaR,OAAb,aAAaA,OAAb,uBAAaA,OAAO,CAAEQ,OAA5C;AACAI,IAAAA,IAAI,CAACH,gBAAL,GAAwBA,gBAAgB,GACpCA,gBADoC,GAEpCT,OAFoC,aAEpCA,OAFoC,uBAEpCA,OAAO,CAAES,gBAFb;AAGA,QAAII,MAAW,GAAG,MAAMzB,iBAAiB,CAACwB,IAAD,CAAzC;;AACA,QAAIC,MAAM,CAACC,OAAX,EAAoB;AAClBnB,MAAAA,YAAY,CAACkB,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAED,IAAT,CAAZ;AACD;;AACDb,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAfD;;AAiBA,QAAMgB,WAAW,GAAIC,GAAD,IAAkB;AACpCnB,IAAAA,gBAAgB,CAACmB,GAAD,CAAhB;;AACA,QAAIhB,OAAJ,EAAa;AACXD,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GALD;;AAOA,QAAMW,QAAa,GAAG,CAAAhB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEgB,QAAX,MAAuBV,OAAvB,aAAuBA,OAAvB,uBAAuBA,OAAO,CAAEU,QAAhC,KAA4C,EAAlE;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,WAA3B;AAAwCC,IAAAA,OAAxC;AAAiDC,IAAAA;AAAjD,MAA6DX,QAAnE;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,SAAD,OACMjB,KADN;AAEE,QAAA,WAAW,EAAE0B,WAFf;AAGE,QAAA,KAAK,EAAEb,KAHT;AAIE,QAAA,WAAW,EAAES,WAJf;AAKE,QAAA,aAAa,EAAEnB;AALjB;AAAA;AAAA;AAAA;AAAA,cADF,EAQGA,aAAa,gBACZ;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,iCACE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,OAAO,EAAE,MAAM;AACbH,cAAAA,KAAK,CAAC6B,OAAN,CAAcC,IAAd,CAAoB,2BAA0BN,SAAU,EAAxD;AACD,aAJH;AAAA,oCAME;AAAQ,cAAA,SAAS,EAAC,OAAlB;AAAA,qCACE;AACE,gBAAA,GAAG,EAAEC,YAAY,IAAI7B,KADvB;AAEE,gBAAA,GAAG,EAAC,YAFN;AAGE,gBAAA,OAAO,EAAGmC,CAAD,IAAY;AAAA;;AACnB,sBAAIA,CAAJ,aAAIA,CAAJ,oCAAIA,CAAC,CAAEC,MAAP,8CAAI,UAAWC,OAAf,EAAwB;AACtBF,oBAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,GAAmB,IAAnB;AACD;;AACD,sBAAIF,CAAJ,aAAIA,CAAJ,qCAAIA,CAAC,CAAEC,MAAP,+CAAI,WAAWE,GAAf,EAAoB;AAClBH,oBAAAA,CAAC,CAACC,MAAF,CAASE,GAAT,GAAetC,KAAf;AACD;AACF;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eAoBE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,MAAhB;AAAA,0BAAwB8B;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,gBAAA,SAAS,EAAC,QAAhB;AAAA,2BACGC,OADH,SACeC,OADf;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eA+BE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,sBAA6B;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,KAAK,EAAC,MAFR;AAGE,YAAA,OAAO,EAAE,MACP5B,KAAK,CAAC6B,OAAN,CAAcC,IAAd,CACG,2BACCjB,KAAK,GAAGA,KAAH,GAAWN,OAAX,aAAWA,OAAX,uBAAWA,OAAO,CAAEM,KAC1B,qBAHH,CAJJ;AAAA,mCAWE;AAAK,cAAA,GAAG,EAAEhB,IAAV;AAAgB,cAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,GAkDZ,CAACG,KAAK,CAACmC,OAAP,IACA,CAAC9B,MADD,iBAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAEP,WAAV;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5DN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyED,CApHD;;GAAMC,U;;KAAAA,U;AAsHN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport QuoteMark from \"../quoteJobs/quoteMark\";\nimport { getHomeJobDetails } from \"../../../../redux/homeSearch/actions\";\n\nimport dummy from \"../../../../assets/images/u_placeholder.jpg\";\nimport more from \"../../../../assets/images/icon-direction-right.png\";\nimport noDataFound from \"../../../../assets/images/no-search-data.png\";\n\nconst QuoteOuter = (props: any) => {\n  const [dataItems, setDataItems] = useState<any>({});\n  const [isDataFetched, setIsDataFetched] = useState<boolean>(false);\n  const [isLoad, setIsLoad] = useState(true);\n\n  var jobData = props.location?.state?.jobData;\n  const params = new URLSearchParams(props.location?.search);\n  let jobId = params.get(\"jobId\");\n  let tradeId = params.get(\"tradeId\");\n  let specializationId = params.get(\"specializationId\");\n  useEffect(() => {\n    if (!jobData?.postedBy) {\n      preFetch();\n    }\n  }, [jobData]);\n\n  const preFetch = async () => {\n    let data: any = {};\n    if (!isLoad) {\n      setIsLoad(true);\n    }\n    data.jobId = jobId ? jobId : jobData?.jobId;\n    data.tradeId = tradeId ? tradeId : jobData?.tradeId;\n    data.specializationId = specializationId\n      ? specializationId\n      : jobData?.specializationId;\n    let result: any = await getHomeJobDetails(data);\n    if (result.success) {\n      setDataItems(result?.data);\n    }\n    setIsLoad(false);\n  };\n\n  const dataFetched = (val: boolean) => {\n    setIsDataFetched(val);\n    if (jobData) {\n      setIsLoad(false);\n    }\n  };\n\n  const postedBy: any = dataItems?.postedBy || jobData?.postedBy || {};\n  const { builderId, builderImage, builderName, ratings, reviews } = postedBy;\n\n  return (\n    <div className=\"detail_col\">\n      <div className=\"flex_row\">\n        <QuoteMark\n          {...props}\n          builderName={builderName}\n          jobId={jobId}\n          dataFetched={dataFetched}\n          isDataFetched={isDataFetched}\n        />\n        {isDataFetched ? (\n          <div className=\"flex_col_sm_6 col_ruler\">\n            <span className=\"sub_title\">Posted by</span>\n            <div className=\"tradie_card posted_by \">\n              <div\n                className=\"user_wrap\"\n                onClick={() => {\n                  props.history.push(`/builder-info?builderId=${builderId}`);\n                }}\n              >\n                <figure className=\"u_img\">\n                  <img\n                    src={builderImage || dummy}\n                    alt=\"traide-img\"\n                    onError={(e: any) => {\n                      if (e?.target?.onerror) {\n                        e.target.onerror = null;\n                      }\n                      if (e?.target?.src) {\n                        e.target.src = dummy;\n                      }\n                    }}\n                  />\n                </figure>\n                <div className=\"details\">\n                  <span className=\"name\">{builderName}</span>\n                  <span className=\"rating\">\n                    {ratings} | {reviews} reviews\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"relate\">\n              <span className=\"sub_title\">{\"Job details\"}</span>\n              <span\n                className=\"edit_icon\"\n                title=\"More\"\n                onClick={() =>\n                  props.history.push(\n                    `/job-details-page?jobId=${\n                      jobId ? jobId : jobData?.jobId\n                    }&redirect_from=jobs`\n                  )\n                }\n              >\n                <img src={more} alt=\"more\" />\n              </span>\n            </div>\n          </div>\n        ) : (\n          !props.loading &&\n          !isLoad && (\n            <div className=\"no_record  m-t-vh\">\n              <figure className=\"no_img\">\n                <img src={noDataFound} alt=\"data not found\" />\n              </figure>\n              <span>No Data Found</span>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuoteOuter;\n"]},"metadata":{},"sourceType":"module"}