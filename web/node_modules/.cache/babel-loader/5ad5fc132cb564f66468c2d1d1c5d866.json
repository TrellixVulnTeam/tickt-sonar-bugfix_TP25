{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/userMessages.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getJobDetails } from '../../redux/jobs/actions';\nimport storageService from '../../utils/storageService';\nimport notFound from '../../assets/images/not-found.png';\nimport chatVideoIcon from '../../assets/images/video@3x.png';\nimport dummy from '../../assets/images/u_placeholder.jpg';\nimport viewMore from '../../assets/images/icon-direction-blue.png';\nimport close from '../../assets/images/ic-cancel-blue.png';\nimport sendMedia from '../../assets/images/ic-media.png';\nimport sendBtn from '../../assets/images/ic-send.png';\nimport loader from '../../assets/images/loader.gif';\nimport { formatDateTime, renderTime } from '../../utils/common';\nimport { setShowToast } from '../../redux/common/actions';\nimport { onFileUpload } from '../../redux/auth/actions';\nimport { getMessagesOfRoom, sendTextMessage, sendImageVideoMessage } from '../../services/firebase';\nimport Constants from '../../utils/constants'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react';\nimport { moengage, mixPanel } from '../../services/analyticsTools';\nimport { MoEConstants } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet lastDate = '';\nconst docTypes = [\"jpeg\", \"jpg\", \"png\", \"mp4\", \"wmv\", \"avi\"];\n\nconst UserMessages = props => {\n  _s();\n\n  var _storageService$getIt, _props$roomData16, _props$roomData16$opp, _props$roomData19, _props$roomData19$opp, _props$roomData21, _props$roomData21$opp, _props$roomData22, _props$roomData22$opp;\n\n  const divRref = useRef(null);\n  const [userId] = useState((_storageService$getIt = storageService.getItem('userInfo')) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id);\n  const [toggle, setToggle] = useState(false);\n  const [jobDetailLoader, setJobDetailLoader] = useState(false);\n  const [currentJobDetails, setCurrentJobDetails] = useState(null);\n  const [messageText, setMessageText] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isDocUploading, setIsDocUploading] = useState(false);\n  const [itemsMedia, setItemsMedia] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [fsSlideListner, setFsSlideListner] = useState({});\n  const [oppUserFcmToken, setOppUserFcmToken] = useState('');\n  useEffect(() => {\n    if (props.roomId !== '') {\n      lastDate = '';\n      getMessagesOfRoom(props.roomId, onReceiveOfNewMsg);\n      setSelectSlide(1);\n      setFsSlideListner({});\n      setItemsMedia([]);\n      setCurrentJobDetails(null);\n      setToggle(false);\n    }\n  }, [props.roomId]); // }, [props.roomId, props.roomData]);\n  //console.log('props.roomData: ', props.roomData);\n\n  useEffect(() => {\n    scrollToBottom();\n  });\n\n  const scrollToBottom = () => {\n    if (null !== (divRref === null || divRref === void 0 ? void 0 : divRref.current)) {\n      const scroll = divRref.current.scrollHeight - divRref.current.clientHeight; // divRref.current.scrollIntoView({ behavior: \"smooth\" })\n\n      divRref.current.scrollTo(0, scroll);\n    }\n  };\n\n  const onReceiveOfNewMsg = arrmsg => {\n    // console.log('arrmsg: ', arrmsg);\n    setMessages(arrmsg);\n  };\n\n  useEffect(() => {\n    let fsSlideObj = {};\n    let mediaMsgs = [];\n    let slideCount = 1;\n\n    if (messages.length) {\n      mediaMsgs = messages.filter((item, index) => {\n        if (item.messageType === 'image' || item.messageType === 'video') {\n          fsSlideObj[`${index}`] = slideCount++;\n          return item;\n        }\n      });\n      setItemsMedia(mediaMsgs);\n      setFsSlideListner(fsSlideObj);\n    }\n  }, [messages]); // console.log('itemsMedia: ', itemsMedia, \"fsSlideListner\", fsSlideListner);\n\n  const setInboxToTopWithLastMsg = lastMsg => {\n    const newInboxData = [...props.inBoxData];\n    const currentIndex = newInboxData.findIndex(i => i.roomId === props.roomId);\n    newInboxData[currentIndex].lastMsg = lastMsg;\n    newInboxData.splice(currentIndex, 1);\n    newInboxData.unshift(props.inBoxData[currentIndex]);\n    props.setInBoxData(newInboxData);\n    console.log('lastMsg: ', lastMsg);\n    console.log('currentIndex: ', currentIndex);\n    console.log('newInboxData: ', newInboxData);\n  };\n\n  const sendMessage = async () => {\n    //setIsLoading(true);\n    if (messageText && messageText.trimLeft() !== \"\") {\n      var _props$roomData, _props$roomData$oppUs, _props$roomData2, _props$roomData2$oppU, _props$roomData3, _props$roomData3$oppU, _props$roomData4, _props$roomData4$oppU;\n\n      setMessageText('');\n      const lastMsg = await sendTextMessage(props.roomId, messageText);\n\n      if (lastMsg && ((_props$roomData = props.roomData) === null || _props$roomData === void 0 ? void 0 : (_props$roomData$oppUs = _props$roomData.oppUserInfo) === null || _props$roomData$oppUs === void 0 ? void 0 : _props$roomData$oppUs.deviceToken) && ((_props$roomData2 = props.roomData) === null || _props$roomData2 === void 0 ? void 0 : (_props$roomData2$oppU = _props$roomData2.oppUserInfo) === null || _props$roomData2$oppU === void 0 ? void 0 : _props$roomData2$oppU.deviceType) && (((_props$roomData3 = props.roomData) === null || _props$roomData3 === void 0 ? void 0 : (_props$roomData3$oppU = _props$roomData3.oppUserInfo) === null || _props$roomData3$oppU === void 0 ? void 0 : _props$roomData3$oppU.hasOwnProperty('isNotification')) ? (_props$roomData4 = props.roomData) === null || _props$roomData4 === void 0 ? void 0 : (_props$roomData4$oppU = _props$roomData4.oppUserInfo) === null || _props$roomData4$oppU === void 0 ? void 0 : _props$roomData4$oppU.isNotification : true)) {\n        sendFCMPushNotificationToOppUser(lastMsg);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp()\n        };\n        moengage.moE_SendEvent(MoEConstants.CHAT, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.CHAT, mData);\n      }\n\n      setInboxToTopWithLastMsg(lastMsg);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  const sendImageVideoMsg = async (url, msgType) => {\n    //setIsLoading(true);\n    if (url && url !== '') {\n      var _props$roomData5, _props$roomData5$oppU, _props$roomData6, _props$roomData6$oppU, _props$roomData7, _props$roomData7$oppU, _props$roomData8, _props$roomData8$oppU;\n\n      const lastMsg = await sendImageVideoMessage(props.roomId, url, msgType);\n\n      if (lastMsg && ((_props$roomData5 = props.roomData) === null || _props$roomData5 === void 0 ? void 0 : (_props$roomData5$oppU = _props$roomData5.oppUserInfo) === null || _props$roomData5$oppU === void 0 ? void 0 : _props$roomData5$oppU.deviceToken) && ((_props$roomData6 = props.roomData) === null || _props$roomData6 === void 0 ? void 0 : (_props$roomData6$oppU = _props$roomData6.oppUserInfo) === null || _props$roomData6$oppU === void 0 ? void 0 : _props$roomData6$oppU.deviceType) && (((_props$roomData7 = props.roomData) === null || _props$roomData7 === void 0 ? void 0 : (_props$roomData7$oppU = _props$roomData7.oppUserInfo) === null || _props$roomData7$oppU === void 0 ? void 0 : _props$roomData7$oppU.hasOwnProperty('isNotification')) ? (_props$roomData8 = props.roomData) === null || _props$roomData8 === void 0 ? void 0 : (_props$roomData8$oppU = _props$roomData8.oppUserInfo) === null || _props$roomData8$oppU === void 0 ? void 0 : _props$roomData8$oppU.isNotification : true)) {\n        sendFCMPushNotificationToOppUser(lastMsg);\n      }\n\n      setInboxToTopWithLastMsg(lastMsg);\n    }\n\n    setMessageText('');\n  };\n\n  const fetchJobDetail = async jobId => {\n    setJobDetailLoader(true);\n    const res = await getJobDetails(jobId);\n\n    if (res.success) {\n      var _res$data, _res$data2, _res$data3, _res$data4, _res$data5, _res$data6, _res$data7, _res$data8, _res$data9;\n\n      const jobInfo = {\n        jobDescription: ((_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.details) || '',\n        jobId: ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.jobId) || '',\n        jobName: ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.jobName) || '',\n        amount: ((_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.amount) || '',\n        locationName: ((_res$data5 = res.data) === null || _res$data5 === void 0 ? void 0 : _res$data5.locationName) || '',\n        fromDate: ((_res$data6 = res.data) === null || _res$data6 === void 0 ? void 0 : _res$data6.fromDate) || '',\n        toDate: ((_res$data7 = res.data) === null || _res$data7 === void 0 ? void 0 : _res$data7.toDate) || '',\n        duration: ((_res$data8 = res.data) === null || _res$data8 === void 0 ? void 0 : _res$data8.duration) || '',\n        status: ((_res$data9 = res.data) === null || _res$data9 === void 0 ? void 0 : _res$data9.status) || ''\n      };\n      setCurrentJobDetails(jobInfo);\n      setJobDetailLoader(false);\n    }\n  };\n\n  const renderMediaItems = itemsMedia => {\n    let sources = [];\n    let types = [];\n\n    if (itemsMedia.length) {\n      itemsMedia.forEach(item => {\n        if (item.messageType === 'video') {\n          sources.push(item.mediaUrl);\n          types.push('video');\n        }\n\n        if (item.messageType === 'image') {\n          sources.push(item.mediaUrl);\n          types.push('image');\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const setResDeviceType = (deviceType, msg) => {\n    var _storageService$getIt2, _storageService$getIt3, _storageService$getIt4, _storageService$getIt5, _storageService$getIt6, _msg$messageRoomId, _msg$messageRoomId$sp, _storageService$getIt7, _props$roomData9, _storageService$getIt8, _storageService$getIt9, _storageService$getIt10, _msg$messageRoomId2, _msg$messageRoomId2$s, _storageService$getIt11, _props$roomData10;\n\n    switch (Number(deviceType)) {\n      case 1:\n        return {\n          app_icon: \"https://appinventiv-development.s3.amazonaws.com/1628513615740ic-logo-yellow.png\",\n          title: \"Tickt App\",\n          notificationText: `${(_storageService$getIt2 = storageService.getItem('userInfo')) === null || _storageService$getIt2 === void 0 ? void 0 : _storageService$getIt2.userName} send you a message`,\n          senderName: `${(_storageService$getIt3 = storageService.getItem('userInfo')) === null || _storageService$getIt3 === void 0 ? void 0 : _storageService$getIt3.userName}`,\n          messageType: `${msg === null || msg === void 0 ? void 0 : msg.messageType}`,\n          messageText: `${(msg === null || msg === void 0 ? void 0 : msg.messageType) === 'text' ? msg === null || msg === void 0 ? void 0 : msg.messageText : ''}`,\n          room_id: msg === null || msg === void 0 ? void 0 : msg.messageRoomId,\n          image: (_storageService$getIt4 = storageService.getItem('userInfo')) === null || _storageService$getIt4 === void 0 ? void 0 : _storageService$getIt4.user_image,\n          notificationType: 25,\n          sound: \"default\"\n        };\n\n      case 2:\n        return {\n          body: msg === null || msg === void 0 ? void 0 : msg.messageText,\n          messageText: msg === null || msg === void 0 ? void 0 : msg.messageText,\n          sender: {\n            first_name: (_storageService$getIt5 = storageService.getItem('userInfo')) === null || _storageService$getIt5 === void 0 ? void 0 : _storageService$getIt5.userName,\n            device_token: storageService.getItem('fcmToken'),\n            user_id: (_storageService$getIt6 = storageService.getItem('userInfo')) === null || _storageService$getIt6 === void 0 ? void 0 : _storageService$getIt6._id,\n            device_type: 2\n          },\n          jobId: msg === null || msg === void 0 ? void 0 : (_msg$messageRoomId = msg.messageRoomId) === null || _msg$messageRoomId === void 0 ? void 0 : (_msg$messageRoomId$sp = _msg$messageRoomId.split('_')) === null || _msg$messageRoomId$sp === void 0 ? void 0 : _msg$messageRoomId$sp[0],\n          badge: 1,\n          device_type: 2,\n          title: (_storageService$getIt7 = storageService.getItem('userInfo')) === null || _storageService$getIt7 === void 0 ? void 0 : _storageService$getIt7.userName,\n          jobName: (_props$roomData9 = props.roomData) === null || _props$roomData9 === void 0 ? void 0 : _props$roomData9.jobName,\n          notification_type: 50,\n          sound: 'default',\n          messageId: msg === null || msg === void 0 ? void 0 : msg.messageId\n        };\n\n      case 3:\n        return {\n          notification: {\n            body: msg === null || msg === void 0 ? void 0 : msg.messageText,\n            title: (_storageService$getIt8 = storageService.getItem('userInfo')) === null || _storageService$getIt8 === void 0 ? void 0 : _storageService$getIt8.userName\n          },\n          data: {\n            body: msg === null || msg === void 0 ? void 0 : msg.messageText,\n            messageText: msg === null || msg === void 0 ? void 0 : msg.messageText,\n            sender: {\n              first_name: (_storageService$getIt9 = storageService.getItem('userInfo')) === null || _storageService$getIt9 === void 0 ? void 0 : _storageService$getIt9.userName,\n              device_token: storageService.getItem('fcmToken'),\n              user_id: (_storageService$getIt10 = storageService.getItem('userInfo')) === null || _storageService$getIt10 === void 0 ? void 0 : _storageService$getIt10._id,\n              device_type: 2\n            },\n            jobId: msg === null || msg === void 0 ? void 0 : (_msg$messageRoomId2 = msg.messageRoomId) === null || _msg$messageRoomId2 === void 0 ? void 0 : (_msg$messageRoomId2$s = _msg$messageRoomId2.split('_')) === null || _msg$messageRoomId2$s === void 0 ? void 0 : _msg$messageRoomId2$s[0],\n            badge: 1,\n            device_type: 2,\n            title: (_storageService$getIt11 = storageService.getItem('userInfo')) === null || _storageService$getIt11 === void 0 ? void 0 : _storageService$getIt11.userName,\n            jobName: (_props$roomData10 = props.roomData) === null || _props$roomData10 === void 0 ? void 0 : _props$roomData10.jobName,\n            notification_type: 50,\n            sound: 'default',\n            messageId: msg === null || msg === void 0 ? void 0 : msg.messageId\n          }\n        };\n\n      default:\n        return;\n    }\n  };\n\n  const sendFCMPushNotificationToOppUser = async msg => {\n    var _props$roomData11, _props$roomData11$opp, _props$roomData12, _props$roomData12$opp, _props$roomData13, _props$roomData13$opp, _props$roomData14, _props$roomData14$opp, _props$roomData15, _props$roomData15$opp;\n\n    let data = setResDeviceType((_props$roomData11 = props.roomData) === null || _props$roomData11 === void 0 ? void 0 : (_props$roomData11$opp = _props$roomData11.oppUserInfo) === null || _props$roomData11$opp === void 0 ? void 0 : _props$roomData11$opp.deviceType, msg);\n    let newData = {\n      to: `${(_props$roomData12 = props.roomData) === null || _props$roomData12 === void 0 ? void 0 : (_props$roomData12$opp = _props$roomData12.oppUserInfo) === null || _props$roomData12$opp === void 0 ? void 0 : _props$roomData12$opp.deviceToken}`,\n      ...(((_props$roomData13 = props.roomData) === null || _props$roomData13 === void 0 ? void 0 : (_props$roomData13$opp = _props$roomData13.oppUserInfo) === null || _props$roomData13$opp === void 0 ? void 0 : _props$roomData13$opp.deviceType) == 1 && {\n        data: data\n      }),\n      ...(((_props$roomData14 = props.roomData) === null || _props$roomData14 === void 0 ? void 0 : (_props$roomData14$opp = _props$roomData14.oppUserInfo) === null || _props$roomData14$opp === void 0 ? void 0 : _props$roomData14$opp.deviceType) == 2 && {\n        notification: data\n      }),\n      ...(((_props$roomData15 = props.roomData) === null || _props$roomData15 === void 0 ? void 0 : (_props$roomData15$opp = _props$roomData15.oppUserInfo) === null || _props$roomData15$opp === void 0 ? void 0 : _props$roomData15$opp.deviceType) == 3 && {\n        notification: data === null || data === void 0 ? void 0 : data.notification,\n        data: data === null || data === void 0 ? void 0 : data.data\n      })\n    };\n    const headers_ = {\n      'Content-Type': 'application/json',\n      'Authorization': Constants.FcmHeaderAuthorizationKey\n    };\n    const response = await fetch(`https://fcm.googleapis.com/fcm/send`, {\n      method: \"POST\",\n      headers: headers_,\n      body: JSON.stringify(newData)\n    }); // const res: any = await response.json();\n\n    if (response.status === 200) {\n      console.log('Chat push notification send to opposite user: success');\n    } else {\n      console.log('Chat push notification send to opposite user: failure');\n    }\n  };\n\n  const handleUpload = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    let maxFileSize = 10;\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split('/')[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mb\n\n    if ([\"mp4\", \"wmv\", \"avi\"].includes(fileType)) {\n      maxFileSize = 20;\n    }\n\n    if (docTypes.indexOf(fileType) < 0 || selectedFileSize > maxFileSize) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    formData.append('file', newFile);\n    setIsDocUploading(true);\n    let check_type = [\"jpeg\", \"jpg\", \"png\"].includes(fileType) ? 1 : [\"mp4\", \"wmv\", \"avi\"].includes(fileType) ? 2 : null;\n    const res = await onFileUpload(formData);\n\n    if (res.success && res.imgUrl) {\n      if (check_type === 1) {\n        sendImageVideoMsg(res.imgUrl, \"image\");\n      } else if (check_type === 2) {\n        sendImageVideoMsg(res.imgUrl, \"video\");\n      } else {\n        setShowToast(true, \"There is some technical issue\");\n      }\n\n      setIsDocUploading(false); // setLocalFiles((prev: any) => ({ ...prev, [filesUrl?.length]: URL.createObjectURL(newFile) }));\n    }\n  };\n\n  const renderTextMsg = msg => {\n    let curDate = formatDateTime(msg.messageTimestamp, 'day');\n    const messageClass = msg.senderId === userId ? 'message' : 'message recive_msg';\n\n    if (lastDate === '' || lastDate !== curDate) {\n      lastDate = curDate;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: curDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `${msg.senderId === userId ? 'mark' : ''}`,\n            children: [msg.messageText, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: formatDateTime(msg.messageTimestamp, \"time\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${messageClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `${msg.senderId === userId ? 'mark' : ''}`,\n        children: [msg.messageText, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: formatDateTime(msg.messageTimestamp, \"time\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }, this);\n  };\n\n  const renderImageMsg = (msg, index) => {\n    let curDate = formatDateTime(msg.messageTimestamp, 'day');\n    const messageClass = msg.senderId === userId ? 'message' : 'message recive_msg';\n\n    if (lastDate === '' || lastDate !== curDate) {\n      lastDate = curDate;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: curDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"media\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: msg.mediaUrl || notFound,\n              alt: \"media\",\n              \"async-src\": msg.mediaUrl || notFound,\n              decoding: \"async\",\n              loading: \"lazy\",\n              onError: e => {\n                var _e$target, _e$target2;\n\n                if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                  e.target.onerror = null;\n                }\n\n                if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                  e.target.src = notFound;\n                }\n              },\n              onClick: () => {\n                setToggler(prev => !prev);\n                setSelectSlide(fsSlideListner[`${index}`]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: formatDateTime(msg.messageTimestamp, \"time\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${messageClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"media\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: msg.mediaUrl || notFound,\n          alt: \"media\",\n          \"async-src\": msg.mediaUrl || notFound,\n          decoding: \"async\",\n          loading: \"lazy\",\n          onError: e => {\n            var _e$target3, _e$target4;\n\n            if (e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.onerror) {\n              e.target.onerror = null;\n            }\n\n            if (e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.src) {\n              e.target.src = notFound;\n            }\n          },\n          onClick: () => {\n            setToggler(prev => !prev);\n            setSelectSlide(fsSlideListner[`${index}`]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: formatDateTime(msg.messageTimestamp, \"time\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }, this);\n  };\n\n  const renderVideoMsg = (msg, index) => {\n    let curDate = formatDateTime(msg.messageTimestamp, 'day');\n    const messageClass = msg.senderId === userId ? 'message' : 'message recive_msg';\n\n    if (lastDate === '' || lastDate !== curDate) {\n      lastDate = curDate;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date_time\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: curDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${messageClass}`,\n          children: /*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"media media_video \",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              src: msg.mediaUrl || notFound,\n              poster: chatVideoIcon,\n              onClick: () => {\n                setToggler(prev => !prev);\n                setSelectSlide(fsSlideListner[`${index}`]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"time\",\n              children: formatDateTime(msg.messageTimestamp, \"time\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${messageClass}`,\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"media media_video \",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          src: msg.mediaUrl || notFound,\n          poster: chatVideoIcon,\n          onClick: () => {\n            setToggler(prev => !prev);\n            setSelectSlide(fsSlideListner[`${index}`]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: formatDateTime(msg.messageTimestamp, \"time\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }, this);\n  };\n\n  const displayMessages = (msg, index) => {\n    if (index === 0) lastDate = '';\n\n    switch (msg.messageType) {\n      case \"text\":\n        return renderTextMsg(msg);\n\n      case \"image\":\n        return renderImageMsg(msg, index);\n\n      case \"video\":\n        return renderVideoMsg(msg, index);\n    }\n  };\n\n  const {\n    sources,\n    types\n  } = renderMediaItems(itemsMedia);\n  return props.isNoRecords ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FsLightbox, {\n      toggler: toggler,\n      slide: selectedSlide,\n      sources: sources,\n      types: types,\n      // disableLocalStorage={true}\n      onClose: () => {\n        setSelectSlide(1);\n      }\n    }, sources === null || sources === void 0 ? void 0 : sources.length, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail_col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat_col ${toggle ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat_user\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ((_props$roomData16 = props.roomData) === null || _props$roomData16 === void 0 ? void 0 : (_props$roomData16$opp = _props$roomData16.oppUserInfo) === null || _props$roomData16$opp === void 0 ? void 0 : _props$roomData16$opp.image) || dummy,\n                alt: \"user-img\",\n                onError: e => {\n                  var _e$target5, _e$target6;\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target5 = e.target) === null || _e$target5 === void 0 ? void 0 : _e$target5.onerror) {\n                    e.target.onerror = null;\n                  }\n\n                  if (e === null || e === void 0 ? void 0 : (_e$target6 = e.target) === null || _e$target6 === void 0 ? void 0 : _e$target6.src) {\n                    e.target.src = dummy;\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              onClick: () => {\n                if (storageService.getItem('userType') === 2) {\n                  var _props$roomData17, _props$roomData17$opp;\n\n                  props.history.push(`/tradie-info?tradeId=${(_props$roomData17 = props.roomData) === null || _props$roomData17 === void 0 ? void 0 : (_props$roomData17$opp = _props$roomData17.oppUserInfo) === null || _props$roomData17$opp === void 0 ? void 0 : _props$roomData17$opp.userId}&hideInvite=true`);\n                } else {\n                  var _props$roomData18, _props$roomData18$opp;\n\n                  props.history.push(`/builder-info?builderId=${(_props$roomData18 = props.roomData) === null || _props$roomData18 === void 0 ? void 0 : (_props$roomData18$opp = _props$roomData18.oppUserInfo) === null || _props$roomData18$opp === void 0 ? void 0 : _props$roomData18$opp.userId}`);\n                }\n              },\n              children: (_props$roomData19 = props.roomData) === null || _props$roomData19 === void 0 ? void 0 : (_props$roomData19$opp = _props$roomData19.oppUserInfo) === null || _props$roomData19$opp === void 0 ? void 0 : _props$roomData19$opp.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), !toggle && /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                var _props$roomData20;\n\n                setToggle(true);\n                if (currentJobDetails) return;\n                fetchJobDetail((_props$roomData20 = props.roomData) === null || _props$roomData20 === void 0 ? void 0 : _props$roomData20.jobId);\n              },\n              className: \"view_detail\",\n              children: [\"View Job Details\", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: viewMore,\n                alt: \"view-more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message_wrapr\",\n            ref: divRref,\n            children: [messages.length > 0 && messages.map((msg, index) => {\n              return displayMessages(msg, index);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date_time\",\n              children: ((_props$roomData21 = props.roomData) === null || _props$roomData21 === void 0 ? void 0 : (_props$roomData21$opp = _props$roomData21.oppUserInfo) === null || _props$roomData21$opp === void 0 ? void 0 : _props$roomData21$opp.isBlock) && /*#__PURE__*/_jsxDEV(\"i\", {\n                style: {\n                  color: '#929292'\n                },\n                children: 'You can no longer chat with the user'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 25\n          }, this), !((_props$roomData22 = props.roomData) === null || _props$roomData22 === void 0 ? void 0 : (_props$roomData22$opp = _props$roomData22.oppUserInfo) === null || _props$roomData22$opp === void 0 ? void 0 : _props$roomData22$opp.isBlock) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"send_msg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"upload_item\",\n                htmlFor: \"upload_item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detect_icon_ltr\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: sendMedia,\n                    alt: \"media\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"upload_item\",\n                className: \"hide\",\n                type: \"file\",\n                accept: \"image/png,image/jpg,image/jpeg, video/mp4, video/wmv, video/avi\",\n                onChange: handleUpload,\n                disabled: isDocUploading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Message..\",\n                onKeyDown: handleKeyDown,\n                value: messageText,\n                onChange: e => setMessageText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: sendBtn,\n                  alt: \"send\",\n                  onClick: sendMessage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }, this), toggle && jobDetailLoader ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view_detail_col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no_record\",\n            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: loader,\n                alt: \"loader\",\n                width: \"130px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }, this) : toggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view_detail_col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"f_spacebw relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title line-2 pr-20\",\n              children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                setToggle(prev => !prev);\n              },\n              className: \"close\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: close,\n                alt: \"close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon clock\",\n                children: renderTime(currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.fromDate, currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.toDate)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon location line-1\",\n                children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.locationName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"commn_para\",\n            children: currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"fill_btn full_btn btn-effect\",\n            onClick: () => {\n              if (storageService.getItem('userType') === 1) {\n                props.history.push(`/job-details-page?jobId=${currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobId}&redirect_from=jobs`);\n              } else {\n                // let urlEncode: any = window.btoa(`?jobId=${currentJobDetails?.jobId}&status=${currentJobDetails?.status}&edit=true&activeType=active`)\n                let urlEncode = `?jobId=${currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.jobId}&status=${currentJobDetails === null || currentJobDetails === void 0 ? void 0 : currentJobDetails.status}&edit=true&activeType=active`;\n                props.history.push(`/job-detail?${urlEncode}`);\n              }\n            },\n            children: \"View Job details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserMessages, \"VQzkVpC8n2PDTk0+fg76tfg4jp4=\");\n\n_c = UserMessages;\nexport default UserMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserMessages\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/userMessages.tsx"],"names":["React","useState","useEffect","useRef","getJobDetails","storageService","notFound","chatVideoIcon","dummy","viewMore","close","sendMedia","sendBtn","loader","formatDateTime","renderTime","setShowToast","onFileUpload","getMessagesOfRoom","sendTextMessage","sendImageVideoMessage","Constants","FsLightbox","moengage","mixPanel","MoEConstants","lastDate","docTypes","UserMessages","props","divRref","userId","getItem","_id","toggle","setToggle","jobDetailLoader","setJobDetailLoader","currentJobDetails","setCurrentJobDetails","messageText","setMessageText","messages","setMessages","isDocUploading","setIsDocUploading","itemsMedia","setItemsMedia","toggler","setToggler","selectedSlide","setSelectSlide","fsSlideListner","setFsSlideListner","oppUserFcmToken","setOppUserFcmToken","roomId","onReceiveOfNewMsg","scrollToBottom","current","scroll","scrollHeight","clientHeight","scrollTo","arrmsg","fsSlideObj","mediaMsgs","slideCount","length","filter","item","index","messageType","setInboxToTopWithLastMsg","lastMsg","newInboxData","inBoxData","currentIndex","findIndex","i","splice","unshift","setInBoxData","console","log","sendMessage","trimLeft","roomData","oppUserInfo","deviceToken","deviceType","hasOwnProperty","isNotification","sendFCMPushNotificationToOppUser","mData","timeStamp","getCurrentTimeStamp","moE_SendEvent","CHAT","mixP_SendEvent","handleKeyDown","event","key","sendImageVideoMsg","url","msgType","fetchJobDetail","jobId","res","success","jobInfo","jobDescription","data","details","jobName","amount","locationName","fromDate","toDate","duration","status","renderMediaItems","sources","types","forEach","push","mediaUrl","setResDeviceType","msg","Number","app_icon","title","notificationText","userName","senderName","room_id","messageRoomId","image","user_image","notificationType","sound","body","sender","first_name","device_token","user_id","device_type","split","badge","notification_type","messageId","notification","newData","to","headers_","FcmHeaderAuthorizationKey","response","fetch","method","headers","JSON","stringify","handleUpload","e","maxFileSize","formData","FormData","newFile","target","files","fileType","type","toLowerCase","selectedFileSize","size","includes","indexOf","append","check_type","imgUrl","renderTextMsg","curDate","messageTimestamp","messageClass","senderId","renderImageMsg","onerror","src","prev","renderVideoMsg","displayMessages","isNoRecords","history","name","map","isBlock","color","value","urlEncode"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { getJobDetails } from '../../redux/jobs/actions';\nimport storageService from '../../utils/storageService';\n\nimport notFound from '../../assets/images/not-found.png';\nimport chatVideoIcon from '../../assets/images/video@3x.png';\nimport dummy from '../../assets/images/u_placeholder.jpg';\nimport viewMore from '../../assets/images/icon-direction-blue.png';\nimport close from '../../assets/images/ic-cancel-blue.png';\nimport sendMedia from '../../assets/images/ic-media.png';\nimport sendBtn from '../../assets/images/ic-send.png';\nimport loader from '../../assets/images/loader.gif';\n\nimport { formatDateTime, renderTime } from '../../utils/common';\nimport { setShowToast } from '../../redux/common/actions';\nimport { onFileUpload } from '../../redux/auth/actions';\nimport {\n    getMessagesOfRoom,\n    sendTextMessage,\n    sendImageVideoMessage,\n} from '../../services/firebase';\n\nimport Constants from '../../utils/constants';\n\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\nimport { moengage, mixPanel } from '../../services/analyticsTools';\nimport { MoEConstants } from '../../utils/constants';\ninterface Types {\n    [key: string]: any | string;\n}\n\nlet lastDate = '';\nconst docTypes: Array<any> = [\"jpeg\", \"jpg\", \"png\", \"mp4\", \"wmv\", \"avi\"];\n\nconst UserMessages = (props: any) => {\n    const divRref = useRef<HTMLDivElement>(null);\n    const [userId] = useState<string>(storageService.getItem('userInfo')?._id);\n    const [toggle, setToggle] = useState<boolean>(false);\n    const [jobDetailLoader, setJobDetailLoader] = useState<boolean>(false);\n    const [currentJobDetails, setCurrentJobDetails] = useState<any>(null);\n    const [messageText, setMessageText] = useState<any>('');\n    const [messages, setMessages] = useState<Array<any>>([]);\n    const [isDocUploading, setIsDocUploading] = useState<boolean>(false);\n\n    const [itemsMedia, setItemsMedia] = useState([]);\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState<any>(1);\n    const [fsSlideListner, setFsSlideListner] = useState<any>({});\n    const [oppUserFcmToken, setOppUserFcmToken] = useState<any>('');\n\n    useEffect(() => {\n        if (props.roomId !== '') {\n            lastDate = '';\n            getMessagesOfRoom(props.roomId, onReceiveOfNewMsg);\n            setSelectSlide(1);\n            setFsSlideListner({});\n            setItemsMedia([]);\n            setCurrentJobDetails(null);\n            setToggle(false);\n        }\n    }, [props.roomId]);\n    // }, [props.roomId, props.roomData]);\n    //console.log('props.roomData: ', props.roomData);\n\n    useEffect(() => {\n        scrollToBottom();\n    });\n\n    const scrollToBottom = () => {\n        if (null !== divRref?.current) {\n            const scroll =\n                divRref.current.scrollHeight -\n                divRref.current.clientHeight;\n            // divRref.current.scrollIntoView({ behavior: \"smooth\" })\n            divRref.current.scrollTo(0, scroll);\n        }\n    }\n\n    const onReceiveOfNewMsg = (arrmsg: any) => {\n       // console.log('arrmsg: ', arrmsg);\n        setMessages(arrmsg);\n    }\n\n    useEffect(() => {\n        let fsSlideObj: any = {};\n        let mediaMsgs: any = [];\n        let slideCount = 1;\n        if (messages.length) {\n            mediaMsgs = messages.filter((item: any, index: number) => {\n                if (item.messageType === 'image' || item.messageType === 'video') {\n                    fsSlideObj[`${index}`] = slideCount++;\n                    return item;\n                }\n            });\n            setItemsMedia(mediaMsgs);\n            setFsSlideListner(fsSlideObj);\n        }\n    }, [messages]);\n   // console.log('itemsMedia: ', itemsMedia, \"fsSlideListner\", fsSlideListner);\n\n    const setInboxToTopWithLastMsg = (lastMsg: any) => {\n        const newInboxData = [...props.inBoxData];\n        const currentIndex = newInboxData.findIndex(i => i.roomId === props.roomId);\n        newInboxData[currentIndex].lastMsg = lastMsg;\n        newInboxData.splice(currentIndex, 1);\n        newInboxData.unshift(props.inBoxData[currentIndex]);\n        props.setInBoxData(newInboxData);\n        console.log('lastMsg: ', lastMsg);\n        console.log('currentIndex: ', currentIndex);\n        console.log('newInboxData: ', newInboxData);\n    }\n\n    const sendMessage = async () => {\n        //setIsLoading(true);\n        if (messageText && messageText.trimLeft() !== \"\") {\n            setMessageText('');\n            const lastMsg: any = await sendTextMessage(props.roomId, messageText);\n            if (lastMsg &&\n                props.roomData?.oppUserInfo?.deviceToken\n                && props.roomData?.oppUserInfo?.deviceType\n                && (props.roomData?.oppUserInfo?.hasOwnProperty('isNotification') ? props.roomData?.oppUserInfo?.isNotification : true)\n            ) {\n                sendFCMPushNotificationToOppUser(lastMsg);\n                const mData = {\n                    timeStamp: moengage.getCurrentTimeStamp(),\n                }\n                moengage.moE_SendEvent(MoEConstants.CHAT, mData);\n                mixPanel.mixP_SendEvent(MoEConstants.CHAT, mData);\n            }\n            setInboxToTopWithLastMsg(lastMsg);\n        }\n    }\n\n    const handleKeyDown = (event: any) => {\n        if (event.key === 'Enter') {\n            sendMessage();\n        }\n    }\n\n    const sendImageVideoMsg = async (url: string, msgType: string) => {\n        //setIsLoading(true);\n        if (url && url !== '') {\n            const lastMsg: any = await sendImageVideoMessage(props.roomId, url, msgType);\n            if (lastMsg\n                && props.roomData?.oppUserInfo?.deviceToken\n                && props.roomData?.oppUserInfo?.deviceType\n                && (props.roomData?.oppUserInfo?.hasOwnProperty('isNotification') ? props.roomData?.oppUserInfo?.isNotification : true)\n            ) {\n                sendFCMPushNotificationToOppUser(lastMsg);\n            }\n            setInboxToTopWithLastMsg(lastMsg);\n        }\n        setMessageText('');\n    }\n\n\n    const fetchJobDetail = async (jobId: any) => {\n        setJobDetailLoader(true);\n        const res = await getJobDetails(jobId);\n        if (res.success) {\n            const jobInfo = {\n                jobDescription: res.data?.details || '',\n                jobId: res.data?.jobId || '',\n                jobName: res.data?.jobName || '',\n                amount: res.data?.amount || '',\n                locationName: res.data?.locationName || '',\n                fromDate: res.data?.fromDate || '',\n                toDate: res.data?.toDate || '',\n                duration: res.data?.duration || '',\n                status: res.data?.status || '',\n            }\n            setCurrentJobDetails(jobInfo);\n            setJobDetailLoader(false);\n        }\n    }\n\n    const renderMediaItems = (itemsMedia: any) => {\n        let sources: any = [];\n        let types: any = [];\n\n        if (itemsMedia.length) {\n            itemsMedia.forEach((item: any) => {\n                if (item.messageType === 'video') {\n                    sources.push(item.mediaUrl);\n                    types.push('video');\n                }\n                if (item.messageType === 'image') {\n                    sources.push(item.mediaUrl);\n                    types.push('image');\n                }\n            })\n        }\n\n        return { sources, types };\n    }\n\n    const setResDeviceType = (deviceType: number, msg: any) => {\n        switch (Number(deviceType)) {\n            case 1:\n                return {\n                    app_icon: \"https://appinventiv-development.s3.amazonaws.com/1628513615740ic-logo-yellow.png\",\n                    title: \"Tickt App\",\n                    notificationText: `${storageService.getItem('userInfo')?.userName} send you a message`,\n                    senderName: `${storageService.getItem('userInfo')?.userName}`,\n                    messageType: `${msg?.messageType}`,\n                    messageText: `${msg?.messageType === 'text' ? msg?.messageText : ''}`,\n                    room_id: msg?.messageRoomId,\n                    image: storageService.getItem('userInfo')?.user_image,\n                    notificationType: 25,\n                    sound: \"default\",\n                }\n            case 2:\n                return {\n                    body: msg?.messageText,\n                    messageText: msg?.messageText,\n                    sender: {\n                        first_name: storageService.getItem('userInfo')?.userName,\n                        device_token: storageService.getItem('fcmToken'),\n                        user_id: storageService.getItem('userInfo')?._id,\n                        device_type: 2,\n                    },\n                    jobId: msg?.messageRoomId?.split('_')?.[0],\n                    badge: 1,\n                    device_type: 2,\n                    title: storageService.getItem('userInfo')?.userName,\n                    jobName: props.roomData?.jobName,\n                    notification_type: 50,\n                    sound: 'default',\n                    messageId: msg?.messageId,\n                }\n            case 3:\n                return {\n                    notification: {\n                        body: msg?.messageText,\n                        title: storageService.getItem('userInfo')?.userName\n                    },\n                    data: {\n                        body: msg?.messageText,\n                        messageText: msg?.messageText,\n                        sender: {\n                            first_name: storageService.getItem('userInfo')?.userName,\n                            device_token: storageService.getItem('fcmToken'),\n                            user_id: storageService.getItem('userInfo')?._id,\n                            device_type: 2,\n                        },\n                        jobId: msg?.messageRoomId?.split('_')?.[0],\n                        badge: 1,\n                        device_type: 2,\n                        title: storageService.getItem('userInfo')?.userName,\n                        jobName: props.roomData?.jobName,\n                        notification_type: 50,\n                        sound: 'default',\n                        messageId: msg?.messageId,\n                    }\n                }\n            default:\n                return;\n        }\n    }\n    const sendFCMPushNotificationToOppUser = async (msg: any) => {\n        let data = setResDeviceType(props.roomData?.oppUserInfo?.deviceType, msg);\n        let newData = {\n            to: `${props.roomData?.oppUserInfo?.deviceToken}`,\n            ...(props.roomData?.oppUserInfo?.deviceType == 1 && { data: data }),\n            ...(props.roomData?.oppUserInfo?.deviceType == 2 && { notification: data }),\n            ...(props.roomData?.oppUserInfo?.deviceType == 3 && { notification: data?.notification, data: data?.data }),\n        };\n\n        const headers_: Types = {\n            'Content-Type': 'application/json',\n            'Authorization': Constants.FcmHeaderAuthorizationKey,\n        }\n        const response: any = await fetch(`https://fcm.googleapis.com/fcm/send`, {\n            method: \"POST\",\n            headers: headers_,\n            body: JSON.stringify(newData)\n        });\n        // const res: any = await response.json();\n        if (response.status === 200) {\n            console.log('Chat push notification send to opposite user: success');\n        } else {\n            console.log('Chat push notification send to opposite user: failure');\n        }\n    }\n\n    const handleUpload = async (e: any) => {\n        let maxFileSize: number = 10;\n        const formData = new FormData();\n        const newFile = e.target.files[0];\n        var fileType = (newFile?.type?.split('/')[1])?.toLowerCase();\n\n        var selectedFileSize = newFile?.size / 1024 / 1024; // size in mb\n        if ([\"mp4\", \"wmv\", \"avi\"].includes(fileType)) {\n            maxFileSize = 20;\n        }\n        if (docTypes.indexOf(fileType) < 0 || (selectedFileSize > maxFileSize)) {\n            setShowToast(true, \"The file must be in proper format or size\")\n            return;\n        }\n\n        formData.append('file', newFile);\n        setIsDocUploading(true);\n        let check_type: any = [\"jpeg\", \"jpg\", \"png\"].includes(fileType) ? 1 : [\"mp4\", \"wmv\", \"avi\"].includes(fileType) ? 2 : null;\n        const res = await onFileUpload(formData);\n        if (res.success && res.imgUrl) {\n            if (check_type === 1) {\n                sendImageVideoMsg(res.imgUrl, \"image\");\n            } else if (check_type === 2) {\n                sendImageVideoMsg(res.imgUrl, \"video\");\n            } else {\n                setShowToast(true, \"There is some technical issue\");\n            }\n            setIsDocUploading(false);\n            // setLocalFiles((prev: any) => ({ ...prev, [filesUrl?.length]: URL.createObjectURL(newFile) }));\n        }\n    }\n\n    const renderTextMsg = (msg: any) => {\n        let curDate = formatDateTime(msg.messageTimestamp, 'day');\n        const messageClass = msg.senderId === userId ? 'message' : 'message recive_msg';\n        if (lastDate === '' || lastDate !== curDate) {\n            lastDate = curDate;\n            return (\n                <>\n                    <div className=\"date_time\">\n                        <span>{curDate}</span>\n                    </div>\n                    <div className={`${messageClass}`}>\n                        <p className={`${msg.senderId === userId ? 'mark' : ''}`}>{msg.messageText}\n                            <span className=\"time\">{formatDateTime(msg.messageTimestamp, \"time\")}</span>\n                        </p>\n                    </div>\n                </>\n            )\n        } else\n            return (\n                <div className={`${messageClass}`}>\n                    <p className={`${msg.senderId === userId ? 'mark' : ''}`}>{msg.messageText}\n                        <span className=\"time\">{formatDateTime(msg.messageTimestamp, \"time\")}</span>\n                    </p>\n                </div>\n            )\n    }\n\n    const renderImageMsg = (msg: any, index: number) => {\n        let curDate = formatDateTime(msg.messageTimestamp, 'day');\n        const messageClass = msg.senderId === userId ? 'message' : 'message recive_msg';\n        if (lastDate === '' || lastDate !== curDate) {\n            lastDate = curDate;\n            return (\n                <>\n                    <div className=\"date_time\">\n                        <span>{curDate}</span>\n                    </div>\n                    <div className={`${messageClass}`}>\n                        <figure className=\"media\">\n                            <img src={msg.mediaUrl || notFound} alt=\"media\"\n                                async-src={msg.mediaUrl || notFound}\n                                decoding=\"async\"\n                                loading=\"lazy\"\n                                onError={(e: any) => {\n                                    if (e?.target?.onerror) {\n                                        e.target.onerror = null;\n                                    }\n                                    if (e?.target?.src) {\n                                        e.target.src = notFound;\n                                    }\n                                }}\n                                onClick={() => {\n                                    setToggler((prev: any) => !prev);\n                                    setSelectSlide(fsSlideListner[`${index}`]);\n                                }} />\n                            <span className=\"time\">{formatDateTime(msg.messageTimestamp, \"time\")}</span>\n                        </figure>\n                    </div>\n                </>\n            )\n        } else\n            return (\n                <div className={`${messageClass}`}>\n                    <figure className=\"media\">\n                        <img src={msg.mediaUrl || notFound} alt=\"media\"\n                            async-src={msg.mediaUrl || notFound}\n                            decoding=\"async\"\n                            loading=\"lazy\"\n                            onError={(e: any) => {\n                                if (e?.target?.onerror) {\n                                    e.target.onerror = null;\n                                }\n                                if (e?.target?.src) {\n                                    e.target.src = notFound;\n                                }\n                            }}\n                            onClick={() => {\n                                setToggler((prev: any) => !prev);\n                                setSelectSlide(fsSlideListner[`${index}`]);\n                            }} />\n                        <span className=\"time\">{formatDateTime(msg.messageTimestamp, \"time\")}</span>\n                    </figure>\n                </div>\n            )\n    }\n\n    const renderVideoMsg = (msg: any, index: number) => {\n        let curDate = formatDateTime(msg.messageTimestamp, 'day');\n        const messageClass = msg.senderId === userId ? 'message' : 'message recive_msg';\n        if (lastDate === '' || lastDate !== curDate) {\n            lastDate = curDate;\n            return (\n                <>\n                    <div className=\"date_time\">\n                        <span>{curDate}</span>\n                    </div>\n                    <div className={`${messageClass}`}>\n                        <figure className=\"media media_video \">\n                            <video src={msg.mediaUrl || notFound}\n                                poster={chatVideoIcon}\n                                onClick={() => {\n                                    setToggler((prev: any) => !prev);\n                                    setSelectSlide(fsSlideListner[`${index}`]);\n                                }}\n                            />\n                            <span className=\"time\">{formatDateTime(msg.messageTimestamp, \"time\")}</span>\n                        </figure>\n                    </div>\n                </>\n            )\n        } else\n            return (\n                <div className={`${messageClass}`}>\n                    <figure className=\"media media_video \">\n                        <video src={msg.mediaUrl || notFound}\n                            poster={chatVideoIcon}\n                            onClick={() => {\n                                setToggler((prev: any) => !prev);\n                                setSelectSlide(fsSlideListner[`${index}`]);\n                            }}\n                        />\n                        <span className=\"time\">{formatDateTime(msg.messageTimestamp, \"time\")}</span>\n                    </figure>\n                </div>\n            )\n    }\n\n    const displayMessages = (msg: any, index: number) => {\n        if (index === 0) lastDate = '';\n        switch (msg.messageType) {\n            case \"text\":\n                return renderTextMsg(msg);\n            case \"image\":\n                return renderImageMsg(msg, index);\n            case \"video\":\n                return renderVideoMsg(msg, index);\n        }\n    }\n\n    const { sources, types } = renderMediaItems(itemsMedia);\n\n    return (props.isNoRecords ? (\n        <div className=\"detail_col\">\n            <div className=\"flex_row\">\n                {/* <div>No Record Found</div> */}\n                <div></div>\n            </div>\n        </div>\n    ) : (\n        <>\n            <FsLightbox\n                toggler={toggler}\n                slide={selectedSlide}\n                sources={sources}\n                types={types}\n                key={sources?.length}\n                // disableLocalStorage={true}\n                onClose={() => {\n                    setSelectSlide(1)\n                }}\n            />\n            <div className=\"detail_col\">\n                <div className=\"flex_row\">\n\n\n                    <div className={`chat_col ${toggle ? 'active' : ''}`}>\n                        <div className=\"chat_user\">\n                            <figure className=\"u_img\">\n                                <img\n                                    src={props.roomData?.oppUserInfo?.image || dummy}\n                                    alt=\"user-img\"\n                                    onError={(e: any) => {\n                                        if (e?.target?.onerror) {\n                                            e.target.onerror = null;\n                                        }\n                                        if (e?.target?.src) {\n                                            e.target.src = dummy;\n                                        }\n                                    }}\n                                />\n                            </figure>\n                            <span className=\"name\"\n                                onClick={() => {\n                                    if (storageService.getItem('userType') === 2) {\n                                        props.history.push(`/tradie-info?tradeId=${props.roomData?.oppUserInfo?.userId}&hideInvite=true`);\n                                    } else {\n                                        props.history.push(`/builder-info?builderId=${props.roomData?.oppUserInfo?.userId}`);\n                                    }\n                                }}>{props.roomData?.oppUserInfo?.name}</span>\n                            {!toggle && <span\n                                onClick={() => {\n                                    setToggle(true);\n                                    if (currentJobDetails) return;\n                                    fetchJobDetail(props.roomData?.jobId);\n                                }}\n                                className=\"view_detail\">View Job Details\n                                <img src={viewMore} alt=\"view-more\" />\n                            </span>}\n                        </div>\n                        <div className=\"message_wrapr\" ref={divRref}>\n                            {messages.length > 0 && messages.map((msg: any, index: number) => {\n                                return (\n                                    displayMessages(msg, index)\n                                )\n                            })}\n                            <div className=\"date_time\">\n                                {props.roomData?.oppUserInfo?.isBlock && < i style={{ color: '#929292' }}>{'You can no longer chat with the user'}</i>}\n                            </div>\n                        </div>\n\n                        {!props.roomData?.oppUserInfo?.isBlock && <div className=\"send_msg\">\n                            <div className=\"text_field\">\n                                <label className=\"upload_item\" htmlFor=\"upload_item\">\n                                    <span className=\"detect_icon_ltr\">\n                                        <img src={sendMedia} alt=\"media\" />\n                                    </span>\n                                </label>\n                                <input\n                                    id=\"upload_item\"\n                                    className=\"hide\"\n                                    type=\"file\"\n                                    accept=\"image/png,image/jpg,image/jpeg, video/mp4, video/wmv, video/avi\"\n                                    onChange={handleUpload}\n                                    disabled={isDocUploading}\n                                />\n                                <textarea placeholder=\"Message..\"\n                                    onKeyDown={handleKeyDown}\n                                    value={messageText} onChange={(e) => setMessageText(e.target.value)} />\n                                <span className=\"detect_icon\">\n                                    <img src={sendBtn} alt=\"send\" onClick={sendMessage} />\n                                </span>\n                            </div>\n                        </div>}\n                    </div>\n\n                    {(toggle && jobDetailLoader) ? (\n                        <div className=\"view_detail_col\">\n                            <div className=\"no_record\">\n                                <figure>\n                                    <img src={loader} alt=\"loader\" width=\"130px\" />\n                                </figure>\n                            </div>\n                        </div>\n                    ) : toggle ? (\n                        <div className=\"view_detail_col\">\n                            <div className=\"f_spacebw relative\">\n                                <span className=\"title line-2 pr-20\">{currentJobDetails?.jobName}</span>\n                                <span\n                                    onClick={() => {\n                                        setToggle((prev) => !prev)\n                                    }}\n                                    className=\"close\">\n                                    <img src={close} alt=\"close\" />\n                                </span>\n                            </div>\n\n                            <div className=\"job_info\">\n                                <ul>\n                                    <li className=\"icon clock\">{renderTime(currentJobDetails?.fromDate, currentJobDetails?.toDate)}</li>\n                                    <li className=\"icon dollar\">{currentJobDetails?.amount}</li>\n                                    <li className=\"icon location line-1\">{currentJobDetails?.locationName}</li>\n                                    <li className=\"icon calendar\">{currentJobDetails?.duration}</li>\n                                </ul>\n                            </div>\n\n                            <p className=\"commn_para\">\n                                {currentJobDetails?.jobDescription}\n                            </p>\n\n                            <button className=\"fill_btn full_btn btn-effect\"\n                                onClick={() => {\n                                    if (storageService.getItem('userType') === 1) {\n                                        props.history.push(`/job-details-page?jobId=${currentJobDetails?.jobId}&redirect_from=jobs`);\n                                    } else {\n                                        // let urlEncode: any = window.btoa(`?jobId=${currentJobDetails?.jobId}&status=${currentJobDetails?.status}&edit=true&activeType=active`)\n                                        let urlEncode: any = `?jobId=${currentJobDetails?.jobId}&status=${currentJobDetails?.status}&edit=true&activeType=active`\n                                        props.history.push(`/job-detail?${urlEncode}`);\n                                    }\n                                }}>View Job details</button>\n                        </div>\n                    ) : null}\n                </div>\n            </div >\n        </>)\n    )\n}\n\nexport default UserMessages;\n"]},"metadata":{},"sourceType":"module"}