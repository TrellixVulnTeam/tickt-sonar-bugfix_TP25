{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/milestoneTemplates.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { profileTemplateList, getMileStoneByTempId } from '../../../redux/jobs/actions';\nimport moment from 'moment';\nimport noData from '../../../assets/images/no-search-data.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MileStoneTemplates = props => {\n  _s();\n\n  const {\n    isLoading,\n    handleCombineMileStones,\n    handleStepForward\n  } = props;\n  const [list, setList] = useState([]);\n\n  const preFetch = async () => {\n    let {\n      success,\n      data\n    } = await profileTemplateList();\n\n    if (success && (data === null || data === void 0 ? void 0 : data.length)) {\n      setList(data);\n    }\n  };\n\n  const formatMilestones = ({\n    items\n  }) => {\n    let miles = items === null || items === void 0 ? void 0 : items.milestones;\n\n    if (miles === null || miles === void 0 ? void 0 : miles.length) {\n      return miles.map(item => {\n        if (item === null || item === void 0 ? void 0 : item.fromDate) {\n          item['fromDate'] = moment(item === null || item === void 0 ? void 0 : item.fromDate).format('MM-DD-YYYY');\n        }\n\n        if (item === null || item === void 0 ? void 0 : item.toDate) {\n          item['toDate'] = moment(item === null || item === void 0 ? void 0 : item.toDate).format('MM-DD-YYYY');\n        }\n\n        return item;\n      });\n    }\n  };\n\n  const handleContinue = async id => {\n    let {\n      success,\n      data\n    } = await getMileStoneByTempId(id);\n\n    if (success && data) {\n      var _data$milestones;\n\n      let {\n        to_date,\n        from_date\n      } = props === null || props === void 0 ? void 0 : props.data;\n      let selected_milestone = formatMilestones({\n        items: data\n      });\n      let filter_milestones = data === null || data === void 0 ? void 0 : (_data$milestones = data.milestones) === null || _data$milestones === void 0 ? void 0 : _data$milestones.map(item => ({\n        from_date: moment(item === null || item === void 0 ? void 0 : item.fromDate, 'MM-DD-YYYY').format('MM-DD-YYYY'),\n        to_date: moment(item === null || item === void 0 ? void 0 : item.toDate, 'MM-DD-YYYY').isValid() ? moment(item === null || item === void 0 ? void 0 : item.toDate, 'MM-DD-YYYY').format('MM-DD-YYYY') : '',\n        milestone_name: item === null || item === void 0 ? void 0 : item.milestoneName,\n        recommended_hours: item === null || item === void 0 ? void 0 : item.recommendedHours,\n        isPhotoevidence: (item === null || item === void 0 ? void 0 : item.isPhotoevidence) || false\n      }));\n      handleCombineMileStones(filter_milestones);\n      handleStepForward(6);\n    }\n  };\n\n  useEffect(() => {\n    preFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_5\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"relate\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: () => {\n                    handleStepForward(6);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: 'Milestone Templates'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_6\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"milestone_templates\",\n                children: (list === null || list === void 0 ? void 0 : list.length) ? list.map(({\n                  templateId,\n                  templateName,\n                  milestoneCount\n                }) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    handleContinue(templateId);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: [templateName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"count\",\n                    children: [milestoneCount, /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"milestones\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 45\n                }, this)) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), !isLoading && !(list === null || list === void 0 ? void 0 : list.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_record m-t-vh\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"no_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: noData,\n                  alt: \"data not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: 'No Data Found'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MileStoneTemplates, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = MileStoneTemplates;\nexport default MileStoneTemplates;\n\nvar _c;\n\n$RefreshReg$(_c, \"MileStoneTemplates\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/milestoneTemplates.tsx"],"names":["React","useEffect","useState","profileTemplateList","getMileStoneByTempId","moment","noData","MileStoneTemplates","props","isLoading","handleCombineMileStones","handleStepForward","list","setList","preFetch","success","data","length","formatMilestones","items","miles","milestones","map","item","fromDate","format","toDate","handleContinue","id","to_date","from_date","selected_milestone","filter_milestones","isValid","milestone_name","milestoneName","recommended_hours","recommendedHours","isPhotoevidence","templateId","templateName","milestoneCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { profileTemplateList, getMileStoneByTempId } from '../../../redux/jobs/actions';\nimport moment from 'moment';\nimport noData from '../../../assets/images/no-search-data.png';\n\ninterface Proptypes {\n    data: any;\n    isLoading: any,\n    stepCompleted: Boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepForward: (data: any) => void;\n    handleCombineMileStones: (data: any) => void;\n    handleStepBack: () => void;\n}\n\nconst MileStoneTemplates = (props: Proptypes) => {\n    const { isLoading, handleCombineMileStones, handleStepForward } = props;\n    const [list, setList] = useState([]);\n\n    const preFetch = async () => {\n        let { success, data } = await profileTemplateList();\n        if (success && data?.length) {\n            setList(data)\n        }\n    }\n\n    const formatMilestones = ({ items }: any) => {\n        let miles: any = items?.milestones;\n        if (miles?.length) {\n            return miles.map((item: any) => {\n                if (item?.fromDate) {\n                    item['fromDate'] = moment(item?.fromDate).format('MM-DD-YYYY');\n                }\n\n                if (item?.toDate) {\n                    item['toDate'] = moment(item?.toDate).format('MM-DD-YYYY');\n                }\n\n                return item;\n            })\n        }\n    }\n\n    const handleContinue = async (id: any) => {\n        let { success, data } = await getMileStoneByTempId(id);\n\n        if (success && data) {\n            let { to_date, from_date } = props?.data;\n            let selected_milestone: any = formatMilestones({ items: data });\n            let filter_milestones = data?.milestones?.map((item: any) => ({\n                from_date: moment(item?.fromDate, 'MM-DD-YYYY').format('MM-DD-YYYY'),\n                to_date: moment(item?.toDate, 'MM-DD-YYYY').isValid() ? moment(item?.toDate, 'MM-DD-YYYY').format('MM-DD-YYYY') : '',\n                milestone_name: item?.milestoneName,\n                recommended_hours: item?.recommendedHours,\n                isPhotoevidence: item?.isPhotoevidence || false,\n            }))\n           \n            handleCombineMileStones(filter_milestones);\n            handleStepForward(6);\n        }\n    }\n\n    useEffect(() => {\n        preFetch();\n    }, []);\n\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n                    <div className=\"form_field\">\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_5\">\n                                <div className=\"relate\">\n                                    <button className=\"back\" onClick={() => { handleStepForward(6) }}></button>\n                                    <span className=\"title\">{'Milestone Templates'}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"flex_row\">\n                            <div className=\"flex_col_sm_6\">\n                                <ul className=\"milestone_templates\">\n                                    {list?.length ?\n                                        list.map(({ templateId, templateName, milestoneCount }: any) => (\n                                            <li\n                                                onClick={() => { handleContinue(templateId) }}\n                                            >\n                                                <span className=\"name\">{templateName} </span>\n                                                <div className=\"count\">{milestoneCount}\n                                                    <span>milestones</span>\n                                                </div>\n                                            </li>\n                                        )) : null}\n                                </ul>\n                            </div>\n\n                            {!isLoading && !list?.length ? (\n                                <div className=\"no_record m-t-vh\">\n                                    <figure className=\"no_img\">\n                                        <img src={noData} alt=\"data not found\" />\n                                    </figure>\n                                    <span>{'No Data Found'}</span>\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MileStoneTemplates;\n"]},"metadata":{},"sourceType":"module"}