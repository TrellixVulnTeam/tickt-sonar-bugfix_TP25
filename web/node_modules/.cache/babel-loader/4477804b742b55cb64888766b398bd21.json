{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/selectYourSphere.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCategories = props => {\n  _s();\n\n  const [trade, setTrade] = useState(props.trade);\n  const [imgPath, setimagePath] = useState([]);\n\n  const onClick = item => {\n    if (item == trade) {\n      return setTrade(\"\");\n    }\n\n    setTrade(item);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (trade) {\n      props.updateSteps(props.step + 1, {\n        trade\n      });\n    } else {\n      setShowToast(true, \"Please select a trade\");\n    }\n  };\n\n  const onImageError = index => {\n    let tmp = [...imgPath];\n    tmp[index] = true;\n    setimagePath(tmp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select_sphere form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fill_btn btn-effect\",\n      onClick: onSubmit,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectCategories, \"SMbSmUtziTpSnfqnXqjlaAcxU4Q=\");\n\n_c = SelectCategories;\nexport default SelectCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCategories\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/selectYourSphere.tsx"],"names":["useState","setShowToast","SelectCategories","props","trade","setTrade","imgPath","setimagePath","onClick","item","onSubmit","e","preventDefault","updateSteps","step","onImageError","index","tmp"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,YAAT,QAA6B,+BAA7B;;;AAWA,MAAMC,gBAAgB,GAAIC,KAAD,IAAsB;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,YAAV,IAA0BP,QAAQ,CAAM,EAAN,CAAxC;;AAEA,QAAMQ,OAAO,GAAIC,IAAD,IAAkB;AAChC,QAAIA,IAAI,IAAIL,KAAZ,EAAmB;AACjB,aAAOC,QAAQ,CAAC,EAAD,CAAf;AACD;;AACDA,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAkB;AACjCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIR,KAAJ,EAAW;AACTD,MAAAA,KAAK,CAACU,WAAN,CAAkBV,KAAK,CAACW,IAAN,GAAa,CAA/B,EAAkC;AAAEV,QAAAA;AAAF,OAAlC;AACD,KAFD,MAEO;AACLH,MAAAA,YAAY,CAAC,IAAD,EAAO,uBAAP,CAAZ;AACD;AACF,GAPD;;AASA,QAAMc,YAAY,GAAIC,KAAD,IAAmB;AACtC,QAAIC,GAAG,GAAG,CAAC,GAAGX,OAAJ,CAAV;AACAW,IAAAA,GAAG,CAACD,KAAD,CAAH,GAAa,IAAb;AACAT,IAAAA,YAAY,CAACU,GAAD,CAAZ;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BAoBE;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAEP,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CApDD;;GAAMR,gB;;KAAAA,gB;AAsDN,eAAeA,gBAAf","sourcesContent":["import { useState } from \"react\";\nimport Constants from \"../../../utils/constants\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport spherePlaceholder from \"../../../assets/images/tick-grey.svg\";\nimport noData from \"../../../assets/images/no-search-data.png\";\n\ninterface Propstype {\n  updateSteps: (num: number, data: any) => void;\n  step: number;\n  tradeListData: Array<any>;\n  trade: string;\n}\n\nconst SelectCategories = (props: Propstype) => {\n  const [trade, setTrade] = useState(props.trade);\n  const [imgPath, setimagePath] = useState<any>([]);\n\n  const onClick = (item: string) => {\n    if (item == trade) {\n      return setTrade(\"\");\n    }\n    setTrade(item);\n  };\n\n  const onSubmit = async (e: any) => {\n    e.preventDefault();\n    if (trade) {\n      props.updateSteps(props.step + 1, { trade });\n    } else {\n      setShowToast(true, \"Please select a trade\");\n    }\n  };\n\n  const onImageError = (index: number) => {\n    let tmp = [...imgPath];\n    tmp[index] = true;\n    setimagePath(tmp);\n  };\n\n  return (\n    <div className=\"select_sphere form_wrapper\">\n      {/* <ul>\n                {props.tradeListData?.length ? props.tradeListData.map((item, index) => {\n                    const active = trade === item._id;\n                    // const imgSrc = (item.selected_url && !imgPath[index]) ? item.selected_url : spherePlaceholder\n                    const imgSrc = spherePlaceholder\n\n                    // console.log(index,imgSrc, \"imgSrc\")\n                    return (\n                        <li key={item._id} className={active ? 'active' : ''} onClick={() => onClick(item._id)}>\n                            <figure>\n                                <img onError={() => onImageError(index)} src={imgSrc} />\n                            </figure>\n                            <span className=\"name\">{item.trade_name}</span>\n                        </li>\n                    )\n                }) : <li className='no_data'>\n                    <img src={noData} alt=\"no-data\" />\n                </li>}\n            </ul> */}\n      <button className=\"fill_btn btn-effect\" onClick={onSubmit}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default SelectCategories;\n"]},"metadata":{},"sourceType":"module"}