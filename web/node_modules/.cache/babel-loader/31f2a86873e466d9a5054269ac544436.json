{"ast":null,"code":"import Routes from\"./routes\";import{Provider}from\"react-redux\";import{createStore,applyMiddleware,compose}from\"redux\";import createSagaMiddleware from\"redux-saga\";import rootReducer from\"./redux/rootReducer\";import rootSaga from\"./redux/rootSaga\";import Loader from\"./common/loader\";import Toast from\"./common/toast\";import{useEffect}from\"react\";import{useClearCache}from\"react-clear-cache\";import AOS from\"aos\";import\"aos/dist/aos.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var sagaMiddleware=createSagaMiddleware();// mount it on the Store\nvar store=createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));//run the saga\nsagaMiddleware.run(rootSaga);var App=function App(){var _useClearCache=useClearCache(),isLatestVersion=_useClearCache.isLatestVersion,emptyCacheStorage=_useClearCache.emptyCacheStorage;useEffect(function(){AOS.init({duration:2000});if(!isLatestVersion){emptyCacheStorage();}},[]);useEffect(function(){if(!isLatestVersion){emptyCacheStorage();}},[isLatestVersion]);return/*#__PURE__*/_jsxs(Provider,{store:store,children:[/*#__PURE__*/_jsx(Routes,{}),/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsx(Toast,{})]});};export{store};export default App;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/App.tsx"],"names":["Routes","Provider","createStore","applyMiddleware","compose","createSagaMiddleware","rootReducer","rootSaga","Loader","Toast","useEffect","useClearCache","AOS","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","store","run","App","isLatestVersion","emptyCacheStorage","init","duration"],"mappings":"AAAA,MAAOA,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CAGA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,aAAT,KAA8B,mBAA9B,CAEA,MAAOC,CAAAA,GAAP,KAAgB,KAAhB,CACA,MAAO,kBAAP,C,wFAUA,GAAMC,CAAAA,gBAAgB,CAAGC,MAAM,CAACC,oCAAP,EAA+CX,OAAxE,CAEA,GAAMY,CAAAA,cAAc,CAAGX,oBAAoB,EAA3C,CAEA;AACA,GAAMY,CAAAA,KAAK,CAAGf,WAAW,CAACI,WAAD,CAAcO,gBAAgB,CACrDV,eAAe,CAACa,cAAD,CADsC,CAA9B,CAAzB,CAIA;AACAA,cAAc,CAACE,GAAf,CAAmBX,QAAnB,EAGA,GAAMY,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,mBAA+CR,aAAa,EAA5D,CAAQS,eAAR,gBAAQA,eAAR,CAAyBC,iBAAzB,gBAAyBA,iBAAzB,CAEAX,SAAS,CAAC,UAAM,CAEdE,GAAG,CAACU,IAAJ,CAAS,CACPC,QAAQ,CAAE,IADH,CAAT,EAIA,GAAI,CAACH,eAAL,CAAsB,CACpBC,iBAAiB,GAClB,CACF,CATQ,CASN,EATM,CAAT,CAWAX,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,eAAL,CAAsB,CACpBC,iBAAiB,GAClB,CACF,CAJQ,CAIN,CAACD,eAAD,CAJM,CAAT,CAMA,mBACE,MAAC,QAAD,EAAU,KAAK,CAAEH,KAAjB,wBACE,KAAC,MAAD,IADF,cAEE,KAAC,MAAD,IAFF,cAGE,KAAC,KAAD,IAHF,GADF,CAQD,CA5BD,CA8BA,OACEA,KADF,EAGA,cAAeE,CAAAA,GAAf","sourcesContent":["import Routes from \"./routes\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./redux/rootReducer\";\nimport rootSaga from \"./redux/rootSaga\";\nimport Loader from \"./common/loader\";\nimport Toast from \"./common/toast\";\nimport CustomNotification from \"./common/customNotification\";\n\nimport { useEffect } from \"react\";\nimport { useClearCache } from \"react-clear-cache\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\n\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// mount it on the Store\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n))\n\n//run the saga\nsagaMiddleware.run(rootSaga);\n\n\nconst App = () => {\n  const { isLatestVersion, emptyCacheStorage } = useClearCache();\n\n  useEffect(() => {\n\n    AOS.init({\n      duration: 2000,\n    });\n\n    if (!isLatestVersion) {\n      emptyCacheStorage();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isLatestVersion) {\n      emptyCacheStorage();\n    }\n  }, [isLatestVersion]);\n\n  return (\n    <Provider store={store}>\n      <Routes />\n      <Loader />\n      <Toast />\n      {/* <CustomNotification /> */}\n    </Provider>\n  );\n};\n\nexport {\n  store\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}