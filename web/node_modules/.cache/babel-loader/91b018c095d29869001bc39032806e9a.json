{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import colorLogo from'../../../assets/images/ic-logo-yellow.png';import templateImage from'../../../assets/images/thanks-bg.jpg';import{setLoading}from'../../../redux/common/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SuccessPage=function SuccessPage(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isLoad=_useState2[0],setImageLoad=_useState2[1];var goToLogin=function goToLogin(){if(props.showModal){props.modalUpdateSteps(0);//props.setShowModal(!props.showModal)\nreturn;}props.history.push('/login');};useEffect(function(){setLoading(true);},[]);useEffect(function(){if(!isLoad){setLoading(false);}},[isLoad]);return/*#__PURE__*/_jsx(\"div\",{className:\"img_text_wrap\",children:/*#__PURE__*/_jsxs(\"figure\",{className:\"full_image\",children:[/*#__PURE__*/_jsx(\"img\",{src:templateImage,alt:\"template\",loading:\"eager\",onLoad:function onLoad(){setImageLoad(false);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"short_info\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"logo_img\",children:/*#__PURE__*/_jsx(\"img\",{src:colorLogo,alt:\"Tickt-logo\",loading:\"eager\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Thanks!\"}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label msg\",children:\"You have created new password for your account.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect\",onClick:goToLogin,children:\"Login\"})]})]})]})});};export default SuccessPage;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/successPage.tsx"],"names":["React","useState","useEffect","colorLogo","templateImage","setLoading","SuccessPage","props","isLoad","setImageLoad","goToLogin","showModal","modalUpdateSteps","history","push"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,2CAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sCAA1B,CACA,OAASC,UAAT,KAA2B,+BAA3B,C,wFASA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAsB,CACtC,cAA+BN,QAAQ,CAAC,IAAD,CAAvC,wCAAOO,MAAP,eAAeC,YAAf,eACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,GAAIH,KAAK,CAACI,SAAV,CAAqB,CACjBJ,KAAK,CAACK,gBAAN,CAAuB,CAAvB,EACA;AACA,OACH,CACDL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmB,QAAnB,EACH,CAPD,CAUAZ,SAAS,CAAC,UAAM,CAAEG,UAAU,CAAC,IAAD,CAAV,CAAkB,CAA3B,CAA6B,EAA7B,CAAT,CAEAH,SAAS,CAAC,UAAM,CACZ,GAAI,CAACM,MAAL,CAAa,CAAEH,UAAU,CAAC,KAAD,CAAV,CAAmB,CACrC,CAFQ,CAEN,CAACG,MAAD,CAFM,CAAT,CAIA,mBACI,YAAK,SAAS,CAAC,eAAf,uBACI,gBAAQ,SAAS,CAAC,YAAlB,wBACI,YACI,GAAG,CAAEJ,aADT,CAEI,GAAG,CAAC,UAFR,CAGI,OAAO,CAAC,OAHZ,CAII,MAAM,CAAE,iBAAM,CACVK,YAAY,CAAC,KAAD,CAAZ,CACH,CANL,EADJ,cAUI,aAAK,SAAS,CAAC,YAAf,wBACI,eAAQ,SAAS,CAAC,UAAlB,uBACI,YAAK,GAAG,CAAEN,SAAV,CAAqB,GAAG,CAAC,YAAzB,CAAsC,OAAO,CAAC,OAA9C,EADJ,EADJ,cAII,aAAK,SAAS,CAAC,SAAf,wBACI,WAAI,SAAS,CAAC,OAAd,qBADJ,cAEI,aAAM,SAAS,CAAC,gBAAhB,6DAFJ,cAGI,eAAQ,SAAS,CAAC,8BAAlB,CAAiD,OAAO,CAAEO,SAA1D,mBAHJ,GAJJ,GAVJ,GADJ,EADJ,CAyBH,CA3CD,CA6CA,cAAeJ,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport colorLogo from '../../../assets/images/ic-logo-yellow.png';\nimport templateImage from '../../../assets/images/thanks-bg.jpg';\nimport { setLoading } from '../../../redux/common/actions';\n\ninterface Propstype {\n    history: any,\n    showModal?: boolean,\n    setShowModal: (data: any) => void,\n    modalUpdateSteps: (data: any) => void,\n}\n\nconst SuccessPage = (props: Propstype) => {\n    const [isLoad, setImageLoad] = useState(true);\n    const goToLogin = () => {\n        if (props.showModal) {\n            props.modalUpdateSteps(0)\n            //props.setShowModal(!props.showModal)\n            return;\n        }\n        props.history.push('/login')\n    }\n\n\n    useEffect(() => { setLoading(true) }, [])\n\n    useEffect(() => {\n        if (!isLoad) { setLoading(false) }\n    }, [isLoad])\n\n    return (\n        <div className=\"img_text_wrap\">\n            <figure className=\"full_image\">\n                <img\n                    src={templateImage}\n                    alt=\"template\"\n                    loading=\"eager\"\n                    onLoad={() => {\n                        setImageLoad(false)\n                    }}\n                />\n\n                <div className=\"short_info\">\n                    <figure className=\"logo_img\">\n                        <img src={colorLogo} alt=\"Tickt-logo\" loading=\"eager\" />\n                    </figure>\n                    <div className=\"content\">\n                        <h1 className=\"title\">Thanks!</h1>\n                        <span className=\"show_label msg\">You have created new password for your account.</span>\n                        <button className=\"fill_btn full_btn btn-effect\" onClick={goToLogin}>Login</button>\n                    </div>\n                </div>\n            </figure>\n        </div>\n    )\n}\n\nexport default SuccessPage\n"]},"metadata":{},"sourceType":"module"}