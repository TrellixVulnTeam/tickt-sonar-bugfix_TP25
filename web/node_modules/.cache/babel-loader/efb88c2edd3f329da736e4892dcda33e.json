{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/common/tradieBannerSearch/tradieBannerSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Constants from '../../utils/constants';\nimport { useDetectClickOutside } from 'react-detect-click-outside';\nimport { deleteRecentSearch } from '../../redux/homeSearch/actions';\nimport { setShowToast } from '../../redux/common/actions'; // @ts-ignore\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete'; // @ts-ignore\n\nimport { format, differenceInCalendarYears } from 'date-fns'; // @ts-ignore\n\nimport moment from 'moment'; // @ts-ignore\n\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport Geocode from \"react-geocode\";\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { moengage, mixPanel } from '../../services/analyticsTools';\nimport { MoEConstants } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"au\");\n\nconst TradieBannerSearch = props => {\n  _s();\n\n  var _props$history3, _props$history3$locat, _stateData$searchedJo, _props$recentLocation, _props$recentLocation2;\n\n  const {\n    paramsData\n  } = props;\n  const [stateData, setStateData] = useState({\n    page: 1,\n    searchedJob: '',\n    isFiltered: false,\n    isSearchedJobSelected: false,\n    tradeId: [],\n    specializationId: [],\n    searchedJobId: null,\n    location: {\n      coordinates: [144.9631, //long\n      -37.8136 //lat\n      ]\n    },\n    bannerLocation: '',\n    locationDenied: false,\n    selectedMapLocation: '',\n    isMapLocationSelected: false,\n    from_date: '',\n    startDate: '',\n    to_date: '',\n    endDate: ''\n  }); // const [errors, setErrors] = useState<any>({});\n\n  const [inputFocus1, setInputFocus1] = useState(false);\n  const [inputFocus2, setInputFocus2] = useState(false);\n  const [inputFocus3, setInputFocus3] = useState(false);\n  const [calenderRange1, setCalenderRange1] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection1'\n  });\n  const [recentLocation, setRecentLocation] = useState([]);\n\n  const handleOnOutsideSearch = () => setInputFocus1(false);\n\n  const handleOnOutsideLocation = () => setInputFocus2(false);\n\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideLocation\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender\n  });\n  const [suggestionSelected, setSuggestion] = useState('');\n  console.log(inputFocus1, inputFocus2, inputFocus3, \"inputfocus---------\");\n  useEffect(() => {\n    props.getRecentSearchList();\n    props.getRecentLocationList(); // getRecentLocationData();\n  }, []);\n  useEffect(() => {\n    if (paramsData) {\n      var _paramsData$specializ, _paramsData$specializ2, _paramsData$tradeId, _paramsData$specializ3;\n\n      var data = {\n        page: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.page) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.page : 1,\n        // searchedJob: paramsData?.searchJob ? paramsData?.specializationId?.length >= 2 ? `${paramsData?.searchJob} +${paramsData?.specializationId?.length - 1}` : paramsData?.searchJob : '',\n        searchedJob: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.isFilterOn) === 'isFilterOn' ? '' : (paramsData === null || paramsData === void 0 ? void 0 : paramsData.jobResults) === 'jobTypeList' ? '' : (paramsData === null || paramsData === void 0 ? void 0 : paramsData.isAllFilterSpecs) ? paramsData.searchJob : (paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$specializ = paramsData.specializationId) === null || _paramsData$specializ === void 0 ? void 0 : _paramsData$specializ.length) >= 2 ? `${paramsData === null || paramsData === void 0 ? void 0 : paramsData.searchJob} +${(paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$specializ2 = paramsData.specializationId) === null || _paramsData$specializ2 === void 0 ? void 0 : _paramsData$specializ2.length) - 1}` : (paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$tradeId = paramsData.tradeId) === null || _paramsData$tradeId === void 0 ? void 0 : _paramsData$tradeId.length) > 0 ? paramsData.searchJob : '',\n        isFiltered: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.isFiltered) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.isFiltered : false,\n        isSearchedJobSelected: (paramsData === null || paramsData === void 0 ? void 0 : (_paramsData$specializ3 = paramsData.specializationId) === null || _paramsData$specializ3 === void 0 ? void 0 : _paramsData$specializ3.length) > 1 ? false : true,\n        tradeId: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.tradeId) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.tradeId : [],\n        specializationId: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.specializationId) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.specializationId : [],\n        location: {\n          coordinates: [(paramsData === null || paramsData === void 0 ? void 0 : paramsData.long) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.long : paramsData === null || paramsData === void 0 ? void 0 : paramsData.defaultLong, (paramsData === null || paramsData === void 0 ? void 0 : paramsData.lat) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.lat : paramsData === null || paramsData === void 0 ? void 0 : paramsData.defaultLat]\n        },\n        selectedMapLocation: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.addres) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.addres : '',\n        isMapLocationSelected: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.addres) ? true : false,\n        from_date: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date : '',\n        startDate: '',\n        to_date: (paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date) ? paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date : '',\n        endDate: ''\n      };\n\n      if ((paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date) || (paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date)) {\n        const differenceInYears = differenceInCalendarYears(new Date(), paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date);\n\n        if (differenceInYears !== 0) {\n          data.startDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date).format('DD MMM YYYY');\n          data.endDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date).format('DD MMM YYYY');\n        } else {\n          data.startDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.from_date).format('DD MMM');\n          data.endDate = moment(paramsData === null || paramsData === void 0 ? void 0 : paramsData.to_date).format('DD MMM');\n        }\n      }\n\n      setStateData(prevData => ({ ...prevData,\n        ...data\n      }));\n    }\n  }, [paramsData]);\n  useEffect(() => {\n    if (calenderRange1 && inputFocus3) {\n      const differenceInYears = differenceInCalendarYears(new Date(), calenderRange1.endDate);\n      var startDate;\n      var endDate;\n\n      if (differenceInYears !== 0) {\n        startDate = format(new Date(calenderRange1.startDate), 'dd MMM yyyy');\n        endDate = format(new Date(calenderRange1.endDate), 'dd MMM yyyy');\n      } else {\n        startDate = format(new Date(calenderRange1.startDate), 'dd MMM');\n        endDate = format(new Date(calenderRange1.endDate), 'dd MMM');\n      }\n\n      const from_date = format(new Date(calenderRange1.startDate), 'yyyy-MM-dd');\n      const to_date = format(new Date(calenderRange1.endDate), 'yyyy-MM-dd');\n      setStateData(prevData => ({ ...prevData,\n        startDate: startDate,\n        endDate: endDate\n      }));\n      setStateData(prevData => ({ ...prevData,\n        from_date: from_date,\n        to_date: to_date\n      }));\n    }\n  }, [calenderRange1]);\n  useEffect(() => {\n    if (props.currentCoordinates) {\n      setStateData(prevData => ({ ...prevData,\n        location: props.currentCoordinates\n      }));\n    }\n  }, [props.currentCoordinates]);\n\n  const handleCalenderRange = item => {\n    setCalenderRange1(item.selection1);\n  };\n\n  const handleJobChange = e => {\n    e.target.value.length >= 3 && props.getSearchJobList(e.target.value);\n    setStateData(prevData => ({ ...prevData,\n      searchedJob: e.target.value,\n      isSearchedJobSelected: false\n    }));\n  };\n\n  const cleanInputData = item => {\n    if (item === \"calender\") {\n      setStateData(prevData => ({ ...prevData,\n        from_date: '',\n        to_date: '',\n        startDate: '',\n        endDate: ''\n      }));\n      return;\n    }\n\n    if (item == \"searchedJob\") {\n      setStateData(prevData => ({ ...prevData,\n        [item]: '',\n        isSearchedJobSelected: false\n      }));\n    }\n\n    setStateData(prevData => ({ ...prevData,\n      [item]: ''\n    }));\n  };\n\n  const searchedJobClicked = (item, isRecentSearchesClicked) => {\n    setStateData(prevData => ({ ...prevData,\n      searchedJob: item.name,\n      tradeId: [item._id],\n      specializationId: [item.specializationsId],\n      isSearchedJobSelected: true,\n      isFirstJobSelectedCount: 1\n    }));\n    setInputFocus1(false);\n\n    if (isRecentSearchesClicked === 'isRecentSearchesClicked') {\n      const newSearchData = {\n        tradeId: [item._id],\n        specializationId: [item.specializationsId],\n        searchedJob: item.name,\n        isRecentSearchesClicked: \"isRecentSearchesClicked\"\n      };\n      bannerSearchClicked(newSearchData);\n    }\n  };\n\n  const cleanRecentSearch = async (event, recentSearchId) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0\n    };\n    const res = await deleteRecentSearch(data);\n\n    if (res.success) {\n      props.getRecentSearchList();\n    }\n  };\n\n  const recentJobSearches = () => {\n    var _props$recentSearchJo, _props$recentSearchJo2, _props$recentSearchJo3;\n\n    return ((_props$recentSearchJo = props.recentSearchJobData) === null || _props$recentSearchJo === void 0 ? void 0 : _props$recentSearchJo.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_autosuggestion\",\n      id: \"recent-job-search-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Recent searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row recent_search\",\n        children: (_props$recentSearchJo2 = props.recentSearchJobData) === null || _props$recentSearchJo2 === void 0 ? void 0 : (_props$recentSearchJo3 = _props$recentSearchJo2.slice(0, 4)) === null || _props$recentSearchJo3 === void 0 ? void 0 : _props$recentSearchJo3.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card ico_txt_wrap\",\n              onClick: () => searchedJobClicked(item, 'isRecentSearchesClicked'),\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"ico\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (item === null || item === void 0 ? void 0 : item.image) || residential,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"f_column\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: item.trade_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"remove_card\",\n                onClick: event => cleanRecentSearch(event, item.recentSearchId),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: close,\n                  alt: \"remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this)\n          }, item.recentSearchId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderJobResult = () => {\n    var _props$searchJobListD, _props$searchJobListD2;\n\n    return ((_props$searchJobListD = props.searchJobListData) === null || _props$searchJobListD === void 0 ? void 0 : _props$searchJobListD.length) > 0 && stateData.searchedJob.length >= 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_autosuggestion\",\n      id: \"fetched-custom-job-category-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent_search\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"drop_data\",\n          children: (_props$searchJobListD2 = props.searchJobListData) === null || _props$searchJobListD2 === void 0 ? void 0 : _props$searchJobListD2.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => searchedJobClicked(item),\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"category\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image ? item.image : residential,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"prof\",\n                  children: item.trade_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  };\n\n  const locationSelectedHandler = (address, placeId, suggestion) => {\n    console.log(address, \"address\", placeId, \"placeId\", suggestion, \"suggestion\");\n    setSuggestion(suggestion === null || suggestion === void 0 ? void 0 : suggestion.formattedSuggestion);\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(({\n      lat,\n      lng\n    }) => {\n      const locationNew = {\n        location: {\n          coordinates: [lng, lat]\n        }\n      };\n      setStateData(prevData => {\n        var _suggestion$formatted;\n\n        return { ...prevData,\n          ...locationNew,\n          selectedMapLocation: suggestion === null || suggestion === void 0 ? void 0 : (_suggestion$formatted = suggestion.formattedSuggestion) === null || _suggestion$formatted === void 0 ? void 0 : _suggestion$formatted.mainText,\n          isMapLocationSelected: true\n        };\n      });\n      setInputFocus2(false);\n    });\n  };\n\n  const filterFromAddress = results => {\n    let city,\n        state,\n        country = null;\n\n    for (let i = 0; i < results[0].address_components.length; i++) {\n      for (let j = 0; j < results[0].address_components[i].types.length; j++) {\n        switch (results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = results[0].address_components[i].long_name;\n            break;\n\n          case \"administrative_area_level_1\":\n            state = results[0].address_components[i].long_name;\n            break;\n\n          case \"country\":\n            country = results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n\n    return {\n      city,\n      state,\n      country: country.toLowerCase()\n    };\n  };\n\n  const getCurrentLocation = e => {\n    e.preventDefault();\n\n    const showPosition = position => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      var latlng = new google.maps.LatLng(lat, long);\n      var geocoder = new google.maps.Geocoder();\n      geocoder.geocode({\n        location: latlng\n      }, function (results, status) {\n        if (status !== google.maps.GeocoderStatus.OK) {\n          alert(status);\n        }\n\n        if (status === google.maps.GeocoderStatus.OK) {\n          const {\n            country\n          } = filterFromAddress(results);\n\n          if ([\"australia\", \"au\"].includes(country)) {\n            setInputFocus2(false);\n\n            if (results && Array.isArray(results) && results[0]) {\n              setStateData(prevData => ({ ...prevData,\n                selectedMapLocation: results[0].formatted_address,\n                isMapLocationSelected: true,\n                locationDenied: false\n              }));\n            }\n          } else {\n            setInputFocus2(false);\n            setShowToast(true, \"Uh Oh! We don't provide service currently in your Location\");\n          }\n        }\n      });\n    };\n\n    const showError = error => {\n      if (error.code === error.PERMISSION_DENIED) {\n        setStateData(prevData => ({ ...prevData,\n          bannerLocation: '',\n          locationDenied: true\n        }));\n      }\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition, showError);\n    }\n  };\n\n  const validateForm = type => {\n    var _props$history, _props$history$locati;\n\n    if (type === 'isRecentSearchesClicked' && ((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.pathname) === '/') {\n      return true;\n    }\n\n    const newErrors = {};\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : stateData.isSearchedJobSelected)) {\n      newErrors.searchedJob = Constants.errorStrings.bannerSearchJob;\n    } else if (!(stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob)) {\n      newErrors.searchedJob = Constants.errorStrings.bannerSearchJobEmpty;\n    }\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : stateData.isMapLocationSelected) && (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation)) {\n      newErrors.selectedMapLocation = Constants.errorStrings.bannerSearchLocation;\n    }\n\n    if (type === 'showErrorToast') {\n      return newErrors;\n    } // setErrors(newErrors);\n\n\n    return !Object.keys(newErrors).length;\n  };\n\n  const bannerSearchClicked = newSearchData => {\n    const newErrors = validateForm((newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.isRecentSearchesClicked) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.isRecentSearchesClicked : 'showErrorToast');\n\n    if (!!newErrors.searchedJob || !!newErrors.selectedMapLocation) {\n      if (!!newErrors.searchedJob) {\n        setShowToast(true, 'Please select job type from the list');\n        return;\n      }\n\n      if (!!newErrors.selectedMapLocation) {\n        setShowToast(true, 'Please select location from the list');\n        return;\n      }\n    }\n\n    if (validateForm(newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.isRecentSearchesClicked)) {\n      var _props$location, _props$location2, _props$currentCoordin, _props$currentCoordin2, _props$currentCoordin3, _props$currentCoordin4, _props$location3, _props$history2, _props$history2$locat;\n\n      const params = new URLSearchParams((_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search);\n      const queryParamsData = {\n        defaultLat: Number(params.get('defaultLat')),\n        defaultLong: Number(params.get('defaultLong'))\n      };\n      const data = {\n        page: stateData.page,\n        isFiltered: false,\n        ...(suggestionSelected && {\n          address: JSON.stringify(suggestionSelected)\n        }),\n        tradeId: (newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.tradeId) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.tradeId : stateData === null || stateData === void 0 ? void 0 : stateData.tradeId,\n        ...(stateData.isMapLocationSelected && {\n          location: stateData === null || stateData === void 0 ? void 0 : stateData.location\n        }),\n        // location: stateData?.location,\n        specializationId: (newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.specializationId) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.specializationId : stateData === null || stateData === void 0 ? void 0 : stateData.specializationId,\n        ...((stateData === null || stateData === void 0 ? void 0 : stateData.from_date) && {\n          from_date: stateData === null || stateData === void 0 ? void 0 : stateData.from_date\n        }),\n        ...((stateData === null || stateData === void 0 ? void 0 : stateData.to_date) && {\n          to_date: stateData === null || stateData === void 0 ? void 0 : stateData.to_date\n        })\n      };\n      console.log('data: ', data, \"suggestionSelected\", suggestionSelected);\n\n      if ((props === null || props === void 0 ? void 0 : (_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.pathname) === '/search-job-results') {\n        var _props$tradeListData, _props$tradeListData$, _JSON$parse, _JSON$parse2;\n\n        props.postHomeSearchData(data);\n        const mData = {\n          timeStamp: moengage.getCurrentTimeStamp(),\n          category: (_props$tradeListData = props.tradeListData) === null || _props$tradeListData === void 0 ? void 0 : (_props$tradeListData$ = _props$tradeListData.find(i => {\n            var _data$tradeId;\n\n            return i._id === (data === null || data === void 0 ? void 0 : (_data$tradeId = data.tradeId) === null || _data$tradeId === void 0 ? void 0 : _data$tradeId[0]);\n          })) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.trade_name,\n          ...(data.address && {\n            location: `${(_JSON$parse = JSON.parse(data.address)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.mainText} ${(_JSON$parse2 = JSON.parse(data.address)) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.secondaryText}`\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.max_budget) && {\n            'Max budget': data === null || data === void 0 ? void 0 : data.max_budget\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.from_date) && {\n            'start date': data === null || data === void 0 ? void 0 : data.from_date\n          }),\n          ...((data === null || data === void 0 ? void 0 : data.to_date) && {\n            'end date': data === null || data === void 0 ? void 0 : data.to_date\n          })\n        };\n        moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n        mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n      } // delete data.address;\n\n\n      const newData = { ...data,\n        lat: stateData.location.coordinates[1],\n        long: stateData.location.coordinates[0],\n        defaultLat: ((_props$currentCoordin = props.currentCoordinates) === null || _props$currentCoordin === void 0 ? void 0 : _props$currentCoordin.coordinates[1]) ? (_props$currentCoordin2 = props.currentCoordinates) === null || _props$currentCoordin2 === void 0 ? void 0 : _props$currentCoordin2.coordinates[1] : queryParamsData.defaultLat,\n        defaultLong: ((_props$currentCoordin3 = props.currentCoordinates) === null || _props$currentCoordin3 === void 0 ? void 0 : _props$currentCoordin3.coordinates[0]) ? (_props$currentCoordin4 = props.currentCoordinates) === null || _props$currentCoordin4 === void 0 ? void 0 : _props$currentCoordin4.coordinates[0] : queryParamsData.defaultLong,\n        ...(stateData.selectedMapLocation && {\n          addres: stateData.selectedMapLocation.replaceAll(\"#\", \"\")\n        }),\n        searchJob: (newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.searchedJob) ? newSearchData === null || newSearchData === void 0 ? void 0 : newSearchData.searchedJob.replaceAll(\"&\", \"xxx\") : stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob.replaceAll(\"&\", \"xxx\"),\n        jobResults: null\n      };\n\n      if ((props === null || props === void 0 ? void 0 : (_props$location3 = props.location) === null || _props$location3 === void 0 ? void 0 : _props$location3.pathname) === '/search-job-results' && newData.address) {\n        setTimeout(() => {\n          props.getRecentLocationList();\n        }, 500);\n      }\n\n      delete newData.location;\n      delete newData.isFilterOn;\n\n      if (newData.searchJob) {\n        delete newData.heading;\n        delete newData.jobResults;\n      }\n\n      Object.keys(newData).forEach(key => (newData[key] === '' || newData[key] === undefined || newData[key] === null || newData[key] === 0 || newData[key] == '0') && delete newData[key]);\n      var url = 'search-job-results?';\n\n      for (let [key, value] of Object.entries(newData)) {\n        url += `${key}=${value}&`;\n      }\n\n      const newUrl = url.slice(0, url.length - 1);\n      console.log(newUrl, \"newUrl\", data, \"data\", newData, \"newData\");\n\n      if (((_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : (_props$history2$locat = _props$history2.location) === null || _props$history2$locat === void 0 ? void 0 : _props$history2$locat.pathname) === '/') {\n        props.history.push(newUrl);\n      } else {\n        props.history.replace(newUrl);\n\n        if (props === null || props === void 0 ? void 0 : props.refreshParams) {\n          props === null || props === void 0 ? void 0 : props.refreshParams(data);\n        }\n      }\n    }\n  };\n\n  const renderPlacesData = ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n          placeholder: 'Where?',\n          className: 'line-1'\n        }),\n        id: \"location-input-tag\",\n        onFocus: () => {\n          setInputFocus2(true);\n          setInputFocus1(false);\n          setInputFocus3(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"detect_icon_ltr\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Location,\n          alt: \"location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }, this), (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) && inputFocus2 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"detect_icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cross,\n          alt: \"cross\",\n          onClick: () => {\n            setSuggestion('');\n            setStateData(prevData => ({ ...prevData,\n              selectedMapLocation: '',\n              isMapLocationSelected: false\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this), (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) > 0 && (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation.length) >= 3 && inputFocus2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_autosuggestion location\",\n      id: \"autocomplete-dropdown-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row recent_search auto_loc\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_4\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 37\n          }, this), suggestions.map(suggestion => {\n            const className = 'autosuggestion_icon card loc name';\n            const style = suggestion.active ? {\n              backgroundColor: '#fafafa',\n              cursor: 'pointer'\n            } : {\n              backgroundColor: '#ffffff',\n              cursor: 'pointer'\n            };\n            return /*#__PURE__*/_createElement(\"div\", { ...getSuggestionItemProps(suggestion, {\n                className,\n                style\n              }),\n              key: suggestion.formattedSuggestion.mainText,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: suggestion.formattedSuggestion.mainText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: suggestion.formattedSuggestion.secondaryText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 37\n            }, this));\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 103\n    }, this) : !loading && !(stateData === null || stateData === void 0 ? void 0 : stateData.isMapLocationSelected) && (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation.length) >= 3 && inputFocus2 && (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) < 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: '50px'\n      },\n      className: \"custom_autosuggestion location\",\n      id: \"autocomplete-dropdown-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row recent_search auto_loc\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loc_suggestions\",\n            children: 'No Result Found.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_search\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modal_srch_close\",\n      onClick: () => {\n        if (props === null || props === void 0 ? void 0 : props.handleChangeToggle) {\n          props.handleChangeToggle(false);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: `search_wrapr ${((_props$history3 = props.history) === null || _props$history3 === void 0 ? void 0 : (_props$history3$locat = _props$history3.location) === null || _props$history3$locat === void 0 ? void 0 : _props$history3$locat.pathname) === '/' ? (stateData === null || stateData === void 0 ? void 0 : stateData.isFirstJobSelectedCount) ? '' : 'first_input' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categ_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            id: \"text-field-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: searchRef,\n              placeholder: \"What jobs are you after?\",\n              value: stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob,\n              onChange: handleJobChange,\n              onFocus: () => {\n                setInputFocus1(true);\n                setInputFocus2(false);\n                setInputFocus3(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border_eff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon_ltr\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Searchicon,\n                alt: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this), !!(stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob) && inputFocus1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cross,\n                alt: \"cross\",\n                onClick: () => cleanInputData('searchedJob')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this), !(stateData === null || stateData === void 0 ? void 0 : stateData.searchedJob) && inputFocus1 && !inputFocus2 && recentJobSearches(), (stateData === null || stateData === void 0 ? void 0 : (_stateData$searchedJo = stateData.searchedJob) === null || _stateData$searchedJo === void 0 ? void 0 : _stateData$searchedJo.length) >= 1 && inputFocus1 && !inputFocus2 && renderJobResult(), /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: locationRef,\n          className: \"loc_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"location-text-field-div\",\n            children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n              value: (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) !== \"{}\" ? stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation : '',\n              onChange: city => setStateData(prevData => ({ ...prevData,\n                selectedMapLocation: city,\n                isMapLocationSelected: false\n              })),\n              shouldFetchSuggestions: true,\n              onSelect: locationSelectedHandler,\n              highlightFirstSuggestion: true,\n              searchOptions: {\n                componentRestrictions: {\n                  country: \"au\"\n                },\n                // types: [\"address\"]\n                types: [\"(cities)\"]\n              } // debounce={400}\n              ,\n              children: renderPlacesData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this), (!(stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) || (stateData === null || stateData === void 0 ? void 0 : stateData.selectedMapLocation) === \"{}\") && inputFocus2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom_autosuggestion location\",\n            id: \"current-location-search-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"location-btn\",\n              onClick: getCurrentLocation,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gps_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: icgps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 37\n              }, this), \" Use my current location\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 33\n            }, this), (stateData === null || stateData === void 0 ? void 0 : stateData.locationDenied) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"blocked_note\",\n              children: \"You have blocked your location. To use this, change your location settings in browser.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recent_search auto_loc\",\n              children: [console.log({\n                recent: props === null || props === void 0 ? void 0 : props.recentLocationData\n              }), (props === null || props === void 0 ? void 0 : (_props$recentLocation = props.recentLocationData) === null || _props$recentLocation === void 0 ? void 0 : _props$recentLocation.length) > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: \"Recent searches\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 41\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_row\",\n                children: props === null || props === void 0 ? void 0 : (_props$recentLocation2 = props.recentLocationData) === null || _props$recentLocation2 === void 0 ? void 0 : _props$recentLocation2.map(item => {\n                  var _item$address, _JSON$parse4, _JSON$parse5;\n\n                  return (item === null || item === void 0 ? void 0 : (_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex_col_sm_4\",\n                    onClick: () => {\n                      setStateData(prevData => {\n                        var _JSON$parse3;\n\n                        return { ...prevData,\n                          location: item.location,\n                          selectedMapLocation: (_JSON$parse3 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.mainText,\n                          //item.allText?.mainText,\n                          isMapLocationSelected: true\n                        };\n                      });\n                      setSuggestion(JSON.parse(item === null || item === void 0 ? void 0 : item.address)); // let location_coordinates: any = item.location.coordinates\n                      // setAddressText(item.formatted_address);\n                      // setSelectedAddress({\n                      //     lat: location_coordinates[1],\n                      //     lng: location_coordinates[0]\n                      // });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"autosuggestion_icon card loc name\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: (_JSON$parse4 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.mainText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"name\",\n                        children: (_JSON$parse5 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse5 === void 0 ? void 0 : _JSON$parse5.secondaryText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 615,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 49\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `date_box ${stateData.startDate ? 'date_value' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: calenderRef,\n            className: \"custom_date_range\",\n            id: \"date-range-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon_ltr calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"calender-input\",\n                placeholder: (stateData === null || stateData === void 0 ? void 0 : stateData.startDate) ? `${stateData === null || stateData === void 0 ? void 0 : stateData.startDate} - ${stateData === null || stateData === void 0 ? void 0 : stateData.endDate}` : \"When?\",\n                onFocus: () => {\n                  setInputFocus3(true);\n                  setInputFocus1(false);\n                  setInputFocus2(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 33\n              }, this), (stateData === null || stateData === void 0 ? void 0 : stateData.startDate) && inputFocus3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cross,\n                  alt: \"cross\",\n                  onClick: () => cleanInputData('calender')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 29\n            }, this), inputFocus3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom_autosuggestion\",\n              id: \"custom-date-range-div\",\n              children: /*#__PURE__*/_jsxDEV(DateRange, {\n                onChange: handleCalenderRange,\n                ranges: [calenderRange1],\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                months: 2,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: new Date(new Date().setFullYear(new Date().getFullYear() + 2)),\n                direction: \"horizontal\",\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"fill_btn btn-effect\",\n            onClick: bannerSearchClicked,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: search,\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TradieBannerSearch, \"XQ6RJzJEAKzNhJpA8y5qH9b7uQk=\", false, function () {\n  return [useDetectClickOutside, useDetectClickOutside, useDetectClickOutside];\n});\n\n_c = TradieBannerSearch;\nexport default TradieBannerSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradieBannerSearch\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/common/tradieBannerSearch/tradieBannerSearch.tsx"],"names":["React","useState","useEffect","Constants","useDetectClickOutside","deleteRecentSearch","setShowToast","PlacesAutocomplete","geocodeByAddress","getLatLng","format","differenceInCalendarYears","moment","DateRange","Geocode","Searchicon","search","Location","cross","icgps","residential","close","moengage","mixPanel","MoEConstants","setApiKey","SocialAuth","GOOGLE_GEOCODE_KEY","setLanguage","setRegion","TradieBannerSearch","props","paramsData","stateData","setStateData","page","searchedJob","isFiltered","isSearchedJobSelected","tradeId","specializationId","searchedJobId","location","coordinates","bannerLocation","locationDenied","selectedMapLocation","isMapLocationSelected","from_date","startDate","to_date","endDate","inputFocus1","setInputFocus1","inputFocus2","setInputFocus2","inputFocus3","setInputFocus3","calenderRange1","setCalenderRange1","Date","key","recentLocation","setRecentLocation","handleOnOutsideSearch","handleOnOutsideLocation","handleOnOutsideCalender","searchRef","onTriggered","locationRef","calenderRef","suggestionSelected","setSuggestion","console","log","getRecentSearchList","getRecentLocationList","data","isFilterOn","jobResults","isAllFilterSpecs","searchJob","length","long","defaultLong","lat","defaultLat","addres","differenceInYears","prevData","currentCoordinates","handleCalenderRange","item","selection1","handleJobChange","e","target","value","getSearchJobList","cleanInputData","searchedJobClicked","isRecentSearchesClicked","name","_id","specializationsId","isFirstJobSelectedCount","newSearchData","bannerSearchClicked","cleanRecentSearch","event","recentSearchId","stopPropagation","id","status","res","success","recentJobSearches","recentSearchJobData","slice","map","image","trade_name","renderJobResult","searchJobListData","locationSelectedHandler","address","placeId","suggestion","formattedSuggestion","then","results","lng","locationNew","mainText","filterFromAddress","city","state","country","i","address_components","j","types","long_name","toLowerCase","getCurrentLocation","preventDefault","showPosition","position","coords","latitude","longitude","latlng","google","maps","LatLng","geocoder","Geocoder","geocode","GeocoderStatus","OK","alert","includes","Array","isArray","formatted_address","showError","error","code","PERMISSION_DENIED","navigator","geolocation","getCurrentPosition","validateForm","type","history","pathname","newErrors","errorStrings","bannerSearchJob","bannerSearchJobEmpty","bannerSearchLocation","Object","keys","params","URLSearchParams","queryParamsData","Number","get","JSON","stringify","postHomeSearchData","mData","timeStamp","getCurrentTimeStamp","category","tradeListData","find","parse","secondaryText","max_budget","moE_SendEvent","SEARCHED_FOR_JOBS","mixP_SendEvent","newData","replaceAll","setTimeout","heading","forEach","undefined","url","entries","newUrl","push","replace","refreshParams","renderPlacesData","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","style","active","backgroundColor","cursor","minHeight","handleChangeToggle","componentRestrictions","recent","recentLocationData","setFullYear","getFullYear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Constants from '../../utils/constants';\nimport { useDetectClickOutside } from 'react-detect-click-outside';\nimport { deleteRecentSearch } from '../../redux/homeSearch/actions';\nimport { setShowToast } from '../../redux/common/actions';\n// @ts-ignore\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\n// @ts-ignore\nimport { format, differenceInCalendarYears } from 'date-fns';\n// @ts-ignore\nimport moment from 'moment';\n// @ts-ignore\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport Geocode from \"react-geocode\";\n\n\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { moengage, mixPanel } from '../../services/analyticsTools';\nimport { MoEConstants } from '../../utils/constants';\n\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"au\");\ninterface PropsType {\n    history: any,\n    location?: any,\n    paramsData?: any,\n    currentCoordinates?: any,\n    searchJobListData: Array<any>,\n    recentSearchJobData: Array<any>,\n    recentLocationData: Array<any>,\n    homeSearchJobData: Array<any>,\n    tradeListData: Array<any>,\n    setTradieHomeData?: (data: any) => void,\n    getSearchJobList: (data: any) => void,\n    postHomeSearchData: (data: any) => void,\n    getRecentSearchList: () => void,\n    getRecentLocationList: () => void,\n    refreshParams?: (data: any) => void,\n    handleChangeToggle?: (data: boolean) => void,\n}\n\nconst TradieBannerSearch = (props: PropsType) => {\n    const { paramsData } = props;\n    const [stateData, setStateData] = useState<any>({\n        page: 1,\n        searchedJob: '',\n        isFiltered: false,\n        isSearchedJobSelected: false,\n        tradeId: [],\n        specializationId: [],\n        searchedJobId: null,\n        location: {\n            coordinates: [\n                144.9631, //long\n                -37.8136, //lat\n            ]\n        },\n        bannerLocation: '',\n        locationDenied: false,\n        selectedMapLocation: '',\n        isMapLocationSelected: false,\n        from_date: '',\n        startDate: '',\n        to_date: '',\n        endDate: '',\n    });\n\n    // const [errors, setErrors] = useState<any>({});\n    const [inputFocus1, setInputFocus1] = useState<boolean>(false)\n    const [inputFocus2, setInputFocus2] = useState<boolean>(false)\n    const [inputFocus3, setInputFocus3] = useState<boolean>(false)\n    const [calenderRange1, setCalenderRange1] = useState<any>({ startDate: new Date(), endDate: new Date(), key: 'selection1' });\n    const [recentLocation, setRecentLocation] = useState<any>([])\n\n    const handleOnOutsideSearch = () => setInputFocus1(false);\n    const handleOnOutsideLocation = () => setInputFocus2(false);\n    const handleOnOutsideCalender = () => setInputFocus3(false);\n\n    const searchRef = useDetectClickOutside({ onTriggered: handleOnOutsideSearch });\n    const locationRef = useDetectClickOutside({ onTriggered: handleOnOutsideLocation });\n    const calenderRef = useDetectClickOutside({ onTriggered: handleOnOutsideCalender });\n\n    const [suggestionSelected, setSuggestion] = useState<any>('');\n\n    console.log(inputFocus1, inputFocus2, inputFocus3, \"inputfocus---------\");\n\n    useEffect(() => {\n        props.getRecentSearchList();\n        props.getRecentLocationList();\n        // getRecentLocationData();\n    }, []);\n\n    useEffect(() => {\n        if (paramsData) {\n            var data = {\n                page: paramsData?.page ? paramsData?.page : 1,\n                // searchedJob: paramsData?.searchJob ? paramsData?.specializationId?.length >= 2 ? `${paramsData?.searchJob} +${paramsData?.specializationId?.length - 1}` : paramsData?.searchJob : '',\n                searchedJob: paramsData?.isFilterOn === 'isFilterOn' ? '' : paramsData?.jobResults === 'jobTypeList' ? '' : paramsData?.isAllFilterSpecs ? paramsData.searchJob :  paramsData?.specializationId?.length >= 2 ? `${paramsData?.searchJob} +${paramsData?.specializationId?.length - 1}` : paramsData?.tradeId?.length > 0 ? paramsData.searchJob : '',\n                isFiltered: paramsData?.isFiltered ? paramsData?.isFiltered : false,\n                isSearchedJobSelected: paramsData?.specializationId?.length > 1 ? false : true,\n                tradeId: paramsData?.tradeId ? paramsData?.tradeId : [],\n                specializationId: paramsData?.specializationId ? paramsData?.specializationId : [],\n                location: {\n                    coordinates: [\n                        paramsData?.long ? paramsData?.long : paramsData?.defaultLong,\n                        paramsData?.lat ? paramsData?.lat : paramsData?.defaultLat\n                    ]\n                },\n                selectedMapLocation: paramsData?.addres ? paramsData?.addres : '',\n                isMapLocationSelected: paramsData?.addres ? true : false,\n                from_date: paramsData?.from_date ? paramsData?.from_date : '',\n                startDate: '',\n                to_date: paramsData?.to_date ? paramsData?.to_date : '',\n                endDate: '',\n            }\n            if (paramsData?.from_date || paramsData?.to_date) {\n                const differenceInYears: number = differenceInCalendarYears(new Date(), paramsData?.to_date);\n                if (differenceInYears !== 0) {\n                    data.startDate = moment(paramsData?.from_date).format('DD MMM YYYY');\n                    data.endDate = moment(paramsData?.to_date).format('DD MMM YYYY');\n                } else {\n                    data.startDate = moment(paramsData?.from_date).format('DD MMM');\n                    data.endDate = moment(paramsData?.to_date).format('DD MMM');\n                }\n\n            }\n            setStateData((prevData: any) => ({ ...prevData, ...data }));\n        }\n    }, [paramsData])\n\n    useEffect(() => {\n        if (calenderRange1 && inputFocus3) {\n            const differenceInYears: number = differenceInCalendarYears(new Date(), calenderRange1.endDate);\n            var startDate: string;\n            var endDate: string;\n            if (differenceInYears !== 0) {\n                startDate = format(new Date(calenderRange1.startDate), 'dd MMM yyyy');\n                endDate = format(new Date(calenderRange1.endDate), 'dd MMM yyyy');\n            } else {\n                startDate = format(new Date(calenderRange1.startDate), 'dd MMM');\n                endDate = format(new Date(calenderRange1.endDate), 'dd MMM');\n\n            }\n            const from_date = format(new Date(calenderRange1.startDate), 'yyyy-MM-dd');\n            const to_date = format(new Date(calenderRange1.endDate), 'yyyy-MM-dd');\n            setStateData((prevData: any) => ({ ...prevData, startDate: startDate, endDate: endDate }));\n            setStateData((prevData: any) => ({ ...prevData, from_date: from_date, to_date: to_date }));\n        }\n    }, [calenderRange1])\n\n    useEffect(() => {\n        if (props.currentCoordinates) {\n            setStateData((prevData: any) => ({ ...prevData, location: props.currentCoordinates }));\n        }\n    }, [props.currentCoordinates])\n\n    const handleCalenderRange = (item: any) => {\n        setCalenderRange1(item.selection1);\n    };\n\n    const handleJobChange = (e: any) => {\n        e.target.value.length >= 3 && props.getSearchJobList(e.target.value);\n        setStateData((prevData: any) => ({ ...prevData, searchedJob: e.target.value, isSearchedJobSelected: false }));\n    }\n\n    const cleanInputData = (item: string) => {\n        if (item === \"calender\") {\n            setStateData((prevData: any) => ({ ...prevData, from_date: '', to_date: '', startDate: '', endDate: '' }));\n            return;\n        }\n        if (item == \"searchedJob\") {\n            setStateData((prevData: any) => ({ ...prevData, [item]: '', isSearchedJobSelected: false }));\n        }\n        setStateData((prevData: any) => ({ ...prevData, [item]: '' }));\n    }\n\n    const searchedJobClicked = (item: any, isRecentSearchesClicked?: string) => {\n        setStateData((prevData: any) => ({ ...prevData, searchedJob: item.name, tradeId: [item._id], specializationId: [item.specializationsId], isSearchedJobSelected: true, isFirstJobSelectedCount: 1 }));\n        setInputFocus1(false);\n        if (isRecentSearchesClicked === 'isRecentSearchesClicked') {\n            const newSearchData = {\n                tradeId: [item._id],\n                specializationId: [item.specializationsId],\n                searchedJob: item.name,\n                isRecentSearchesClicked: \"isRecentSearchesClicked\"\n            }\n            bannerSearchClicked(newSearchData);\n        }\n    }\n\n    const cleanRecentSearch = async (event: any, recentSearchId: string) => {\n        event.stopPropagation();\n        const data = {\n            id: recentSearchId,\n            status: 0\n        }\n        const res = await deleteRecentSearch(data);\n        if (res.success) {\n            props.getRecentSearchList();\n        }\n    }\n\n    const recentJobSearches = () => {\n        return (\n            props.recentSearchJobData?.length > 0 &&\n            <div className=\"custom_autosuggestion\" id=\"recent-job-search-div\">\n                <span className=\"sub_title\">Recent searches</span>\n                <div className=\"flex_row recent_search\">\n                    {props.recentSearchJobData?.slice(0, 4)?.map((item: any) => {\n                        return (\n                            <div className=\"flex_col_sm_3\" key={item.recentSearchId}>\n                                <div className=\"card ico_txt_wrap\" onClick={() => searchedJobClicked(item, 'isRecentSearchesClicked')}>\n                                    <figure className=\"ico\">\n                                        <img src={item?.image || residential} alt=\"icon\" />\n                                    </figure>\n                                    <div className=\"f_column\">\n                                        <span>{item.name}</span>\n                                        <span className=\"name\">{item.trade_name}</span>\n                                    </div>\n                                    <span className=\"remove_card\" onClick={(event) => cleanRecentSearch(event, item.recentSearchId)}>\n                                        <img src={close} alt=\"remove\" />\n                                    </span>\n                                </div>\n                            </div>)\n                    })}\n                </div>\n            </div>\n        )\n    }\n\n    const renderJobResult = () => {\n        return (\n            (props.searchJobListData?.length > 0 && stateData.searchedJob.length >= 3) &&\n            <div className=\"custom_autosuggestion\" id=\"fetched-custom-job-category-div\">\n                <div className=\"recent_search\">\n                    <ul className=\"drop_data\">\n                        {props.searchJobListData?.map((item: any) => {\n                            return (<li key={item._id} onClick={() => searchedJobClicked(item)}>\n                                <figure className=\"category\">\n                                    <img src={item.image ? item.image : residential} alt=\"icon\" />\n                                </figure>\n                                <div className=\"details\">\n                                    <span className=\"name\">{item.name}</span>\n                                    <span className=\"prof\">{item.trade_name}</span>\n                                </div>\n                            </li>)\n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n\n    const locationSelectedHandler = (address: string, placeId?: any, suggestion?: any) => {\n        console.log(address, \"address\", placeId, \"placeId\", suggestion, \"suggestion\");\n        setSuggestion(suggestion?.formattedSuggestion)\n        geocodeByAddress(address)\n            .then((results: any) => getLatLng(results[0]))\n            .then(({ lat, lng }: any) => {\n                const locationNew: any = {\n                    location: {\n                        coordinates: [lng, lat]\n                    }\n                }\n                setStateData((prevData: any) => ({ ...prevData, ...locationNew, selectedMapLocation: suggestion?.formattedSuggestion?.mainText, isMapLocationSelected: true }));\n                setInputFocus2(false);\n            });\n    }\n\n    const filterFromAddress = (results: any) => {\n        let city, state, country = null;\n        for (let i = 0; i < results[0].address_components.length; i++) {\n            for (let j = 0; j < results[0].address_components[i].types.length; j++) {\n                switch (results[0].address_components[i].types[j]) {\n                    case \"locality\":\n                        city = results[0].address_components[i].long_name;\n                        break;\n                    case \"administrative_area_level_1\":\n                        state = results[0].address_components[i].long_name;\n                        break;\n                    case \"country\":\n                        country = results[0].address_components[i].long_name;\n                        break;\n                }\n            }\n        }\n        return { city, state, country: country.toLowerCase() };\n    }\n\n    const getCurrentLocation = (e: any) => {\n        e.preventDefault();\n        const showPosition = (position: any) => {\n            const lat = position.coords.latitude;\n            const long = position.coords.longitude;\n            var latlng = new google.maps.LatLng(lat, long);\n            var geocoder = new google.maps.Geocoder();\n            geocoder.geocode({ location: latlng }, function (results, status) {\n\n                if (status !== google.maps.GeocoderStatus.OK) {\n                    alert(status);\n                }\n                if (status === google.maps.GeocoderStatus.OK) {\n                    const { country } = filterFromAddress(results);\n                    if ([\"australia\", \"au\"].includes(country)) {\n                        setInputFocus2(false);\n                        if (results && Array.isArray(results) && results[0]) {\n                            setStateData((prevData: any) => ({\n                                ...prevData,\n                                selectedMapLocation: results[0].formatted_address,\n                                isMapLocationSelected: true,\n                                locationDenied: false\n                            }));\n                        }\n                    } else {\n                        setInputFocus2(false);\n                        setShowToast(true, \"Uh Oh! We don't provide service currently in your Location\");\n                    }\n                }\n            });\n        }\n\n        const showError = (error: any) => {\n            if (error.code === error.PERMISSION_DENIED) {\n                setStateData((prevData: any) => ({ ...prevData, bannerLocation: '', locationDenied: true }));\n            }\n        }\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(showPosition, showError);\n        }\n    }\n\n    const validateForm = (type?: string) => {\n        if (type === 'isRecentSearchesClicked' && props.history?.location?.pathname === '/') {\n            return true;\n        }\n        const newErrors: any = {};\n        if (!stateData?.isSearchedJobSelected) {\n            newErrors.searchedJob = Constants.errorStrings.bannerSearchJob;\n        } else if (!stateData?.searchedJob) {\n            newErrors.searchedJob = Constants.errorStrings.bannerSearchJobEmpty;\n        }\n        if (!stateData?.isMapLocationSelected && stateData?.selectedMapLocation) {\n            newErrors.selectedMapLocation = Constants.errorStrings.bannerSearchLocation;\n        }\n        if (type === 'showErrorToast') {\n            return newErrors;\n        }\n        // setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const bannerSearchClicked = (newSearchData?: any) => {\n        const newErrors = validateForm(newSearchData?.isRecentSearchesClicked ? newSearchData?.isRecentSearchesClicked : 'showErrorToast');\n        if (!!newErrors.searchedJob || !!newErrors.selectedMapLocation) {\n            if (!!newErrors.searchedJob) {\n                setShowToast(true, 'Please select job type from the list');\n                return;\n            }\n            if (!!newErrors.selectedMapLocation) {\n                setShowToast(true, 'Please select location from the list');\n                return;\n            }\n        }\n        if (validateForm(newSearchData?.isRecentSearchesClicked)) {\n            const params = new URLSearchParams(props.location?.search);\n            const queryParamsData: any = {\n                defaultLat: Number(params.get('defaultLat')),\n                defaultLong: Number(params.get('defaultLong')),\n            }\n            const data = {\n                page: stateData.page,\n                isFiltered: false,\n                ...(suggestionSelected && { address: JSON.stringify(suggestionSelected) }),\n                tradeId: newSearchData?.tradeId ? newSearchData?.tradeId : stateData?.tradeId,\n                ...(stateData.isMapLocationSelected && { location: stateData?.location }),\n                // location: stateData?.location,\n                specializationId: newSearchData?.specializationId ? newSearchData?.specializationId : stateData?.specializationId,\n                ...(stateData?.from_date && { from_date: stateData?.from_date }),\n                ...(stateData?.to_date && { to_date: stateData?.to_date })\n            }\n            console.log('data: ', data, \"suggestionSelected\", suggestionSelected);\n            if (props?.location?.pathname === '/search-job-results') {\n                props.postHomeSearchData(data);\n                const mData = {\n                    timeStamp: moengage.getCurrentTimeStamp(),\n                    category: props.tradeListData?.find((i: any) => i._id === data?.tradeId?.[0])?.trade_name,\n                    ...(data.address && { location: `${JSON.parse(data.address)?.mainText} ${JSON.parse(data.address)?.secondaryText}` }),\n                    ...(data?.max_budget && { 'Max budget': data?.max_budget }),\n                    ...(data?.from_date && { 'start date': data?.from_date }),\n                    ...(data?.to_date && { 'end date': data?.to_date }),\n                }\n                moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n                mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_JOBS, mData);\n            }\n            // delete data.address;\n            const newData = {\n                ...data,\n                lat: stateData.location.coordinates[1],\n                long: stateData.location.coordinates[0],\n                defaultLat: props.currentCoordinates?.coordinates[1] ? props.currentCoordinates?.coordinates[1] : queryParamsData.defaultLat,\n                defaultLong: props.currentCoordinates?.coordinates[0] ? props.currentCoordinates?.coordinates[0] : queryParamsData.defaultLong,\n                ...(stateData.selectedMapLocation && { addres: stateData.selectedMapLocation.replaceAll(\"#\", \"\") }),\n                searchJob: newSearchData?.searchedJob ? newSearchData?.searchedJob.replaceAll(\"&\", \"xxx\") : stateData?.searchedJob.replaceAll(\"&\", \"xxx\"),\n                jobResults: null\n            }\n            if (props?.location?.pathname === '/search-job-results' && newData.address) {\n                setTimeout(() => {\n                    props.getRecentLocationList();\n                }, 500);\n            }\n            delete newData.location;\n            delete newData.isFilterOn;\n            if (newData.searchJob) {\n                delete newData.heading;\n                delete newData.jobResults;\n            }\n            Object.keys(newData).forEach(key => (newData[key] === '' || newData[key] === undefined || newData[key] === null || newData[key] === 0 || newData[key] == '0') && delete newData[key]);\n            var url = 'search-job-results?';\n            for (let [key, value] of Object.entries(newData)) {\n                url += `${key}=${value}&`\n            }\n            const newUrl = url.slice(0, url.length - 1)\n            console.log(newUrl, \"newUrl\", data, \"data\", newData, \"newData\");\n            if (props.history?.location?.pathname === '/') {\n                props.history.push(newUrl);\n            } else {\n                props.history.replace(newUrl);\n                if (props?.refreshParams) {\n                    props?.refreshParams(data);\n                }\n            }\n        }\n    }\n\n    const renderPlacesData = ({ getInputProps, suggestions, getSuggestionItemProps, loading }: any) => (\n        <React.Fragment>\n            <div className=\"text_field\">\n                <input\n                    {...getInputProps({ placeholder: 'Where?', className: 'line-1' })}\n                    id=\"location-input-tag\"\n                    onFocus={() => {\n                        setInputFocus2(true);\n                        setInputFocus1(false);\n                        setInputFocus3(false);\n                    }}\n                />\n                <span className=\"detect_icon_ltr\">\n                    <img src={Location} alt=\"location\" />\n                </span>\n                {stateData?.selectedMapLocation && inputFocus2 && <span className=\"detect_icon\" >\n                    <img src={cross} alt=\"cross\" onClick={() => {\n                        setSuggestion('');\n                        setStateData((prevData: any) => ({ ...prevData, selectedMapLocation: '', isMapLocationSelected: false }));\n                    }} />\n                </span>}\n                {/* {!!errors.selectedMapLocation && <span className=\"error_msg\">{errors.selectedMapLocation}</span>} */}\n            </div>\n            {(suggestions?.length > 0 && stateData?.selectedMapLocation.length >= 3 && inputFocus2) ? <div className=\"custom_autosuggestion location\" id=\"autocomplete-dropdown-container\">\n                <div className=\"flex_row recent_search auto_loc\">\n                    <div className=\"flex_col_sm_4\">\n                        {loading && <div>Loading...</div>}\n\n                        {suggestions.map((suggestion: any) => {\n                            const className = 'autosuggestion_icon card loc name';\n                            const style = suggestion.active\n                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                            return (\n                                <div\n                                    {...getSuggestionItemProps(suggestion, {\n                                        className,\n                                        style,\n                                    })}\n                                    key={suggestion.formattedSuggestion.mainText}\n                                >\n                                    <span>{suggestion.formattedSuggestion.mainText}</span>\n                                    <span className=\"name\">{suggestion.formattedSuggestion.secondaryText}</span>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div> : (!loading && !stateData?.isMapLocationSelected && stateData?.selectedMapLocation.length >= 3 && inputFocus2 && suggestions?.length < 1) ?\n                (<div style={{ minHeight: '50px' }} className=\"custom_autosuggestion location\" id=\"autocomplete-dropdown-container\">\n                    <div className=\"flex_row recent_search auto_loc\">\n                        <div className=\"flex_col_sm_4\">\n                            <div className=\"loc_suggestions\">\n                                {'No Result Found.'}\n                            </div>\n                        </div>\n                    </div>\n                </div>) : null}\n        </React.Fragment>\n    )\n\n    return (\n        <div className=\"home_search\">\n            <button\n                className=\"modal_srch_close\"\n                onClick={() => {\n                    if (props?.handleChangeToggle) {\n                        props.handleChangeToggle(false);\n                    }\n                }}\n            >\n                <img src={close} alt=\"close\" />\n            </button>\n            <form className={`search_wrapr ${props.history?.location?.pathname === '/' ? stateData?.isFirstJobSelectedCount ? '' : 'first_input' : ''}`}>\n                <ul>\n                    <li className=\"categ_box\">\n                        <div className=\"text_field\" id=\"text-field-div\">\n                            <input type=\"text\"\n                                ref={searchRef}\n                                placeholder=\"What jobs are you after?\"\n                                value={stateData?.searchedJob}\n                                onChange={handleJobChange}\n                                onFocus={() => {\n                                    setInputFocus1(true);\n                                    setInputFocus2(false);\n                                    setInputFocus3(false);\n                                }}\n                            />\n                            <div className=\"border_eff\"></div>\n                            <span className=\"detect_icon_ltr\">\n                                <img src={Searchicon} alt=\"search\" />\n                            </span>\n                            {!!stateData?.searchedJob && inputFocus1 &&\n                                <span className=\"detect_icon\" >\n                                    <img src={cross} alt=\"cross\" onClick={() => cleanInputData('searchedJob')} />\n                                </span>}\n                        </div>\n                        {/* {!!errors.searchedJob && <span className=\"error_msg\">{errors.searchedJob}</span>} */}\n                    </li>\n                    {!stateData?.searchedJob && inputFocus1 && !inputFocus2 && recentJobSearches()}\n                    {stateData?.searchedJob?.length >= 1 && inputFocus1 && !inputFocus2 && renderJobResult()}\n                    <li ref={locationRef} className=\"loc_box\">\n                        <div id=\"location-text-field-div\">\n\n                            <PlacesAutocomplete\n                                value={stateData?.selectedMapLocation !== \"{}\" ? stateData?.selectedMapLocation : ''}\n                                onChange={(city: string) => setStateData((prevData: any) => ({ ...prevData, selectedMapLocation: city, isMapLocationSelected: false }))}\n                                shouldFetchSuggestions={true}\n                                onSelect={locationSelectedHandler}\n                                highlightFirstSuggestion={true}\n                                searchOptions={{\n                                    componentRestrictions: { country: \"au\" },\n                                    // types: [\"address\"]\n                                    types: [\"(cities)\"]\n                                }}\n                            // debounce={400}\n                            >\n                                {renderPlacesData}\n                            </PlacesAutocomplete>\n                        </div>\n                        {(!stateData?.selectedMapLocation || stateData?.selectedMapLocation === \"{}\") && inputFocus2 &&\n                            <div className=\"custom_autosuggestion location\" id=\"current-location-search-div\">\n                                <a className=\"location-btn\" onClick={getCurrentLocation}>\n                                    <span className=\"gps_icon\">\n                                        <img src={icgps} />\n                                    </span> Use my current location\n                                </a>\n                                {stateData?.locationDenied && <span className=\"blocked_note\">\n                                    You have blocked your location.\n                                    To use this, change your location settings in browser.\n                                </span>}\n                                <div className=\"recent_search auto_loc\">\n                                    {console.log({\n                                        recent: props?.recentLocationData\n                                    })}\n                                    {props?.recentLocationData?.length > 0 ?\n                                        <span className=\"sub_title\">Recent searches</span>\n                                        : null}\n                                    {/* {recentLocation?.map((item: any) => {\n                                        return (\n                                            <div className=\"flex_col_sm_4\"\n                                                onClick={() => setStateData((prevData: any) => ({ ...prevData, location: item.location, selectedMapLocation: item.allText?.mainText, isMapLocationSelected: true }))}>\n                                                <div className=\"autosuggestion_icon card loc name\">\n                                                    <span>{item.allText?.mainText}</span>\n                                                    <span className=\"name\">{item.allText?.secondaryText}</span>\n                                                </div>\n                                            </div>)\n                                    })} */}\n                                    <div className=\"flex_row\">\n                                        {props?.recentLocationData?.map((item: any) => {\n                                            return item?.address?.length > 0 && (\n                                                <div className=\"flex_col_sm_4\"\n                                                    onClick={() => {\n                                                        setStateData((prevData: any) => ({\n                                                            ...prevData,\n                                                            location: item.location,\n                                                            selectedMapLocation: JSON.parse(item?.address)?.mainText, //item.allText?.mainText,\n                                                            isMapLocationSelected: true\n                                                        }));\n                                                        setSuggestion(JSON.parse(item?.address));\n\n                                                        // let location_coordinates: any = item.location.coordinates\n                                                        // setAddressText(item.formatted_address);\n                                                        // setSelectedAddress({\n                                                        //     lat: location_coordinates[1],\n                                                        //     lng: location_coordinates[0]\n                                                        // });\n                                                    }}>\n                                                    <div className=\"autosuggestion_icon card loc name\">\n                                                        <span>{JSON.parse(item?.address)?.mainText}</span>\n                                                        <span className=\"name\">{JSON.parse(item?.address)?.secondaryText}</span>\n                                                    </div>\n                                                </div>)\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </li>\n                    <li className={`date_box ${stateData.startDate ? 'date_value' : ''}`}>\n                        <div ref={calenderRef} className=\"custom_date_range\" id=\"date-range-div\">\n                            <div className=\"text_field\">\n                                <span className=\"detect_icon_ltr calendar\"></span>\n                                <input\n                                    type=\"text\"\n                                    id=\"calender-input\"\n                                    placeholder={stateData?.startDate ? `${stateData?.startDate} - ${stateData?.endDate}` : \"When?\"}\n                                    onFocus={() => {\n                                        setInputFocus3(true)\n                                        setInputFocus1(false);\n                                        setInputFocus2(false);\n                                    }}\n                                />\n                                {stateData?.startDate && inputFocus3 &&\n                                    <span className=\"detect_icon\" >\n                                        <img src={cross} alt=\"cross\" onClick={() => cleanInputData('calender')} />\n                                    </span>}\n                            </div>\n                            {inputFocus3 &&\n                                <div className=\"custom_autosuggestion\" id=\"custom-date-range-div\">\n                                    <DateRange\n                                        onChange={handleCalenderRange}\n                                        ranges={[calenderRange1]}\n                                        moveRangeOnFirstSelection={false}\n                                        rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                                        showDateDisplay={false}\n                                        showSelectionPreview={true}\n                                        months={2}\n                                        showPreview={true}\n                                        minDate={new Date()}\n                                        maxDate={new Date(new Date().setFullYear(new Date().getFullYear() + 2))}\n                                        direction=\"horizontal\"\n                                        fixedHeight={true}\n                                    />\n                                </div>}\n                        </div>\n                    </li>\n                    <div className=\"search_btn\">\n                        <button type=\"button\" className=\"fill_btn btn-effect\" onClick={bannerSearchClicked}>\n                            <img src={search} alt=\"search\" />\n                        </button>\n                    </div>\n                </ul>\n            </form>\n        </div>\n    )\n}\n\nexport default TradieBannerSearch;\n"]},"metadata":{},"sourceType":"module"}