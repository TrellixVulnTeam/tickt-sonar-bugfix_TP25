{"ast":null,"code":"import { put, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from './constants';\nimport NetworkOps from '../../network/NetworkOps';\nimport Urls from '../../network/Urls';\nimport { setLoading } from '../common/actions';\n\nfunction* getSearchJobList(action) {\n  // setLoading(true);\n  const response = yield NetworkOps.get(Urls.getSearchData + `?search_text=${action.searchJob}`); // setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_SEARCH_JOB_LIST,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_SEARCH_JOB_LIST,\n      payload: []\n    });\n  }\n}\n\nfunction* getRecentSearchList() {\n  const response = yield NetworkOps.get(Urls.getRecentSearch);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_RECENT_SEARCH_LIST,\n      payload: response.result.resultData\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_RECENT_SEARCH_LIST,\n      payload: []\n    });\n  }\n}\n\nfunction* getRecentLocationList() {\n  const response = yield NetworkOps.get(Urls.getRecentLocation);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_RECENT_LOCATION_LIST,\n      payload: response.data.resultData\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_RECENT_LOCATION_LIST,\n      payload: []\n    });\n  }\n}\n\nfunction* getJobTypeList() {\n  const response = yield NetworkOps.get(Urls.jobTypeList);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_JOB_TYPE_LIST,\n      payload: response.result.resultData\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_JOB_TYPE_LIST,\n      payload: []\n    });\n  }\n}\n\nfunction* getViewNearByJob(action) {\n  const {\n    data\n  } = action;\n  setLoading(true);\n  const response = yield NetworkOps.get(Urls.viewNearByJob + `?lat=${data.lat}&long=${data.long}&page=${data.page}`);\n  setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_VIEW_NEARBY_JOBS,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_VIEW_NEARBY_JOBS,\n      payload: []\n    });\n  }\n}\n\nfunction* resetViewNearByJobData() {\n  yield put({\n    type: actionTypes.SET_VIEW_NEARBY_JOBS,\n    payload: []\n  });\n} // function* getJobType() {\n//     const response: FetchResponse = yield NetworkOps.get(Urls.jobType)\n//     if (response.status_code === 200) {\n//         yield put({ type: actionTypes.SET_JOB_TYPE, payload: response.result.resultData });\n//     } else {\n//         yield put({ type: actionTypes.SET_JOB_TYPE, payload: [] });\n//     }\n// }\n\n\nfunction* getJobWithJobTypeLatLong(action) {\n  var url = '';\n  const {\n    jobData\n  } = action;\n\n  if (jobData.jobType) {\n    url = Urls.home + `?jobType=${jobData.jobType}` + `&lat=${jobData.lat}` + `&long=${jobData.long}`;\n  } else {\n    url = Urls.home + `?lat=${jobData.lat}` + `&long=${jobData.long}`;\n  } // setLoading(true);\n\n\n  const response = yield NetworkOps.get(url); // setLoading(false);\n\n  if (response.status_code === 200) {\n    yield put({\n      type: actionTypes.SET_JOB_WITH_JOB_TYPE_AND_LATLONG,\n      payload: response.result\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_JOB_WITH_JOB_TYPE_AND_LATLONG,\n      payload: {}\n    });\n  }\n}\n\nfunction* postHomeSearchData(action) {\n  var _response$result;\n\n  setLoading(true);\n  const response = yield NetworkOps.postToJson(Urls.homeSearch, action.jobData);\n  setLoading(false);\n  let dataValues = (response === null || response === void 0 ? void 0 : (_response$result = response.result) === null || _response$result === void 0 ? void 0 : _response$result.data) || (response === null || response === void 0 ? void 0 : response.result);\n\n  if (response.status_code === 200) {\n    var _action$jobData;\n\n    let page = action === null || action === void 0 ? void 0 : (_action$jobData = action.jobData) === null || _action$jobData === void 0 ? void 0 : _action$jobData.page;\n\n    if (Array.isArray(dataValues) && (dataValues === null || dataValues === void 0 ? void 0 : dataValues.length)) {\n      dataValues[0]['page'] = page;\n    }\n\n    yield put({\n      type: actionTypes.SET_HOME_SEARCH_DATA,\n      payload: dataValues\n    });\n  } else {\n    yield put({\n      type: actionTypes.SET_HOME_SEARCH_DATA,\n      payload: []\n    });\n  }\n}\n\nfunction* resetHomeSearchJobData() {\n  yield put({\n    type: actionTypes.SET_HOME_SEARCH_DATA,\n    payload: []\n  });\n}\n\nfunction* recallHeaderNotification(action) {\n  console.log('action: ', action, 'z', action.isRecall);\n  yield put({\n    type: actionTypes.SET_RECALL_HEADER_NOTIFICATION,\n    payload: action.isRecall\n  });\n}\n\nfunction* authWatcher() {\n  // yield takeLatest(actionTypes.GET_JOB_TYPE, getJobType);\n  yield takeLatest(actionTypes.GET_SEARCH_JOB_LIST, getSearchJobList);\n  yield takeLatest(actionTypes.GET_RECENT_SEARCH_LIST, getRecentSearchList);\n  yield takeLatest(actionTypes.GET_RECENT_LOCATION_LIST, getRecentLocationList);\n  yield takeLatest(actionTypes.GET_JOB_TYPE_LIST, getJobTypeList);\n  yield takeLatest(actionTypes.GET_VIEW_NEARBY_JOBS, getViewNearByJob);\n  yield takeLatest(actionTypes.GET_JOB_WITH_JOB_TYPE_AND_LATLONG, getJobWithJobTypeLatLong);\n  yield takeLatest(actionTypes.POST_HOME_SEARCH_DATA, postHomeSearchData);\n  yield takeLatest(actionTypes.RESET_HOME_SEARCH_DATA, resetHomeSearchJobData);\n  yield takeLatest(actionTypes.RESET_VIEW_NEARBY_JOBS, resetViewNearByJobData);\n  yield takeLatest(actionTypes.RECALL_HEADER_NOTIFICATION, recallHeaderNotification);\n}\n\nexport default authWatcher;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/redux/homeSearch/sagas.ts"],"names":["put","takeLatest","actionTypes","NetworkOps","Urls","setLoading","getSearchJobList","action","response","get","getSearchData","searchJob","status_code","type","SET_SEARCH_JOB_LIST","payload","result","getRecentSearchList","getRecentSearch","SET_RECENT_SEARCH_LIST","resultData","getRecentLocationList","getRecentLocation","SET_RECENT_LOCATION_LIST","data","getJobTypeList","jobTypeList","SET_JOB_TYPE_LIST","getViewNearByJob","viewNearByJob","lat","long","page","SET_VIEW_NEARBY_JOBS","resetViewNearByJobData","getJobWithJobTypeLatLong","url","jobData","jobType","home","SET_JOB_WITH_JOB_TYPE_AND_LATLONG","postHomeSearchData","postToJson","homeSearch","dataValues","Array","isArray","length","SET_HOME_SEARCH_DATA","resetHomeSearchJobData","recallHeaderNotification","console","log","isRecall","SET_RECALL_HEADER_NOTIFICATION","authWatcher","GET_SEARCH_JOB_LIST","GET_RECENT_SEARCH_LIST","GET_RECENT_LOCATION_LIST","GET_JOB_TYPE_LIST","GET_VIEW_NEARBY_JOBS","GET_JOB_WITH_JOB_TYPE_AND_LATLONG","POST_HOME_SEARCH_DATA","RESET_HOME_SEARCH_DATA","RESET_VIEW_NEARBY_JOBS","RECALL_HEADER_NOTIFICATION"],"mappings":"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","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport * as actionTypes from './constants';\nimport NetworkOps, { FetchResponse } from '../../network/NetworkOps';\nimport Urls from '../../network/Urls';\nimport { setLoading, setShowToast } from '../common/actions';\n\n\nfunction* getSearchJobList(action: any) {\n    // setLoading(true);\n    const response: FetchResponse = yield NetworkOps.get(Urls.getSearchData + `?search_text=${action.searchJob}`);\n    // setLoading(false);\n    if (response.status_code === 200) {\n        yield put({ type: actionTypes.SET_SEARCH_JOB_LIST, payload: response.result });\n    } else {\n        yield put({ type: actionTypes.SET_SEARCH_JOB_LIST, payload: [] });\n    }\n}\n\nfunction* getRecentSearchList() {\n    const response: FetchResponse = yield NetworkOps.get(Urls.getRecentSearch);\n    if (response.status_code === 200) {\n        yield put({ type: actionTypes.SET_RECENT_SEARCH_LIST, payload: response.result.resultData });\n    } else {\n        yield put({ type: actionTypes.SET_RECENT_SEARCH_LIST, payload: [] });\n    }\n}\n\nfunction* getRecentLocationList() {\n    const response: FetchResponse = yield NetworkOps.get(Urls.getRecentLocation);\n    if (response.status_code === 200) {\n        yield put({ type: actionTypes.SET_RECENT_LOCATION_LIST, payload: response.data.resultData });\n    } else {\n        yield put({ type: actionTypes.SET_RECENT_LOCATION_LIST, payload: [] });\n    }\n}\n\n\nfunction* getJobTypeList() {\n    const response: FetchResponse = yield NetworkOps.get(Urls.jobTypeList);\n    if (response.status_code === 200) {\n        yield put({ type: actionTypes.SET_JOB_TYPE_LIST, payload: response.result.resultData });\n    } else {\n        yield put({ type: actionTypes.SET_JOB_TYPE_LIST, payload: [] });\n    }\n}\n\nfunction* getViewNearByJob(action: any) {\n    const { data } = action;\n    setLoading(true);\n    const response: FetchResponse = yield NetworkOps.get(Urls.viewNearByJob + `?lat=${data.lat}&long=${data.long}&page=${data.page}`);\n    setLoading(false);\n    if (response.status_code === 200) {\n        yield put({ type: actionTypes.SET_VIEW_NEARBY_JOBS, payload: response.result });\n    } else {\n        yield put({ type: actionTypes.SET_VIEW_NEARBY_JOBS, payload: [] });\n    }\n}\nfunction* resetViewNearByJobData() {\n    yield put({ type: actionTypes.SET_VIEW_NEARBY_JOBS, payload: [] });\n}\n\n// function* getJobType() {\n//     const response: FetchResponse = yield NetworkOps.get(Urls.jobType)\n//     if (response.status_code === 200) {\n//         yield put({ type: actionTypes.SET_JOB_TYPE, payload: response.result.resultData });\n//     } else {\n//         yield put({ type: actionTypes.SET_JOB_TYPE, payload: [] });\n//     }\n// }\n\nfunction* getJobWithJobTypeLatLong(action: any) {\n    var url = '';\n    const { jobData } = action;\n    if (jobData.jobType) {\n        url = Urls.home + `?jobType=${jobData.jobType}` + `&lat=${jobData.lat}` + `&long=${jobData.long}`\n    } else {\n        url = Urls.home + `?lat=${jobData.lat}` + `&long=${jobData.long}`\n    }\n    // setLoading(true);\n    const response: FetchResponse = yield NetworkOps.get(url)\n    // setLoading(false);\n    if (response.status_code === 200) {\n        yield put({ type: actionTypes.SET_JOB_WITH_JOB_TYPE_AND_LATLONG, payload: response.result });\n    } else {\n        yield put({ type: actionTypes.SET_JOB_WITH_JOB_TYPE_AND_LATLONG, payload: {} });\n    }\n}\n\nfunction* postHomeSearchData(action: any) {\n    setLoading(true);\n\n    const response: FetchResponse = yield NetworkOps.postToJson(Urls.homeSearch, action.jobData)\n    \n    setLoading(false);\n    let dataValues = response?.result?.data || response?.result;\n    if (response.status_code === 200) {\n        let page = action?.jobData?.page;\n        if (Array.isArray(dataValues) && dataValues?.length) {\n            dataValues[0]['page'] = page;\n        }\n        yield put({ type: actionTypes.SET_HOME_SEARCH_DATA, payload: dataValues });\n    } else {\n        yield put({ type: actionTypes.SET_HOME_SEARCH_DATA, payload: [] });\n    }\n}\n\nfunction* resetHomeSearchJobData() {\n    yield put({ type: actionTypes.SET_HOME_SEARCH_DATA, payload: [] });\n}\n\nfunction* recallHeaderNotification(action: any) {\n    console.log('action: ', action, 'z', action.isRecall);\n    yield put({ type: actionTypes.SET_RECALL_HEADER_NOTIFICATION, payload: action.isRecall });\n}\n\nfunction* authWatcher() {\n    // yield takeLatest(actionTypes.GET_JOB_TYPE, getJobType);\n    yield takeLatest(actionTypes.GET_SEARCH_JOB_LIST, getSearchJobList);\n    yield takeLatest(actionTypes.GET_RECENT_SEARCH_LIST, getRecentSearchList);\n    yield takeLatest(actionTypes.GET_RECENT_LOCATION_LIST, getRecentLocationList);\n    yield takeLatest(actionTypes.GET_JOB_TYPE_LIST, getJobTypeList);\n    yield takeLatest(actionTypes.GET_VIEW_NEARBY_JOBS, getViewNearByJob);\n    yield takeLatest(actionTypes.GET_JOB_WITH_JOB_TYPE_AND_LATLONG, getJobWithJobTypeLatLong);\n    yield takeLatest(actionTypes.POST_HOME_SEARCH_DATA, postHomeSearchData);\n    yield takeLatest(actionTypes.RESET_HOME_SEARCH_DATA, resetHomeSearchJobData);\n    yield takeLatest(actionTypes.RESET_VIEW_NEARBY_JOBS, resetViewNearByJobData);\n    yield takeLatest(actionTypes.RECALL_HEADER_NOTIFICATION, recallHeaderNotification);\n}\n\nexport default authWatcher;"]},"metadata":{},"sourceType":"module"}