{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import Constants from'../../../utils/constants';import regex from'../../../utils/regex';import{validateABN}from'../../../utils/common';import NumberFormat from\"react-number-format\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddABN=function AddABN(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),ABN=_useState4[0],setAbn=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),businessName=_useState6[0],setBusinessName=_useState6[1];var validateForm=function validateForm(){var newErrors={};if(!businessName){newErrors.businessName=Constants.errorStrings.businessNameEmpty;}// else {\n//     const nameRegex = new RegExp(regex.fullname);\n//     if (!nameRegex.test(businessName.trim())) {\n//         newErrors.businessName = Constants.errorStrings.businessNameErr;\n//     }\n// }\nif(!ABN){newErrors.abn=Constants.errorStrings.abnEmpty;}else{var abnRegex=new RegExp(regex.abn);if(!abnRegex.test(ABN.replaceAll(' ',''))){newErrors.abn=Constants.errorStrings.abnErr;}if(!validateABN(ABN.replaceAll(' ',''))){newErrors.abn=Constants.errorStrings.abnErr;}}setErrors(newErrors);return!Object.keys(newErrors).length;};var onSubmit=function onSubmit(e){e.preventDefault();if(validateForm()){var abn=ABN.replaceAll(' ','');props.onSubmitSignup({abn:abn,businessName:businessName});}};return/*#__PURE__*/_jsx(\"div\",{className:\"form_wrapper\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Business Name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Business Name\",value:businessName,name:\"businessName\",onChange:function onChange(_ref){var value=_ref.target.value;return setBusinessName(value.trimLeft());},maxLength:50})}),!!errors.businessName&&/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.businessName})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Australian Business Number\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(NumberFormat,{type:\"text\",placeholder:\"51 824 753 556\",value:ABN,onValueChange:function onValueChange(_ref2){var value=_ref2.value;setAbn(value);},format:\"## ### ### ###\"})}),!!errors.abn&&/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors.abn})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn btn-effect\",children:\"Create account\"})})]})});};export default AddABN;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/addABN.tsx"],"names":["useState","Constants","regex","validateABN","NumberFormat","AddABN","props","errors","setErrors","ABN","setAbn","businessName","setBusinessName","validateForm","newErrors","errorStrings","businessNameEmpty","abn","abnEmpty","abnRegex","RegExp","test","replaceAll","abnErr","Object","keys","length","onSubmit","e","preventDefault","onSubmitSignup","value","target","trimLeft"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport { validateABN } from '../../../utils/common';\nimport NumberFormat from \"react-number-format\";\n\ninterface Propstype {\n    onSubmitSignup: (data: any) => void,\n}\n\nconst AddABN = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [ABN, setAbn] = useState<any>('');\n    const [businessName, setBusinessName] = useState<any>('');\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!businessName) {\n            newErrors.businessName = Constants.errorStrings.businessNameEmpty;\n        }\n        // else {\n        //     const nameRegex = new RegExp(regex.fullname);\n        //     if (!nameRegex.test(businessName.trim())) {\n        //         newErrors.businessName = Constants.errorStrings.businessNameErr;\n        //     }\n        // }\n\n        if (!ABN) {\n            newErrors.abn = Constants.errorStrings.abnEmpty;\n        } else {\n            const abnRegex = new RegExp(regex.abn);\n            if (!abnRegex.test(ABN.replaceAll(' ', ''))) {\n                newErrors.abn = Constants.errorStrings.abnErr\n            }\n            if (!validateABN(ABN.replaceAll(' ', ''))) {\n                newErrors.abn = Constants.errorStrings.abnErr\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const abn = ABN.replaceAll(' ', '');\n            props.onSubmitSignup({ abn, businessName: businessName })\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Business Name</label>\n                    <div className=\"text_field\">\n                        <input type=\"text\" placeholder=\"Enter Business Name\" value={businessName} name=\"businessName\" onChange={({ target: { value } }: { target: { value: string } }) => setBusinessName(value.trimLeft())} maxLength={50} />\n                    </div>\n                    {!!errors.businessName && <span className=\"error_msg\">{errors.businessName}</span>}\n                </div>\n                <div className=\"form_field\">\n                    <label className=\"form_label\">Australian Business Number</label>\n                    <div className=\"text_field\">\n                        <NumberFormat\n                            type=\"text\"\n                            placeholder=\"51 824 753 556\"\n                            value={ABN}\n                            onValueChange={({ value }) => {\n                                setAbn(value);\n                            }}\n                            format=\"## ### ### ###\"\n                        />\n                    </div>\n                    {!!errors.abn && <span className=\"error_msg\">{errors.abn}</span>}\n                </div>\n\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Create account</button>\n                </div>\n            </form >\n        </div >\n    )\n}\n\nexport default AddABN;\n"]},"metadata":{},"sourceType":"module"}