{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/adminAnnouncementPage/adminAnnouncementPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { portfolio } from '../builderInfo/builderInfo';\nimport { getAdminNotificationData } from '../../redux/homeSearch/actions'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport portfolioPlaceholder from '../../assets/images/portfolio-placeholder.jpg';\nimport noData from '../../assets/images/no-search-data.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminAnnouncementPage = props => {\n  _s();\n\n  const [itemsMedia, setItemsMedia] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [notificationData, setNotificationData] = useState(null);\n  console.log('notificationData: ', notificationData);\n  useEffect(() => {\n    setItems();\n  }, []);\n\n  const setItems = async () => {\n    var _URLSearchParams, _props$location;\n\n    const admin_notification_id = (_URLSearchParams = new URLSearchParams((_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search)) === null || _URLSearchParams === void 0 ? void 0 : _URLSearchParams.get('admin_notification_id');\n    const res = await getAdminNotificationData({\n      admin_notification_id: admin_notification_id\n    });\n\n    if (res.success) {\n      var _res$result;\n\n      setNotificationData((_res$result = res.result) === null || _res$result === void 0 ? void 0 : _res$result.notification_data);\n    }\n  };\n\n  const renderMediaItems = itemsMedia => {\n    let sources = [];\n    let types = [];\n    sources.push(itemsMedia);\n    types.push('image'); // if (itemsMedia?.length) {\n    //     itemsMedia.forEach((item: any) => {\n    //         if (item?.mediaType === 1) {\n    //             sources.push(item.link);\n    //             types.push('image');\n    //         }\n    //     })\n    // }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const {\n    sources,\n    types\n  } = renderMediaItems(notificationData === null || notificationData === void 0 ? void 0 : notificationData.image);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_container\",\n        children: notificationData || props.isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row description\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_col_sm_8\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: notificationData === null || notificationData === void 0 ? void 0 : notificationData.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: notificationData === null || notificationData === void 0 ? void 0 : notificationData.sub_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n            toggler: toggler,\n            slide: selectedSlide,\n            sources: sources,\n            types: types\n          }, sources === null || sources === void 0 ? void 0 : sources.length, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), notificationData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom_container\",\n              children: /*#__PURE__*/_jsxDEV(Carousel, {\n                responsive: portfolio,\n                showDots: false,\n                arrows: true,\n                infinite: true,\n                className: \"portfolio_wrappr\",\n                partialVisbile: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"media\",\n                  children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                    className: \"portfolio_img\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: (notificationData === null || notificationData === void 0 ? void 0 : notificationData.image) || portfolioPlaceholder,\n                      alt: \"portfolio-images\",\n                      onClick: () => {\n                        setToggler(prev => !prev); // setSelectSlide(`${index}`);\n\n                        setSelectSlide(1);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_record\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"no_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: noData,\n              alt: \"data not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminAnnouncementPage, \"AeLdEvq8vnT2AmXng294v+722ag=\");\n\n_c = AdminAnnouncementPage;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.common.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, null)(AdminAnnouncementPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminAnnouncementPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/adminAnnouncementPage/adminAnnouncementPage.tsx"],"names":["React","useState","useEffect","connect","portfolio","getAdminNotificationData","FsLightbox","Carousel","portfolioPlaceholder","noData","AdminAnnouncementPage","props","itemsMedia","setItemsMedia","toggler","setToggler","selectedSlide","setSelectSlide","notificationData","setNotificationData","console","log","setItems","admin_notification_id","URLSearchParams","location","search","get","res","success","result","notification_data","renderMediaItems","sources","types","push","image","isLoading","title","sub_title","length","prev","mapStateToProps","state","common"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { portfolio, portfolioModal } from '../builderInfo/builderInfo';\nimport { getAdminNotificationData } from '../../redux/homeSearch/actions';\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\n\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport portfolioPlaceholder from '../../assets/images/portfolio-placeholder.jpg';\nimport noData from '../../assets/images/no-search-data.png';\n\nconst AdminAnnouncementPage = (props: any) => {\n    const [itemsMedia, setItemsMedia] = useState([]);\n    const [toggler, setToggler] = useState(false);\n    const [selectedSlide, setSelectSlide] = useState<any>(1);\n    const [notificationData, setNotificationData] = useState<any>(null);\n    console.log('notificationData: ', notificationData);\n\n    useEffect(() => {\n        setItems();\n    }, []);\n\n    const setItems = async () => {\n        const admin_notification_id = new URLSearchParams(props.location?.search)?.get('admin_notification_id');\n\n        const res = await getAdminNotificationData({ admin_notification_id: admin_notification_id });\n        if (res.success) {\n            setNotificationData(res.result?.notification_data);\n        }\n    }\n\n    const renderMediaItems = (itemsMedia: any) => {\n        let sources: any = [];\n        let types: any = [];\n\n        sources.push(itemsMedia);\n        types.push('image');\n        // if (itemsMedia?.length) {\n        //     itemsMedia.forEach((item: any) => {\n        //         if (item?.mediaType === 1) {\n        //             sources.push(item.link);\n        //             types.push('image');\n        //         }\n        //     })\n        // }\n        return { sources, types };\n    }\n\n    const { sources, types } = renderMediaItems(notificationData?.image);\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"section_wrapper\">\n                <div className=\"custom_container\">\n                    {(notificationData || props.isLoading) ? (\n                        <>\n                            <div className=\"flex_row description\">\n                                <div className=\"flex_col_sm_8\">\n                                    <span className=\"sub_title\">{notificationData?.title}</span>\n                                    <p className=\"commn_para\">{notificationData?.sub_title}\n                                    </p>\n                                </div>\n                            </div>\n                            <FsLightbox\n                                toggler={toggler}\n                                slide={selectedSlide}\n                                sources={sources}\n                                types={types}\n                                key={sources?.length}\n                            />\n                            {notificationData && <div className=\"section_wrapper\">\n                                <div className=\"custom_container\">\n                                    <Carousel\n                                        responsive={portfolio}\n                                        showDots={false}\n                                        arrows={true}\n                                        infinite={true}\n                                        className=\"portfolio_wrappr\"\n                                        partialVisbile\n                                    >\n                                        <div className=\"media\">\n                                            <figure className=\"portfolio_img\">\n                                                <img\n                                                    src={notificationData?.image || portfolioPlaceholder}\n                                                    alt=\"portfolio-images\"\n                                                    onClick={() => {\n                                                        setToggler((prev: any) => !prev);\n                                                        // setSelectSlide(`${index}`);\n                                                        setSelectSlide(1);\n                                                    }}\n                                                />\n                                            </figure>\n                                        </div>\n                                    </Carousel>\n                                </div>\n                            </div>}\n                        </>) : (<div className=\"no_record\">\n                            <figure className=\"no_img\">\n                                <img src={noData} alt=\"data not found\" />\n                            </figure>\n                            <span>No Data Found</span>\n                        </div>)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        isLoading: state.common.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps, null)(AdminAnnouncementPage);\n"]},"metadata":{},"sourceType":"module"}