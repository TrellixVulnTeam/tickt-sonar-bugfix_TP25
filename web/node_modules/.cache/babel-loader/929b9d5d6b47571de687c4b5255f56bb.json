{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport dummy from '../../assets/images/u_placeholder.jpg';\nimport chatSearch from '../../assets/images/search-chat.png';\nimport menu from '../../assets/images/menu-line-blue.png';\nimport close from '../../assets/images/ic-cancel-blue.png';\nimport { setLoading } from '../../redux/common/actions';\nimport { formatDateTime } from '../../utils/common';\nimport noData from '../../assets/images/no-search-data.png';\nimport { auth, createRoom, checkRoomExist, getFirebaseInboxData, stopListeningOfRoom, resetUnreadCounter } from '../../services/firebase';\nimport UserMessages from './userMessages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet selectedRoomID = '';\nlet isFreshChatRoute = false;\n\nconst Chat = props => {\n  _s();\n\n  var _props$history, _props$history$locati, _props$history2, _props$history2$locat;\n\n  const [initializing, setInitializing] = useState(true); // firebase authenticated user details\n\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [inBoxData, setInBoxData] = useState([]);\n  const [filterInBoxData, setFilterInBoxData] = useState([]);\n  const [isNoRecords, setIsNoRecords] = useState(false);\n  const [roomData, setRoomData] = useState({});\n  const [roomId, setRoomId] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchActive, setSearchActive] = useState(false);\n  const [isInitialLoader, setIsInitialLoader] = useState(true);\n  const [isMobInbox, setIsMobInbox] = useState(false);\n  const {\n    tradieId,\n    builderId,\n    jobName,\n    jobId\n  } = ((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.state) ? (_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : (_props$history2$locat = _props$history2.location) === null || _props$history2$locat === void 0 ? void 0 : _props$history2$locat.state : {\n    tradieId: '',\n    builderId: '',\n    jobName: '',\n    jobId: ''\n  };\n  console.log('tradieId, builderId, jobName, jobId: ', tradieId, builderId, jobName, jobId);\n  useEffect(() => {\n    console.log(\"roomId:: from didmout\", selectedRoomID);\n\n    (async () => {\n      setLoading(true);\n\n      if (tradieId && builderId && jobName && jobId) {\n        await setInitialItems();\n      } else {\n        isFreshChatRoute = true;\n      }\n\n      await getFirebaseInboxData(onUpdateofInbox); // debugger;\n    })();\n\n    return () => {\n      // debugger;\n      stopListeningOfRoom(selectedRoomID);\n      selectedRoomID = '';\n    };\n  }, []);\n\n  const setInitialItems = async () => {\n    const roomID = `${jobId}_${tradieId}_${builderId}`;\n    selectedRoomID = roomID;\n\n    if (await checkRoomExist(roomID)) {\n      //console.log('RoomAlreadyExist: =================>');\n      return;\n    } else {\n      await createRoom(jobId, tradieId, builderId, jobName);\n      console.log('NewRoomCreated: ============>');\n    }\n  };\n\n  const onUpdateofInbox = async res => {\n    //  console.log(\"roomId::\", selectedRoomID);\n    let selectedRoomInfo = '';\n    const sortedRes = res.filter((item, index) => {\n      if (item.hasOwnProperty('lastMsg') || item.roomId === selectedRoomID) {\n        if (item.roomId === selectedRoomID && !isFreshChatRoute) {\n          selectedRoomInfo = item;\n        } else {\n          return item;\n        }\n      }\n    });\n    sortedRes === null || sortedRes === void 0 ? void 0 : sortedRes.sort(function (x, y) {\n      var _y$lastMsg, _x$lastMsg;\n\n      return ((_y$lastMsg = y.lastMsg) === null || _y$lastMsg === void 0 ? void 0 : _y$lastMsg.messageTimestamp) - ((_x$lastMsg = x.lastMsg) === null || _x$lastMsg === void 0 ? void 0 : _x$lastMsg.messageTimestamp);\n    });\n\n    if (sortedRes.length === 0 && !selectedRoomInfo) {\n      setIsNoRecords(true);\n\n      if (isInitialLoader) {\n        setIsInitialLoader(false);\n        setLoading(false);\n      }\n\n      return;\n    }\n\n    setIsNoRecords(false);\n    let ress;\n\n    if (selectedRoomInfo) {\n      ress = [...sortedRes];\n      ress.unshift(selectedRoomInfo);\n    } // console.log('ress: ', ress, \"sortedRes\", sortedRes, \"res\", res, \"selectedRoomInfo\", selectedRoomInfo);\n\n\n    const newRes = Array.isArray(ress) && selectedRoomInfo ? ress : sortedRes;\n    setInBoxData(newRes.length === 0 ? [{\n      'firstKey': 'emptyRes'\n    }] : newRes);\n\n    if (newRes.length > 0 && selectedRoomID === '') {\n      var _newRes$;\n\n      selectedRoomID = newRes[0].roomId;\n      setRoomId(newRes[0].roomId);\n\n      if (newRes[0] && ((_newRes$ = newRes[0]) === null || _newRes$ === void 0 ? void 0 : _newRes$.unreadMessages) > 0) {\n        newRes[0].unreadMessages = 0;\n        resetUnreadCounter(newRes[0].roomId);\n      }\n\n      setRoomData(newRes[0]);\n      return; // fetchJobDetail(res[0].item?.jobId);\n    }\n\n    if (newRes.length > 0) {\n      let itemObj = newRes.find(x => x.roomId == selectedRoomID);\n\n      if (itemObj && (itemObj === null || itemObj === void 0 ? void 0 : itemObj.unreadMessages) > 0) {\n        itemObj.unreadMessages = 0;\n        resetUnreadCounter(itemObj.roomId);\n      }\n\n      setRoomData(itemObj);\n    }\n  }; //  console.log('user: ', user);\n\n\n  useEffect(() => {\n    let unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n        setIsMobInbox(false);\n      } else {\n        setUser(false);\n        setIsMobInbox(true);\n        setLoading(false);\n        setIsInitialLoader(false);\n      }\n\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n    return unsubscribe;\n  }, [initializing]); // console.log(props.history, \"history\", roomId, \"roomId\", roomData, \"roomData\", selectedRoomID, \"selectedRoomID\", inBoxData, 'inBoxData');\n\n  const getRoomDetails = async item => {\n    stopListeningOfRoom(selectedRoomID);\n    selectedRoomID = item.roomId;\n    setRoomId(item.roomId);\n    setRoomData(item);\n    resetUnreadCounter(item.roomId); // fetchEquipmentDetail(item.itemId);\n  };\n\n  useEffect(() => {\n    var _inBoxData$;\n\n    if (searchQuery) {\n      let filteredVal = inBoxData.filter(item => {\n        var _item$oppUserInfo, _item$oppUserInfo$nam, _item$oppUserInfo$nam2;\n\n        return (_item$oppUserInfo = item.oppUserInfo) === null || _item$oppUserInfo === void 0 ? void 0 : (_item$oppUserInfo$nam = _item$oppUserInfo.name) === null || _item$oppUserInfo$nam === void 0 ? void 0 : (_item$oppUserInfo$nam2 = _item$oppUserInfo$nam.toLowerCase()) === null || _item$oppUserInfo$nam2 === void 0 ? void 0 : _item$oppUserInfo$nam2.includes(searchQuery.toLowerCase());\n      });\n      setFilterInBoxData(filteredVal);\n    }\n\n    if ((inBoxData.length || ((_inBoxData$ = inBoxData[0]) === null || _inBoxData$ === void 0 ? void 0 : _inBoxData$['firstKey']) === 'emptyRes') && isInitialLoader) {\n      var _inBoxData$2;\n\n      if (((_inBoxData$2 = inBoxData[0]) === null || _inBoxData$2 === void 0 ? void 0 : _inBoxData$2['firstKey']) === 'emptyRes') setInBoxData([]);\n      setLoading(false);\n      setIsInitialLoader(false);\n    }\n  }, [searchQuery, inBoxData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mob_side_nav\",\n        onClick: () => setIsMobInbox(true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: menu,\n          alt: \"mob-side-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"f_row chat_wrapr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `side_nav_col ${isMobInbox ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close_nav\",\n            onClick: () => setIsMobInbox(false),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: close,\n              alt: \"close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stick\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `search_bar ${searchActive ? 'active' : ''}`,\n              onClick: () => {\n                setSearchActive(true);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search\",\n                value: searchQuery,\n                onChange: e => setSearchQuery(e.target.value.trimLeft())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon_ltr\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: chatSearch,\n                  alt: \"search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat_list\",\n              children: searchQuery ? filterInBoxData.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"javascript:void(0)\",\n                  className: \"chat\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inner_title line-1\",\n                      children: \"No Record Found\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this) : filterInBoxData.map(item => {\n                var _item$oppUserInfo2, _item$oppUserInfo3, _item$lastMsg, _item$lastMsg2, _item$lastMsg3;\n\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    getRoomDetails(item);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"javascript:void(0)\",\n                    className: `chat ${selectedRoomID === item.roomId ? 'active' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"u_img\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: ((_item$oppUserInfo2 = item.oppUserInfo) === null || _item$oppUserInfo2 === void 0 ? void 0 : _item$oppUserInfo2.image) || dummy,\n                        alt: \"img\",\n                        onError: e => {\n                          var _e$target, _e$target2;\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                            e.target.onerror = null;\n                          }\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                            e.target.src = dummy;\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detail\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title line-1\",\n                        children: (_item$oppUserInfo3 = item.oppUserInfo) === null || _item$oppUserInfo3 === void 0 ? void 0 : _item$oppUserInfo3.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title job line-1\",\n                        children: item.jobName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-1\",\n                        children: (_item$lastMsg = item.lastMsg) === null || _item$lastMsg === void 0 ? void 0 : _item$lastMsg.messageText\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 53\n                      }, this), ((_item$lastMsg2 = item.lastMsg) === null || _item$lastMsg2 === void 0 ? void 0 : _item$lastMsg2.messageTimestamp) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"date_time\",\n                        children: formatDateTime((_item$lastMsg3 = item.lastMsg) === null || _item$lastMsg3 === void 0 ? void 0 : _item$lastMsg3.messageTimestamp, 'inboxTime')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 88\n                      }, this), selectedRoomID === item.roomId ? null : item.unreadMessages === 0 ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"count\",\n                        children: item.unreadMessages\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 131\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this);\n              }) : (inBoxData === null || inBoxData === void 0 ? void 0 : inBoxData.length) > 0 ? inBoxData.map(item => {\n                var _item$oppUserInfo4, _item$oppUserInfo5, _item$lastMsg4, _item$lastMsg5, _item$lastMsg6, _item$lastMsg7, _item$lastMsg8, _item$lastMsg9;\n\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    getRoomDetails(item);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"javascript:void(0)\",\n                    className: `chat ${selectedRoomID === item.roomId ? 'active' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                      className: \"u_img\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: ((_item$oppUserInfo4 = item.oppUserInfo) === null || _item$oppUserInfo4 === void 0 ? void 0 : _item$oppUserInfo4.image) || dummy,\n                        alt: \"img\",\n                        onError: e => {\n                          var _e$target3, _e$target4;\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.onerror) {\n                            e.target.onerror = null;\n                          }\n\n                          if (e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.src) {\n                            e.target.src = dummy;\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"detail\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title line-1\",\n                        children: (_item$oppUserInfo5 = item.oppUserInfo) === null || _item$oppUserInfo5 === void 0 ? void 0 : _item$oppUserInfo5.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"inner_title job line-1\",\n                        children: item.jobName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"commn_para line-1\",\n                        children: ((_item$lastMsg4 = item.lastMsg) === null || _item$lastMsg4 === void 0 ? void 0 : _item$lastMsg4.messageType) === 'text' ? (_item$lastMsg5 = item.lastMsg) === null || _item$lastMsg5 === void 0 ? void 0 : _item$lastMsg5.messageText : ((_item$lastMsg6 = item.lastMsg) === null || _item$lastMsg6 === void 0 ? void 0 : _item$lastMsg6.messageType) === 'image' ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          style: {\n                            color: '#929292'\n                          },\n                          children: \"Photo\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 261,\n                          columnNumber: 194\n                        }, this) : ((_item$lastMsg7 = item.lastMsg) === null || _item$lastMsg7 === void 0 ? void 0 : _item$lastMsg7.messageType) === 'video' ? /*#__PURE__*/_jsxDEV(\"i\", {\n                          style: {\n                            color: '#929292'\n                          },\n                          children: \"Video\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 261,\n                          columnNumber: 278\n                        }, this) : ''\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 53\n                      }, this), ((_item$lastMsg8 = item.lastMsg) === null || _item$lastMsg8 === void 0 ? void 0 : _item$lastMsg8.messageTimestamp) && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"date_time\",\n                        children: formatDateTime((_item$lastMsg9 = item.lastMsg) === null || _item$lastMsg9 === void 0 ? void 0 : _item$lastMsg9.messageTimestamp, 'inboxTime')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 88\n                      }, this), selectedRoomID === item.roomId ? null : item.unreadMessages === 0 ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"count\",\n                        children: item.unreadMessages\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 131\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this);\n              }) : props.isLoading ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"javascript:void(0)\",\n                  className: \"chat\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inner_title line-1\",\n                      children: \"No Record Found\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 272,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), isInitialLoader ? null : !isInitialLoader && (inBoxData === null || inBoxData === void 0 ? void 0 : inBoxData.length) === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail_col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row tradies_row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_record\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"no_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: noData,\n                  alt: \"data not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(UserMessages, {\n          roomId: selectedRoomID,\n          roomData: roomData,\n          isNoRecords: isNoRecords,\n          history: props.history,\n          isLoading: props.isLoading,\n          inBoxData: inBoxData,\n          setInBoxData: setInBoxData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"WtsPgOl9h+9gEBfLRZu8wnSh1JQ=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/chat/chat.tsx"],"names":["React","useState","useEffect","dummy","chatSearch","menu","close","setLoading","formatDateTime","noData","auth","createRoom","checkRoomExist","getFirebaseInboxData","stopListeningOfRoom","resetUnreadCounter","UserMessages","selectedRoomID","isFreshChatRoute","Chat","props","initializing","setInitializing","user","setUser","currentUser","inBoxData","setInBoxData","filterInBoxData","setFilterInBoxData","isNoRecords","setIsNoRecords","roomData","setRoomData","roomId","setRoomId","searchQuery","setSearchQuery","searchActive","setSearchActive","isInitialLoader","setIsInitialLoader","isMobInbox","setIsMobInbox","tradieId","builderId","jobName","jobId","history","location","state","console","log","setInitialItems","onUpdateofInbox","roomID","res","selectedRoomInfo","sortedRes","filter","item","index","hasOwnProperty","sort","x","y","lastMsg","messageTimestamp","length","ress","unshift","newRes","Array","isArray","unreadMessages","itemObj","find","unsubscribe","onAuthStateChanged","getRoomDetails","filteredVal","oppUserInfo","name","toLowerCase","includes","e","target","value","trimLeft","map","image","onerror","src","messageText","messageType","color","isLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport dummy from '../../assets/images/u_placeholder.jpg';\nimport chatSearch from '../../assets/images/search-chat.png';\nimport menu from '../../assets/images/menu-line-blue.png';\nimport close from '../../assets/images/ic-cancel-blue.png';\n\nimport { setLoading } from '../../redux/common/actions';\nimport { formatDateTime } from '../../utils/common';\nimport noData from '../../assets/images/no-search-data.png';\n\nimport {\n    auth,\n    createRoom,\n    checkRoomExist,\n    getFirebaseInboxData,\n    stopListeningOfRoom,\n    resetUnreadCounter,\n} from '../../services/firebase';\n\nimport UserMessages from './userMessages';\n\ninterface PropTypes {\n    builderProfile: any,\n    tradieProfileData: any,\n    isLoading: boolean,\n    history: any,\n}\n\nlet selectedRoomID = '';\nlet isFreshChatRoute: boolean = false;\n\nconst Chat = (props: PropTypes) => {\n    const [initializing, setInitializing] = useState<boolean>(true);\n    // firebase authenticated user details\n    const [user, setUser] = useState<any>(() => auth.currentUser);\n    const [inBoxData, setInBoxData] = useState<any>([]);\n    const [filterInBoxData, setFilterInBoxData] = useState<any>([]);\n    const [isNoRecords, setIsNoRecords] = useState<boolean>(false);\n    const [roomData, setRoomData] = useState<any>({});\n    const [roomId, setRoomId] = useState<string>('');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchActive, setSearchActive] = useState(false);\n    const [isInitialLoader, setIsInitialLoader] = useState(true);\n    const [isMobInbox, setIsMobInbox] = useState<boolean>(false);\n\n    const { tradieId, builderId, jobName, jobId } = props.history?.location?.state ? props.history?.location?.state : { tradieId: '', builderId: '', jobName: '', jobId: '' };\n    console.log('tradieId, builderId, jobName, jobId: ', tradieId, builderId, jobName, jobId);\n\n    useEffect(() => {\n        console.log(\"roomId:: from didmout\", selectedRoomID);\n        (async () => {\n            setLoading(true);\n            if (tradieId && builderId && jobName && jobId) {\n                await setInitialItems();\n            } else {\n                isFreshChatRoute = true;\n            }\n            await getFirebaseInboxData(onUpdateofInbox);\n            // debugger;\n        })();\n\n        return () => {\n            // debugger;\n            stopListeningOfRoom(selectedRoomID);\n            selectedRoomID = '';\n        }\n    }, []);\n\n    const setInitialItems = async () => {\n        const roomID: string = `${jobId}_${tradieId}_${builderId}`;\n        selectedRoomID = roomID;\n        if (await checkRoomExist(roomID)) {\n            //console.log('RoomAlreadyExist: =================>');\n            return;\n        } else {\n            await createRoom(jobId, tradieId, builderId, jobName);\n            console.log('NewRoomCreated: ============>');\n        }\n    }\n\n    const onUpdateofInbox = async (res: any) => {\n      //  console.log(\"roomId::\", selectedRoomID);\n        let selectedRoomInfo: any = '';\n        const sortedRes = res.filter((item: any, index: number) => {\n            if (item.hasOwnProperty('lastMsg') || item.roomId === selectedRoomID) {\n                if (item.roomId === selectedRoomID && !isFreshChatRoute) {\n                    selectedRoomInfo = item;\n                } else {\n                    return item;\n                }\n            }\n        });\n\n        sortedRes?.sort(function (x: any, y: any) {\n            return y.lastMsg?.messageTimestamp - x.lastMsg?.messageTimestamp;\n        });\n\n        if (sortedRes.length === 0 && !selectedRoomInfo) {\n            setIsNoRecords(true);\n            if (isInitialLoader) {\n                setIsInitialLoader(false);\n                setLoading(false);\n            }\n            return;\n        }\n        setIsNoRecords(false);\n\n        let ress: any;\n        if (selectedRoomInfo) {\n            ress = [...sortedRes];\n            ress.unshift(selectedRoomInfo);\n        }\n       // console.log('ress: ', ress, \"sortedRes\", sortedRes, \"res\", res, \"selectedRoomInfo\", selectedRoomInfo);\n        const newRes = (Array.isArray(ress) && selectedRoomInfo) ? ress : sortedRes;\n        setInBoxData(newRes.length === 0 ? [{ 'firstKey': 'emptyRes' }] : newRes);\n        if (newRes.length > 0 && selectedRoomID === '') {\n            selectedRoomID = newRes[0].roomId;\n            setRoomId(newRes[0].roomId);\n            if (newRes[0] && newRes[0]?.unreadMessages > 0) {\n                newRes[0].unreadMessages = 0;\n                resetUnreadCounter(newRes[0].roomId);\n            }\n            setRoomData(newRes[0]);\n            return;\n            // fetchJobDetail(res[0].item?.jobId);\n        }\n\n        if (newRes.length > 0) {\n            let itemObj = newRes.find((x: any) => x.roomId == selectedRoomID);\n\n            if (itemObj && itemObj?.unreadMessages > 0) {\n                itemObj.unreadMessages = 0;\n                resetUnreadCounter(itemObj.roomId);\n            }\n            setRoomData(itemObj);\n        }\n    }\n\n  //  console.log('user: ', user);\n\n    useEffect(() => {\n        let unsubscribe = auth.onAuthStateChanged(user => {\n            if (user) {\n                setUser(user);\n                setIsMobInbox(false);\n            } else {\n                setUser(false);\n                setIsMobInbox(true);\n                setLoading(false);\n                setIsInitialLoader(false);\n            }\n            if (initializing) {\n                setInitializing(false);\n            }\n        });\n\n        return unsubscribe;\n    }, [initializing]);\n\n   // console.log(props.history, \"history\", roomId, \"roomId\", roomData, \"roomData\", selectedRoomID, \"selectedRoomID\", inBoxData, 'inBoxData');\n\n    const getRoomDetails = async (item: any) => {\n        stopListeningOfRoom(selectedRoomID);\n        selectedRoomID = item.roomId;\n        setRoomId(item.roomId);\n        setRoomData(item);\n        resetUnreadCounter(item.roomId);\n        // fetchEquipmentDetail(item.itemId);\n    }\n\n    useEffect(() => {\n        if (searchQuery) {\n            let filteredVal = inBoxData.filter((item: any) => item.oppUserInfo?.name?.toLowerCase()?.includes(searchQuery.toLowerCase()));\n            setFilterInBoxData(filteredVal);\n        }\n        if ((inBoxData.length || inBoxData[0]?.['firstKey'] === 'emptyRes') && isInitialLoader) {\n            if (inBoxData[0]?.['firstKey'] === 'emptyRes') setInBoxData([]);\n            setLoading(false);\n            setIsInitialLoader(false);\n        }\n    }, [searchQuery, inBoxData]);\n\n    return (\n        <div className=\"app_wrapper\">\n            <div className=\"custom_container\">\n                <span className=\"mob_side_nav\" onClick={() => setIsMobInbox(true)}>\n                    <img src={menu} alt=\"mob-side-nav\" />\n                </span>\n                <div className=\"f_row chat_wrapr\">\n                    <div className={`side_nav_col ${isMobInbox ? 'active' : ''}`}>\n                        <button className=\"close_nav\" onClick={() => setIsMobInbox(false)}>\n                            <img src={close} alt=\"close\" />\n                        </button>\n                        <div className=\"stick\">\n                            <span className=\"title\">Chat</span>\n                            <div className={`search_bar ${searchActive ? 'active' : ''}`} onClick={() => { setSearchActive(true) }}>\n                                <input type=\"text\" placeholder=\"Search\" value={searchQuery} onChange={(e: any) => setSearchQuery(e.target.value.trimLeft())} />\n                                <span className=\"detect_icon_ltr\">\n                                    <img src={chatSearch} alt=\"search\" />\n                                </span>\n                            </div>\n                            <ul className=\"chat_list\">\n                                {searchQuery ? filterInBoxData.length === 0 ? (\n                                    <li>\n                                        <a href=\"javascript:void(0)\" className=\"chat\">\n                                            <div className=\"detail\">\n                                                <span className=\"inner_title line-1\">No Record Found</span>\n                                            </div>\n                                        </a>\n                                    </li>\n                                ) : filterInBoxData.map((item: any) => {\n                                    return (\n                                        <li onClick={() => { getRoomDetails(item) }}>\n                                            <a href=\"javascript:void(0)\" className={`chat ${selectedRoomID === item.roomId ? 'active' : ''}`}>\n                                                <figure className=\"u_img\">\n                                                    <img\n                                                        src={item.oppUserInfo?.image || dummy}\n                                                        alt=\"img\"\n                                                        onError={(e: any) => {\n                                                            if (e?.target?.onerror) {\n                                                                e.target.onerror = null;\n                                                            }\n                                                            if (e?.target?.src) {\n                                                                e.target.src = dummy;\n                                                            }\n                                                        }}\n                                                    />\n                                                </figure>\n                                                <div className=\"detail\">\n                                                    <span className=\"inner_title line-1\">{item.oppUserInfo?.name}</span>\n                                                    <span className=\"inner_title job line-1\">{item.jobName}</span>\n                                                    <p className=\"commn_para line-1\">{item.lastMsg?.messageText}</p>\n                                                    {item.lastMsg?.messageTimestamp && <span className=\"date_time\">{formatDateTime(item.lastMsg?.messageTimestamp, 'inboxTime')}</span>}\n                                                    {(selectedRoomID === item.roomId) ? null : item.unreadMessages === 0 ? null : <span className=\"count\">{item.unreadMessages}</span>}\n                                                </div>\n                                            </a>\n                                        </li>\n                                    )\n                                }) : inBoxData?.length > 0 ? inBoxData.map((item: any) => {\n                                    return (\n                                        <li onClick={() => { getRoomDetails(item) }}>\n                                            <a href=\"javascript:void(0)\" className={`chat ${selectedRoomID === item.roomId ? 'active' : ''}`}>\n                                                <figure className=\"u_img\">\n                                                    <img\n                                                        src={item.oppUserInfo?.image || dummy}\n                                                        alt=\"img\"\n                                                        onError={(e: any) => {\n                                                            if (e?.target?.onerror) {\n                                                                e.target.onerror = null;\n                                                            }\n                                                            if (e?.target?.src) {\n                                                                e.target.src = dummy;\n                                                            }\n                                                        }}\n                                                    />\n                                                </figure>\n                                                <div className=\"detail\">\n                                                    <span className=\"inner_title line-1\">{item.oppUserInfo?.name}</span>\n                                                    <span className=\"inner_title job line-1\">{item.jobName}</span>\n                                                    <p className=\"commn_para line-1\">{item.lastMsg?.messageType === 'text' ? item.lastMsg?.messageText : item.lastMsg?.messageType === 'image' ? <i style={{ color: '#929292' }}>Photo</i> : item.lastMsg?.messageType === 'video' ? <i style={{ color: '#929292' }}>Video</i> : ''}</p>\n                                                    {item.lastMsg?.messageTimestamp && <span className=\"date_time\">{formatDateTime(item.lastMsg?.messageTimestamp, 'inboxTime')}</span>}\n                                                    {(selectedRoomID === item.roomId) ? null : item.unreadMessages === 0 ? null : <span className=\"count\">{item.unreadMessages}</span>}\n                                                </div>\n                                            </a>\n                                        </li>\n                                    )\n                                }) : props.isLoading ? null : (\n                                    <li>\n                                        <a href=\"javascript:void(0)\" className=\"chat\">\n                                            <div className=\"detail\">\n                                                <span className=\"inner_title line-1\">No Record Found</span>\n                                            </div>\n                                        </a>\n                                    </li>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                    {/* {(isInitialLoader || inBoxData?.length === 0) ? null : */}\n                    {isInitialLoader ? null :\n                        (!isInitialLoader && inBoxData?.length === 0) ?\n                            <div className=\"detail_col\">\n                                <div className=\"flex_row tradies_row\">\n                                    <div className=\"no_record\">\n                                        <figure className=\"no_img\">\n                                            <img src={noData} alt=\"data not found\" />\n                                        </figure>\n                                        <span>No Data Found</span>\n                                    </div>\n                                </div>\n                            </div> :\n                            <UserMessages\n                                roomId={selectedRoomID}\n                                roomData={roomData}\n                                isNoRecords={isNoRecords}\n                                history={props.history}\n                                isLoading={props.isLoading}\n                                inBoxData={inBoxData}\n                                setInBoxData={setInBoxData}\n                            />\n                    }\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}