{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/components/newEmail.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Constants from '../../../../../../utils/constants';\nimport regex from '../../../../../../utils/regex';\nimport { tradieChangeEmail } from '../../../../../../redux/profile/actions';\nimport eyeIconClose from '../../../../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../../../../assets/images/icon-eye-open.png';\nimport cancel from \"../../../../../../assets/images/ic-cancel.png\";\nimport storageService from '../../../../../../utils/storageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewEmail = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [newEmail, setNewEmail] = useState(props.newEmail);\n  const [currentPassword, setCurrentPassword] = useState(props.currentPassword);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const validateChangeEmailForm = () => {\n    var _Object$keys;\n\n    const newErrors = {};\n\n    if (!newEmail) {\n      newErrors.newEmail = 'New Email Address is required';\n    } else {\n      const emailRegex = new RegExp(regex.email);\n\n      if (!emailRegex.test(newEmail.trim())) {\n        newErrors.newEmail = Constants.errorStrings.emailErr;\n      } else if (newEmail.trim() === props.currentEmail) {\n        newErrors.newEmail = \"New Email Address and Current Email Address is same\";\n      }\n    }\n\n    if (!currentPassword) {\n      newErrors.currentPassword = 'Current Password is required';\n    } //  else {\n    //     const passwordRegex = new RegExp(regex.password);\n    //     if (!passwordRegex.test(currentPassword.trim())) {\n    //         newErrors.currentPassword = Constants.errorStrings.passwordError;\n    //     }\n    // }\n\n\n    setErrors(newErrors);\n    return !((_Object$keys = Object.keys(newErrors)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length);\n  };\n\n  const changeEmailHandler = async () => {\n    console.log(newEmail, \"newEmail\", newEmail.trim(), props.currentEmail, \"props.currentEmail\", \"qazx\", props.currentEmail.trim(), \"trim\");\n\n    if (validateChangeEmailForm()) {\n      const data = {\n        currentEmail: props.currentEmail,\n        newEmail: newEmail.trim(),\n        password: currentPassword.trim(),\n        user_type: storageService.getItem('userType')\n      };\n      const res = await tradieChangeEmail(data);\n\n      if (res === null || res === void 0 ? void 0 : res.success) {\n        props.updateSteps(2, {\n          newEmail: newEmail.trim(),\n          currentPassword: currentPassword.trim()\n        });\n      }\n    }\n  };\n\n  console.log(errors, \"errors new Email Modal\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading form_field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back\",\n          onClick: props.backButtonHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md_heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Change email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: \"Enter your password too and we will send you message to verify your new email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close_btn\",\n        onClick: props.closeModalHandler,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cancel,\n          alt: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner_wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner_wrappr\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"New Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter New Email\",\n              value: newEmail,\n              name: \"newEmail\",\n              onChange: e => setNewEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), !!(errors === null || errors === void 0 ? void 0 : errors.newEmail) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors === null || errors === void 0 ? void 0 : errors.newEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form_label\",\n            children: \"Current Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? 'text' : 'password',\n              className: \"detect_input\",\n              placeholder: \"Enter Current Password\",\n              name: \"password\",\n              value: currentPassword,\n              onChange: e => setCurrentPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              onClick: () => setShowPassword(!showPassword),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showPassword ? eyeIconOpen : eyeIconClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), !!(errors === null || errors === void 0 ? void 0 : errors.currentPassword) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors === null || errors === void 0 ? void 0 : errors.currentPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom_btn custom_btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `fill_btn full_btn btn-effect ${newEmail && currentPassword ? '' : 'disable_btn'}`,\n        onClick: changeEmailHandler,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewEmail, \"y4OWPmVea6W8cNxoG0AOkyyffLA=\");\n\n_c = NewEmail;\nexport default NewEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEmail\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/components/newEmail.tsx"],"names":["React","useState","Constants","regex","tradieChangeEmail","eyeIconClose","eyeIconOpen","cancel","storageService","NewEmail","props","errors","setErrors","newEmail","setNewEmail","currentPassword","setCurrentPassword","showPassword","setShowPassword","validateChangeEmailForm","newErrors","emailRegex","RegExp","email","test","trim","errorStrings","emailErr","currentEmail","Object","keys","length","changeEmailHandler","console","log","data","password","user_type","getItem","res","success","updateSteps","backButtonHandler","closeModalHandler","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Constants from '../../../../../../utils/constants';\nimport regex from '../../../../../../utils/regex';\nimport { tradieChangeEmail } from '../../../../../../redux/profile/actions';\n\nimport eyeIconClose from '../../../../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../../../../assets/images/icon-eye-open.png';\nimport cancel from \"../../../../../../assets/images/ic-cancel.png\";\nimport storageService from '../../../../../../utils/storageService';\n\ninterface PropsTypes {\n    currentEmail: string,\n    newEmail: string,\n    currentPassword: string,\n    updateSteps: (step: number, newData?: any) => void,\n    backButtonHandler: () => void,\n    closeModalHandler: () => void,\n}\n\nconst NewEmail = (props: PropsTypes) => {\n    const [errors, setErrors] = useState<any>({});\n    const [newEmail, setNewEmail] = useState<string>(props.newEmail);\n    const [currentPassword, setCurrentPassword] = useState<string>(props.currentPassword);\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    const validateChangeEmailForm = () => {\n        const newErrors: any = {};\n        if (!newEmail) {\n            newErrors.newEmail = 'New Email Address is required';\n        } else {\n            const emailRegex = new RegExp(regex.email);\n            if (!emailRegex.test(newEmail.trim())) {\n                newErrors.newEmail = Constants.errorStrings.emailErr;\n            }else if (newEmail.trim() === props.currentEmail) {\n                newErrors.newEmail = \"New Email Address and Current Email Address is same\";\n            }\n        }\n\n        if (!currentPassword) {\n            newErrors.currentPassword = 'Current Password is required';\n        }\n        //  else {\n        //     const passwordRegex = new RegExp(regex.password);\n        //     if (!passwordRegex.test(currentPassword.trim())) {\n        //         newErrors.currentPassword = Constants.errorStrings.passwordError;\n        //     }\n        // }\n\n        setErrors(newErrors);\n        return !Object.keys(newErrors)?.length;\n    }\n\n    const changeEmailHandler = async () => {\n        console.log(newEmail,\"newEmail\",newEmail.trim(),props.currentEmail,\"props.currentEmail\",\"qazx\",props.currentEmail.trim(),\"trim\")\n        if (validateChangeEmailForm()) {\n            const data = {\n                currentEmail: props.currentEmail,\n                newEmail: newEmail.trim(),\n                password: currentPassword.trim(),\n                user_type: storageService.getItem('userType'),\n            }\n            const res = await tradieChangeEmail(data);\n            if (res?.success) {\n                props.updateSteps(2, {newEmail: newEmail.trim(), currentPassword: currentPassword.trim()});\n            }\n        }\n    }\n    console.log(errors, \"errors new Email Modal\");\n\n    return (\n        <>\n            <div className=\"heading form_field\">\n                <div className=\"relate\">\n                    <button className=\"back\" onClick={props.backButtonHandler}></button>\n                    <div className=\"md_heading\">\n                        <span className=\"sub_title\">Change email</span>\n                        <span className=\"show_label\">Enter your password too and we will send you message to verify your new email</span>\n                    </div>\n                </div>\n                <button className=\"close_btn\" onClick={props.closeModalHandler}>\n                    <img src={cancel} alt=\"cancel\" />\n                </button>\n            </div>\n            <div className=\"inner_wrap\">\n                <div className=\"inner_wrappr\">\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">New Email</label>\n                        <div className=\"text_field\">\n                            <input type=\"text\" placeholder=\"Enter New Email\" value={newEmail} name='newEmail' onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNewEmail(e.target.value)} />\n                        </div>\n                        {!!errors?.newEmail && <span className=\"error_msg\">{errors?.newEmail}</span>}\n                    </div>\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">Current Password</label>\n                        <div className=\"text_field\">\n                            <input type={showPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter Current Password\" name='password' value={currentPassword} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrentPassword(e.target.value)} />\n                            <span className=\"detect_icon\" onClick={() => setShowPassword(!showPassword)}>\n                                <img src={showPassword ? eyeIconOpen : eyeIconClose} />\n                            </span>\n                        </div>\n                        {!!errors?.currentPassword && <span className=\"error_msg\">{errors?.currentPassword}</span>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"bottom_btn custom_btn\">\n                <button className={`fill_btn full_btn btn-effect ${(newEmail && currentPassword) ? '' : 'disable_btn'}`} onClick={changeEmailHandler}>Next</button>\n            </div>\n        </>\n    )\n}\n\nexport default NewEmail;\n"]},"metadata":{},"sourceType":"module"}