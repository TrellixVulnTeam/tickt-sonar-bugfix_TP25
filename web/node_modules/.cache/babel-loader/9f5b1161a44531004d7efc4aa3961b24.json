{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/signup.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport CreateAccount from \"./components/createAccount\";\nimport InitialSignupPage from \"./components/initialSignupPage\";\nimport LetsGo from \"./components/letsGo\";\nimport SelectYourSphere from \"./components/selectYourSphere\";\nimport PhoneNumber from \"./components/phoneNumber\";\nimport VerifyPhoneNumber from \"./components/verifyPhoneNumber\";\nimport CreatePassword from \"./components/createPassword\";\nimport Specialization from \"./components/specialization\";\nimport AlmostDone from \"./components/almostDone\";\nimport AddQualification from \"./components/addQualification\";\nimport AddABN from \"./components/addABN\";\nimport { postSignup, socialSignupLogin } from \"../../redux/auth/actions\";\nimport AuthParent from \"../../common/auth/authParent\";\nimport VerifyEmail from \"./components/EmailVerification\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA = [{\n  title: \"Welcome to Tickt\",\n  subTitle: \"A new marketplace for builders and tradespeople\"\n}, {\n  title: \"Create account\"\n}, {\n  title: \"Verify your email\"\n}, {\n  title: \"Phone number\"\n}, {\n  title: \"Verify your number\"\n}, {\n  title: \"Create password\"\n}, {\n  title: \"Select the trade you used the most\",\n  tradieTitle: \"What is your trade?\"\n}, {\n  title: \"What Specialisation?\"\n}, {\n  title: \"Almost done\",\n  tradieTitle: \"Add qualification\"\n}, // { title: 'Add ABN' }\n{\n  title: \"Almost done\"\n}]; // { title: 'Add ABN' }\n\nconst Signup = props => {\n  _s();\n\n  const [steps, setSteps] = useState(0);\n  const [signupData, setSignupData] = useState({\n    firstName: \"\",\n    mobileNumber: \"\",\n    email: \"\",\n    user_image: \"\",\n    password: \"\",\n    socialId: \"\",\n    accountType: \"\",\n    trade: \"\",\n    specialization: [],\n    qualification: [],\n    user_type: 0,\n    location: {\n      type: \"Point\",\n      coordinates: [144.9631, -37.8136]\n    } // companyName: '',\n    // position: '',\n    // abn: '',\n\n  });\n  useEffect(() => {\n    // props.callTradeList();\n    var locationNew = {\n      location: {\n        type: \"Point\",\n        coordinates: [144.9631, //long\n        37.8136 //lat\n        ]\n      }\n    };\n\n    const showPosition = position => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      locationNew.location.coordinates[0] = long;\n      locationNew.location.coordinates[1] = lat;\n      setSignupData(prevData => ({ ...prevData,\n        ...locationNew\n      }));\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    }\n  }, []);\n\n  const backButtonHandler = () => {\n    var _props$history, _props$history$locati;\n\n    let minStep = 1;\n    let stateStepsValue = steps;\n\n    if (stateStepsValue === 5 && signupData.user_type === 2) {\n      minStep = 2;\n    }\n\n    if (stateStepsValue === 5 && signupData.user_type === 1) {\n      minStep = 2;\n    }\n\n    if (stateStepsValue === 3 && (props.socialData || ((_props$history = props.history) === null || _props$history === void 0 ? void 0 : (_props$history$locati = _props$history.location) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.redirect) === \"socialRedirectFromLogin\")) {\n      minStep = 3;\n    } else {\n      if (stateStepsValue === 3 && signupData.user_type === 2) {\n        minStep = 2;\n      }\n\n      if (stateStepsValue === 3 && signupData.user_type === 1) {\n        minStep = 2;\n      }\n    }\n\n    if (stateStepsValue === 8 && signupData.user_type === 2) {\n      stateStepsValue = 6;\n    }\n\n    if ((stateStepsValue === 6 || stateStepsValue === 3) && signupData.socialId) {\n      minStep = 3;\n    }\n\n    console.log({\n      stateStepsValue,\n      minStep,\n      set: stateStepsValue - minStep\n    }, \"update\");\n    setSteps(stateStepsValue - minStep);\n  };\n\n  const updateSteps = (step, newData) => {\n    var _props$history2, _props$history2$locat, _props$history5, _props$history5$locat;\n\n    var newStep = step;\n\n    if (!signupData.socialId && (props.socialData || ((_props$history2 = props.history) === null || _props$history2 === void 0 ? void 0 : (_props$history2$locat = _props$history2.location) === null || _props$history2$locat === void 0 ? void 0 : _props$history2$locat.redirect) === \"socialRedirectFromLogin\")) {\n      var _props$history3, _props$history3$locat, _props$history3$locat2, _props$history4, _props$history4$locat, _props$history4$locat2;\n\n      const profile = props.socialData ? props.socialData : (_props$history3 = props.history) === null || _props$history3 === void 0 ? void 0 : (_props$history3$locat = _props$history3.location) === null || _props$history3$locat === void 0 ? void 0 : (_props$history3$locat2 = _props$history3$locat.state) === null || _props$history3$locat2 === void 0 ? void 0 : _props$history3$locat2.profileData;\n      console.log(profile, \"profile updateSteps\", props.history);\n\n      if (props.socialData) {\n        setSignupData(prevData => ({ ...prevData,\n          ...profile\n        }));\n      }\n\n      if ((_props$history4 = props.history) === null || _props$history4 === void 0 ? void 0 : (_props$history4$locat = _props$history4.location) === null || _props$history4$locat === void 0 ? void 0 : (_props$history4$locat2 = _props$history4$locat.state) === null || _props$history4$locat2 === void 0 ? void 0 : _props$history4$locat2.profileData) {\n        setSignupData(prevData => ({ ...prevData,\n          ...profile\n        }));\n      }\n\n      newStep += 2;\n    }\n\n    if (newStep === 1 && (props.socialData || ((_props$history5 = props.history) === null || _props$history5 === void 0 ? void 0 : (_props$history5$locat = _props$history5.location) === null || _props$history5$locat === void 0 ? void 0 : _props$history5$locat.redirect) === \"socialRedirectFromLogin\" || signupData.socialId)) {\n      newStep += 2;\n    }\n\n    if (newStep === 5 && signupData.socialId) {\n      newStep += 1;\n    }\n\n    if (newStep === 6 && signupData.user_type === 2) {\n      newStep += 2;\n    }\n\n    setSteps(newStep);\n    console.log({\n      newStep\n    }, \"update\");\n\n    if (newData) {\n      setSignupData(prevData => ({ ...prevData,\n        ...newData\n      }));\n    }\n  };\n\n  const onNewAccount = (profileData, socialType) => {\n    console.log(\"profileData: \", profileData);\n    setSteps(steps + 2);\n    const newProfileData = {\n      firstName: profileData.name,\n      authType: \"signup\",\n      email: profileData.email,\n      accountType: socialType,\n      user_image: (profileData === null || profileData === void 0 ? void 0 : profileData.imageUrl) || \"\",\n      ...(socialType === \"google\" && {\n        socialId: profileData.googleId\n      }),\n      ...(socialType === \"linkedIn\" && {\n        socialId: profileData.socialId\n      })\n    };\n    setSignupData(prevData => ({ ...prevData,\n      ...newProfileData\n    }));\n  };\n\n  const onSubmitSignup = async lastStepFields => {\n    var res;\n    const newData = { ...signupData,\n      ...lastStepFields\n    };\n    const data = { ...newData,\n      //company_name: newData.companyName,\n      trade: [newData.trade],\n      user_type: signupData.user_type,\n      deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\"\n    }; //delete data.companyName;\n\n    if (data.user_type === 2) {\n      delete data.trade;\n      delete data.specialization;\n      delete data.qualification;\n    }\n\n    if (signupData.accountType) {\n      delete data.password;\n      res = await socialSignupLogin(data);\n    } else {\n      delete data.socialId;\n      delete data.accountType;\n      res = await postSignup(data);\n    }\n\n    if (res.success) {\n      // firebaseSignUpWithEmailPassword({  //firebase signup with email password\n      //     email: res.result?.email,\n      //     password: '12345678',\n      //     id: res.result?._id,\n      //     fullName: res.result?.firstName,\n      //     user_type: res.result?.user_type\n      // });\n      const mData = {\n        success_status: true,\n        name: data === null || data === void 0 ? void 0 : data.firstName,\n        //'sign up source': '',\n        Platform: \"Web\",\n        email: data === null || data === void 0 ? void 0 : data.email\n      };\n      moengage.moE_SendEvent(MoEConstants.SIGN_UP, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.SIGN_UP, mData);\n\n      if (signupData.user_type === 2) {\n        setSteps(9);\n      } else {\n        setSteps(10);\n      }\n    }\n  };\n\n  console.log(\"signupData ==>\", signupData);\n\n  const renderPages = () => {\n    console.log(steps, \"step---->\");\n\n    switch (steps) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(InitialSignupPage, {\n          updateSteps: updateSteps,\n          history: props.history,\n          step: steps,\n          showModal: props.showModal,\n          modalUpdateSteps: props.modalUpdateSteps,\n          callTradeList: props.callTradeList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CreateAccount, {\n          updateSteps: updateSteps,\n          history: props.history,\n          step: steps,\n          data: signupData,\n          onNewAccount: onNewAccount,\n          showModal: props.showModal,\n          setShowModal: props.setShowModal,\n          modalUpdateSteps: props.modalUpdateSteps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(VerifyEmail, {\n          updateSteps: updateSteps,\n          step: steps,\n          userType: signupData.user_type,\n          email: signupData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(PhoneNumber, {\n          updateSteps: updateSteps,\n          step: steps,\n          mobileNumber: signupData.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(VerifyPhoneNumber, {\n          updateSteps: updateSteps,\n          step: steps,\n          userType: signupData.user_type,\n          mobileNumber: signupData.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this);\n\n      case 5:\n        return /*#__PURE__*/_jsxDEV(CreatePassword, {\n          updateSteps: updateSteps,\n          step: steps,\n          password: signupData.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this);\n\n      case 6:\n        return /*#__PURE__*/_jsxDEV(SelectYourSphere, {\n          updateSteps: updateSteps,\n          step: steps,\n          tradeListData: props.tradeListData,\n          trade: signupData.trade\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this);\n\n      case 7:\n        return /*#__PURE__*/_jsxDEV(Specialization, {\n          updateSteps: updateSteps,\n          step: steps,\n          tradeListData: props.tradeListData,\n          trade: signupData.trade,\n          specialization: signupData.specialization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this);\n\n      case 8:\n        if (signupData.user_type === 2) {\n          return /*#__PURE__*/_jsxDEV(AlmostDone, {\n            onSubmitSignup: onSubmitSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 18\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(AddQualification, {\n            updateSteps: updateSteps,\n            step: steps,\n            tradeListData: props.tradeListData,\n            trade: signupData.trade,\n            qualification: signupData.qualification\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this);\n        }\n\n      case 9:\n        if (signupData.user_type === 2) {\n          return /*#__PURE__*/_jsxDEV(LetsGo, {\n            history: props.history,\n            showModal: props.showModal,\n            setShowModal: props.setShowModal,\n            modalUpdateSteps: props.modalUpdateSteps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(AddABN, {\n            onSubmitSignup: onSubmitSignup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 18\n          }, this);\n        }\n\n      case 10:\n        return /*#__PURE__*/_jsxDEV(LetsGo, {\n          history: props.history,\n          showModal: props.showModal,\n          setShowModal: props.setShowModal,\n          modalUpdateSteps: props.modalUpdateSteps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  const header = DATA[steps];\n  const isSuccess = signupData.user_type === 2 ? steps === 9 : steps === 10;\n  return !isSuccess ? /*#__PURE__*/_jsxDEV(AuthParent, {\n    sliderType: \"login\",\n    backButtonHandler: backButtonHandler,\n    header: header,\n    userType: signupData.user_type,\n    steps: steps,\n    history: props.history,\n    showModal: props.showModal,\n    setShowModal: props.setShowModal,\n    modalUpdateSteps: props.modalUpdateSteps,\n    socialId: signupData.socialId,\n    children: renderPages()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this) : renderPages();\n};\n\n_s(Signup, \"C6V1J7CjBRHQh68wtBJg/+mpkBg=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/signup.tsx"],"names":["useState","useEffect","CreateAccount","InitialSignupPage","LetsGo","SelectYourSphere","PhoneNumber","VerifyPhoneNumber","CreatePassword","Specialization","AlmostDone","AddQualification","AddABN","postSignup","socialSignupLogin","AuthParent","VerifyEmail","moengage","mixPanel","MoEConstants","DATA","title","subTitle","tradieTitle","Signup","props","steps","setSteps","signupData","setSignupData","firstName","mobileNumber","email","user_image","password","socialId","accountType","trade","specialization","qualification","user_type","location","type","coordinates","locationNew","showPosition","position","lat","coords","latitude","long","longitude","prevData","navigator","geolocation","getCurrentPosition","backButtonHandler","minStep","stateStepsValue","socialData","history","redirect","console","log","set","updateSteps","step","newData","newStep","profile","state","profileData","onNewAccount","socialType","newProfileData","name","authType","imageUrl","googleId","onSubmitSignup","lastStepFields","res","data","deviceToken","success","mData","success_status","Platform","moE_SendEvent","SIGN_UP","mixP_SendEvent","renderPages","showModal","modalUpdateSteps","callTradeList","setShowModal","tradeListData","header","isSuccess"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport CreateAccount from \"./components/createAccount\";\nimport InitialSignupPage from \"./components/initialSignupPage\";\nimport LetsGo from \"./components/letsGo\";\nimport SelectYourSphere from \"./components/selectYourSphere\";\nimport PhoneNumber from \"./components/phoneNumber\";\nimport VerifyPhoneNumber from \"./components/verifyPhoneNumber\";\nimport CreatePassword from \"./components/createPassword\";\nimport Specialization from \"./components/specialization\";\nimport AlmostDone from \"./components/almostDone\";\nimport AddQualification from \"./components/addQualification\";\nimport AddABN from \"./components/addABN\";\nimport { postSignup, socialSignupLogin } from \"../../redux/auth/actions\";\nimport AuthParent from \"../../common/auth/authParent\";\nimport { firebaseSignUpWithEmailPassword } from \"../../services/firebase\";\nimport VerifyEmail from \"./components/EmailVerification\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { MoEConstants } from \"../../utils/constants\";\n\ninterface Propstype {\n  history?: any;\n  showModal: boolean;\n  callTradeList: () => void;\n  tradeListData: Array<any>;\n  modalUpdateSteps: (data: any) => void;\n  setShowModal: (data: any) => void;\n  socialData: any;\n}\n\nconst DATA = [\n  {\n    title: \"Welcome to Tickt\",\n    subTitle: \"A new marketplace for builders and tradespeople\",\n  },\n  { title: \"Create account\" },\n  { title: \"Verify your email\" },\n  { title: \"Phone number\" },\n  { title: \"Verify your number\" },\n  { title: \"Create password\" },\n  {\n    title: \"Select the trade you used the most\",\n    tradieTitle: \"What is your trade?\",\n  },\n  { title: \"What Specialisation?\" },\n  { title: \"Almost done\", tradieTitle: \"Add qualification\" },\n  // { title: 'Add ABN' }\n  { title: \"Almost done\" },\n];\n// { title: 'Add ABN' }\n\nconst Signup = (props: Propstype) => {\n  const [steps, setSteps] = useState<number>(0);\n  const [signupData, setSignupData] = useState<any>({\n    firstName: \"\",\n    mobileNumber: \"\",\n    email: \"\",\n    user_image: \"\",\n    password: \"\",\n    socialId: \"\",\n    accountType: \"\",\n    trade: \"\",\n    specialization: [],\n    qualification: [],\n    user_type: 0,\n    location: {\n      type: \"Point\",\n      coordinates: [144.9631, -37.8136],\n    },\n    // companyName: '',\n    // position: '',\n    // abn: '',\n  });\n\n  useEffect(() => {\n    // props.callTradeList();\n    var locationNew: any = {\n      location: {\n        type: \"Point\",\n        coordinates: [\n          144.9631, //long\n          37.8136, //lat\n        ],\n      },\n    };\n\n    const showPosition = (position: any) => {\n      const lat = position.coords.latitude;\n      const long = position.coords.longitude;\n      locationNew.location.coordinates[0] = long;\n      locationNew.location.coordinates[1] = lat;\n      setSignupData((prevData: any) => ({ ...prevData, ...locationNew }));\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    }\n  }, []);\n\n  const backButtonHandler = () => {\n    let minStep = 1;\n    let stateStepsValue = steps;\n\n    if (stateStepsValue === 5 && signupData.user_type === 2) {\n      minStep = 2;\n    }\n\n    if (stateStepsValue === 5 && signupData.user_type === 1) {\n      minStep = 2;\n    }\n\n    if (\n      stateStepsValue === 3 &&\n      (props.socialData ||\n        props.history?.location?.redirect === \"socialRedirectFromLogin\")\n    ) {\n      minStep = 3;\n    } else {\n      if (stateStepsValue === 3 && signupData.user_type === 2) {\n        minStep = 2;\n      }\n\n      if (stateStepsValue === 3 && signupData.user_type === 1) {\n        minStep = 2;\n      }\n    }\n\n    if (stateStepsValue === 8 && signupData.user_type === 2) {\n      stateStepsValue = 6;\n    }\n    if (\n      (stateStepsValue === 6 || stateStepsValue === 3) &&\n      signupData.socialId\n    ) {\n      minStep = 3;\n    }\n    console.log(\n      {\n        stateStepsValue,\n        minStep,\n        set: stateStepsValue - minStep,\n      },\n      \"update\"\n    );\n    setSteps(stateStepsValue - minStep);\n  };\n\n  const updateSteps = (step: number, newData?: any) => {\n    var newStep = step;\n    if (\n      !signupData.socialId &&\n      (props.socialData ||\n        props.history?.location?.redirect === \"socialRedirectFromLogin\")\n    ) {\n      const profile = props.socialData\n        ? props.socialData\n        : props.history?.location?.state?.profileData;\n      console.log(profile, \"profile updateSteps\", props.history);\n      if (props.socialData) {\n        setSignupData((prevData: any) => ({ ...prevData, ...profile }));\n      }\n      if (props.history?.location?.state?.profileData) {\n        setSignupData((prevData: any) => ({ ...prevData, ...profile }));\n      }\n      newStep += 2;\n    }\n    if (\n      newStep === 1 &&\n      (props.socialData ||\n        props.history?.location?.redirect === \"socialRedirectFromLogin\" ||\n        signupData.socialId)\n    ) {\n      newStep += 2;\n    }\n    if (newStep === 5 && signupData.socialId) {\n      newStep += 1;\n    }\n    if (newStep === 6 && signupData.user_type === 2) {\n      newStep += 2;\n    }\n    setSteps(newStep);\n    console.log({ newStep }, \"update\");\n    if (newData) {\n      setSignupData((prevData: any) => ({ ...prevData, ...newData }));\n    }\n  };\n\n  const onNewAccount = (profileData: any, socialType: string) => {\n    console.log(\"profileData: \", profileData);\n    setSteps(steps + 2);\n    const newProfileData = {\n      firstName: profileData.name,\n      authType: \"signup\",\n      email: profileData.email,\n      accountType: socialType,\n      user_image: profileData?.imageUrl || \"\",\n      ...(socialType === \"google\" && { socialId: profileData.googleId }),\n      ...(socialType === \"linkedIn\" && { socialId: profileData.socialId }),\n    };\n    setSignupData((prevData: any) => ({ ...prevData, ...newProfileData }));\n  };\n\n  const onSubmitSignup = async (lastStepFields: any) => {\n    var res: any;\n    const newData = { ...signupData, ...lastStepFields };\n    const data = {\n      ...newData,\n      //company_name: newData.companyName,\n      trade: [newData.trade],\n      user_type: signupData.user_type,\n      deviceToken: \"323245356tergdfgrtuy68u566452354dfwe\",\n    };\n    //delete data.companyName;\n    if (data.user_type === 2) {\n      delete data.trade;\n      delete data.specialization;\n      delete data.qualification;\n    }\n    if (signupData.accountType) {\n      delete data.password;\n      res = await socialSignupLogin(data);\n    } else {\n      delete data.socialId;\n      delete data.accountType;\n      res = await postSignup(data);\n    }\n    if (res.success) {\n      // firebaseSignUpWithEmailPassword({  //firebase signup with email password\n      //     email: res.result?.email,\n      //     password: '12345678',\n      //     id: res.result?._id,\n      //     fullName: res.result?.firstName,\n      //     user_type: res.result?.user_type\n      // });\n      const mData = {\n        success_status: true,\n        name: data?.firstName,\n        //'sign up source': '',\n        Platform: \"Web\",\n        email: data?.email,\n      };\n      moengage.moE_SendEvent(MoEConstants.SIGN_UP, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.SIGN_UP, mData);\n      if (signupData.user_type === 2) {\n        setSteps(9);\n      } else {\n        setSteps(10);\n      }\n    }\n  };\n\n  console.log(\"signupData ==>\", signupData);\n\n  const renderPages = () => {\n    console.log(steps, \"step---->\");\n    switch (steps) {\n      case 0:\n        return (\n          <InitialSignupPage\n            updateSteps={updateSteps}\n            history={props.history}\n            step={steps}\n            showModal={props.showModal}\n            modalUpdateSteps={props.modalUpdateSteps}\n            callTradeList={props.callTradeList}\n          />\n        );\n      case 1:\n        return (\n          <CreateAccount\n            updateSteps={updateSteps}\n            history={props.history}\n            step={steps}\n            data={signupData}\n            onNewAccount={onNewAccount}\n            showModal={props.showModal}\n            setShowModal={props.setShowModal}\n            modalUpdateSteps={props.modalUpdateSteps}\n          />\n        );\n      case 2:\n        return (\n          <VerifyEmail\n            updateSteps={updateSteps}\n            step={steps}\n            userType={signupData.user_type}\n            email={signupData.email}\n          />\n        );\n      case 3:\n        return (\n          <PhoneNumber\n            updateSteps={updateSteps}\n            step={steps}\n            mobileNumber={signupData.mobileNumber}\n          />\n        );\n      case 4:\n        return (\n          <VerifyPhoneNumber\n            updateSteps={updateSteps}\n            step={steps}\n            userType={signupData.user_type}\n            mobileNumber={signupData.mobileNumber}\n          />\n        );\n      case 5:\n        return (\n          <CreatePassword\n            updateSteps={updateSteps}\n            step={steps}\n            password={signupData.password}\n          />\n        );\n      case 6:\n        return (\n          <SelectYourSphere\n            updateSteps={updateSteps}\n            step={steps}\n            tradeListData={props.tradeListData}\n            trade={signupData.trade}\n          />\n        );\n      case 7:\n        return (\n          <Specialization\n            updateSteps={updateSteps}\n            step={steps}\n            tradeListData={props.tradeListData}\n            trade={signupData.trade}\n            specialization={signupData.specialization}\n          />\n        );\n      case 8:\n        if (signupData.user_type === 2) {\n          return <AlmostDone onSubmitSignup={onSubmitSignup} />;\n        } else {\n          return (\n            <AddQualification\n              updateSteps={updateSteps}\n              step={steps}\n              tradeListData={props.tradeListData}\n              trade={signupData.trade}\n              qualification={signupData.qualification}\n            />\n          );\n        }\n      case 9:\n        if (signupData.user_type === 2) {\n          return (\n            <LetsGo\n              history={props.history}\n              showModal={props.showModal}\n              setShowModal={props.setShowModal}\n              modalUpdateSteps={props.modalUpdateSteps}\n            />\n          );\n        } else {\n          return <AddABN onSubmitSignup={onSubmitSignup} />;\n        }\n      case 10:\n        return (\n          <LetsGo\n            history={props.history}\n            showModal={props.showModal}\n            setShowModal={props.setShowModal}\n            modalUpdateSteps={props.modalUpdateSteps}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  const header = DATA[steps];\n  const isSuccess = signupData.user_type === 2 ? steps === 9 : steps === 10;\n\n  return !isSuccess ? (\n    <AuthParent\n      sliderType=\"login\"\n      backButtonHandler={backButtonHandler}\n      header={header}\n      userType={signupData.user_type}\n      steps={steps}\n      history={props.history}\n      showModal={props.showModal}\n      setShowModal={props.setShowModal}\n      modalUpdateSteps={props.modalUpdateSteps}\n      socialId={signupData.socialId}\n    >\n      {renderPages()}\n    </AuthParent>\n  ) : (\n    renderPages()\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}