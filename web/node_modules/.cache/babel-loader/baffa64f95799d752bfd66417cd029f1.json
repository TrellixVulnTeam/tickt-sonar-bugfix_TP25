{"ast":null,"code":"import _objectSpread from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import approved from'../../../assets/images/approved.png';import waiting from'../../../assets/images/exclamation.png';import MarkMilestones from'./markMilestones';import{withRouter}from'react-router-dom';import noDataFound from'../../../assets/images/no-search-data.png';import jobTypePlaceholder from'../../../assets/images/job-type-placeholder.png';import{renderTime}from'../../../utils/common';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ActiveJobs=function ActiveJobs(_ref){var setJobLabel=_ref.setJobLabel,activeType=_ref.activeType,history=_ref.history,dataItems=_ref.dataItems,jobType=_ref.jobType,isLoading=_ref.isLoading,enableEditMilestone=_ref.enableEditMilestone,enableLodgeDispute=_ref.enableLodgeDispute,enableMakMilestone=_ref.enableMakMilestone,enableCancelJob=_ref.enableCancelJob,globalJobId=_ref.globalJobId,setToggleActiveToFalse=_ref.setToggleActiveToFalse,toggleClearActiveChecks=_ref.toggleClearActiveChecks,recallHeaderNotification=_ref.recallHeaderNotification;var listData=dataItems;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedIndex=_useState2[0],setSelectedIndex=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),localState=_useState4[0],setLocalState=_useState4[1];var resetStateLocal=function resetStateLocal(isTrue){setJobLabel(activeType);setLocalState(false);if(isTrue){history.push('/decline-milestone-success');}};useEffect(function(){console.log('here!');},[jobType]);useEffect(function(){if(toggleClearActiveChecks===true){setSelectedIndex(null);setLocalState(false);setToggleActiveToFalse();}},[toggleClearActiveChecks]);useEffect(function(){var _Object$keys;var filteredItem={};listData.forEach(function(item_,index){if(item_.jobId===globalJobId){filteredItem=_objectSpread(_objectSpread({},item_),{},{index:index});}});if((_Object$keys=Object.keys(filteredItem))===null||_Object$keys===void 0?void 0:_Object$keys.length){var _filteredItem;setSelectedIndex((_filteredItem=filteredItem)===null||_filteredItem===void 0?void 0:_filteredItem.index);setLocalState(true);}},[enableEditMilestone,enableLodgeDispute,enableCancelJob,enableMakMilestone]);if(localState&&selectedIndex!==null){console.log({localState:localState,selectedIndex:selectedIndex,listData:listData});return/*#__PURE__*/_jsx(MarkMilestones,{resetStateLocal:resetStateLocal,selectedIndex:selectedIndex,listData:listData,enableEditMilestone:enableEditMilestone,enableLodgeDispute:enableLodgeDispute,enableCancelJob:enableCancelJob,recallHeaderNotification:recallHeaderNotification});}if(isLoading||listData==undefined){return null;}console.log({listData:listData,isLoading:isLoading});return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"sub_title\",children:[jobType.charAt(0).toUpperCase()+jobType.slice(1),\" Jobs\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(listData===null||listData===void 0?void 0:listData.length)?listData.map(function(_ref2,index){var amount=_ref2.amount,durations=_ref2.durations,jobId=_ref2.jobId,jobName=_ref2.jobName,fromDate=_ref2.fromDate,toDate=_ref2.toDate,milestoneNumber=_ref2.milestoneNumber,specializationId=_ref2.specializationId,specializationName=_ref2.specializationName,status=_ref2.status,timeLeft=_ref2.timeLeft,location=_ref2.location,locationName=_ref2.locationName,total=_ref2.total,quote=_ref2.quote,totalmem=_ref2.totalmem,totalMilestones=_ref2.totalMilestones,tradieListData=_ref2.tradieListData,tradeName=_ref2.tradeName,tradieId=_ref2.tradieId,tradeSelectedUrl=_ref2.tradeSelectedUrl,tradieImage=_ref2.tradieImage,mathrandom=_ref2.mathrandom;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"more_detail circle\",onClick:function onClick(){setLocalState(true);setSelectedIndex(index);// redirectToInfo({ jobId, tradieId, specializationId, status });\n}}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img icon\",children:/*#__PURE__*/_jsx(\"img\",{src:tradeSelectedUrl||jobTypePlaceholder,onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=jobTypePlaceholder;}},alt:\"traide-img\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:tradeName}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:jobName})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:total.toUpperCase()==\"VIEW QUOTE\"?/*#__PURE__*/_jsx(\"span\",{className:\"view_quote\",onClick:function onClick(){var quoteId=null;if(quote&&quote[0]&&quote[0]._id){quoteId=quote[0]._id;history.push(\"/jobs?active=active&viewQuotes=true&jobId=\".concat(jobId,\"&id=\").concat(quoteId));setJobLabel('quotes');}},children:total}):/*#__PURE__*/_jsx(\"span\",{children:total})}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"job_progress_wrap\",id:\"scroll-progress-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress_wrapper\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"completed-digit\",id:\"digit-progress\",children:[/*#__PURE__*/_jsx(\"b\",{children:\"Job Milestones \".concat(milestoneNumber,\" \")}),\"of \".concat(totalMilestones)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"approval_info\",children:[status.toUpperCase()===\"APPROVED\"&&/*#__PURE__*/_jsx(\"img\",{src:approved,alt:\"icon\"}),[\"QUOTE REQUEST ACCEPTED\",\"QUOTE ACCEPTED\"].includes(status.toUpperCase())&&/*#__PURE__*/_jsx(\"img\",{src:approved,alt:\"icon\"}),(status.toUpperCase()===\"NEEDS APPROVAL\"||status.toUpperCase()===\"NEED APPROVAL\")&&/*#__PURE__*/_jsx(\"img\",{src:waiting,alt:\"icon\"}),status]}),/*#__PURE__*/_jsx(\"span\",{className:\"progress_bar\",children:/*#__PURE__*/_jsx(\"input\",{className:\"done_progress\",id:\"progress-bar\",type:\"range\",min:\"0\",value:milestoneNumber/totalMilestones*100})})]}),(status===\"NEEDS APPROVAL\"||status===\"NEED APPROVAL\"||status===\"need approval\")&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setLocalState(true);setSelectedIndex(index);},className:\"fill_grey_btn full_btn btn-effect\",children:'Approve'})]})]})});}):!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noDataFound,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:'No Data Found'})]})})]});};export default withRouter(ActiveJobs);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/activeJobs.tsx"],"names":["React","useState","useEffect","approved","waiting","MarkMilestones","withRouter","noDataFound","jobTypePlaceholder","renderTime","ActiveJobs","setJobLabel","activeType","history","dataItems","jobType","isLoading","enableEditMilestone","enableLodgeDispute","enableMakMilestone","enableCancelJob","globalJobId","setToggleActiveToFalse","toggleClearActiveChecks","recallHeaderNotification","listData","selectedIndex","setSelectedIndex","localState","setLocalState","resetStateLocal","isTrue","push","console","log","filteredItem","forEach","item_","index","jobId","Object","keys","length","undefined","charAt","toUpperCase","slice","map","amount","durations","jobName","fromDate","toDate","milestoneNumber","specializationId","specializationName","status","timeLeft","location","locationName","total","quote","totalmem","totalMilestones","tradieListData","tradeName","tradieId","tradeSelectedUrl","tradieImage","mathrandom","e","target","onerror","src","quoteId","_id","includes"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useEffect } from 'react'\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport approved from '../../../assets/images/approved.png';\nimport waiting from '../../../assets/images/exclamation.png';\nimport MarkMilestones from './markMilestones';\nimport { withRouter } from 'react-router-dom';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport jobTypePlaceholder from '../../../assets/images/job-type-placeholder.png';\nimport LodgeDispute from './lodgeDispute/lodgeDispute';\nimport CancelJobs from './cancelJobs/cancelJob';\nimport { renderTime } from '../../../utils/common';\ninterface Active {\n    amount: any,\n    durations: any,\n    jobId: any,\n    jobName: any,\n    fromDate: any,\n    toDate: any,\n    milestoneNumber: any,\n    specializationId: any,\n    specializationName: any,\n    status: any,\n    timeLeft: any,\n    locationName: any,\n    total: any,\n    quote: any,\n    totalmem: any,\n    totalMilestones: any,\n    tradieListData: any,\n    tradeName: any,\n    location: any,\n    tradieId: any,\n    tradieImage: any,\n    tradeSelectedUrl: any,\n    activeType: any,\n    setJobLabel: (item: any) => void,\n    enableEditMilestone: boolean,\n    enableLodgeDispute: boolean,\n    enableCancelJob: boolean\n    globalJobId: string,\n    mathrandom?: any,\n    setToggleActiveToFalse: any,\n    toggleClearActiveChecks: () => void\n}\n\nconst ActiveJobs = ({\n    setJobLabel,\n    activeType,\n    history,\n    dataItems,\n    jobType,\n    isLoading,\n    enableEditMilestone,\n    enableLodgeDispute,\n    enableMakMilestone,\n    enableCancelJob,\n    globalJobId,\n    setToggleActiveToFalse,\n    toggleClearActiveChecks,\n    recallHeaderNotification\n}: any) => {\n    let listData: any = dataItems;\n    const [selectedIndex, setSelectedIndex] = useState<any>(null);\n    const [localState, setLocalState] = useState(false);\n\n    const resetStateLocal = (isTrue: boolean) => {\n        setJobLabel(activeType);\n        setLocalState(false)\n        if (isTrue) {\n            history.push('/decline-milestone-success');\n        }\n    }\n\n    useEffect(() => {\n        console.log('here!')\n    }, [jobType]);\n\n    useEffect(() => {\n        if (toggleClearActiveChecks === true) {\n            setSelectedIndex(null);\n            setLocalState(false);\n            setToggleActiveToFalse();\n        }\n    }, [toggleClearActiveChecks])\n\n\n    useEffect(() => {\n        let filteredItem: any = {};\n        listData.forEach((item_: any, index: any) => {\n            if (item_.jobId === globalJobId) {\n                filteredItem = {\n                    ...item_,\n                    index\n                }\n            }\n        })\n\n        if (Object.keys(filteredItem)?.length) {\n            setSelectedIndex(filteredItem?.index);\n            setLocalState(true);\n        }\n    }, [enableEditMilestone, enableLodgeDispute, enableCancelJob, enableMakMilestone]);\n\n    if (localState && selectedIndex !== null) {\n        console.log({ localState, selectedIndex, listData })\n        return (\n            <MarkMilestones\n                resetStateLocal={resetStateLocal}\n                selectedIndex={selectedIndex}\n                listData={listData}\n                enableEditMilestone={enableEditMilestone}\n                enableLodgeDispute={enableLodgeDispute}\n                enableCancelJob={enableCancelJob}\n                recallHeaderNotification={recallHeaderNotification}\n            />)\n    }\n\n    if (isLoading || listData == undefined) {\n        return null;\n    }\n\n    console.log({ listData, isLoading })\n    return (\n        <React.Fragment>\n            <span className=\"sub_title\">{jobType.charAt(0).toUpperCase() + jobType.slice(1)} Jobs\n                {/* {listData?.length} */}\n            </span>\n            <div className=\"flex_row tradies_row\">\n                {listData?.length ?\n                    listData.map(({\n                        amount,\n                        durations,\n                        jobId,\n                        jobName,\n                        fromDate,\n                        toDate,\n                        milestoneNumber,\n                        specializationId,\n                        specializationName,\n                        status,\n                        timeLeft,\n                        location,\n                        locationName,\n                        total,\n                        quote,\n                        totalmem,\n                        totalMilestones,\n                        tradieListData,\n                        tradeName,\n                        tradieId,\n                        tradeSelectedUrl,\n                        tradieImage,\n                        mathrandom,\n                    }: Active, index: number) => (\n                        <div className=\"flex_col_sm_6\">\n                            <div className=\"tradie_card\"\n                                data-aos=\"fade-in\"\n                                data-aos-delay=\"250\"\n                                data-aos-duration=\"1000\"\n                            >\n                                <span className=\"more_detail circle\"\n                                    onClick={() => {\n                                        setLocalState(true);\n                                        setSelectedIndex(index);\n                                        // redirectToInfo({ jobId, tradieId, specializationId, status });\n                                    }}>\n                                </span>\n                                <div className=\"user_wrap\">\n                                    <figure className=\"u_img icon\">\n                                        <img\n                                            src={tradeSelectedUrl || jobTypePlaceholder}\n                                            onError={(e: any) => {\n                                                if (e?.target?.onerror) {\n                                                    e.target.onerror = null;\n                                                }\n                                                if (e?.target?.src) {\n                                                    e.target.src = jobTypePlaceholder;\n                                                }\n                                            }}\n                                            alt=\"traide-img\" />\n                                    </figure>\n                                    <div className=\"details\">\n                                        <span className=\"name\">{tradeName}</span>\n                                        <p className=\"commn_para\">{jobName}</p>\n                                    </div>\n                                </div>\n                                <div className=\"job_info\">\n                                    <ul>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"\">\n                                            {total.toUpperCase() == \"VIEW QUOTE\" ? (\n                                                <span className=\"view_quote\"\n                                                    onClick={() => {\n                                                        let quoteId = null;\n                                                        if (quote && quote[0] && quote[0]._id) {\n                                                            quoteId = quote[0]._id;\n                                                            history.push(`/jobs?active=active&viewQuotes=true&jobId=${jobId}&id=${quoteId}`);\n                                                            setJobLabel('quotes');\n                                                        }\n                                                    }}>\n                                                    {total}\n                                                </span>\n                                            ) : (\n                                                <span>\n                                                    {total}\n                                                </span>\n                                            )}\n                                        </li>\n                                        <li className=\"icon calendar\">\n                                            {/* {durations} */}\n                                            {renderTime(fromDate, toDate)}\n                                        </li>\n                                        <li className=\"\">\n                                            <span>\n                                                {timeLeft}\n                                            </span>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div className=\"job_progress_wrap\" id=\"scroll-progress-bar\">\n                                    <div className=\"progress_wrapper\">\n                                        <span className=\"completed-digit\" id=\"digit-progress\">\n                                            <b>{`Job Milestones ${milestoneNumber} `}</b>{`of ${totalMilestones}`}\n                                        </span>\n                                        <span className=\"approval_info\">\n                                            {(status).toUpperCase() === \"APPROVED\" && <img src={approved} alt=\"icon\" />}\n                                            {[\"QUOTE REQUEST ACCEPTED\",\"QUOTE ACCEPTED\"].includes((status).toUpperCase()) && <img src={approved} alt=\"icon\" />}\n                                            {((status).toUpperCase() === \"NEEDS APPROVAL\" || (status).toUpperCase() === \"NEED APPROVAL\") && (\n                                                <img src={waiting} alt=\"icon\" />\n                                            )}\n                                            {status}\n                                        </span>\n                                        <span className=\"progress_bar\">\n                                            <input\n                                                className=\"done_progress\"\n                                                id=\"progress-bar\"\n                                                type=\"range\"\n                                                min=\"0\"\n                                                value={milestoneNumber / totalMilestones * 100}\n                                            />\n                                        </span>\n                                    </div>\n                                    {(status === \"NEEDS APPROVAL\" || status === \"NEED APPROVAL\" || status === \"need approval\") && (\n                                        <button\n                                            onClick={() => {\n                                                setLocalState(true);\n                                                setSelectedIndex(index);\n                                            }}\n                                            className=\"fill_grey_btn full_btn btn-effect\">\n                                            {'Approve'}\n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    )) : !isLoading && (\n                        <div className=\"no_record  m-t-vh\">\n                            <figure className=\"no_img\">\n                                <img src={noDataFound} alt=\"data not found\" />\n                            </figure>\n                            <span>{'No Data Found'}</span>\n                        </div>)}\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport default withRouter(ActiveJobs);"]},"metadata":{},"sourceType":"module"}