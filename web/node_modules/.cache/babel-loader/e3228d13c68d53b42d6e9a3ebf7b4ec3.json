{"ast":null,"code":"import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport JobDashboard from './jobDashboard';\nimport { getActiveJobsBuilder, getPastJobsBuilder, getOpenJobsBuilder, getNewApplicantsBuilder, getnewJobApplicationListBuilder, getNewApprovalList } from '../../redux/jobs/actions';\nimport { recallHeaderNotification } from '../../redux/homeSearch/actions';\nimport { getClearJobs } from '../../redux/jobs/actions';\n\nconst mapStateToProps = state => {\n  console.log({\n    state\n  });\n  const {\n    jobs: {\n      builderActionJobs,\n      builderOpenJobs,\n      builderPastJobs,\n      builderNewApplicants,\n      builderNewApplicantsList,\n      newApprovalList\n    }\n  } = state;\n  return {\n    activeJobs: builderActionJobs,\n    openJobs: builderOpenJobs,\n    pastJobs: builderPastJobs,\n    applicantJobs: builderNewApplicants,\n    approvalJobs: newApprovalList,\n    applicantsListJobs: builderNewApplicantsList,\n    isLoading: state.common.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getClearJobs,\n    getActiveJobsBuilder,\n    getPastJobsBuilder,\n    getOpenJobsBuilder,\n    getNewApplicantsBuilder,\n    getnewJobApplicationListBuilder,\n    getNewApprovalList,\n    recallHeaderNotification\n  }, dispatch);\n};\n\nconst JobDashboardPage = connect(mapStateToProps, mapDispatchToProps)(JobDashboard);\nexport default JobDashboardPage;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/index.tsx"],"names":["connect","bindActionCreators","JobDashboard","getActiveJobsBuilder","getPastJobsBuilder","getOpenJobsBuilder","getNewApplicantsBuilder","getnewJobApplicationListBuilder","getNewApprovalList","recallHeaderNotification","getClearJobs","mapStateToProps","state","console","log","jobs","builderActionJobs","builderOpenJobs","builderPastJobs","builderNewApplicants","builderNewApplicantsList","newApprovalList","activeJobs","openJobs","pastJobs","applicantJobs","approvalJobs","applicantsListJobs","isLoading","common","mapDispatchToProps","dispatch","JobDashboardPage"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,oBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,uBAJJ,EAKIC,+BALJ,EAMIC,kBANJ,QAOO,0BAPP;AAQA,SAASC,wBAAT,QAAyC,gCAAzC;AAEA,SACIC,YADJ,QAEO,0BAFP;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAgB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;AACA,QAAM;AACFG,IAAAA,IAAI,EAAE;AACFC,MAAAA,iBADE;AAEFC,MAAAA,eAFE;AAGFC,MAAAA,eAHE;AAIFC,MAAAA,oBAJE;AAKFC,MAAAA,wBALE;AAMFC,MAAAA;AANE;AADJ,MASFT,KATJ;AAUA,SAAO;AACHU,IAAAA,UAAU,EAAEN,iBADT;AAEHO,IAAAA,QAAQ,EAAEN,eAFP;AAGHO,IAAAA,QAAQ,EAAEN,eAHP;AAIHO,IAAAA,aAAa,EAAEN,oBAJZ;AAKHO,IAAAA,YAAY,EAAEL,eALX;AAMHM,IAAAA,kBAAkB,EAAEP,wBANjB;AAOHQ,IAAAA,SAAS,EAAEhB,KAAK,CAACiB,MAAN,CAAaD;AAPrB,GAAP;AASH,CArBD;;AAuBA,MAAME,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO9B,kBAAkB,CACrB;AACIS,IAAAA,YADJ;AAEIP,IAAAA,oBAFJ;AAGIC,IAAAA,kBAHJ;AAIIC,IAAAA,kBAJJ;AAKIC,IAAAA,uBALJ;AAMIC,IAAAA,+BANJ;AAOIC,IAAAA,kBAPJ;AAQIC,IAAAA;AARJ,GADqB,EAWrBsB,QAXqB,CAAzB;AAaH,CAdD;;AAgBA,MAAMC,gBAAgB,GAAGhC,OAAO,CAC5BW,eAD4B,EAE5BmB,kBAF4B,CAAP,CAGvB5B,YAHuB,CAAzB;AAKA,eAAe8B,gBAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport JobDashboard from './jobDashboard';\nimport {\n    getActiveJobsBuilder,\n    getPastJobsBuilder,\n    getOpenJobsBuilder,\n    getNewApplicantsBuilder,\n    getnewJobApplicationListBuilder,\n    getNewApprovalList,\n} from '../../redux/jobs/actions';\nimport { recallHeaderNotification } from '../../redux/homeSearch/actions';\n\nimport {\n    getClearJobs\n} from '../../redux/jobs/actions';\n\n\nconst mapStateToProps = (state: any) => {\n    console.log({ state });\n    const {\n        jobs: {\n            builderActionJobs,\n            builderOpenJobs,\n            builderPastJobs,\n            builderNewApplicants,\n            builderNewApplicantsList,\n            newApprovalList\n        },\n    } = state;\n    return {\n        activeJobs: builderActionJobs,\n        openJobs: builderOpenJobs,\n        pastJobs: builderPastJobs,\n        applicantJobs: builderNewApplicants,\n        approvalJobs: newApprovalList,\n        applicantsListJobs: builderNewApplicantsList,\n        isLoading: state.common.isLoading\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators(\n        {\n            getClearJobs,\n            getActiveJobsBuilder,\n            getPastJobsBuilder,\n            getOpenJobsBuilder,\n            getNewApplicantsBuilder,\n            getnewJobApplicationListBuilder,\n            getNewApprovalList,\n            recallHeaderNotification,\n        },\n        dispatch\n    );\n};\n\nconst JobDashboardPage = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(JobDashboard);\n\nexport default JobDashboardPage;\n"]},"metadata":{},"sourceType":"module"}