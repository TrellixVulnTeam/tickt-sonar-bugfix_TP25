{"ast":null,"code":"import _regeneratorRuntime from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Constants from'../../../../../../utils/constants';import regex from'../../../../../../utils/regex';import{tradieChangeEmail}from'../../../../../../redux/profile/actions';import eyeIconClose from'../../../../../../assets/images/icon-eye-closed.png';import eyeIconOpen from'../../../../../../assets/images/icon-eye-open.png';import cancel from\"../../../../../../assets/images/ic-cancel.png\";import storageService from'../../../../../../utils/storageService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NewEmail=function NewEmail(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var _useState3=useState(props.newEmail),_useState4=_slicedToArray(_useState3,2),newEmail=_useState4[0],setNewEmail=_useState4[1];var _useState5=useState(props.currentPassword),_useState6=_slicedToArray(_useState5,2),currentPassword=_useState6[0],setCurrentPassword=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showPassword=_useState8[0],setShowPassword=_useState8[1];var validateChangeEmailForm=function validateChangeEmailForm(){var _Object$keys;var newErrors={};if(!newEmail){newErrors.newEmail='New Email Address is required';}else{var emailRegex=new RegExp(regex.email);if(!emailRegex.test(newEmail.trim())){newErrors.newEmail=Constants.errorStrings.emailErr;}else if(newEmail.trim()===props.currentEmail){newErrors.newEmail=\"New Email Address and Current Email Address is same\";}}if(!currentPassword){newErrors.currentPassword='Current Password is required';}//  else {\n//     const passwordRegex = new RegExp(regex.password);\n//     if (!passwordRegex.test(currentPassword.trim())) {\n//         newErrors.currentPassword = Constants.errorStrings.passwordError;\n//     }\n// }\nsetErrors(newErrors);return!((_Object$keys=Object.keys(newErrors))===null||_Object$keys===void 0?void 0:_Object$keys.length);};var changeEmailHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(newEmail,\"newEmail\",newEmail.trim(),props.currentEmail,\"props.currentEmail\",\"qazx\",props.currentEmail.trim(),\"trim\");if(!validateChangeEmailForm()){_context.next=7;break;}data={currentEmail:props.currentEmail,newEmail:newEmail.trim(),password:currentPassword.trim(),user_type:storageService.getItem('userType')};_context.next=5;return tradieChangeEmail(data);case 5:res=_context.sent;if(res===null||res===void 0?void 0:res.success){props.updateSteps(2,{newEmail:newEmail.trim(),currentPassword:currentPassword.trim()});}case 7:case\"end\":return _context.stop();}}},_callee);}));return function changeEmailHandler(){return _ref.apply(this,arguments);};}();console.log(errors,\"errors new Email Modal\");return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"heading form_field\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relate\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back\",onClick:props.backButtonHandler}),/*#__PURE__*/_jsxs(\"div\",{className:\"md_heading\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"Change email\"}),/*#__PURE__*/_jsx(\"span\",{className:\"show_label\",children:\"Enter your password too and we will send you message to verify your new email\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"close_btn\",onClick:props.closeModalHandler,children:/*#__PURE__*/_jsx(\"img\",{src:cancel,alt:\"cancel\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"inner_wrap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inner_wrappr\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"New Email\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter New Email\",value:newEmail,name:\"newEmail\",onChange:function onChange(e){return setNewEmail(e.target.value);}})}),!!(errors===null||errors===void 0?void 0:errors.newEmail)&&/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors===null||errors===void 0?void 0:errors.newEmail})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form_field\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Current Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text_field\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPassword?'text':'password',className:\"detect_input\",placeholder:\"Enter Current Password\",name:\"password\",value:currentPassword,onChange:function onChange(e){return setCurrentPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"span\",{className:\"detect_icon\",onClick:function onClick(){return setShowPassword(!showPassword);},children:/*#__PURE__*/_jsx(\"img\",{src:showPassword?eyeIconOpen:eyeIconClose})})]}),!!(errors===null||errors===void 0?void 0:errors.currentPassword)&&/*#__PURE__*/_jsx(\"span\",{className:\"error_msg\",children:errors===null||errors===void 0?void 0:errors.currentPassword})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bottom_btn custom_btn\",children:/*#__PURE__*/_jsx(\"button\",{className:\"fill_btn full_btn btn-effect \".concat(newEmail&&currentPassword?'':'disable_btn'),onClick:changeEmailHandler,children:\"Next\"})})]});};export default NewEmail;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/personalInformation/changeEmailModal/components/newEmail.tsx"],"names":["React","useState","Constants","regex","tradieChangeEmail","eyeIconClose","eyeIconOpen","cancel","storageService","NewEmail","props","errors","setErrors","newEmail","setNewEmail","currentPassword","setCurrentPassword","showPassword","setShowPassword","validateChangeEmailForm","newErrors","emailRegex","RegExp","email","test","trim","errorStrings","emailErr","currentEmail","Object","keys","length","changeEmailHandler","console","log","data","password","user_type","getItem","res","success","updateSteps","backButtonHandler","closeModalHandler","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Constants from '../../../../../../utils/constants';\nimport regex from '../../../../../../utils/regex';\nimport { tradieChangeEmail } from '../../../../../../redux/profile/actions';\n\nimport eyeIconClose from '../../../../../../assets/images/icon-eye-closed.png';\nimport eyeIconOpen from '../../../../../../assets/images/icon-eye-open.png';\nimport cancel from \"../../../../../../assets/images/ic-cancel.png\";\nimport storageService from '../../../../../../utils/storageService';\n\ninterface PropsTypes {\n    currentEmail: string,\n    newEmail: string,\n    currentPassword: string,\n    updateSteps: (step: number, newData?: any) => void,\n    backButtonHandler: () => void,\n    closeModalHandler: () => void,\n}\n\nconst NewEmail = (props: PropsTypes) => {\n    const [errors, setErrors] = useState<any>({});\n    const [newEmail, setNewEmail] = useState<string>(props.newEmail);\n    const [currentPassword, setCurrentPassword] = useState<string>(props.currentPassword);\n    const [showPassword, setShowPassword] = useState<boolean>(false);\n\n    const validateChangeEmailForm = () => {\n        const newErrors: any = {};\n        if (!newEmail) {\n            newErrors.newEmail = 'New Email Address is required';\n        } else {\n            const emailRegex = new RegExp(regex.email);\n            if (!emailRegex.test(newEmail.trim())) {\n                newErrors.newEmail = Constants.errorStrings.emailErr;\n            }else if (newEmail.trim() === props.currentEmail) {\n                newErrors.newEmail = \"New Email Address and Current Email Address is same\";\n            }\n        }\n\n        if (!currentPassword) {\n            newErrors.currentPassword = 'Current Password is required';\n        }\n        //  else {\n        //     const passwordRegex = new RegExp(regex.password);\n        //     if (!passwordRegex.test(currentPassword.trim())) {\n        //         newErrors.currentPassword = Constants.errorStrings.passwordError;\n        //     }\n        // }\n\n        setErrors(newErrors);\n        return !Object.keys(newErrors)?.length;\n    }\n\n    const changeEmailHandler = async () => {\n        console.log(newEmail,\"newEmail\",newEmail.trim(),props.currentEmail,\"props.currentEmail\",\"qazx\",props.currentEmail.trim(),\"trim\")\n        if (validateChangeEmailForm()) {\n            const data = {\n                currentEmail: props.currentEmail,\n                newEmail: newEmail.trim(),\n                password: currentPassword.trim(),\n                user_type: storageService.getItem('userType'),\n            }\n            const res = await tradieChangeEmail(data);\n            if (res?.success) {\n                props.updateSteps(2, {newEmail: newEmail.trim(), currentPassword: currentPassword.trim()});\n            }\n        }\n    }\n    console.log(errors, \"errors new Email Modal\");\n\n    return (\n        <>\n            <div className=\"heading form_field\">\n                <div className=\"relate\">\n                    <button className=\"back\" onClick={props.backButtonHandler}></button>\n                    <div className=\"md_heading\">\n                        <span className=\"sub_title\">Change email</span>\n                        <span className=\"show_label\">Enter your password too and we will send you message to verify your new email</span>\n                    </div>\n                </div>\n                <button className=\"close_btn\" onClick={props.closeModalHandler}>\n                    <img src={cancel} alt=\"cancel\" />\n                </button>\n            </div>\n            <div className=\"inner_wrap\">\n                <div className=\"inner_wrappr\">\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">New Email</label>\n                        <div className=\"text_field\">\n                            <input type=\"text\" placeholder=\"Enter New Email\" value={newEmail} name='newEmail' onChange={(e: React.ChangeEvent<HTMLInputElement>) => setNewEmail(e.target.value)} />\n                        </div>\n                        {!!errors?.newEmail && <span className=\"error_msg\">{errors?.newEmail}</span>}\n                    </div>\n                    <div className=\"form_field\">\n                        <label className=\"form_label\">Current Password</label>\n                        <div className=\"text_field\">\n                            <input type={showPassword ? 'text' : 'password'} className=\"detect_input\" placeholder=\"Enter Current Password\" name='password' value={currentPassword} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setCurrentPassword(e.target.value)} />\n                            <span className=\"detect_icon\" onClick={() => setShowPassword(!showPassword)}>\n                                <img src={showPassword ? eyeIconOpen : eyeIconClose} />\n                            </span>\n                        </div>\n                        {!!errors?.currentPassword && <span className=\"error_msg\">{errors?.currentPassword}</span>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"bottom_btn custom_btn\">\n                <button className={`fill_btn full_btn btn-effect ${(newEmail && currentPassword) ? '' : 'disable_btn'}`} onClick={changeEmailHandler}>Next</button>\n            </div>\n        </>\n    )\n}\n\nexport default NewEmail;\n"]},"metadata":{},"sourceType":"module"}