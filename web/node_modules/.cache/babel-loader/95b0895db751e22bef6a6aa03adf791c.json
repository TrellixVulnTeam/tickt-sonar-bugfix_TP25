{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/cancelJobs/cancelJob.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport close from \"../../../../assets/images/icon-close-1.png\";\nimport { onFileUpload } from \"../../../../redux/auth/actions\";\nimport { setShowToast } from \"../../../../redux/common/actions\";\nimport { withRouter } from \"react-router-dom\"; //@ts-ignore\n\nimport FsLightbox from \"fslightbox-react\";\nimport { CancelJob } from \"../../../../redux/jobs/actions\";\nimport { JobCancelReasons } from \"../../../../utils/common\";\nimport { moengage, mixPanel } from \"../../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageFormats = [\"jpeg\", \"jpg\", \"png\"];\n\nconst LodgeDispute = props => {\n  _s();\n\n  const {\n    item: {\n      jobId,\n      jobName\n    },\n    history\n  } = props;\n  const [stateData, setStateData] = useState({\n    reason: 0,\n    detail: \"\",\n    upload: []\n  });\n  const [errorData, setErrorData] = useState({\n    reason: \"\",\n    detail: \"\",\n    upload: \"\"\n  });\n  const [filesUrl, setFilesUrl] = useState([]);\n  const [localFiles, setLocalFiles] = useState({});\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const {\n    reason,\n    detail\n  } = stateData;\n\n  const isValid = ({\n    name,\n    value,\n    title\n  }) => {\n    if (name === \"reason\") {\n      return value === 0 ? `${title} is required.` : \"\";\n    }\n\n    return !(value === null || value === void 0 ? void 0 : value.length) ? `${title} is required.` : \"\";\n  };\n\n  const checkErrors = () => {\n    let error_1 = isValid({\n      name: \"reason\",\n      value: reason,\n      title: \"Reason\"\n    });\n\n    if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  useEffect(() => {\n    setErrorData(prev => {\n      var _stateData$detail;\n\n      return { ...prev,\n        detail: (stateData === null || stateData === void 0 ? void 0 : (_stateData$detail = stateData.detail) === null || _stateData$detail === void 0 ? void 0 : _stateData$detail.length) > 1000 ? \"Maximum 1000 characters are allowed.\" : \"\"\n      };\n    });\n  }, [stateData]);\n\n  const removeFromItem = index => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async e => {\n    var _newFile$type, _newFile$type$split$;\n\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if ((filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) === 6) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    var fileType = newFile === null || newFile === void 0 ? void 0 : (_newFile$type = newFile.type) === null || _newFile$type === void 0 ? void 0 : (_newFile$type$split$ = _newFile$type.split(\"/\")[1]) === null || _newFile$type$split$ === void 0 ? void 0 : _newFile$type$split$.toLowerCase();\n    var selectedFileSize = (newFile === null || newFile === void 0 ? void 0 : newFile.size) / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    const res = await onFileUpload(formData);\n\n    if (res.success) {\n      let link = res.imgUrl;\n      let check_type = 1;\n      setFilesUrl(prev => [...prev, {\n        mediaType: check_type,\n        link: link\n      }]);\n      setLocalFiles(prev => ({ ...prev,\n        [filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length]: URL.createObjectURL(newFile)\n      }));\n    }\n  };\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderbyFileFormat = (item, index) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render = null;\n\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            setItemToggle(index);\n          },\n          title: get_split_name,\n          src: item,\n          alt: \"media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"img_video\",\n        children: [image_render, /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => {\n            removeFromItem(index);\n          },\n          src: close,\n          alt: \"remove\",\n          className: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data = {\n      jobId: jobId,\n      reason: reason\n    };\n\n    if (detail === null || detail === void 0 ? void 0 : detail.length) {\n      data[\"note\"] = detail;\n    }\n\n    let response = await CancelJob(data);\n\n    if (response === null || response === void 0 ? void 0 : response.success) {\n      const mData = {\n        timeStamp: moengage.getCurrentTimeStamp()\n      };\n      moengage.moE_SendEvent(MoEConstants.CANCEL_JOB, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.CANCEL_JOB, mData);\n      history.push(\"/cancel-job-success\");\n    }\n  };\n\n  const renderTypes = ({\n    id\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkbox_wrap agree_check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: reason,\n        onClick: () => {\n          setStateData(prev => ({ ...prev,\n            reason: id\n          }));\n        },\n        checked: reason === id,\n        name: \"Reason\",\n        className: \"filter-type filled-in\",\n        type: \"checkbox\",\n        id: `reason${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `reason${id}`,\n        children: JobCancelReasons(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderFilteredItems = () => {\n    let sources = [];\n    let types = [];\n\n    if (filesUrl === null || filesUrl === void 0 ? void 0 : filesUrl.length) {\n      filesUrl.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const {\n    sources,\n    types\n  } = renderFilteredItems();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex_row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relate\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.backTab(\"cancel\");\n          },\n          className: \"back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"xs_sub_title\",\n          children: jobName || \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Your reason for canceling job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"commn_para\",\n        children: \"Let the tradesperson and Tickt know why you are cancelling the job.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FsLightbox, {\n        toggler: toggler,\n        slide: selectedSlide,\n        sources: sources,\n        types: types\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reason_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: [renderTypes({\n            id: 1\n          }), renderTypes({\n            id: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: [renderTypes({\n            id: 3\n          }), renderTypes({\n            id: 4\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"f_spacebw\",\n          children: renderTypes({\n            id: 5\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex_col_sm_9\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form_label\",\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_field\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: detail,\n            onChange: e => {\n              setStateData(prev => ({ ...prev,\n                detail: e.target.value.trimLeft()\n              }));\n            },\n            placeholder: \"It\\u2019s really bad work, because...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error_msg\",\n          children: errorData.detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: `fill_btn full_btn btn-effect ${checkErrors() ? \"disable_btn\" : \"\"}`,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LodgeDispute, \"PY575t/VAwS748S+v2FXGfDdo28=\");\n\n_c = LodgeDispute;\nexport default _c2 = withRouter(LodgeDispute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LodgeDispute\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/cancelJobs/cancelJob.tsx"],"names":["React","useState","useEffect","close","onFileUpload","setShowToast","withRouter","FsLightbox","CancelJob","JobCancelReasons","moengage","mixPanel","MoEConstants","imageFormats","LodgeDispute","props","item","jobId","jobName","history","stateData","setStateData","reason","detail","upload","errorData","setErrorData","filesUrl","setFilesUrl","localFiles","setLocalFiles","update","forceUpdate","toggler","setToggler","selectedSlide","setSelectSlide","isValid","name","value","title","length","checkErrors","error_1","prev","removeFromItem","index","splice","Array","isArray","onFileChange","e","formData","FormData","newFile","target","files","fileType","type","split","toLowerCase","selectedFileSize","size","indexOf","includes","append","res","success","link","imgUrl","check_type","mediaType","URL","createObjectURL","setItemToggle","renderbyFileFormat","split_item_format","get_split_fromat","split_item_name","get_split_name","image_render","handleSubmit","data","response","mData","timeStamp","getCurrentTimeStamp","moE_SendEvent","CANCEL_JOB","mixP_SendEvent","push","renderTypes","id","renderFilteredItems","sources","types","forEach","backTab","trimLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport close from \"../../../../assets/images/icon-close-1.png\";\n\nimport { onFileUpload } from \"../../../../redux/auth/actions\";\nimport { setShowToast } from \"../../../../redux/common/actions\";\n\nimport { withRouter } from \"react-router-dom\";\n\n//@ts-ignore\nimport FsLightbox from \"fslightbox-react\";\nimport { CancelJob } from \"../../../../redux/jobs/actions\";\nimport { JobCancelReasons } from \"../../../../utils/common\";\nimport { moengage, mixPanel } from \"../../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../../utils/constants\";\n\nconst imageFormats: Array<any> = [\"jpeg\", \"jpg\", \"png\"];\n\nconst LodgeDispute = (props: any) => {\n  const {\n    item: { jobId, jobName },\n    history,\n  } = props;\n  const [stateData, setStateData] = useState({\n    reason: 0,\n    detail: \"\",\n    upload: [],\n  });\n  const [errorData, setErrorData] = useState({\n    reason: \"\",\n    detail: \"\",\n    upload: \"\",\n  });\n  const [filesUrl, setFilesUrl] = useState([] as any);\n  const [localFiles, setLocalFiles] = useState({});\n\n  const [update, forceUpdate] = useState({});\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n\n  const { reason, detail } = stateData;\n\n  const isValid = ({ name, value, title }: any) => {\n    if (name === \"reason\") {\n      return value === 0 ? `${title} is required.` : \"\";\n    }\n    return !value?.length ? `${title} is required.` : \"\";\n  };\n\n  const checkErrors = () => {\n    let error_1 = isValid({ name: \"reason\", value: reason, title: \"Reason\" });\n    if (!error_1?.length) {\n      return false;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    setErrorData((prev: any) => ({\n      ...prev,\n      detail:\n        stateData?.detail?.length > 1000\n          ? \"Maximum 1000 characters are allowed.\"\n          : \"\",\n    }));\n  }, [stateData]);\n\n  const removeFromItem = (index: any) => {\n    filesUrl.splice(index, 1);\n    setFilesUrl(filesUrl);\n    Array.isArray(update) ? forceUpdate([]) : forceUpdate({});\n  };\n\n  const onFileChange = async (e: any) => {\n    const formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if (filesUrl?.length === 6) {\n      setShowToast(true, \"Max files upload limit is 6\");\n      return;\n    }\n\n    var fileType = newFile?.type?.split(\"/\")[1]?.toLowerCase();\n    var selectedFileSize = newFile?.size / 1024 / 1024; // size in mib\n\n    if (imageFormats.indexOf(fileType) < 0 || selectedFileSize > 10) {\n      setShowToast(true, \"The file must be in proper format or size\");\n      return;\n    }\n\n    if (imageFormats.includes(fileType) && selectedFileSize > 10) {\n      // image validations\n      setShowToast(true, \"The image file size must be below 10 mb\");\n      return;\n    }\n\n    formData.append(\"file\", newFile);\n    const res = await onFileUpload(formData);\n    if (res.success) {\n      let link: string = res.imgUrl;\n      let check_type: any = 1;\n      setFilesUrl((prev: Array<any>) => [\n        ...prev,\n        {\n          mediaType: check_type,\n          link: link,\n        },\n      ]);\n      setLocalFiles((prev: any) => ({\n        ...prev,\n        [filesUrl?.length]: URL.createObjectURL(newFile),\n      }));\n    }\n  };\n\n  const setItemToggle = (index: any) => {\n    setToggler((prev: boolean) => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderbyFileFormat = (item: any, index: any) => {\n    let split_item_format = item.split(\".\");\n    let get_split_fromat = split_item_format[split_item_format.length - 1];\n\n    let split_item_name = item.split(\"/\");\n    let get_split_name = split_item_name[split_item_name.length - 1];\n    let image_render: any = null;\n    if (get_split_fromat) {\n      if (imageFormats.includes(get_split_fromat)) {\n        image_render = (\n          <img\n            onClick={() => {\n              setItemToggle(index);\n            }}\n            title={get_split_name}\n            src={item}\n            alt=\"media\"\n          />\n        );\n      }\n      return (\n        <figure className=\"img_video\">\n          {image_render}\n          <img\n            onClick={() => {\n              removeFromItem(index);\n            }}\n            src={close}\n            alt=\"remove\"\n            className=\"remove\"\n          />\n          {/* <span style={{ fontSize: '10px' }}>{get_split_name}</span> */}\n        </figure>\n      );\n    }\n  };\n\n  const handleSubmit = async () => {\n    let data: any = {\n      jobId: jobId,\n      reason: reason,\n    };\n\n    if (detail?.length) {\n      data[\"note\"] = detail;\n    }\n\n    let response: any = await CancelJob(data);\n    if (response?.success) {\n      const mData = {\n        timeStamp: moengage.getCurrentTimeStamp(),\n      };\n      moengage.moE_SendEvent(MoEConstants.CANCEL_JOB, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.CANCEL_JOB, mData);\n      history.push(\"/cancel-job-success\");\n    }\n  };\n\n  const renderTypes = ({ id }: any) => {\n    return (\n      <div className=\"checkbox_wrap agree_check\">\n        <input\n          value={reason}\n          onClick={() => {\n            setStateData((prev: any) => ({ ...prev, reason: id }));\n          }}\n          checked={reason === id}\n          name=\"Reason\"\n          className=\"filter-type filled-in\"\n          type=\"checkbox\"\n          id={`reason${id}`}\n        />\n        <label htmlFor={`reason${id}`}>{JobCancelReasons(id)}</label>\n      </div>\n    );\n  };\n\n  const renderFilteredItems = () => {\n    let sources: any = [];\n    let types: any = [];\n\n    if (filesUrl?.length) {\n      filesUrl.forEach((item: any) => {\n        if (item?.mediaType === 1) {\n          sources.push(item.link);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return { sources, types };\n  };\n\n  const { sources, types } = renderFilteredItems();\n  return (\n    <div className=\"flex_row\">\n      <div className=\"flex_col_sm_8\">\n        <div className=\"relate\">\n          <button\n            onClick={() => {\n              props.backTab(\"cancel\");\n            }}\n            className=\"back\"\n          ></button>\n          <span className=\"xs_sub_title\">{jobName || \"\"}</span>\n        </div>\n\n        <span className=\"sub_title\">{\"Your reason for canceling job\"}</span>\n        <p className=\"commn_para\">\n          {\n            \"Let the tradesperson and Tickt know why you are cancelling the job.\"\n          }\n        </p>\n\n        <FsLightbox\n          toggler={toggler}\n          slide={selectedSlide}\n          sources={sources}\n          types={types}\n        />\n\n        <div className=\"reason_wrap\">\n          <div className=\"f_spacebw\">\n            {renderTypes({ id: 1 })}\n            {renderTypes({ id: 2 })}\n          </div>\n          <div className=\"f_spacebw\">\n            {renderTypes({ id: 3 })}\n            {renderTypes({ id: 4 })}\n          </div>\n\n          <div className=\"f_spacebw\">{renderTypes({ id: 5 })}</div>\n        </div>\n      </div>\n\n      <div className=\"flex_col_sm_9\">\n        <div className=\"form_field\">\n          <label className=\"form_label\">Details</label>\n          <div className=\"text_field\">\n            <textarea\n              value={detail}\n              onChange={(e: any) => {\n                setStateData((prev: any) => ({\n                  ...prev,\n                  detail: e.target.value.trimLeft(),\n                }));\n              }}\n              placeholder=\"It’s really bad work, because...\"\n            ></textarea>\n          </div>\n          <span className=\"error_msg\">{errorData.detail}</span>\n        </div>\n        <button\n          onClick={handleSubmit}\n          className={`fill_btn full_btn btn-effect ${\n            checkErrors() ? \"disable_btn\" : \"\"\n          }`}\n        >\n          {\"Send\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(LodgeDispute);\n"]},"metadata":{},"sourceType":"module"}