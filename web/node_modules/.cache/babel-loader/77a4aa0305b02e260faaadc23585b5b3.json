{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/verifyPhoneNumber.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { callForgotPassword, verifyOtp } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport OtpInput from \"react-otp-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VerifyPhoneNumber = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [counter, setCounter] = useState(Constants.OTP_TIMER);\n  const [otp, setOTP] = useState('');\n\n  const changeHandler = newOtp => {\n    setOTP(newOtp);\n  };\n\n  useEffect(() => {\n    const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(timer);\n  }, [counter]);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!otp) {\n      newErrors.otp = Constants.errorStrings.otpEmpty;\n    } else {\n      const otpregex = new RegExp(regex.otp);\n\n      if (!otpregex.test(otp)) {\n        newErrors.otp = Constants.errorStrings.otpIncorrect;\n      }\n    }\n\n    setErrors(newErrors);\n    return !Object.keys(newErrors).length;\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const data = {\n        otp: otp\n      };\n      const res = await verifyOtp(data);\n\n      if (res.success) {\n        props.updateSteps(props.step + 1);\n      }\n    }\n  };\n\n  const resendHandler = async e => {\n    e.preventDefault();\n    const data = {\n      mobileNumber: props.mobileNumber\n    };\n    const res = await callForgotPassword(data);\n\n    if (res.success) {\n      setCounter(Constants.OTP_TIMER);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"show_label\",\n        children: \"Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otp_input_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(OtpInput, {\n          className: \"sms-no-box\",\n          inputStyle: {\n            \"width\": \"48px\"\n          },\n          value: otp,\n          onChange: changeHandler,\n          numInputs: 5,\n          isInputNum: true //separator={<span>-</span>}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: \"We have sent a verification code to your phone. Please check SMS and enter the 5-digit code here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), counter === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label\",\n          children: \"Don\\u2019t you receive any codes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"link\",\n          onClick: resendHandler,\n          children: \"Re-send code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 35\n      }, this), counter > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"show_label timer\",\n          children: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fill_btn btn-effect\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(VerifyPhoneNumber, \"JxbVA7j/6U7TBfkAsELR3eMJ5Ak=\");\n\n_c = VerifyPhoneNumber;\nexport default VerifyPhoneNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyPhoneNumber\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/components/verifyPhoneNumber.tsx"],"names":["useState","useEffect","callForgotPassword","verifyOtp","Constants","regex","OtpInput","VerifyPhoneNumber","props","errors","setErrors","counter","setCounter","OTP_TIMER","otp","setOTP","changeHandler","newOtp","timer","setInterval","clearInterval","validateForm","newErrors","errorStrings","otpEmpty","otpregex","RegExp","test","otpIncorrect","Object","keys","length","onSubmit","e","preventDefault","data","res","success","updateSteps","step","resendHandler","mobileNumber"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { callForgotPassword, verifyOtp } from '../../../redux/auth/actions';\nimport Constants from '../../../utils/constants';\nimport regex from '../../../utils/regex';\nimport OtpInput from \"react-otp-input\";\n\ninterface Propstype {\n    updateSteps: (num: number) => void\n    step: number\n    history?: any\n    mobileNumber: string\n}\n\nconst VerifyPhoneNumber = (props: Propstype) => {\n    const [errors, setErrors] = useState<any>({});\n    const [counter, setCounter] = useState(Constants.OTP_TIMER);\n    const [otp, setOTP] = useState('');\n\n    const changeHandler = (newOtp: any) => {\n        setOTP(newOtp)\n    }\n\n    useEffect(() => {\n        const timer: any = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n        return () => clearInterval(timer);\n    }, [counter]);\n\n    const validateForm = () => {\n        const newErrors: any = {};\n        if (!otp) {\n            newErrors.otp = Constants.errorStrings.otpEmpty;\n        } else {\n            const otpregex = new RegExp(regex.otp);\n            if (!otpregex.test(otp)) {\n                newErrors.otp = Constants.errorStrings.otpIncorrect;\n            }\n        }\n        setErrors(newErrors);\n        return !Object.keys(newErrors).length;\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (validateForm()) {\n            const data = {\n                otp: otp\n            }\n            const res: any = await verifyOtp(data)\n            if (res.success) {\n                props.updateSteps(props.step + 1)\n            }\n        }\n    }\n\n    const resendHandler = async (e: any) => {\n        e.preventDefault()\n        const data = {\n            mobileNumber: props.mobileNumber\n        }\n        const res: any = await callForgotPassword(data)\n        if (res.success) {\n            setCounter(Constants.OTP_TIMER)\n        }\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form onSubmit={onSubmit}>\n                <span className=\"show_label\">Verification Code</span>\n                <div className=\"otp_input_wrapper\">\n                    <OtpInput\n                        className=\"sms-no-box\"\n                        inputStyle={{ \"width\": \"48px\" }}\n                        value={otp}\n                        onChange={changeHandler}\n                        numInputs={5}\n                        isInputNum\n                    //separator={<span>-</span>}\n                    />\n                </div>\n                <div className=\"form_field\">\n                    <span className=\"show_label\">We have sent a verification code to your phone.\n                          Please check SMS and enter the 5-digit code here.</span>\n                </div>\n                {counter === 0 && <div className=\"form_field text-center\">\n                    <span className=\"show_label\">Don’t you receive any codes?</span>\n                    <a href=\"#\" className=\"link\" onClick={resendHandler}>Re-send code</a>\n                </div>}\n                {counter > 0 && <div className=\"form_field text-center\">\n                    <span className=\"show_label timer\">{counter}</span>\n                </div>}\n                <div className=\"form_field\">\n                    <button className=\"fill_btn btn-effect\">Next</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default VerifyPhoneNumber\n\n"]},"metadata":{},"sourceType":"module"}