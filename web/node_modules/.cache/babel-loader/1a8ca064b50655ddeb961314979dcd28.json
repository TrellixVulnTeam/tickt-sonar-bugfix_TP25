{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/initialSignupPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport storageService from '../../../utils/storageService'; //@ts-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InitialSignupPage = props => {\n  _s();\n\n  let window_ = window;\n  useEffect(() => {// prefetch();\n  }, []);\n  useEffect(() => {\n    if (window_ === null || window_ === void 0 ? void 0 : window_.Intercom) {\n      window_ === null || window_ === void 0 ? void 0 : window_.Intercom('update', {\n        \"hide_default_launcher\": true\n      });\n    }\n  }, [window_]);\n\n  const nextPageHandler = userType => {\n    var user_type = 1;\n\n    if (userType === 'builder') {\n      user_type = 2;\n    }\n\n    props.updateSteps(props.step + 1, {\n      user_type\n    });\n\n    if (user_type === 1) {\n      props.callTradeList();\n    }\n  };\n\n  const guestLoginClicked = e => {\n    e.preventDefault();\n    window.location.href = 'http://ticktwp.appskeeper.in/';\n    return;\n    var today = new Date();\n    var date = today.getFullYear() + \":\" + today.getMonth() + \":\" + today.getDate() + \":\" + today.getMinutes() + \":\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \":\" + today.getMilliseconds();\n    storageService.setItem(\"guestToken\", date);\n    storageService.setItem(\"userType\", 0);\n    props.history.push('/guest-user');\n  };\n\n  const phoneViewHandler = e => {\n    e.preventDefault();\n\n    if (props.showModal) {\n      props.modalUpdateSteps(0);\n      return;\n    }\n\n    props.history.push('/login');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fill_btn btn-effect\",\n        onClick: () => nextPageHandler('builder'),\n        children: \"I\\u2019m a builder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"show_label text-center\",\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"fill_grey_btn btn-effect\",\n        onClick: () => nextPageHandler('tradie'),\n        children: \"I\\u2019m a tradesperson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), !props.showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"link\",\n        onClick: guestLoginClicked,\n        children: \"Login as Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form_field hide text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"reg\",\n        children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"link\",\n          onClick: phoneViewHandler,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InitialSignupPage, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = InitialSignupPage;\nexport default InitialSignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitialSignupPage\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/initialSignupPage.tsx"],"names":["React","useEffect","storageService","InitialSignupPage","props","window_","window","Intercom","nextPageHandler","userType","user_type","updateSteps","step","callTradeList","guestLoginClicked","e","preventDefault","location","href","today","Date","date","getFullYear","getMonth","getDate","getMinutes","getHours","getSeconds","getMilliseconds","setItem","history","push","phoneViewHandler","showModal","modalUpdateSteps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport storageService from '../../../utils/storageService';\n//@ts-ignore\nimport Intercom from 'intercom-client';\n\n\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void,\n    step: number,\n    history: any,\n    showModal: boolean,\n    modalUpdateSteps: (data: any) => void,\n    callTradeList: () => void,\n}\n\nconst InitialSignupPage = (props: Propstype) => {\n    let window_: any = window;\n\n    useEffect(() => {\n        // prefetch();\n    }, [])\n\n    useEffect(() => {\n        if (window_?.Intercom) {\n            window_?.Intercom('update', {\n                \"hide_default_launcher\": true\n            });\n        }\n    }, [window_])\n\n    const nextPageHandler = (userType: string) => {\n        var user_type = 1\n        if (userType === 'builder') {\n            user_type = 2\n        }\n        props.updateSteps(props.step + 1, { user_type });\n        if (user_type === 1) {\n            props.callTradeList();\n        }\n    }\n\n    const guestLoginClicked = (e: any) => {\n        e.preventDefault();\n        window.location.href = 'http://ticktwp.appskeeper.in/';\n        return;\n        var today = new Date();\n        var date = today.getFullYear() + \":\" + today.getMonth() + \":\" + today.getDate() + \":\" + today.getMinutes() + \":\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \":\" + today.getMilliseconds();\n        storageService.setItem(\"guestToken\", date)\n        storageService.setItem(\"userType\", 0)\n        props.history.push('/guest-user');\n    }\n\n    const phoneViewHandler = (e: any) => {\n        e.preventDefault();\n        if (props.showModal) {\n            props.modalUpdateSteps(0)\n            return;\n        }\n        props.history.push('/login')\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <div className=\"form_field\"><button className=\"fill_btn btn-effect\" onClick={() => nextPageHandler('builder')}>I’m a builder</button></div>\n            <div className=\"form_field text-center\"><span className=\"show_label text-center\">or</span></div>\n            <div className=\"form_field\"><button className=\"fill_grey_btn btn-effect\" onClick={() => nextPageHandler('tradie')}>I’m a tradesperson</button></div>\n            {!props.showModal && <div className=\"form_field text-center\"><a className=\"link\" onClick={guestLoginClicked}>Login as Guest</a></div>}\n\n            <div className=\"form_field hide text-center\">\n                <span className=\"reg\">Have an account? <a className=\"link\" onClick={phoneViewHandler}>Login</a></span>\n            </div>\n        </div>\n    )\n}\n\nexport default InitialSignupPage\n"]},"metadata":{},"sourceType":"module"}