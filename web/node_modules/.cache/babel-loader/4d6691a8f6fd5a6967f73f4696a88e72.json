{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/markMilestone.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { setShowToast } from '../../../redux/common/actions';\nimport UploadMedia from '../../postJob/components/uploadMedia';\nimport { renderTime } from '../../../utils/common';\nimport LodgeDispute from './lodgeDispute/lodgeDispute';\nimport CancelJobs from './cancelJobs/cancelJob'; //@ts-ignore\n\nimport FsLightbox from 'fslightbox-react';\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport editIconBlue from '../../../assets/images/ic-edit-blue.png';\nimport more from '../../../assets/images/icon-direction-right.png';\nimport check from '../../../assets/images/checked-2.png';\nimport Carousel from 'react-multi-carousel';\nimport \"react-multi-carousel/lib/styles.css\";\nimport storageService from '../../../utils/storageService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst declinedImages = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1200\n    },\n    items: 2,\n    slidesToSlide: 1 // optional, default to 1.\n\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 768\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 650,\n      min: 0\n    },\n    items: 1\n  }\n};\n\nconst MarkMilestone = ({\n  getMilestoneList,\n  milestoneList,\n  showJobCompletePage,\n  showMilestoneCompletePage,\n  getBankDetails,\n  addBankDetails,\n  updateBankDetails,\n  removeBankDetails,\n  markMilestoneComplete,\n  bankDetails\n}) => {\n  _s();\n\n  var _history$location;\n\n  const history = useHistory();\n  let params = new URLSearchParams((_history$location = history.location) === null || _history$location === void 0 ? void 0 : _history$location.search);\n  params = {\n    jobId: params.get('jobId'),\n    tradeId: params.get('tradeId'),\n    specializationId: params.get('specializationId')\n  };\n  const defaultData = {\n    urls: [],\n    description: '',\n    actualHours: '',\n    totalAmount: '0',\n    account_name: '',\n    account_number: '',\n    bsb_number: ''\n  };\n  const [data, setData] = useState(defaultData);\n  const [errors, setErrors] = useState({\n    actualHours: '',\n    account_name: '',\n    account_number: '',\n    bsb_number: ''\n  });\n  const [step, setStep] = useState(1);\n  const [stepCompleted, setStepCompleted] = useState([]);\n  const [isLastMilestone, setIsLastMilestone] = useState(false);\n  const [milestoneIndex, setMilestoneIndex] = useState(0);\n  const [readOnly, setReadOnly] = useState(false);\n  const [toggleItem, setToggleItem] = useState({\n    edit: false,\n    cancel: false,\n    lodge: false\n  });\n  const [milestoneDeclineData, setMilestoneDeclineData] = useState({\n    multipleDeclineListCount: 0,\n    prevMilestoneDeclineId: '',\n    currentMilestoneDeclineId: ''\n  });\n  const [mediaList, setMediaList] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  useEffect(() => {\n    var _history$location2;\n\n    const params = new URLSearchParams((_history$location2 = history.location) === null || _history$location2 === void 0 ? void 0 : _history$location2.search);\n    const jobActionType = params.get('jobAction');\n\n    if (jobActionType === 'dispute') {\n      setToggleItem(prev => ({ ...prev,\n        lodge: true\n      }));\n    } else if (jobActionType === 'cancel') {\n      setToggleItem(prev => ({ ...prev,\n        cancel: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    getMilestoneList(params.jobId);\n    getBankDetails();\n  }, [params.jobId, getMilestoneList, getBankDetails]);\n  useEffect(() => {\n    setData(prevData => ({ ...prevData,\n      ...bankDetails\n    }));\n    setReadOnly(!!(bankDetails === null || bankDetails === void 0 ? void 0 : bankDetails.userId));\n  }, [bankDetails]);\n\n  const validateActualHours = value => {\n    if (!value) {\n      return 'Time Spent is required.';\n    }\n\n    let pattern = \"^([0-9]?[0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\n\n    if (value.match(pattern) !== null) {\n      if (!(+value.split(':')[1] % 5 === 0)) {\n        return 'Time should be in mutiples of 5 like 10:05, 10:10';\n      }\n\n      return '';\n    }\n\n    return 'Please enter a valid pattern like : 10:05'; // '([0-9]?[0-9]{1}|2[0-9]{1}|3[0-9]{1}|4[0-9]{1}|5[0-9]{1}|6[0-9]{1}):[0-5]{1}[0-9]{1}';\n    // return 'Hours should be in hh:mm format.';\n  };\n\n  const errorLabel = {\n    'account_number': 'Account Number',\n    'account_name': 'Account Name',\n    'bsb_number': 'BSB Number'\n  };\n\n  const validateBankDetails = (name, value) => {\n    if (!value) {\n      return `${errorLabel[name]} is required`;\n    }\n\n    switch (name) {\n      case 'account_number':\n        return value.length > 10 ? 'Maximum 10 digits are allowed' : value.length < 6 ? 'Minimum 6 digits are required' : '';\n\n      case 'bsb_number':\n        return !/^\\d{3}-\\d{3}$/.test(value) ? 'Please enter valid BSB Number like 123-444' : '';\n    }\n\n    return '';\n  };\n\n  const handleChange = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    setData(prevData => ({ ...prevData,\n      [name]: value\n    }));\n\n    if (step === 3 && stepCompleted.includes(3)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        [name]: validateActualHours(value)\n      }));\n    }\n\n    if (step === 5 && stepCompleted.includes(5)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        [name]: validateBankDetails(name, value)\n      }));\n    }\n  };\n\n  const {\n    jobId,\n    jobName,\n    milestones,\n    postedBy\n  } = milestoneList || {};\n  const {\n    builderId,\n    builderImage,\n    builderName,\n    reviews,\n    ratings\n  } = postedBy || {};\n  const hoursMinutes = data.actualHours.split(':').map(key => parseInt(key));\n  const totalAmount = (milestones === null || milestones === void 0 ? void 0 : milestones[milestoneIndex].amount) * ((milestones === null || milestones === void 0 ? void 0 : milestones[milestoneIndex].pay_type) === 'Fixed price' ? 1 : (hoursMinutes === null || hoursMinutes === void 0 ? void 0 : hoursMinutes[0]) + (hoursMinutes === null || hoursMinutes === void 0 ? void 0 : hoursMinutes[1]) / 60);\n  useEffect(() => {\n    const multipleList = milestones === null || milestones === void 0 ? void 0 : milestones.filter(({\n      status\n    }) => status === 3);\n\n    if ((multipleList === null || multipleList === void 0 ? void 0 : multipleList.length) > 1) {\n      var _list$declinedReason;\n\n      const list = milestones === null || milestones === void 0 ? void 0 : milestones.find(({\n        status\n      }) => status === 3);\n      setMilestoneDeclineData(prevData => ({ ...prevData,\n        multipleDeclineListCount: multipleList === null || multipleList === void 0 ? void 0 : multipleList.length,\n        prevMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId,\n        currentMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId\n      }));\n      setMediaList(list === null || list === void 0 ? void 0 : (_list$declinedReason = list.declinedReason) === null || _list$declinedReason === void 0 ? void 0 : _list$declinedReason.url);\n    } else if ((multipleList === null || multipleList === void 0 ? void 0 : multipleList.length) === 1) {\n      var _list$declinedReason2;\n\n      const list = milestones === null || milestones === void 0 ? void 0 : milestones.find(({\n        status\n      }) => status === 3);\n      setMilestoneDeclineData(prevData => ({ ...prevData,\n        multipleDeclineListCount: multipleList === null || multipleList === void 0 ? void 0 : multipleList.length,\n        prevMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId,\n        currentMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId\n      }));\n      setMediaList(list === null || list === void 0 ? void 0 : (_list$declinedReason2 = list.declinedReason) === null || _list$declinedReason2 === void 0 ? void 0 : _list$declinedReason2.url);\n    }\n  }, [milestones]);\n  console.log(milestoneDeclineData, \"milestoneDeclineData\");\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderFilteredItems = () => {\n    let sources = [];\n    let types = [];\n\n    if (mediaList === null || mediaList === void 0 ? void 0 : mediaList.length) {\n      mediaList.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n          sources.push(item.link);\n          types.push('video');\n        } else if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push('image');\n        } else {\n          sources.push(item);\n          types.push('image');\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const backTab = name => {\n    var _history$location3;\n\n    const params = new URLSearchParams((_history$location3 = history.location) === null || _history$location3 === void 0 ? void 0 : _history$location3.search);\n    const jobActionType = params.get('jobAction');\n\n    if (jobActionType) {\n      history.goBack();\n      return;\n    }\n\n    setToggleItem(prev => ({ ...prev,\n      [name]: false\n    }));\n  };\n\n  if (toggleItem === null || toggleItem === void 0 ? void 0 : toggleItem.lodge) {\n    return /*#__PURE__*/_jsxDEV(LodgeDispute, {\n      item: {\n        jobId: jobId,\n        jobName: jobName\n      },\n      backTab: backTab,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (toggleItem === null || toggleItem === void 0 ? void 0 : toggleItem.cancel) {\n    return /*#__PURE__*/_jsxDEV(CancelJobs, {\n      item: {\n        jobId: jobId,\n        jobName: jobName\n      },\n      backTab: backTab,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    sources,\n    types\n  } = renderFilteredItems();\n  let page = null;\n\n  const renderSteps = () => {\n    var _milestones$sort;\n\n    switch (step) {\n      case 1:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => history.push('/active-jobs')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot_menu\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: editIconBlue,\n                  alt: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit_menu\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => {\n                        setToggleItem(prev => ({ ...prev,\n                          lodge: true\n                        }));\n                      },\n                      className: \"icon lodge\",\n                      children: \"Lodge dispute\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => {\n                        setToggleItem(prev => ({ ...prev,\n                          cancel: true\n                        }));\n                      },\n                      className: \"icon delete\",\n                      children: \"Cancel job\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: \"Your job point of contact has indicated they want to be notified when you reach the following milestones. Tap the milestone and Submit when a milestone is completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), milestoneDeclineData.multipleDeclineListCount > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"declined_info hvr-ripple-out\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: `${milestoneDeclineData.multipleDeclineListCount} Milestones were declined`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 69\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"milestones_check\",\n              children: milestones === null || milestones === void 0 ? void 0 : (_milestones$sort = milestones.sort(({\n                order: prevOrder\n              }, {\n                order\n              }) => prevOrder - order)) === null || _milestones$sort === void 0 ? void 0 : _milestones$sort.map(({\n                milestoneId,\n                milestoneName,\n                isPhotoevidence,\n                status,\n                fromDate,\n                toDate,\n                declinedReason,\n                declinedCount\n              }, index) => {\n                var _milestones, _Object$keys, _declinedReason$url, _declinedReason$url2;\n\n                // As discussed now we take this status 4 as status 0 bacause after the decline on the change-request the status becomes 4.\n                const prevMilestoneStatus = (_milestones = milestones[index - 1]) === null || _milestones === void 0 ? void 0 : _milestones.status;\n                const isActive = (status === 0 || status === 4 || status === 5) && ([1, 2].includes(prevMilestoneStatus) || prevMilestoneStatus === undefined);\n                const isDeclined = status === 3;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: [1, 2].includes(status) ? `check` : isActive ? 'active' : status === 3 ? 'declined' : 'disabled',\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"circle_stepper\",\n                    onClick: () => {\n                      setMediaList(declinedReason === null || declinedReason === void 0 ? void 0 : declinedReason.url);\n                      setMilestoneDeclineData(prevData => ({ ...prevData,\n                        currentMilestoneDeclineId: milestoneId\n                      }));\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 368,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: `${milestoneName} ${status === 3 ? 'declined' : ''}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 27\n                    }, this), isPhotoevidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Photo evidence required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: renderTime(fromDate, toDate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 375,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 25\n                  }, this), isDeclined && milestoneDeclineData.currentMilestoneDeclineId === milestoneId && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [((_Object$keys = Object.keys(declinedReason)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"decline_reason\",\n                      children: [/*#__PURE__*/_jsxDEV(FsLightbox, {\n                        toggler: toggler,\n                        slide: selectedSlide,\n                        sources: sources,\n                        types: types\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form_label\",\n                        children: \"Decline reason:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 390,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text_field\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"commn_para\",\n                          children: declinedReason === null || declinedReason === void 0 ? void 0 : declinedReason.reason\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 392,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 391,\n                        columnNumber: 31\n                      }, this), (declinedReason === null || declinedReason === void 0 ? void 0 : (_declinedReason$url = declinedReason.url) === null || _declinedReason$url === void 0 ? void 0 : _declinedReason$url.length) > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n                        className: \"decline_media\",\n                        responsive: declinedImages,\n                        showDots: false,\n                        arrows: true,\n                        children: declinedReason === null || declinedReason === void 0 ? void 0 : (_declinedReason$url2 = declinedReason.url) === null || _declinedReason$url2 === void 0 ? void 0 : _declinedReason$url2.map((image, index) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"upload_img_video\",\n                            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                              className: \"img_video\",\n                              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                src: image,\n                                alt: \"image\",\n                                onClick: () => setItemToggle(index)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 406,\n                                columnNumber: 43\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 405,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 404,\n                            columnNumber: 39\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 383,\n                      columnNumber: 73\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        if (declinedCount >= 5) {\n                          setShowToast(true, 'You have exceeded maximum number of chances to submit the milestone');\n                          return;\n                        }\n\n                        setMilestoneIndex(index);\n\n                        if (index === (milestones === null || milestones === void 0 ? void 0 : milestones.length) - 1) {\n                          setIsLastMilestone(true);\n                        }\n\n                        if (isPhotoevidence) {\n                          setStep(2);\n                        } else {\n                          setStep(3);\n                        }\n                      },\n                      className: `fill_btn full_btn btn-effect ${milestoneDeclineData.prevMilestoneDeclineId !== milestoneId ? 'disable_btn' : ''}`,\n                      children: \"Remark as Complete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), isActive && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"fill_btn full_btn btn-effect\",\n                    onClick: () => {\n                      setMilestoneIndex(index);\n\n                      if (index === (milestones === null || milestones === void 0 ? void 0 : milestones.length) - 1) {\n                        setIsLastMilestone(true);\n                      }\n\n                      if (isPhotoevidence) {\n                        setStep(2);\n                      } else {\n                        setStep(3);\n                      }\n                    },\n                    children: \"Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 27\n                  }, this)]\n                }, milestoneId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_6 col_ruler\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Posted by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tradie_card posted_by view_more \",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"javascript:void(0)\",\n                className: \"chat circle\",\n                onClick: e => {\n                  var _storageService$getIt;\n\n                  e.preventDefault();\n                  history.push({\n                    pathname: `/chat`,\n                    state: {\n                      tradieId: (_storageService$getIt = storageService.getItem('userInfo')) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id,\n                      builderId: builderId,\n                      jobId: jobId,\n                      jobName: jobName\n                    }\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user_wrap\",\n                onClick: () => history.push(`/builder-info?builderId=${builderId}`),\n                children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"u_img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: builderImage || dummy,\n                    alt: \"traide-img\",\n                    onError: e => {\n                      var _e$target, _e$target2;\n\n                      if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                        e.target.onerror = null;\n                      }\n\n                      if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                        e.target.src = dummy;\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: builderName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating\",\n                    children: [ratings, \" , \", reviews, \" reviews\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: \"Job details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edit_icon\",\n                title: \"More\",\n                onClick: () => history.push(`/job-details-page?jobId=${params.jobId}&redirect_from=jobs`),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: more,\n                  alt: \"more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case 2:\n        return page = /*#__PURE__*/_jsxDEV(UploadMedia, {\n          jobName: jobName,\n          title: \"Photo required\",\n          para: \"Your job point of contact has indicated they want to be notified when you reach the following milestones. Tap the milestone and Submit when a milestone is completed\",\n          stepCompleted: stepCompleted.includes(2),\n          data: data,\n          handleStepBack: () => setStep(1),\n          handleStepForward: () => {},\n          handleStepComplete: stepData => {\n            setData(prevData => ({ ...prevData,\n              ...stepData\n            }));\n            setStepCompleted(prevValue => prevValue.concat([2]));\n            setStep(3);\n          },\n          hasDescription: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case 3:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => {\n                  var _milestones$milestone;\n\n                  if ((_milestones$milestone = milestones[milestoneIndex]) === null || _milestones$milestone === void 0 ? void 0 : _milestones$milestone.isPhotoevidence) {\n                    setStep(2);\n                  } else {\n                    setStep(1);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Worked hours in this milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: \"The amount paid will be recalculated based on approval of the actual hours by the Builder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Time Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field time_spent\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"hh:mm\",\n                  name: \"actualHours\",\n                  value: data.actualHours,\n                  onChange: handleChange,\n                  maxLength: 5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detect_icon\",\n                  children: \"hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.actualHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: () => {\n                setStepCompleted(prevValue => prevValue.concat([3]));\n                const error = validateActualHours(data.actualHours);\n\n                if (error) {\n                  setErrors(prevErrors => ({ ...prevErrors,\n                    actualHours: error\n                  }));\n                } else {\n                  setStep(4);\n                }\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case 4:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_7\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => setStep(3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: isLastMilestone ? 'Job Complete' : 'Add payment details'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: isLastMilestone ? 'Please enter your prefered payment method below so your point of contact can organise payment' : 'You need to add your bank account details for payment from the builder after approving this milestone'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), isLastMilestone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"f_spacebw total_payment\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", totalAmount === null || totalAmount === void 0 ? void 0 : totalAmount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn bank_btn\",\n              children: [data.userId && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: check,\n                alt: \"check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 33\n              }, this), \" Bank account\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_9\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"payment_note\",\n                children: [\"Tickt does not store your payment information.\", ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: [' ', \"Tickt does not handle payment for jobs, we only facilitate communication between tradies and builders. If you have problems receiving your payment, please contact your builder.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: () => setStep(5),\n              children: data.userId ? 'Continue' : 'Add Details'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this);\n        break;\n\n      case 5:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => setStep(4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this), (data === null || data === void 0 ? void 0 : data.userId) && readOnly && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit_delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"edit\",\n                    title: \"Edit\",\n                    onClick: () => setReadOnly(!readOnly)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"delete\",\n                    title: \"Remove\",\n                    onClick: () => removeBankDetails()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Payment Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: \"Enter your bank account details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter Account Name\",\n                  name: \"account_name\",\n                  value: data.account_name,\n                  onChange: handleChange,\n                  maxLength: 50,\n                  readOnly: readOnly\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.account_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Enter Account Number\",\n                  name: \"account_number\",\n                  value: data.account_number,\n                  onChange: handleChange,\n                  maxLength: 10,\n                  max: 9999999999,\n                  readOnly: readOnly\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.account_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"BSB Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter BSB Number\",\n                  name: \"bsb_number\",\n                  value: data.bsb_number,\n                  onChange: handleChange,\n                  maxLength: 7,\n                  readOnly: readOnly\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 711,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.bsb_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: readOnly ? () => {\n                const callback = jobCompletedCount => {\n                  if (isLastMilestone) {\n                    showJobCompletePage(jobCompletedCount);\n                  } else {\n                    setStepCompleted([]);\n                    setData(defaultData);\n                    showMilestoneCompletePage();\n                  }\n                };\n\n                const milestoneData = {\n                  evidence: milestones[milestoneIndex].isPhotoevidence ? data.urls : undefined,\n                  jobId: params.jobId,\n                  milestoneId: milestones[milestoneIndex].milestoneId,\n                  description: milestones[milestoneIndex].isPhotoevidence ? data.description : undefined,\n                  actualHours: data.actualHours,\n                  totalAmount: `${totalAmount === null || totalAmount === void 0 ? void 0 : totalAmount.toFixed(2)}`\n                };\n                markMilestoneComplete(milestoneData, callback);\n              } : () => {\n                setStepCompleted(prevValue => prevValue.concat([5]));\n                const hasErrors = ['account_name', 'account_number', 'bsb_number'].reduce((prevValue, name) => {\n                  const error = validateBankDetails(name, data[name]);\n                  setErrors(prevErrors => ({ ...prevErrors,\n                    [name]: error\n                  }));\n                  return prevValue || error;\n                }, '');\n                const updatedBankDetails = {\n                  account_name: data.account_name,\n                  account_number: data.account_number,\n                  bsb_number: data.bsb_number\n                };\n\n                if (!hasErrors) {\n                  if (bankDetails.userId) {\n                    updateBankDetails({\n                      userId: data.userId,\n                      ...updatedBankDetails\n                    });\n                  } else {\n                    addBankDetails(updatedBankDetails);\n                  }\n                }\n              },\n              children: readOnly ? 'Continue' : 'Save changes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this);\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: renderSteps()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 795,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MarkMilestone, \"/dz/KazsmuKkEjxhYLPVSZ1j7eQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = MarkMilestone;\nexport default MarkMilestone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkMilestone\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/markMilestone.tsx"],"names":["useEffect","useState","useHistory","setShowToast","UploadMedia","renderTime","LodgeDispute","CancelJobs","FsLightbox","dummy","editIconBlue","more","check","Carousel","storageService","declinedImages","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","MarkMilestone","getMilestoneList","milestoneList","showJobCompletePage","showMilestoneCompletePage","getBankDetails","addBankDetails","updateBankDetails","removeBankDetails","markMilestoneComplete","bankDetails","history","params","URLSearchParams","location","search","jobId","get","tradeId","specializationId","defaultData","urls","description","actualHours","totalAmount","account_name","account_number","bsb_number","data","setData","errors","setErrors","step","setStep","stepCompleted","setStepCompleted","isLastMilestone","setIsLastMilestone","milestoneIndex","setMilestoneIndex","readOnly","setReadOnly","toggleItem","setToggleItem","edit","cancel","lodge","milestoneDeclineData","setMilestoneDeclineData","multipleDeclineListCount","prevMilestoneDeclineId","currentMilestoneDeclineId","mediaList","setMediaList","toggler","setToggler","selectedSlide","setSelectSlide","jobActionType","prev","prevData","userId","validateActualHours","value","pattern","match","split","errorLabel","validateBankDetails","name","length","test","handleChange","target","includes","prevErrors","jobName","milestones","postedBy","builderId","builderImage","builderName","reviews","ratings","hoursMinutes","map","key","parseInt","amount","pay_type","multipleList","filter","status","list","find","milestoneId","declinedReason","url","console","log","setItemToggle","index","renderFilteredItems","sources","types","forEach","item","mediaType","push","link","backTab","goBack","page","renderSteps","sort","order","prevOrder","milestoneName","isPhotoevidence","fromDate","toDate","declinedCount","prevMilestoneStatus","isActive","undefined","isDeclined","Object","keys","reason","image","e","preventDefault","pathname","state","tradieId","getItem","_id","onerror","src","stepData","prevValue","concat","error","toFixed","callback","jobCompletedCount","milestoneData","evidence","hasErrors","reduce","updatedBankDetails"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { format } from 'date-fns';\nimport { setShowToast } from '../../../redux/common/actions';\nimport UploadMedia from '../../postJob/components/uploadMedia';\nimport { renderTime } from '../../../utils/common';\nimport LodgeDispute from './lodgeDispute/lodgeDispute';\nimport CancelJobs from './cancelJobs/cancelJob'\n\n//@ts-ignore\nimport FsLightbox from 'fslightbox-react';\n\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport editIconBlue from '../../../assets/images/ic-edit-blue.png';\nimport removeIconBlue from '../../../assets/images/ic-cancel-blue.png';\nimport more from '../../../assets/images/icon-direction-right.png';\nimport check from '../../../assets/images/checked-2.png';\nimport Carousel from 'react-multi-carousel';\nimport \"react-multi-carousel/lib/styles.css\";\n\nimport storageService from '../../../utils/storageService';\n\n\nconst declinedImages = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1200 },\n    items: 2,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 768 },\n    items: 1\n  },\n  mobile: {\n    breakpoint: { max: 650, min: 0 },\n    items: 1\n  }\n};\n\ninterface BuilderDetails {\n  builderId: string;\n  builderImage: string;\n  builderName: string;\n  ratings: number;\n  reviews: number;\n}\n\ninterface JobDetails {\n  jobId: string;\n  jobName: string;\n  milestones: Array<any>;\n  postedBy: BuilderDetails;\n}\n\ninterface BankDetails {\n  userId: string;\n  account_name: string;\n  account_number: string;\n  bsb_number: string;\n}\ninterface Proptypes {\n  getMilestoneList: (jobId: string) => void;\n  milestoneList: JobDetails;\n  showMilestoneCompletePage: () => void;\n  showJobCompletePage: (jobCompletedCount: number) => void;\n  addBankDetails: (data: any) => void;\n  updateBankDetails: (data: any) => void;\n  getBankDetails: () => void;\n  removeBankDetails: () => void;\n  markMilestoneComplete: (data: any, callback: (jobCompletedCount: number) => void) => void;\n  bankDetails: BankDetails;\n}\n\nconst MarkMilestone = ({\n  getMilestoneList,\n  milestoneList,\n  showJobCompletePage,\n  showMilestoneCompletePage,\n  getBankDetails,\n  addBankDetails,\n  updateBankDetails,\n  removeBankDetails,\n  markMilestoneComplete,\n  bankDetails,\n}: Proptypes) => {\n  const history: any = useHistory();\n  let params: any = new URLSearchParams(history.location?.search);\n  params = {\n    jobId: params.get('jobId'),\n    tradeId: params.get('tradeId'),\n    specializationId: params.get('specializationId'),\n  };\n\n  const defaultData = {\n    urls: [],\n    description: '',\n    actualHours: '',\n    totalAmount: '0',\n    account_name: '',\n    account_number: '',\n    bsb_number: '',\n  };\n  const [data, setData] = useState<any>(defaultData);\n  const [errors, setErrors] = useState({\n    actualHours: '',\n    account_name: '',\n    account_number: '',\n    bsb_number: '',\n  });\n  const [step, setStep] = useState(1);\n  const [stepCompleted, setStepCompleted] = useState<Array<number>>([]);\n  const [isLastMilestone, setIsLastMilestone] = useState(false);\n  const [milestoneIndex, setMilestoneIndex] = useState(0);\n  const [readOnly, setReadOnly] = useState(false);\n  const [toggleItem, setToggleItem] = useState<{ [index: string]: boolean }>({ edit: false, cancel: false, lodge: false });\n  const [milestoneDeclineData, setMilestoneDeclineData] = useState<any>({\n    multipleDeclineListCount: 0,\n    prevMilestoneDeclineId: '',\n    currentMilestoneDeclineId: '',\n  });\n  const [mediaList, setMediaList] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n\n  useEffect(() => {\n    const params = new URLSearchParams(history.location?.search);\n    const jobActionType: any = params.get('jobAction');\n    if (jobActionType === 'dispute') {\n      setToggleItem((prev: any) => ({ ...prev, lodge: true }));\n    } else if (jobActionType === 'cancel') {\n      setToggleItem((prev: any) => ({ ...prev, cancel: true }));\n    }\n  }, []);\n\n  useEffect(() => {\n    getMilestoneList(params.jobId);\n    getBankDetails();\n  }, [params.jobId, getMilestoneList, getBankDetails]);\n\n  useEffect(() => {\n    setData((prevData: any) => ({\n      ...prevData,\n      ...bankDetails,\n    }));\n\n    setReadOnly(!!bankDetails?.userId);\n  }, [bankDetails]);\n\n  const validateActualHours = (value: any) => {\n    if (!value) {\n      return 'Time Spent is required.';\n    }\n\n    let pattern = \"^([0-9]?[0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\n    if (value.match(pattern) !== null) {\n      if (!((+value.split(':')[1]) % 5 === 0)) {\n        return 'Time should be in mutiples of 5 like 10:05, 10:10';\n      }\n      return '';\n    }\n    return 'Please enter a valid pattern like : 10:05';\n    // '([0-9]?[0-9]{1}|2[0-9]{1}|3[0-9]{1}|4[0-9]{1}|5[0-9]{1}|6[0-9]{1}):[0-5]{1}[0-9]{1}';\n    // return 'Hours should be in hh:mm format.';\n  };\n\n  const errorLabel = {\n    'account_number': 'Account Number',\n    'account_name': 'Account Name',\n    'bsb_number': 'BSB Number',\n  } as { [key: string]: string };\n\n  const validateBankDetails = (name: string, value: string) => {\n    if (!value) {\n      return `${errorLabel[name]} is required`;\n    }\n\n    switch (name) {\n      case 'account_number':\n        return value.length > 10 ? 'Maximum 10 digits are allowed' : value.length < 6 ? 'Minimum 6 digits are required' : '';\n      case 'bsb_number':\n        return !/^\\d{3}-\\d{3}$/.test(value) ? 'Please enter valid BSB Number like 123-444' : '';\n    }\n\n    return '';\n  };\n\n  const handleChange = ({ target: { name, value } }: any) => {\n    setData((prevData: any) => ({\n      ...prevData,\n      [name]: value,\n    }));\n\n    if (step === 3 && stepCompleted.includes(3)) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: validateActualHours(value),\n      }));\n    }\n\n    if (step === 5 && stepCompleted.includes(5)) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: validateBankDetails(name, value),\n      }));\n    }\n  };\n\n\n  const { jobId, jobName, milestones, postedBy } = milestoneList || {};\n  const { builderId, builderImage, builderName, reviews, ratings } = postedBy || {};\n\n  const hoursMinutes = data.actualHours.split(':').map((key: string) => parseInt(key));\n  const totalAmount = milestones?.[milestoneIndex].amount * (milestones?.[milestoneIndex].pay_type === 'Fixed price' ? 1 : hoursMinutes?.[0] + (hoursMinutes?.[1] / 60));\n\n  useEffect(() => {\n    const multipleList: any = milestones?.filter(({ status }: { status: number }) => status === 3);\n    if (multipleList?.length > 1) {\n      const list: any = milestones?.find(({ status }: { status: number }) => status === 3);\n      setMilestoneDeclineData((prevData: any) => ({ ...prevData, multipleDeclineListCount: multipleList?.length, prevMilestoneDeclineId: list?.milestoneId, currentMilestoneDeclineId: list?.milestoneId }));\n      setMediaList(list?.declinedReason?.url);\n    } else if (multipleList?.length === 1) {\n      const list: any = milestones?.find(({ status }: { status: number }) => status === 3);\n      setMilestoneDeclineData((prevData: any) => ({ ...prevData, multipleDeclineListCount: multipleList?.length, prevMilestoneDeclineId: list?.milestoneId, currentMilestoneDeclineId: list?.milestoneId }));\n      setMediaList(list?.declinedReason?.url);\n    }\n  }, [milestones]);\n  console.log(milestoneDeclineData, \"milestoneDeclineData\");\n\n  const setItemToggle = (index: any) => {\n    setToggler((prev: boolean) => !prev);\n    setSelectSlide(index + 1);\n  }\n\n  const renderFilteredItems = () => {\n    let sources: any = [];\n    let types: any = [];\n\n    if (mediaList?.length) {\n      mediaList.forEach((item: any) => {\n        if (item?.mediaType === 2) {\n          sources.push(item.link);\n          types.push('video');\n        } else if (item?.mediaType === 1) {\n          sources.push(item.link);\n          types.push('image');\n        } else {\n          sources.push(item);\n          types.push('image');\n        }\n      })\n    }\n\n    return { sources, types };\n  }\n\n  const backTab = (name: string) => {\n    const params = new URLSearchParams(history.location?.search);\n    const jobActionType: any = params.get('jobAction');\n    if (jobActionType) {\n      history.goBack();\n      return;\n    }\n    setToggleItem((prev: any) => ({ ...prev, [name]: false }))\n  }\n\n  if (toggleItem?.lodge) {\n    return (\n      <LodgeDispute\n        item={{ jobId: jobId, jobName: jobName }}\n        backTab={backTab}\n        history={history}\n      />\n    )\n  }\n\n  if (toggleItem?.cancel) {\n    return (\n      <CancelJobs\n        item={{ jobId: jobId, jobName: jobName }}\n        backTab={backTab}\n        history={history}\n      />\n    )\n  }\n\n\n  const { sources, types } = renderFilteredItems();\n\n  let page = null;\n  const renderSteps = () => {\n    switch (step) {\n      case 1:\n        return page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_6\">\n              <div className=\"relate\">\n                <button\n                  className=\"back\"\n                  onClick={() => history.push('/active-jobs')}\n                ></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n                <span className=\"dot_menu\">\n                  <img src={editIconBlue} alt=\"edit\" />\n                  <div className=\"edit_menu\">\n                    <ul>\n                      <li\n                        onClick={() => { setToggleItem((prev: any) => ({ ...prev, lodge: true })) }}\n                        className=\"icon lodge\">Lodge dispute</li>\n                      <li\n                        onClick={() => { setToggleItem((prev: any) => ({ ...prev, cancel: true })) }}\n                        className=\"icon delete\">Cancel job</li>\n                    </ul>\n                  </div>\n                </span>\n              </div>\n              {/* <span className=\"sub_title\">Job Milestones</span> */}\n              <p className=\"commn_para\">\n                Your job point of contact has indicated they want to be notified\n                when you reach the following milestones. Tap the milestone and\n                Submit when a milestone is completed\n              </p>\n\n              {milestoneDeclineData.multipleDeclineListCount > 1 && <div className=\"declined_info hvr-ripple-out\">\n                <span>{`${milestoneDeclineData.multipleDeclineListCount} Milestones were declined`}</span>\n              </div>}\n\n              <ul className=\"milestones_check\">\n                {milestones?.sort(({ order: prevOrder }, { order }) => prevOrder - order)?.map(\n                  (\n                    {\n                      milestoneId,\n                      milestoneName,\n                      isPhotoevidence,\n                      status,\n                      fromDate,\n                      toDate,\n                      declinedReason,\n                      declinedCount,\n                    },\n                    index\n                  ) => {\n                    // As discussed now we take this status 4 as status 0 bacause after the decline on the change-request the status becomes 4.\n                    const prevMilestoneStatus = milestones[index - 1]?.status;\n                    const isActive =\n                      (status === 0 || status === 4 || status === 5) && // here changes done for status 4 \n                      // completed or approved\n                      ([1, 2].includes(prevMilestoneStatus) ||\n                        prevMilestoneStatus === undefined);\n                    const isDeclined = status === 3;\n\n                    return (\n                      <li\n                        key={milestoneId}\n                        className={\n                          [1, 2,].includes(status)\n                            ? `check`\n                            : isActive\n                              ? 'active'\n                              : status === 3\n                                ? 'declined'\n                                : 'disabled'\n                        }\n                      >\n                        <div className=\"circle_stepper\" onClick={() => {\n                          setMediaList(declinedReason?.url);\n                          setMilestoneDeclineData((prevData: any) => ({ ...prevData, currentMilestoneDeclineId: milestoneId }))\n                        }}>\n                          <span></span>\n                        </div>\n                        <div className=\"info\">\n                          <label>{`${milestoneName} ${status === 3 ? 'declined' : ''}`}</label>\n                          {isPhotoevidence && (\n                            <span>Photo evidence required</span>\n                          )}\n                          <span>\n                            {renderTime(fromDate, toDate)}\n                          </span>\n                        </div>\n\n\n                        {isDeclined && milestoneDeclineData.currentMilestoneDeclineId === milestoneId && (\n                          <>\n                            {Object.keys(declinedReason)?.length > 0 && <div className=\"decline_reason\">\n                              <FsLightbox\n                                toggler={toggler}\n                                slide={selectedSlide}\n                                sources={sources}\n                                types={types}\n                              />\n                              <label className=\"form_label\">Decline reason:</label>\n                              <div className=\"text_field\">\n                                <p className=\"commn_para\">{declinedReason?.reason}</p>\n                              </div>\n\n                              {declinedReason?.url?.length > 0 &&\n                                <Carousel\n                                  className=\"decline_media\"\n                                  responsive={declinedImages}\n                                  showDots={false}\n                                  arrows={true}\n                                >\n                                  {declinedReason?.url?.map((image: string, index: number) => {\n                                    return (\n                                      <div className=\"upload_img_video\">\n                                        <figure className=\"img_video\">\n                                          <img src={image} alt=\"image\" onClick={() => setItemToggle(index)} />\n                                        </figure>\n                                      </div>)\n                                  })}\n                                </Carousel>\n                              }\n                            </div>}\n                            <button\n                              onClick={() => {\n                                if (declinedCount >= 5) {\n                                  setShowToast(true, 'You have exceeded maximum number of chances to submit the milestone');\n                                  return;\n                                }\n                                setMilestoneIndex(index);\n\n                                if (index === milestones?.length - 1) {\n                                  setIsLastMilestone(true);\n                                }\n\n                                if (isPhotoevidence) {\n                                  setStep(2);\n                                } else {\n                                  setStep(3);\n                                }\n                              }}\n                              className={`fill_btn full_btn btn-effect ${milestoneDeclineData.prevMilestoneDeclineId !== milestoneId ? 'disable_btn' : ''}`} >Remark as Complete</button>\n                          </>\n                        )}\n                        {isActive && (\n                          <button\n                            className=\"fill_btn full_btn btn-effect\"\n                            onClick={() => {\n                              setMilestoneIndex(index);\n\n                              if (index === milestones?.length - 1) {\n                                setIsLastMilestone(true);\n                              }\n\n                              if (isPhotoevidence) {\n                                setStep(2);\n                              } else {\n                                setStep(3);\n                              }\n                            }}\n                          >\n                            Done\n                          </button>\n                        )}\n\n                      </li>\n                    );\n                  }\n                )}\n              </ul>\n            </div>\n            <div className=\"flex_col_sm_6 col_ruler\">\n              <span className=\"sub_title\">Posted by</span>\n              <div className=\"tradie_card posted_by view_more \">\n                <a href=\"javascript:void(0)\" className=\"chat circle\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    history.push({\n                      pathname: `/chat`,\n                      state: {\n                        tradieId: storageService.getItem('userInfo')?._id,\n                        builderId: builderId,\n                        jobId: jobId,\n                        jobName: jobName\n                      }\n                    })\n                  }\n                  } />\n                <div className=\"user_wrap\" onClick={() => history.push(`/builder-info?builderId=${builderId}`)}>\n                  <figure className=\"u_img\">\n                    <img\n                      src={builderImage || dummy}\n                      alt=\"traide-img\"\n                      onError={(e: any) => {\n                        if (e?.target?.onerror) {\n                          e.target.onerror = null;\n                        }\n                        if (e?.target?.src) {\n                          e.target.src = dummy;\n                        }\n                      }}\n                    />\n                  </figure>\n                  <div className=\"details\">\n                    <span className=\"name\">{builderName}</span>\n                    {/* <span className=\"prof\">Project Manager</span> */}\n                    <span className=\"rating\">{ratings} , {reviews} reviews</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"relate\">\n                <span className=\"sub_title\">Job details</span>\n                <span\n                  className=\"edit_icon\"\n                  title=\"More\"\n                  onClick={() =>\n                    history.push(\n                      `/job-details-page?jobId=${params.jobId}&redirect_from=jobs`\n                    )\n                  }\n                >\n                  <img src={more} alt=\"more\" />\n                </span>\n              </div>\n            </div>\n          </div>\n        );\n        break;\n      case 2:\n        return page = (\n          <UploadMedia\n            jobName={jobName}\n            title=\"Photo required\"\n            para=\"Your job point of contact has indicated they want to be notified when you reach the following milestones. Tap the milestone and Submit when a milestone is completed\"\n            stepCompleted={stepCompleted.includes(2)}\n            data={data}\n            handleStepBack={() => setStep(1)}\n            handleStepForward={() => { }}\n            handleStepComplete={(stepData: any) => {\n              setData((prevData: any) => ({\n                ...prevData,\n                ...stepData,\n              }));\n\n              setStepCompleted((prevValue) => prevValue.concat([2]));\n              setStep(3);\n            }}\n            hasDescription\n          />\n        );\n        break;\n      case 3:\n        return page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n              <div className=\"relate\">\n                <button\n                  className=\"back\"\n                  onClick={() => {\n                    if (milestones[milestoneIndex]?.isPhotoevidence) {\n                      setStep(2);\n                    } else {\n                      setStep(1);\n                    }\n                  }}\n                ></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n              </div>\n              <span className=\"sub_title\">Worked hours in this milestone</span>\n              {/* <p className=\"commn_para\">\n              Submit your actual hours worked to calculate any variation from\n              the estimateed hours. The amount will be approved by the Builder\n            </p> */}\n\n              <p className=\"commn_para\">\n                The amount paid will be recalculated based on approval of the\n                actual hours by the Builder\n              </p>\n\n              <div className=\"form_field\">\n                <label className=\"form_label\">Time Spent</label>\n                <div className=\"text_field time_spent\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"hh:mm\"\n                    name=\"actualHours\"\n                    value={data.actualHours}\n                    onChange={handleChange}\n                    maxLength={5}\n                  />\n                  <span className=\"detect_icon\">hours</span>\n                </div>\n                <span className=\"error_msg\">{errors.actualHours}</span>\n              </div>\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={() => {\n                  setStepCompleted((prevValue) => prevValue.concat([3]));\n\n                  const error = validateActualHours(data.actualHours);\n                  if (error) {\n                    setErrors((prevErrors) => ({\n                      ...prevErrors,\n                      actualHours: error,\n                    }));\n                  } else {\n                    setStep(4);\n                  }\n                }}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        );\n        break;\n      case 4:\n        return page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_7\">\n              <div className=\"relate\">\n                <button className=\"back\" onClick={() => setStep(3)}></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n              </div>\n              <span className=\"sub_title\">\n                {isLastMilestone ? 'Job Complete' : 'Add payment details'}\n              </span>\n              <p className=\"commn_para\">\n                {isLastMilestone\n                  ? 'Please enter your prefered payment method below so your point of contact can organise payment'\n                  : 'You need to add your bank account details for payment from the builder after approving this milestone'}\n              </p>\n              {isLastMilestone && (\n                <div className=\"f_spacebw total_payment\">\n                  <span>Total payment</span>\n                  <span>${totalAmount?.toFixed(2)}</span>\n                </div>\n              )}\n              <button className=\"fill_grey_btn bank_btn\">\n                {data.userId && <img src={check} alt=\"check\" />} Bank account\n              </button>\n\n            </div>\n            <div className=\"flex_col_sm_9\">\n              <div className=\"form_field\">\n                <span className=\"payment_note\">\n                  Tickt does not store your payment information.{' '}\n                </span>\n                <p className=\"commn_para\">\n                  {' '}\n                  Tickt does not handle payment for jobs, we only facilitate\n                  communication between tradies and builders. If you have problems\n                  receiving your payment, please contact your builder.\n                </p>\n              </div>\n              <button className=\"fill_btn full_btn btn-effect\" onClick={() => setStep(5)}>\n                {data.userId ? 'Continue' : 'Add Details'}\n              </button>\n            </div>\n          </div>\n        );\n        break;\n      case 5:\n        return page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n              <div className=\"relate\">\n                <button className=\"back\" onClick={() => setStep(4)}></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n                {data?.userId && readOnly && (\n                  <>\n                    {/* <span className=\"edit_icon\" title=\"Edit\">\n                    <img src={editIconBlue} alt=\"edit\" onClick={() => setReadOnly(!readOnly)} />\n                  </span>\n                  <span className=\"edit_icon remove_icon\" title=\"Remove\" onClick={() => removeBankDetails()} >\n                    <img src={removeIconBlue} alt=\"remove\" />\n                  </span> */}\n                    <div className=\"edit_delete\">\n                      <span className=\"edit\" title=\"Edit\" onClick={() => setReadOnly(!readOnly)}></span>\n                      <span className=\"delete\" title=\"Remove\" onClick={() => removeBankDetails()}></span>\n                    </div>\n                  </>\n                )}\n              </div>\n              <span className=\"sub_title\">Payment Details</span>\n              <p className=\"commn_para\">Enter your bank account details</p>\n\n              <div className=\"form_field\">\n                <label className=\"form_label\">Account Name</label>\n                <div className=\"text_field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Account Name\"\n                    name=\"account_name\"\n                    value={data.account_name}\n                    onChange={handleChange}\n                    maxLength={50}\n                    readOnly={readOnly}\n                  />\n                </div>\n                <span className=\"error_msg\">{errors.account_name}</span>\n              </div>\n              <div className=\"form_field\">\n                <label className=\"form_label\">Account Number</label>\n                <div className=\"text_field\">\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter Account Number\"\n                    name=\"account_number\"\n                    value={data.account_number}\n                    onChange={handleChange}\n                    maxLength={10}\n                    max={9999999999}\n                    readOnly={readOnly}\n                  />\n                </div>\n                <span className=\"error_msg\">{errors.account_number}</span>\n              </div>\n              <div className=\"form_field\">\n                <label className=\"form_label\">BSB Number</label>\n                <div className=\"text_field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter BSB Number\"\n                    name=\"bsb_number\"\n                    value={data.bsb_number}\n                    onChange={handleChange}\n                    maxLength={7}\n                    readOnly={readOnly}\n                  />\n                </div>\n                <span className=\"error_msg\">{errors.bsb_number}</span>\n              </div>\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={readOnly ? () => {\n                  const callback = (jobCompletedCount: number) => {\n                    if (isLastMilestone) {\n                      showJobCompletePage(jobCompletedCount);\n                    } else {\n                      setStepCompleted([]);\n                      setData(defaultData);\n                      showMilestoneCompletePage();\n                    }\n                  };\n\n                  const milestoneData = {\n                    evidence: milestones[milestoneIndex].isPhotoevidence ? data.urls : undefined,\n                    jobId: params.jobId,\n                    milestoneId: milestones[milestoneIndex].milestoneId,\n                    description: milestones[milestoneIndex].isPhotoevidence ? data.description : undefined,\n                    actualHours: data.actualHours,\n                    totalAmount: `${totalAmount?.toFixed(2)}`,\n                  };\n\n                  markMilestoneComplete(milestoneData, callback);\n                } : () => {\n                  setStepCompleted((prevValue) => prevValue.concat([5]));\n\n                  const hasErrors = [\n                    'account_name',\n                    'account_number',\n                    'bsb_number',\n                  ].reduce((prevValue, name) => {\n                    const error = validateBankDetails(name, data[name]);\n                    setErrors((prevErrors) => ({\n                      ...prevErrors,\n                      [name]: error,\n                    }));\n\n                    return prevValue || error;\n                  }, '');\n\n                  const updatedBankDetails = {\n                    account_name: data.account_name,\n                    account_number: data.account_number,\n                    bsb_number: data.bsb_number,\n                  };\n                  if (!hasErrors) {\n                    if (bankDetails.userId) {\n                      updateBankDetails(\n                        {\n                          userId: data.userId,\n                          ...updatedBankDetails,\n                        },\n                      );\n                    } else {\n                      addBankDetails(updatedBankDetails);\n                    }\n                  }\n                }}\n              >\n                {readOnly ? 'Continue' : 'Save changes'}\n              </button>\n            </div>\n          </div>\n        );\n        break;\n\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <div className=\"detail_col\">\n      {renderSteps()}\n    </div>\n  )\n};\n\nexport default MarkMilestone;\n"]},"metadata":{},"sourceType":"module"}