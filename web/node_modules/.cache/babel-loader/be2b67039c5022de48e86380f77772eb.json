{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/savedJobs/savedJobs.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport TradieJobInfoBox from \"../../common/tradieJobInfoBox\";\nimport noData from \"../../assets/images/no-search-data.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nconst SavedJobs = ({\n  getSavedJobList,\n  clearSavedJobList,\n  savedJobs,\n  isLoading,\n  ...props\n}) => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [jobs, setJobs] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n\n  const backButtonClicked = () => {\n    var _props$history;\n\n    (_props$history = props.history) === null || _props$history === void 0 ? void 0 : _props$history.goBack();\n  };\n\n  useEffect(() => {\n    return clearSavedJobList;\n  }, [clearSavedJobList]);\n  useEffect(() => {\n    getSavedJobList(page);\n  }, [getSavedJobList, page]);\n  useEffect(() => {\n    setJobs(job => (job || []).concat(savedJobs));\n    setHasMore(savedJobs.length === 10);\n  }, [savedJobs]);\n\n  const loadMoreJobs = () => {\n    setPage(pages => pages + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: jobs.length,\n    next: loadMoreJobs,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relate\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back\",\n              onClick: backButtonClicked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Saved jobs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row tradies_row\",\n            children: (jobs === null || jobs === void 0 ? void 0 : jobs.length) > 0 ? jobs === null || jobs === void 0 ? void 0 : jobs.map(jobData => {\n              return /*#__PURE__*/_createElement(TradieJobInfoBox, {\n                item: jobData,\n                ...props,\n                key: jobData.jobId,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 23\n                }\n              });\n            }) : !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no_record\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"no_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: noData,\n                  alt: \"data not found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SavedJobs, \"JteGFD5M4d9zXt/IM8DYpHTOsrM=\");\n\n_c = SavedJobs;\nexport default SavedJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedJobs\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/savedJobs/savedJobs.tsx"],"names":["useEffect","useState","InfiniteScroll","TradieJobInfoBox","noData","SavedJobs","getSavedJobList","clearSavedJobList","savedJobs","isLoading","props","page","setPage","jobs","setJobs","hasMore","setHasMore","backButtonClicked","history","goBack","job","concat","length","loadMoreJobs","pages","map","jobData","jobId"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport TradieJobInfoBox from \"../../common/tradieJobInfoBox\";\nimport noData from \"../../assets/images/no-search-data.png\";\n\nconst SavedJobs = ({\n  getSavedJobList,\n  clearSavedJobList,\n  savedJobs,\n  isLoading,\n  ...props\n}: any) => {\n  const [page, setPage] = useState(1);\n  const [jobs, setJobs] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n\n  const backButtonClicked = () => {\n    props.history?.goBack();\n  };\n\n  useEffect(() => {\n    return clearSavedJobList;\n  }, [clearSavedJobList]);\n\n  useEffect(() => {\n    getSavedJobList(page);\n  }, [getSavedJobList, page]);\n\n  useEffect(() => {\n    setJobs((job) => (job || []).concat(savedJobs));\n    setHasMore(savedJobs.length === 10);\n  }, [savedJobs]);\n\n  const loadMoreJobs = () => {\n    setPage((pages) => pages + 1);\n  };\n\n  return (\n    <InfiniteScroll\n      dataLength={jobs.length}\n      next={loadMoreJobs}\n      hasMore={hasMore}\n      loader={<h4></h4>}\n    >\n      <div className={\"app_wrapper\"}>\n        <div className=\"section_wrapper\">\n          <div className=\"custom_container\">\n            <div className=\"relate\">\n              <button className=\"back\" onClick={backButtonClicked}></button>\n              <span className=\"title\">Saved jobs</span>\n            </div>\n            <div className=\"flex_row tradies_row\">\n              {jobs?.length > 0\n                ? jobs?.map((jobData: any) => {\n                    return (\n                      <TradieJobInfoBox\n                        item={jobData}\n                        {...props}\n                        key={jobData.jobId}\n                      />\n                    );\n                  })\n                : !isLoading && (\n                    <div className=\"no_record\">\n                      <figure className=\"no_img\">\n                        <img src={noData} alt=\"data not found\" />\n                      </figure>\n                      <span>No Data Found</span>\n                    </div>\n                  )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default SavedJobs;\n"]},"metadata":{},"sourceType":"module"}