{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/templateSavedSucess.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { setLoading } from '../../../redux/common/actions';\nimport templateImage from '../../../assets/images/teplate-saved-bg.jpg';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//  ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\nconst TemplateSavedSuccess = props => {\n  _s();\n\n  const {\n    data,\n    stepCompleted,\n    handleStepForward,\n    handleStepComplete,\n    handleStepBack\n  } = props;\n  const [isLoad, setImageLoad] = useState(true);\n  const location = useLocation();\n  const history = useHistory();\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n  useEffect(() => {\n    if (!isLoad) {\n      setLoading(false);\n    }\n  }, [isLoad]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"img_text_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"figure\", {\n      className: \"full_image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: templateImage,\n        alt: \"template-img\",\n        onLoad: () => {\n          setImageLoad(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"short_info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: 'Templete is saved!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"show_label\",\n            children: 'Your template is saved in your Milestone templates. You can edit and chose it when you will post new jobs.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              var _location$state;\n\n              if (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.redirectTo) {\n                var _location$state2;\n\n                history.push(`${location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.redirectTo}`);\n              } else {\n                handleStepForward(6);\n              }\n            },\n            className: \"fill_btn full_btn btn-effect\",\n            children: 'OK'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TemplateSavedSuccess, \"uil8G9CJz6MhbS9pZK0gsOe0Lvw=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = TemplateSavedSuccess;\nexport default TemplateSavedSuccess;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateSavedSuccess\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/templateSavedSucess.tsx"],"names":["React","useState","useEffect","setLoading","templateImage","useLocation","useHistory","TemplateSavedSuccess","props","data","stepCompleted","handleStepForward","handleStepComplete","handleStepBack","isLoad","setImageLoad","location","history","state","redirectTo","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;;;AAQA;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAsB;AAAA;;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,aAAR;AAAuBC,IAAAA,iBAAvB;AAA0CC,IAAAA,kBAA1C;AAA8DC,IAAAA;AAA9D,MAAiFL,KAAvF;AACA,QAAM,CAACM,MAAD,EAASC,YAAT,IAAyBd,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAMe,QAAa,GAAGX,WAAW,EAAjC;AACA,QAAMY,OAAY,GAAGX,UAAU,EAA/B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AAAEC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAAkB,GAA3B,EAA6B,EAA7B,CAAT;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACY,MAAL,EAAa;AAAEX,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB;AACrC,GAFQ,EAEN,CAACW,MAAD,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACI;AACI,QAAA,GAAG,EAAEV,aADT;AAEI,QAAA,GAAG,EAAC,cAFR;AAGI,QAAA,MAAM,EAAE,MAAM;AACVW,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBAAuB;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,sBACK;AADL;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AACI,YAAA,OAAO,EAAE,MAAM;AAAA;;AACX,kBAAIC,QAAJ,aAAIA,QAAJ,0CAAIA,QAAQ,CAAEE,KAAd,oDAAI,gBAAiBC,UAArB,EAAiC;AAAA;;AAC7BF,gBAAAA,OAAO,CAACG,IAAR,CAAc,GAAEJ,QAAH,aAAGA,QAAH,2CAAGA,QAAQ,CAAEE,KAAb,qDAAG,iBAAiBC,UAAW,EAA5C;AACH,eAFD,MAEO;AACHR,gBAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACH;AACJ,aAPL;AAQI,YAAA,SAAS,EAAC,8BARd;AAAA,sBAQ8C;AAR9C;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA3CD;;GAAMJ,oB;UAGoBF,W,EACDC,U;;;KAJnBC,oB;AA6CN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { setLoading } from '../../../redux/common/actions';\nimport templateImage from '../../../assets/images/teplate-saved-bg.jpg';\nimport { useLocation, useHistory } from \"react-router-dom\";\ninterface Proptypes {\n    data: any;\n    stepCompleted: Boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepForward: (data: any) => void;\n    handleStepBack: () => void;\n}\n//  ({ data, stepCompleted, handleStepComplete, handleStepBack }: Proptypes) => {\n\nconst TemplateSavedSuccess = (props: Proptypes) => {\n    const { data, stepCompleted, handleStepForward, handleStepComplete, handleStepBack } = props;\n    const [isLoad, setImageLoad] = useState(true);\n    const location: any = useLocation();\n    const history: any = useHistory();\n\n    useEffect(() => { setLoading(true) }, [])\n\n    useEffect(() => {\n        if (!isLoad) { setLoading(false) }\n    }, [isLoad])\n\n    return (\n        <div className=\"img_text_wrap\">\n            <figure className=\"full_image\">\n                <img\n                    src={templateImage}\n                    alt=\"template-img\"\n                    onLoad={() => {\n                        setImageLoad(false)\n                    }}\n                />\n\n                <div className=\"short_info\">\n                    <div className=\"content\">\n                        <h1 className=\"title\">{'Templete is saved!'}</h1>\n                        <span className=\"show_label\">\n                            {'Your template is saved in your Milestone templates. You can edit and chose it when you will post new jobs.'}\n                        </span>\n                        <button\n                            onClick={() => {\n                                if (location?.state?.redirectTo) {\n                                    history.push(`${location?.state?.redirectTo}`)\n                                } else {\n                                    handleStepForward(6)\n                                }\n                            }}\n                            className=\"fill_btn full_btn btn-effect\">{'OK'}</button>\n                    </div>\n                </div>\n            </figure>\n        </div>\n    )\n}\n\nexport default TemplateSavedSuccess\n"]},"metadata":{},"sourceType":"module"}