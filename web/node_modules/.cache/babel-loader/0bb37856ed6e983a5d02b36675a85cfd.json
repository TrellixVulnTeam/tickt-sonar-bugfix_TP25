{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieSearchJobResult/renderMap.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useCallback, useRef } from 'react'; // @ts-ignore\n\nimport { GoogleMap, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\nimport jobIconDemo from \"../../assets/images/jobicon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nconst options = {\n  styles: mapStyles[0],\n  disableDefaultUI: true,\n  zoomControl: true\n};\n\nconst RenderMap = props => {\n  _s();\n\n  var _renderJobsData;\n\n  const [center, setCenter] = useState('');\n  const [markers, setMarkers] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const mapRef = useRef(null);\n\n  const setMapCenter = () => {\n    var _props$location, _mapCenterCoordinates, _mapCenterCoordinates2, _mapCenterCoordinates3, _mapCenterCoordinates4, _mapCenterCoordinates5, _mapCenterCoordinates6;\n\n    var mapCenterCoordinates;\n    const jobResultsParam = new URLSearchParams((_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.search).get('jobResults');\n\n    if (props.searchByFilter) {\n      var _props$homeSearchJobD;\n\n      mapCenterCoordinates = (_props$homeSearchJobD = props.homeSearchJobData) === null || _props$homeSearchJobD === void 0 ? void 0 : _props$homeSearchJobD.slice(0, 1);\n    } else if (jobResultsParam == 'viewNearByJob') {\n      var _props$viewNearByJobD;\n\n      mapCenterCoordinates = (_props$viewNearByJobD = props.viewNearByJobData) === null || _props$viewNearByJobD === void 0 ? void 0 : _props$viewNearByJobD.slice(0, 1);\n    } else {\n      var _props$homeSearchJobD2;\n\n      mapCenterCoordinates = (_props$homeSearchJobD2 = props.homeSearchJobData) === null || _props$homeSearchJobD2 === void 0 ? void 0 : _props$homeSearchJobD2.slice(0, 1);\n    }\n\n    console.log(mapCenterCoordinates, \"mapCenterCoordinates\");\n    const newCenter = {\n      lat: ((_mapCenterCoordinates = mapCenterCoordinates) === null || _mapCenterCoordinates === void 0 ? void 0 : _mapCenterCoordinates.length) > 0 ? (_mapCenterCoordinates2 = mapCenterCoordinates[0]) === null || _mapCenterCoordinates2 === void 0 ? void 0 : (_mapCenterCoordinates3 = _mapCenterCoordinates2.location) === null || _mapCenterCoordinates3 === void 0 ? void 0 : _mapCenterCoordinates3.coordinates[1] : -37.8136,\n      //lat\n      lng: ((_mapCenterCoordinates4 = mapCenterCoordinates) === null || _mapCenterCoordinates4 === void 0 ? void 0 : _mapCenterCoordinates4.length) > 0 ? (_mapCenterCoordinates5 = mapCenterCoordinates[0]) === null || _mapCenterCoordinates5 === void 0 ? void 0 : (_mapCenterCoordinates6 = _mapCenterCoordinates5.location) === null || _mapCenterCoordinates6 === void 0 ? void 0 : _mapCenterCoordinates6.coordinates[0] : 144.9631 //lng\n\n    };\n\n    if (JSON.stringify(center) == JSON.stringify(newCenter)) {\n      return;\n    } else {\n      setCenter(newCenter);\n    }\n  };\n\n  console.log(props, \"props renderMap\", mapRef, \"mapRef\");\n\n  const renderJobsData = () => {\n    var _props$location2;\n\n    setMapCenter();\n    var jobsData;\n    const jobResultsParam = new URLSearchParams((_props$location2 = props.location) === null || _props$location2 === void 0 ? void 0 : _props$location2.search).get('jobResults');\n\n    if (props.searchByFilter) {\n      jobsData = props.homeSearchJobData;\n      return jobsData;\n    }\n\n    if (jobResultsParam == 'viewNearByJob') {\n      jobsData = props.viewNearByJobData;\n      return jobsData;\n    } else {\n      jobsData = props.homeSearchJobData;\n      return jobsData;\n    }\n\n    return null;\n  };\n\n  const jobClickHandler = item => {\n    props.history.push(`/job-details-page?jobId=${item.jobId}&tradeId=${item.tradeId}&specializationId=${item.specializationId}`);\n  };\n\n  const onMapClick = useCallback(event => {\n    setMarkers(current => [...current, {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const onMapLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    mapRef.current = null;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 13,\n    center: center,\n    options: options // onClick={onMapClick}\n    ,\n    onLoad: onMapLoad,\n    onUnmount: onUnmount,\n    children: [(_renderJobsData = renderJobsData()) === null || _renderJobsData === void 0 ? void 0 : _renderJobsData.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: item.location.coordinates[1],\n        lng: item.location.coordinates[0]\n      },\n      icon: {\n        url: jobIconDemo,\n        scaledSize: new window.google.maps.Size(45, 45),\n        origin: new window.google.maps.Point(0, 0),\n        anchor: new window.google.maps.Point(20, 20)\n      },\n      onClick: () => {\n        const lat = item.location.coordinates[1];\n        const lng = item.location.coordinates[0];\n        setSelected(item);\n      }\n    }, item.jobId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this)), selected ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selected.location.coordinates[1],\n        lng: selected.location.coordinates[0]\n      },\n      onCloseClick: () => setSelected(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview_card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tradie_card\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"javascript:void(0)\",\n            className: \"more_detail circle\",\n            onClick: () => jobClickHandler(selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user_wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"u_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: selected.tradeSelectedUrl ? selected.tradeSelectedUrl : \"\",\n                alt: \"tradie-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: selected.tradeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"prof\",\n                children: selected.jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"job_info\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon clock\",\n                children: selected.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon dollar\",\n                children: selected.amount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon location line-1\",\n                children: selected.locationName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"icon calendar\",\n                children: selected.durations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RenderMap, \"XJlvLNy+qBBY026DisI4/Nqy/AU=\");\n\n_c = RenderMap;\nexport default RenderMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderMap\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieSearchJobResult/renderMap.tsx"],"names":["useState","useCallback","useRef","GoogleMap","Marker","InfoWindow","mapStyles","jobIconDemo","mapContainerStyle","width","height","options","styles","disableDefaultUI","zoomControl","RenderMap","props","center","setCenter","markers","setMarkers","selected","setSelected","mapRef","setMapCenter","mapCenterCoordinates","jobResultsParam","URLSearchParams","location","search","get","searchByFilter","homeSearchJobData","slice","viewNearByJobData","console","log","newCenter","lat","length","coordinates","lng","JSON","stringify","renderJobsData","jobsData","jobClickHandler","item","history","push","jobId","tradeId","specializationId","onMapClick","event","current","latLng","time","Date","onMapLoad","map","onUnmount","callback","url","scaledSize","window","google","maps","Size","origin","Point","anchor","tradeSelectedUrl","tradeName","jobName","amount","locationName","durations"],"mappings":"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","sourcesContent":["import { useState, useCallback, useRef } from 'react';\n// @ts-ignore\nimport { GoogleMap, Marker, InfoWindow } from '@react-google-maps/api';\nimport mapStyles from './mapStyles';\n\nimport jobIconDemo from \"../../assets/images/jobicon.png\";\n\nconst mapContainerStyle = {\n    width: \"100%\",\n    height: \"100vh\"\n}\n\nconst options: any = {\n    styles: mapStyles[0],\n    disableDefaultUI: true,\n    zoomControl: true,\n}\n\nconst RenderMap = (props: any) => {\n    const [center, setCenter] = useState<any>('');\n    const [markers, setMarkers] = useState<Array<any>>([]);\n    const [selected, setSelected] = useState<any>(null);\n    const mapRef = useRef(null);\n\n    const setMapCenter = () => {\n        var mapCenterCoordinates;\n        const jobResultsParam = new URLSearchParams(props.location?.search).get('jobResults');\n        if (props.searchByFilter) {\n            mapCenterCoordinates = props.homeSearchJobData?.slice(0, 1);\n        } else if (jobResultsParam == 'viewNearByJob') {\n            mapCenterCoordinates = props.viewNearByJobData?.slice(0, 1);\n        } else {\n            mapCenterCoordinates = props.homeSearchJobData?.slice(0, 1);\n        }\n        console.log(mapCenterCoordinates, \"mapCenterCoordinates\");\n        const newCenter = {\n            lat: mapCenterCoordinates?.length > 0 ? mapCenterCoordinates[0]?.location?.coordinates[1] : -37.8136, //lat\n            lng: mapCenterCoordinates?.length > 0 ? mapCenterCoordinates[0]?.location?.coordinates[0] : 144.9631//lng\n        }\n        if (JSON.stringify(center) == JSON.stringify(newCenter)) {\n            return;\n        } else {\n            setCenter(newCenter);\n        }\n    }\n\n    console.log(props, \"props renderMap\", mapRef, \"mapRef\");\n\n    const renderJobsData = () => {\n        setMapCenter();\n        var jobsData;\n        const jobResultsParam = new URLSearchParams(props.location?.search).get('jobResults');\n        if (props.searchByFilter) {\n            jobsData = props.homeSearchJobData;\n            return jobsData;\n        }\n        if (jobResultsParam == 'viewNearByJob') {\n            jobsData = props.viewNearByJobData;\n            return jobsData;\n        } else {\n            jobsData = props.homeSearchJobData;\n            return jobsData;\n        }\n        return null;\n    }\n\n    const jobClickHandler = (item: any) => {\n        props.history.push(`/job-details-page?jobId=${item.jobId}&tradeId=${item.tradeId}&specializationId=${item.specializationId}`);\n    }\n\n    const onMapClick = useCallback((event) => {\n        setMarkers(current => [\n            ...current,\n            {\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng(),\n                time: new Date(),\n            }])\n    }, []);\n\n    const onMapLoad = useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n\n    const onUnmount = useCallback(function callback(map) {\n        mapRef.current = null;\n    }, [])\n\n    return (\n        <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            zoom={13}\n            center={center}\n            options={options}\n            // onClick={onMapClick}\n            onLoad={onMapLoad}\n            onUnmount={onUnmount}\n        >\n            {renderJobsData()?.map((item: any) => (\n                <Marker\n                    key={item.jobId}\n                    position={{ lat: item.location.coordinates[1], lng: item.location.coordinates[0] }}\n                    icon={{\n                        url: jobIconDemo,\n                        scaledSize: new window.google.maps.Size(45, 45),\n                        origin: new window.google.maps.Point(0, 0),\n                        anchor: new window.google.maps.Point(20, 20)\n                    }}\n                    onClick={() => {\n                        const lat = item.location.coordinates[1];\n                        const lng = item.location.coordinates[0];\n                        setSelected(item);\n                    }}\n                />\n            ))}\n            {selected ? (<InfoWindow position={{ lat: selected.location.coordinates[1], lng: selected.location.coordinates[0] }}\n                onCloseClick={() => setSelected(null)}\n            >\n                <div className=\"preview_card\">\n                    <div className=\"tradie_card\">\n                        <a href=\"javascript:void(0)\" className=\"more_detail circle\" onClick={() => jobClickHandler(selected)}></a>\n                        <div className=\"user_wrap\">\n                            <figure className=\"u_img\">\n                                <img src={selected.tradeSelectedUrl ? selected.tradeSelectedUrl : \"\"} alt=\"tradie-img\" />\n                            </figure>\n                            <div className=\"details\">\n                                <span className=\"name\">{selected.tradeName}</span>\n                                <span className=\"prof\">{selected.jobName}</span>\n                            </div>\n                        </div>\n                        <div className=\"job_info\">\n                            <ul>\n                                <li className=\"icon clock\">{selected.time}</li>\n                                <li className=\"icon dollar\">{selected.amount}</li>\n                                <li className=\"icon location line-1\">{selected.locationName}</li>\n                                <li className=\"icon calendar\">{selected.durations}</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </InfoWindow>) : null}\n        </GoogleMap>\n    )\n}\n\nexport default RenderMap;\n"]},"metadata":{},"sourceType":"module"}