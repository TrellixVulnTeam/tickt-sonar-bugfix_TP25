{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{AuBankAccountElement}from'@stripe/react-stripe-js';// Custom styling can be passed as options when creating an Element.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AU_BANK_ACCOUNT_STYLE={base:{color:'#161d4a',font:'Neue Haas Grotesk Text Pro Medium',fontSize:'14px','::placeholder':{color:'#aab7c4'},':-webkit-autofill':{color:'#32325d'}},invalid:{color:'#fa755a',iconColor:'#fa755a',':-webkit-autofill':{color:'#fa755a'}}};var AU_BANK_ACCOUNT_ELEMENT_OPTIONS={style:AU_BANK_ACCOUNT_STYLE,disabled:false,hideIcon:false,iconStyle:\"solid\"// or \"default\"\n};export default function BecsForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),accountName=_useState2[0],setAccountName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),accountEmail=_useState4[0],setAccountEmail=_useState4[1];var handleChange=function handleChange(_ref){var _ref$target=_ref.target,name=_ref$target.name,value=_ref$target.value;if(name==='accountName'){setAccountName(value);return;}if(name==='accountEmail'){setAccountEmail(value);return;}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return props.onSubmit(e,accountName,accountEmail);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row inline\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tagg mb30\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"accountName\",placeholder:\"John Smith\",required:true,onChange:handleChange})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tagg mb30\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form_label\",children:\"Email Address\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text_field\",children:/*#__PURE__*/_jsx(\"input\",{name:\"accountEmail\",type:\"email\",placeholder:\"john.smith@example.com\",required:true,onChange:handleChange})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"label\",{className:\"form_label\",children:[\"Bank Account\",/*#__PURE__*/_jsx(AuBankAccountElement,{options:AU_BANK_ACCOUNT_ELEMENT_OPTIONS})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form_field\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox_wrap agree_check mt-15\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"By providing your bank account details, you agree to this Direct Debit Request and the \"}),/*#__PURE__*/_jsx(\"a\",{onClick:function onClick(){return window.open(\"https://stripe.com/au-becs-dd-service-agreement/legal\",\"_blank\");},rel:\"noopener\",className:\"link\",children:\"Direct Debit Request service agreement\"}),/*#__PURE__*/_jsx(\"label\",{children:\" and authorise Stripe Payments Australia Pty Ltd ACN 160 180 343 Direct Debit User ID number 507156 (\\u201CStripe\\u201D) to debit your account through the Bulk Electronic Clearing System (BECS) on behalf of Rocket Rides (the \\\"Merchant\\\") for any amounts separately communicated to you by the Merchant. You certify that you are either an account holder or an authorised signatory on the account listed above.\"})]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:props.disabled,className:\"fill_btn full_btn btn-effect \".concat(props.disabled?'disable_btn':''),children:\"Confirm payment of \".concat(props.milestoneTotalAmount)})]});}","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/addBankDetails/becsForm.jsx"],"names":["useState","AuBankAccountElement","AU_BANK_ACCOUNT_STYLE","base","color","font","fontSize","invalid","iconColor","AU_BANK_ACCOUNT_ELEMENT_OPTIONS","style","disabled","hideIcon","iconStyle","BecsForm","props","accountName","setAccountName","accountEmail","setAccountEmail","handleChange","target","name","value","e","onSubmit","window","open","milestoneTotalAmount"],"mappings":"oKAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,oBAAT,KAAqC,yBAArC,CAEA;wFACA,GAAMC,CAAAA,qBAAqB,CAAG,CAC5BC,IAAI,CAAE,CACJC,KAAK,CAAE,SADH,CAEJC,IAAI,CAAE,mCAFF,CAGJC,QAAQ,CAAE,MAHN,CAIJ,gBAAiB,CACfF,KAAK,CAAE,SADQ,CAJb,CAOJ,oBAAqB,CACnBA,KAAK,CAAE,SADY,CAPjB,CADsB,CAY5BG,OAAO,CAAE,CACPH,KAAK,CAAE,SADA,CAEPI,SAAS,CAAE,SAFJ,CAGP,oBAAqB,CACnBJ,KAAK,CAAE,SADY,CAHd,CAZmB,CAA9B,CAqBA,GAAMK,CAAAA,+BAA+B,CAAG,CACtCC,KAAK,CAAER,qBAD+B,CAEtCS,QAAQ,CAAE,KAF4B,CAGtCC,QAAQ,CAAE,KAH4B,CAItCC,SAAS,CAAE,OAAS;AAJkB,CAAxC,CAOA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACtC,cAAsCf,QAAQ,CAAC,EAAD,CAA9C,wCAAOgB,WAAP,eAAoBC,cAApB,eACA,eAAwCjB,QAAQ,CAAC,EAAD,CAAhD,yCAAOkB,YAAP,eAAqBC,eAArB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAiC,sBAA9BC,MAA8B,CAApBC,IAAoB,aAApBA,IAAoB,CAAdC,KAAc,aAAdA,KAAc,CACpD,GAAID,IAAI,GAAK,aAAb,CAA4B,CAC1BL,cAAc,CAACM,KAAD,CAAd,CACA,OACD,CACD,GAAID,IAAI,GAAK,cAAb,CAA6B,CAC3BH,eAAe,CAACI,KAAD,CAAf,CACA,OACD,CACF,CATD,CAWA,mBACE,cAAM,QAAQ,CAAE,kBAACC,CAAD,QAAOT,CAAAA,KAAK,CAACU,QAAN,CAAeD,CAAf,CAAkBR,WAAlB,CAA+BE,YAA/B,CAAP,EAAhB,wBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,aAAK,SAAS,CAAC,WAAf,wBACE,cAAO,SAAS,CAAC,YAAjB,kBADF,cAEE,YAAK,SAAS,CAAC,YAAf,uBACE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,aAFP,CAGE,WAAW,CAAC,YAHd,CAIE,QAAQ,KAJV,CAKE,QAAQ,CAAEE,YALZ,EADF,EAFF,GADF,cAcE,aAAK,SAAS,CAAC,WAAf,wBACE,cAAO,SAAS,CAAC,YAAjB,2BADF,cAEE,YAAK,SAAS,CAAC,YAAf,uBACE,cACE,IAAI,CAAC,cADP,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,wBAHd,CAIE,QAAQ,KAJV,CAKE,QAAQ,CAAEA,YALZ,EADF,EAFF,GAdF,GADF,cA6BE,YAAK,SAAS,CAAC,UAAf,uBACE,eAAO,SAAS,CAAC,YAAjB,uCAEE,KAAC,oBAAD,EAAsB,OAAO,CAAEX,+BAA/B,EAFF,GADF,EA7BF,cAoCE,YAAK,SAAS,CAAC,YAAf,uBACE,aAAK,SAAS,CAAC,iCAAf,wBACE,kHADF,cAGE,UAAG,OAAO,CAAE,yBAAMiB,CAAAA,MAAM,CAACC,IAAP,CAAY,uDAAZ,CAAqE,QAArE,CAAN,EAAZ,CAAkG,GAAG,CAAC,UAAtG,CAAiH,SAAS,CAAC,MAA3H,oDAHF,cAIE,mbAJF,GADF,EApCF,cAkDE,eACE,IAAI,CAAC,QADP,CAEE,QAAQ,CAAEZ,KAAK,CAACJ,QAFlB,CAGE,SAAS,wCAAkCI,KAAK,CAACJ,QAAN,CAAiB,aAAjB,CAAiC,EAAnE,CAHX,uCAIwBI,KAAK,CAACa,oBAJ9B,GAlDF,GADF,CA0DD","sourcesContent":["import { useState } from 'react';\nimport { AuBankAccountElement } from '@stripe/react-stripe-js';\n\n// Custom styling can be passed as options when creating an Element.\nconst AU_BANK_ACCOUNT_STYLE = {\n  base: {\n    color: '#161d4a',\n    font: 'Neue Haas Grotesk Text Pro Medium',\n    fontSize: '14px',\n    '::placeholder': {\n      color: '#aab7c4'\n    },\n    ':-webkit-autofill': {\n      color: '#32325d',\n    },\n  },\n  invalid: {\n    color: '#fa755a',\n    iconColor: '#fa755a',\n    ':-webkit-autofill': {\n      color: '#fa755a',\n    },\n  }\n};\n\nconst AU_BANK_ACCOUNT_ELEMENT_OPTIONS = {\n  style: AU_BANK_ACCOUNT_STYLE,\n  disabled: false,\n  hideIcon: false,\n  iconStyle: \"solid\", // or \"default\"\n};\n\nexport default function BecsForm(props) {\n  const [accountName, setAccountName] = useState('');\n  const [accountEmail, setAccountEmail] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    if (name === 'accountName') {\n      setAccountName(value);\n      return;\n    }\n    if (name === 'accountEmail') {\n      setAccountEmail(value);\n      return;\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => props.onSubmit(e, accountName, accountEmail)}>\n      <div className=\"form-row inline\">\n        <div className=\"tagg mb30\">\n          <label className=\"form_label\">Name</label>\n          <div className=\"text_field\">\n            <input\n              type=\"text\"\n              name=\"accountName\"\n              placeholder=\"John Smith\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"tagg mb30\">\n          <label className=\"form_label\">Email Address</label>\n          <div className=\"text_field\">\n            <input\n              name=\"accountEmail\"\n              type=\"email\"\n              placeholder=\"john.smith@example.com\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"form-row\">\n        <label className=\"form_label\">\n          Bank Account\n          <AuBankAccountElement options={AU_BANK_ACCOUNT_ELEMENT_OPTIONS} />\n        </label>\n      </div>\n\n      <div className=\"form_field\">\n        <div className=\"checkbox_wrap agree_check mt-15\">\n          <label>By providing your bank account details, you agree to this Direct Debit Request\n            and the </label>\n          <a onClick={() => window.open(\"https://stripe.com/au-becs-dd-service-agreement/legal\", \"_blank\")} rel=\"noopener\" className=\"link\">Direct Debit Request service agreement</a>\n          <label> and authorise Stripe Payments Australia Pty Ltd ACN 160 180 343\n            Direct Debit User ID number 507156 (“Stripe”) to debit your account\n            through the Bulk Electronic Clearing System (BECS) on behalf of\n            Rocket Rides (the \"Merchant\") for any amounts separately\n            communicated to you by the Merchant. You certify that you are either\n            an account holder or an authorised signatory on the account listed above.</label>\n        </div>\n      </div>\n\n      <button\n        type=\"submit\"\n        disabled={props.disabled}\n        className={`fill_btn full_btn btn-effect ${props.disabled ? 'disable_btn' : ''}`}\n      >{`Confirm payment of ${props.milestoneTotalAmount}`}</button>\n    </form>\n  )\n}"]},"metadata":{},"sourceType":"module"}