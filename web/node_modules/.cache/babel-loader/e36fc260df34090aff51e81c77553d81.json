{"ast":null,"code":"import _slicedToArray from\"/home/appinventiv/Documents/Project/tickt/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import dummy from'../../../assets/images/u_placeholder.jpg';import{withRouter}from'react-router';import noData from'../../../assets/images/no-search-data.png';import{renderTime}from'../../../utils/common';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewApplicants=function NewApplicants(props){var dataItems=props.dataItems,jobType=props.jobType,setJobLabel=props.setJobLabel,isLoading=props.isLoading;var listData=dataItems;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRender=_useState2[0],setRender=_useState2[1];var redirectToInfo=function redirectToInfo(_ref){var jobId=_ref.jobId;var props_=props;if(jobId===null||jobId===void 0?void 0:jobId.length){// let urlEncode: any = window.btoa(`?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`)\nvar urlEncode=\"?jobId=\".concat(jobId,\"&activeType=\").concat((props_===null||props_===void 0?void 0:props_.activeType)||'applicant');props_.history.push(\"/job-detail?\".concat(urlEncode));}};useEffect(function(){if(isLoading==false){setRender(true);}},[isLoading]);if(!isRender){return null;}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"sub_title\",children:\"New Applicants\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex_row tradies_row\",children:(listData===null||listData===void 0?void 0:listData.length)?listData.map(function(_ref2){var amount=_ref2.amount,builderId=_ref2.builderId,builderImage=_ref2.builderImage,durations=_ref2.durations,fromDate=_ref2.fromDate,jobName=_ref2.jobName,jobDescription=_ref2.jobDescription,jobId=_ref2.jobId,quote=_ref2.quote,quoteCount=_ref2.quoteCount,quoteJob=_ref2.quoteJob,location=_ref2.location,location_name=_ref2.location_name,specializationName=_ref2.specializationName,specializationId=_ref2.specializationId,timeLeft=_ref2.timeLeft,toDate=_ref2.toDate,total=_ref2.total,tradeId=_ref2.tradeId,tradieId=_ref2.tradieId,tradeName=_ref2.tradeName,tradeSelectedUrl=_ref2.tradeSelectedUrl;return/*#__PURE__*/_jsx(\"div\",{className:\"flex_col_sm_6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tradie_card\",\"data-aos\":\"fade-in\",\"data-aos-delay\":\"250\",\"data-aos-duration\":\"1000\",children:[/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){redirectToInfo({jobId:jobId});},className:\"more_detail circle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user_wrap\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"u_img icon\",children:/*#__PURE__*/_jsx(\"img\",{src:tradeSelectedUrl||dummy,alt:\"traide-img\",onError:function onError(e){var _e$target,_e$target2;if(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.onerror){e.target.onerror=null;}if(e===null||e===void 0?void 0:(_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.src){e.target.src=dummy;}}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"name\",children:tradeName}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para\",children:jobName})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"commn_para line-2\",children:jobDescription}),/*#__PURE__*/_jsx(\"div\",{className:\"job_info\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{className:\"icon dollar\",children:amount}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:total})}),/*#__PURE__*/_jsx(\"li\",{className:\"icon calendar\",children:renderTime(fromDate,toDate)}),/*#__PURE__*/_jsx(\"li\",{className:\"\",children:/*#__PURE__*/_jsx(\"span\",{children:timeLeft})})]})}),quoteJob?/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){if((quoteCount===null||quoteCount===void 0?void 0:quoteCount.length)||quoteCount){// setJobLabel('applicantList', jobId, 1, specializationId)\n// props.history.push(`/jobs?active=open&quotes=true&jobId=${jobId}`);\nsetJobLabel('listQuote');props.history.replace(\"/jobs?active=applicant&quote=true&jobId=\".concat(jobId));}},className:\"fill_grey_btn full_btn btn-effect\",children:\"\".concat((quoteCount===null||quoteCount===void 0?void 0:quoteCount.length)||quoteCount,\" Application\").concat(quoteCount===1?'':'s')}):/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){setJobLabel('applicantList',jobId,1,specializationId);},className:\"fill_grey_btn full_btn btn-effect\",children:'Applications'})]})});}):!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"no_record  m-t-vh\",children:[/*#__PURE__*/_jsx(\"figure\",{className:\"no_img\",children:/*#__PURE__*/_jsx(\"img\",{src:noData,alt:\"data not found\"})}),/*#__PURE__*/_jsx(\"span\",{children:'No Data Found'})]})})]});};export default withRouter(NewApplicants);","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/builderJobDasboard/components/newApplicants.tsx"],"names":["React","useEffect","useState","dummy","withRouter","noData","renderTime","NewApplicants","props","dataItems","jobType","setJobLabel","isLoading","listData","isRender","setRender","redirectToInfo","jobId","props_","length","urlEncode","activeType","history","push","map","amount","builderId","builderImage","durations","fromDate","jobName","jobDescription","quote","quoteCount","quoteJob","location","location_name","specializationName","specializationId","timeLeft","toDate","total","tradeId","tradieId","tradeName","tradeSelectedUrl","e","target","onerror","src","replace"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,0CAAlB,CAEA,OAASC,UAAT,KAA2B,cAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,2CAAnB,CAEA,OAASC,UAAT,KAA2B,uBAA3B,C,wFA4BA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAgB,CAClC,GAAQC,CAAAA,SAAR,CAAuDD,KAAvD,CAAQC,SAAR,CAAmBC,OAAnB,CAAuDF,KAAvD,CAAmBE,OAAnB,CAA4BC,WAA5B,CAAuDH,KAAvD,CAA4BG,WAA5B,CAAyCC,SAAzC,CAAuDJ,KAAvD,CAAyCI,SAAzC,CACA,GAAIC,CAAAA,QAAa,CAAGJ,SAApB,CAEA,cAA8BP,QAAQ,CAAC,KAAD,CAAtC,wCAAOY,QAAP,eAAiBC,SAAjB,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAoB,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CACvC,GAAMC,CAAAA,MAAW,CAAGV,KAApB,CACA,GAAIS,KAAJ,SAAIA,KAAJ,iBAAIA,KAAK,CAAEE,MAAX,CAAmB,CACf;AACA,GAAIC,CAAAA,SAAc,kBAAaH,KAAb,wBAAiC,CAAAC,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEG,UAAR,GAAsB,WAAvD,CAAlB,CACAH,MAAM,CAACI,OAAP,CAAeC,IAAf,uBAAmCH,SAAnC,GACH,CACJ,CAPD,CASAnB,SAAS,CAAC,UAAM,CACZ,GAAIW,SAAS,EAAI,KAAjB,CAAwB,CACpBG,SAAS,CAAC,IAAD,CAAT,CACH,CACJ,CAJQ,CAIN,CAACH,SAAD,CAJM,CAAT,CAMA,GAAI,CAACE,QAAL,CAAe,CACX,MAAO,KAAP,CACH,CAED,mBACI,MAAC,KAAD,CAAO,QAAP,yBACI,aAAM,SAAS,CAAC,WAAhB,4BADJ,cAEI,YAAK,SAAS,CAAC,sBAAf,UACK,CAAAD,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEM,MAAV,EACGN,QAAQ,CAACW,GAAT,CAAa,mBACTC,CAAAA,MADS,OACTA,MADS,CAETC,SAFS,OAETA,SAFS,CAGTC,YAHS,OAGTA,YAHS,CAITC,SAJS,OAITA,SAJS,CAKTC,QALS,OAKTA,QALS,CAMTC,OANS,OAMTA,OANS,CAOTC,cAPS,OAOTA,cAPS,CAQTd,KARS,OAQTA,KARS,CASTe,KATS,OASTA,KATS,CAUTC,UAVS,OAUTA,UAVS,CAWTC,QAXS,OAWTA,QAXS,CAYTC,QAZS,OAYTA,QAZS,CAaTC,aAbS,OAaTA,aAbS,CAcTC,kBAdS,OAcTA,kBAdS,CAeTC,gBAfS,OAeTA,gBAfS,CAgBTC,QAhBS,OAgBTA,QAhBS,CAiBTC,MAjBS,OAiBTA,MAjBS,CAkBTC,KAlBS,OAkBTA,KAlBS,CAmBTC,OAnBS,OAmBTA,OAnBS,CAoBTC,QApBS,OAoBTA,QApBS,CAqBTC,SArBS,OAqBTA,SArBS,CAsBTC,gBAtBS,OAsBTA,gBAtBS,oBAwBT,YAAK,SAAS,CAAC,eAAf,uBACI,aAAK,SAAS,CAAC,aAAf,CAA6B,WAAS,SAAtC,CAAgD,iBAAe,KAA/D,CAAqE,oBAAkB,MAAvF,wBACI,aACI,OAAO,CAAE,kBAAM,CAAE7B,cAAc,CAAC,CAAEC,KAAK,CAALA,KAAF,CAAD,CAAd,CAA2B,CADhD,CAEI,SAAS,CAAC,oBAFd,EADJ,cAKI,aAAK,SAAS,CAAC,WAAf,wBACI,eAAQ,SAAS,CAAC,YAAlB,uBACI,YACI,GAAG,CAAE4B,gBAAgB,EAAI1C,KAD7B,CAEI,GAAG,CAAC,YAFR,CAGI,OAAO,CAAE,iBAAC2C,CAAD,CAAY,0BACjB,GAAIA,CAAJ,SAAIA,CAAJ,4BAAIA,CAAC,CAAEC,MAAP,oCAAI,UAAWC,OAAf,CAAwB,CACpBF,CAAC,CAACC,MAAF,CAASC,OAAT,CAAmB,IAAnB,CACH,CACD,GAAIF,CAAJ,SAAIA,CAAJ,6BAAIA,CAAC,CAAEC,MAAP,qCAAI,WAAWE,GAAf,CAAoB,CAChBH,CAAC,CAACC,MAAF,CAASE,GAAT,CAAe9C,KAAf,CACH,CACJ,CAVL,EADJ,EADJ,cAeI,aAAK,SAAS,CAAC,SAAf,wBACI,aAAM,SAAS,CAAC,MAAhB,UAAwByC,SAAxB,EADJ,cAEI,UAAG,SAAS,CAAC,YAAb,UAA2Bd,OAA3B,EAFJ,GAfJ,GALJ,cAyBI,UAAG,SAAS,CAAC,mBAAb,UAAkCC,cAAlC,EAzBJ,cA0BI,YAAK,SAAS,CAAC,UAAf,uBACI,mCACI,WAAI,SAAS,CAAC,aAAd,UAA6BN,MAA7B,EADJ,cAEI,WAAI,SAAS,CAAC,EAAd,uBACI,sBACKgB,KADL,EADJ,EAFJ,cAOI,WAAI,SAAS,CAAC,eAAd,UACKnC,UAAU,CAACuB,QAAD,CAAWW,MAAX,CADf,EAPJ,cAUI,WAAI,SAAS,CAAC,EAAd,uBACI,sBACKD,QADL,EADJ,EAVJ,GADJ,EA1BJ,CA6CKL,QAAQ,cACL,eACI,OAAO,CAAE,kBAAM,CACX,GAAI,CAAAD,UAAU,OAAV,EAAAA,UAAU,SAAV,QAAAA,UAAU,CAAEd,MAAZ,GAAsBc,UAA1B,CAAsC,CAClC;AACA;AACAtB,WAAW,CAAC,WAAD,CAAX,CACAH,KAAK,CAACc,OAAN,CAAc4B,OAAd,mDAAiEjC,KAAjE,GACH,CACJ,CARL,CASI,SAAS,CAAC,mCATd,oBAUQ,CAAAgB,UAAU,OAAV,EAAAA,UAAU,SAAV,QAAAA,UAAU,CAAEd,MAAZ,GAAsBc,UAV9B,wBAUuDA,UAAU,GAAK,CAAf,CAAmB,EAAnB,CAAwB,GAV/E,GADK,cAcL,eACI,OAAO,CAAE,kBAAM,CACXtB,WAAW,CAAC,eAAD,CAAkBM,KAAlB,CAAyB,CAAzB,CAA4BqB,gBAA5B,CAAX,CACH,CAHL,CAII,SAAS,CAAC,mCAJd,UAKK,cALL,EA3DR,GADJ,EAxBS,EAAb,CADH,CAiGG,CAAC1B,SAAD,eACI,aAAK,SAAS,CAAC,mBAAf,wBACI,eAAQ,SAAS,CAAC,QAAlB,uBACI,YAAK,GAAG,CAAEP,MAAV,CAAkB,GAAG,CAAC,gBAAtB,EADJ,EADJ,cAII,sBAAO,eAAP,EAJJ,GAnGZ,EAFJ,GADJ,CAgHH,CAzID,CA2IA,cAAeD,CAAAA,UAAU,CAACG,aAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport dummy from '../../../assets/images/u_placeholder.jpg';\nimport approved from '../../../assets/images/approved.png';\nimport { withRouter } from 'react-router';\nimport noDataFound from '../../../assets/images/no-search-data.png';\nimport noData from '../../../assets/images/no-search-data.png';\nimport moment from 'moment';\nimport { renderTime } from '../../../utils/common';\ninterface Applicant {\n    amount: any,\n    builderId: any,\n    builderImage: any,\n    durations: any,\n    fromDate: any,\n    jobName: any,\n    jobDescription: any,\n    jobId: any,\n    quote:any,\n    quoteCount: any,\n    quoteJob: any,\n    specializationName: any,\n    timeLeft: any,\n    toDate: any,\n    total: any,\n    tradeId: any,\n    location: any,\n    location_name: any,\n    specializationId: any,\n    tradeName: any,\n    tradieId: any,\n    isLoading?: any,\n    tradeSelectedUrl: any,\n    activeType?: any\n}\n\nconst NewApplicants = (props: any) => {\n    const { dataItems, jobType, setJobLabel, isLoading } = props;\n    let listData: any = dataItems;\n\n    const [isRender, setRender] = useState(false);\n\n    const redirectToInfo = ({ jobId }: any) => {\n        const props_: any = props;\n        if (jobId?.length) {\n            // let urlEncode: any = window.btoa(`?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`)\n            let urlEncode: any = `?jobId=${jobId}&activeType=${props_?.activeType || 'applicant'}`\n            props_.history.push(`/job-detail?${urlEncode}`);\n        }\n    }\n\n    useEffect(() => {\n        if (isLoading == false) {\n            setRender(true);\n        }\n    }, [isLoading])\n\n    if (!isRender) {\n        return null;\n    }\n\n    return (\n        <React.Fragment>\n            <span className=\"sub_title\">New Applicants</span>\n            <div className=\"flex_row tradies_row\">\n                {listData?.length ?\n                    listData.map(({\n                        amount,\n                        builderId,\n                        builderImage,\n                        durations,\n                        fromDate,\n                        jobName,\n                        jobDescription,\n                        jobId,\n                        quote,\n                        quoteCount,\n                        quoteJob,\n                        location,\n                        location_name,\n                        specializationName,\n                        specializationId,\n                        timeLeft,\n                        toDate,\n                        total,\n                        tradeId,\n                        tradieId,\n                        tradeName,\n                        tradeSelectedUrl,\n                    }: Applicant) => (\n                        <div className=\"flex_col_sm_6\">\n                            <div className=\"tradie_card\" data-aos=\"fade-in\" data-aos-delay=\"250\" data-aos-duration=\"1000\">\n                                <span\n                                    onClick={() => { redirectToInfo({ jobId }) }}\n                                    className=\"more_detail circle\">\n                                </span>\n                                <div className=\"user_wrap\">\n                                    <figure className=\"u_img icon\">\n                                        <img\n                                            src={tradeSelectedUrl || dummy}\n                                            alt=\"traide-img\"\n                                            onError={(e: any) => {\n                                                if (e?.target?.onerror) {\n                                                    e.target.onerror = null;\n                                                }\n                                                if (e?.target?.src) {\n                                                    e.target.src = dummy;\n                                                }\n                                            }}\n                                        />\n                                    </figure>\n                                    <div className=\"details\">\n                                        <span className=\"name\">{tradeName}</span>\n                                        <p className=\"commn_para\">{jobName}</p>\n                                    </div>\n                                </div>\n                                <p className=\"commn_para line-2\">{jobDescription}</p>\n                                <div className=\"job_info\">\n                                    <ul>\n                                        <li className=\"icon dollar\">{amount}</li>\n                                        <li className=\"\">\n                                            <span>\n                                                {total}\n                                            </span>\n                                        </li>\n                                        <li className=\"icon calendar\">\n                                            {renderTime(fromDate, toDate)}\n                                        </li>\n                                        <li className=\"\">\n                                            <span>\n                                                {timeLeft}\n                                            </span>\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                {quoteJob ? (\n                                    <button\n                                        onClick={() => {\n                                            if (quoteCount?.length || quoteCount) {\n                                                // setJobLabel('applicantList', jobId, 1, specializationId)\n                                                // props.history.push(`/jobs?active=open&quotes=true&jobId=${jobId}`);\n                                                setJobLabel('listQuote');\n                                                props.history.replace(`/jobs?active=applicant&quote=true&jobId=${jobId}`)\n                                            }\n                                        }}\n                                        className=\"fill_grey_btn full_btn btn-effect\">\n                                        {`${quoteCount?.length || quoteCount} Application${quoteCount === 1 ? '' : 's'}`}\n                                    </button>\n                                ) : (\n                                    <button\n                                        onClick={() => {\n                                            setJobLabel('applicantList', jobId, 1, specializationId)\n                                        }}\n                                        className=\"fill_grey_btn full_btn btn-effect\">\n                                        {'Applications'}\n                                    </button>\n                                )}\n\n                            </div>\n                        </div>\n                    )) :\n                    !isLoading && (\n                        <div className=\"no_record  m-t-vh\">\n                            <figure className=\"no_img\">\n                                <img src={noData} alt=\"data not found\" />\n                            </figure>\n                            <span>{'No Data Found'}</span>\n                        </div>\n                    )}\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(NewApplicants)"]},"metadata":{},"sourceType":"module"}