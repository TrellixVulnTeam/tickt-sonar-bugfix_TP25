{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/forgetPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createPassword } from '../../redux/auth/actions';\nimport CreatePassword from './components/createPassword';\nimport SuccessPage from './components/successPage';\nimport ResetPassword from './components/resetPassword';\nimport VerifyPhoneNumber from './components/verifyPhoneNumber';\nimport AuthParent from '../../common/auth/authParent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA = [{\n  title: 'Reset Password'\n}, {\n  title: 'Verify your number'\n}, {\n  title: 'Create password'\n}];\n\nconst ForgetPassword = props => {\n  _s();\n\n  const [steps, setSteps] = useState(1);\n  const [loginData, setLoginData] = useState({\n    mobileNumber: ''\n  });\n\n  const updateSteps = (step, newData) => {\n    setSteps(step);\n\n    if (newData) {\n      setLoginData(prevData => ({ ...prevData,\n        ...newData\n      }));\n    }\n  };\n\n  const backButtonHandler = () => {\n    let minStep = 1;\n\n    if (steps === 1) {\n      var _props$history;\n\n      if (props.showModal) {\n        props.modalUpdateSteps(0);\n        return;\n      }\n\n      return props === null || props === void 0 ? void 0 : (_props$history = props.history) === null || _props$history === void 0 ? void 0 : _props$history.push('/login');\n    }\n\n    if (steps === 3) {\n      minStep = 2;\n    }\n\n    setSteps(steps - minStep);\n  };\n\n  const onResetPassword = async password => {\n    const data = { ...loginData,\n      ...password\n    };\n    const res = await createPassword(data);\n\n    if (res.success) {\n      setSteps(4);\n    }\n  };\n\n  const renderPages = () => {\n    switch (steps) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ResetPassword, {\n          updateSteps: updateSteps,\n          history: props.history,\n          step: steps,\n          mobileNumber: loginData.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 24\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(VerifyPhoneNumber, {\n          updateSteps: updateSteps,\n          history: props.history,\n          step: steps,\n          mobileNumber: loginData.mobileNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(CreatePassword, {\n          onResetPassword: onResetPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(SuccessPage, {\n          history: props.history,\n          showModal: props.showModal,\n          setShowModal: props.setShowModal,\n          modalUpdateSteps: props.modalUpdateSteps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  const header = DATA[steps - 1];\n  return header ? /*#__PURE__*/_jsxDEV(AuthParent, {\n    sliderType: \"login\",\n    backButtonHandler: backButtonHandler,\n    hideProgres: true,\n    header: header,\n    steps: steps,\n    history: props.history,\n    showModal: props.showModal,\n    setShowModal: props.setShowModal,\n    modalUpdateSteps: props.modalUpdateSteps,\n    children: renderPages()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this) : renderPages();\n};\n\n_s(ForgetPassword, \"T+KJhds/NERAaTzmEm9YnQLbXPI=\");\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/forgetPassword/forgetPassword.tsx"],"names":["React","useState","createPassword","CreatePassword","SuccessPage","ResetPassword","VerifyPhoneNumber","AuthParent","DATA","title","ForgetPassword","props","steps","setSteps","loginData","setLoginData","mobileNumber","updateSteps","step","newData","prevData","backButtonHandler","minStep","showModal","modalUpdateSteps","history","push","onResetPassword","password","data","res","success","renderPages","setShowModal","header"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createPassword } from '../../redux/auth/actions';\nimport CreatePassword from './components/createPassword';\nimport SuccessPage from './components/successPage';\nimport ResetPassword from './components/resetPassword';\nimport VerifyPhoneNumber from './components/verifyPhoneNumber';\nimport AuthParent from '../../common/auth/authParent';\n\ninterface Propstype {\n    history: any,\n    showModal?: boolean,\n    setShowModal: (data: any) => void,\n    updateSteps?: (data: any) => void,\n    modalUpdateSteps: (data: any) => void,\n}\n\nconst DATA = [\n    { title: 'Reset Password' },\n    { title: 'Verify your number' },\n    { title: 'Create password' },\n]\n\nconst ForgetPassword = (props: Propstype) => {\n    const [steps, setSteps] = useState(1);\n    const [loginData, setLoginData] = useState({\n        mobileNumber: '',\n    })\n\n    const updateSteps = (step: number, newData?: any) => {\n        setSteps(step);\n        if (newData) {\n            setLoginData((prevData: any) => ({ ...prevData, ...newData }))\n        }\n    }\n\n    const backButtonHandler = () => {\n        let minStep = 1;\n        if (steps === 1) {\n            if(props.showModal){\n                props.modalUpdateSteps(0);\n                return;\n            }\n            return props?.history?.push('/login')\n        }\n        if (steps === 3) {\n            minStep = 2\n        }\n        setSteps(steps - minStep)\n    }\n\n    const onResetPassword = async (password: any) => {\n        const data = { ...loginData, ...password }\n        const res = await createPassword(data);\n        if (res.success) {\n            setSteps(4);\n        }\n    }\n\n    const renderPages = () => {\n        switch (steps) {\n            case 1:\n                return <ResetPassword updateSteps={updateSteps} history={props.history} step={steps} mobileNumber={loginData.mobileNumber} />\n            case 2:\n                return <VerifyPhoneNumber updateSteps={updateSteps} history={props.history} step={steps} mobileNumber={loginData.mobileNumber} />\n            case 3:\n                return <CreatePassword onResetPassword={onResetPassword} />\n            case 4:\n                return <SuccessPage history={props.history} showModal={props.showModal} setShowModal={props.setShowModal} modalUpdateSteps={props.modalUpdateSteps} />\n            default: return null\n        }\n    }\n\n    const header = DATA[steps - 1];\n\n    return header ? (\n        <AuthParent sliderType='login' backButtonHandler={backButtonHandler} hideProgres header={header} steps={steps} history={props.history} showModal={props.showModal} setShowModal={props.setShowModal} modalUpdateSteps={props.modalUpdateSteps}>{renderPages()}</AuthParent>\n    ) : renderPages()\n}\n\nexport default ForgetPassword"]},"metadata":{},"sourceType":"module"}