{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JobPostedSuccess = ({\n  history,\n  data,\n  stepCompleted,\n  handleStepForward,\n  templateImage,\n  handleStepComplete,\n  handleStepBack\n}) => {\n  _s();\n\n  const [isLoad, setImageLoad] = useState(false);\n\n  const redirectToSuccess = () => {\n    history.push('/post-job-success');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: redirectToSuccess()\n  }, void 0, false);\n};\n\n_s(JobPostedSuccess, \"EZPp9lKtUuV8tOV0UtNN6Cq3/qc=\");\n\n_c = JobPostedSuccess;\nexport default JobPostedSuccess;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobPostedSuccess\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/postJob/components/jobPostedSuccess.tsx"],"names":["React","useState","JobPostedSuccess","history","data","stepCompleted","handleStepForward","templateImage","handleStepComplete","handleStepBack","isLoad","setImageLoad","redirectToSuccess","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAaA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,aAAjB;AAAgCC,EAAAA,iBAAhC;AAAmDC,EAAAA,aAAnD;AAAkEC,EAAAA,kBAAlE;AAAsFC,EAAAA;AAAtF,CAAD,KAAuH;AAAA;;AAC5I,QAAM,CAACC,MAAD,EAASC,YAAT,IAAyBV,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMW,iBAAiB,GAAG,MAAM;AAC5BT,IAAAA,OAAO,CAACU,IAAR,CAAa,mBAAb;AACH,GAFD;;AAIA,sBACI;AAAA,cACKD,iBAAiB;AADtB,mBADJ;AAKH,CAZD;;GAAMV,gB;;KAAAA,gB;AAcN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\n\ninterface Proptypes {\n    data: any;\n    history: any\n    editDetailPage: any;\n    templateImage: any;\n    stepCompleted: Boolean;\n    handleStepComplete: (data: any) => void;\n    handleStepForward: (data: any) => void;\n    handleStepBack: () => void;\n}\n\nconst JobPostedSuccess = ({ history, data, stepCompleted, handleStepForward, templateImage, handleStepComplete, handleStepBack }: Proptypes) => {\n    const [isLoad, setImageLoad] = useState(false);\n\n    const redirectToSuccess = () => {\n        history.push('/post-job-success');\n    }\n\n    return (\n        <>\n            {redirectToSuccess()}\n        </>\n    )\n}\n\nexport default JobPostedSuccess;\n"]},"metadata":{},"sourceType":"module"}