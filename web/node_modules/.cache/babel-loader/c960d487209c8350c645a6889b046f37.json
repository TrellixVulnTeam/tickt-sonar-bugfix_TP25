{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/activeJobs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { renderTime } from \"../../../utils/common\"; //@ts-ignore\n\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport approved from \"../../../assets/images/approved.png\";\nimport waiting from \"../../../assets/images/exclamation.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ActiveJobs = ({\n  loading,\n  getActiveJobList,\n  activeJobList,\n  resetActiveJobList\n}) => {\n  _s();\n\n  const [jobList, setJobList] = useState([]);\n  const [pageNo, setPageNo] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n  const [isLoad, setIsLoad] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    callJobList();\n    return () => resetActiveJobList();\n  }, []);\n\n  const callJobList = async () => {\n    getActiveJobList(pageNo);\n  };\n\n  useEffect(() => {\n    if ((activeJobList === null || activeJobList === void 0 ? void 0 : activeJobList.length) || Array.isArray(activeJobList)) {\n      const allJobs = [...jobList, ...activeJobList];\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n\n      if (activeJobList.length < 10) {\n        setHasMoreItems(false);\n      }\n\n      resetActiveJobList();\n    }\n  }, [activeJobList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: jobList.length,\n      next: callJobList,\n      style: {\n        overflowX: \"hidden\"\n      },\n      hasMore: hasMoreItems,\n      loader: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sub_title\",\n        children: \"Active Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row tradies_row\",\n        children: !isLoad && !loading && jobList.length ? jobList.map(({\n          jobId,\n          tradeId,\n          specializationId,\n          jobName,\n          fromDate,\n          toDate,\n          timeLeft,\n          amount,\n          locationName,\n          milestoneNumber,\n          totalMilestones,\n          status,\n          builderName,\n          builderImage,\n          quoteJob\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tradie_card\",\n            \"data-aos\": \"fade-in\",\n            \"data-aos-delay\": \"250\",\n            \"data-aos-duration\": \"1000\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/mark-milestone?jobId=${jobId}&redirect_from=jobs`,\n              className: \"more_detail circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user_wrap\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                className: \"u_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: builderImage || dummy,\n                  alt: \"\",\n                  onError: e => {\n                    var _e$target, _e$target2;\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                      e.target.onerror = null;\n                    }\n\n                    if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                      e.target.src = dummy;\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"name\",\n                  children: jobName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"prof\",\n                  children: builderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_info\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon clock\",\n                  children: renderTime(fromDate, toDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon dollar\",\n                  children: amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon location line-1\",\n                  children: locationName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"icon calendar\",\n                  children: timeLeft\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"job_progress_wrap\",\n              id: \"scroll-progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress_wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"completed-digit\",\n                  id: \"digit-progress\",\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [\"Job Milestones \", milestoneNumber]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 29\n                  }, this), \" of\", \" \", totalMilestones]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"approval_info\",\n                  children: [status === \"APPROVED\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: approved,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 31\n                  }, this), status === \"NEEDS APPROVAL\" && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: waiting,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 31\n                  }, this), status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress_bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"done_progress\",\n                    id: \"progress-bar\",\n                    type: \"range\",\n                    min: \"0\",\n                    value: milestoneNumber,\n                    max: totalMilestones\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 23\n            }, this), quoteJob && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mt-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"view_quote\",\n                onClick: () => {\n                  history.push({\n                    pathname: `/active-quote-job`,\n                    state: {\n                      jobData: {\n                        jobId: jobId,\n                        tradeId: tradeId,\n                        specializationId: specializationId\n                      }\n                    }\n                  });\n                },\n                children: \"View your quote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, jobId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this)) : !isLoad && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no_record  m-t-vh\",\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            className: \"no_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: noDataFound,\n              alt: \"data not found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"No Data Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this) // <div className=\"no_record  m-t-vh\">\n        //   <figure>\n        //     <figure className=\"no_img\">\n        //       <img src={activeJobs} alt=\"data not found\" />\n        //     </figure>\n        //   </figure>\n        //   <span className=\"empty_screen_text\">\n        //     You don't have any active job yet\n        //   </span>\n        //   <button\n        //     className=\"empty_screen_button\"\n        //     onClick={() => history.push(\"/\")}\n        //   >\n        //     View recommened jobs\n        //   </button>\n        // </div>\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ActiveJobs, \"Yo3L2snPkeXQEXhc3mAQbmIljmQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = ActiveJobs;\nexport default ActiveJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveJobs\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/activeJobs.tsx"],"names":["React","useState","useEffect","NavLink","useHistory","renderTime","InfiniteScroll","dummy","approved","waiting","noDataFound","ActiveJobs","loading","getActiveJobList","activeJobList","resetActiveJobList","jobList","setJobList","pageNo","setPageNo","hasMoreItems","setHasMoreItems","isLoad","setIsLoad","history","callJobList","length","Array","isArray","allJobs","overflowX","map","jobId","tradeId","specializationId","jobName","fromDate","toDate","timeLeft","amount","locationName","milestoneNumber","totalMilestones","status","builderName","builderImage","quoteJob","e","target","onerror","src","push","pathname","state","jobData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { renderTime } from \"../../../utils/common\";\n//@ts-ignore\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport approved from \"../../../assets/images/approved.png\";\nimport waiting from \"../../../assets/images/exclamation.png\";\nimport activeJobs from \"../../../assets/images/activeJobs.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\n\ninterface Proptypes {\n  loading: boolean;\n  newJobsCount: number;\n  activeJobList: any;\n  getActiveJobList: (page: number) => void;\n  resetActiveJobList: () => void;\n}\n\nconst ActiveJobs = ({\n  loading,\n  getActiveJobList,\n  activeJobList,\n  resetActiveJobList,\n}: Proptypes) => {\n  const [jobList, setJobList] = useState<Array<any>>([]);\n  const [pageNo, setPageNo] = useState<number>(1);\n  const [hasMoreItems, setHasMoreItems] = useState<boolean>(true);\n  const [isLoad, setIsLoad] = useState(true);\n  const history: any = useHistory();\n\n\n  useEffect(() => {\n    callJobList();\n\n    return () => resetActiveJobList();\n  }, []);\n\n  const callJobList = async () => {\n    getActiveJobList(pageNo);\n  };\n\n  useEffect(() => {\n    if (activeJobList?.length || Array.isArray(activeJobList)) {\n      const allJobs = [...jobList, ...activeJobList];\n      setJobList(allJobs);\n      setIsLoad(false);\n      setPageNo(pageNo + 1);\n      if (activeJobList.length < 10) {\n        setHasMoreItems(false);\n      }\n      resetActiveJobList();\n    }\n  }, [activeJobList]);\n\n  return (\n    <div className=\"detail_col\">\n      <InfiniteScroll\n        dataLength={jobList.length}\n        next={callJobList}\n        style={{ overflowX: \"hidden\" }}\n        hasMore={hasMoreItems}\n        loader={<></>}\n      >\n        <span className=\"sub_title\">Active Jobs</span>\n        <div className=\"flex_row tradies_row\">\n          {!isLoad && !loading && jobList.length\n            ? jobList.map(\n                ({\n                  jobId,\n                  tradeId,\n                  specializationId,\n                  jobName,\n                  fromDate,\n                  toDate,\n                  timeLeft,\n                  amount,\n                  locationName,\n                  milestoneNumber,\n                  totalMilestones,\n                  status,\n                  builderName,\n                  builderImage,\n                  quoteJob,\n                }) => (\n                  <div key={jobId} className=\"flex_col_sm_6\">\n                    <div\n                      className=\"tradie_card\"\n                      data-aos=\"fade-in\"\n                      data-aos-delay=\"250\"\n                      data-aos-duration=\"1000\"\n                    >\n                      <NavLink\n                        to={`/mark-milestone?jobId=${jobId}&redirect_from=jobs`}\n                        className=\"more_detail circle\"\n                      ></NavLink>\n                      <div className=\"user_wrap\">\n                        <figure className=\"u_img\">\n                          <img\n                            src={builderImage || dummy}\n                            alt=\"\"\n                            onError={(e: any) => {\n                              if (e?.target?.onerror) {\n                                e.target.onerror = null;\n                              }\n                              if (e?.target?.src) {\n                                e.target.src = dummy;\n                              }\n                            }}\n                          />\n                        </figure>\n                        <div className=\"details\">\n                          <span className=\"name\">{jobName}</span>\n                          <span className=\"prof\">{builderName}</span>\n                        </div>\n                      </div>\n                      <div className=\"job_info\">\n                        <ul>\n                          <li className=\"icon clock\">\n                            {renderTime(fromDate, toDate)}\n                          </li>\n                          <li className=\"icon dollar\">{amount}</li>\n                          <li className=\"icon location line-1\">\n                            {locationName}\n                          </li>\n                          <li className=\"icon calendar\">{timeLeft}</li>\n                        </ul>\n                      </div>\n                      <div\n                        className=\"job_progress_wrap\"\n                        id=\"scroll-progress-bar\"\n                      >\n                        <div className=\"progress_wrapper\">\n                          <span className=\"completed-digit\" id=\"digit-progress\">\n                            <b>Job Milestones {milestoneNumber}</b> of{\" \"}\n                            {totalMilestones}\n                          </span>\n                          <span className=\"approval_info\">\n                            {status === \"APPROVED\" && (\n                              <img src={approved} alt=\"icon\" />\n                            )}\n                            {status === \"NEEDS APPROVAL\" && (\n                              <img src={waiting} alt=\"icon\" />\n                            )}\n                            {status}\n                          </span>\n                          <span className=\"progress_bar\">\n                            <input\n                              className=\"done_progress\"\n                              id=\"progress-bar\"\n                              type=\"range\"\n                              min=\"0\"\n                              value={milestoneNumber}\n                              max={totalMilestones}\n                            />\n                          </span>\n                        </div>\n                      </div>\n                      {quoteJob && (\n                        <div className=\"text-center mt-sm\">\n                          <div\n                            className=\"view_quote\"\n                            onClick={() => {\n                              history.push({\n                                pathname: `/active-quote-job`,\n                                state: {\n                                  jobData: {\n                                    jobId: jobId,\n                                    tradeId: tradeId,\n                                    specializationId: specializationId,\n                                  },\n                                },\n                              });\n                            }}\n                          >\n                            {\"View your quote\"}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )\n              )\n            : !isLoad &&\n              !loading && (\n                <div className=\"no_record  m-t-vh\">\n                  <figure className=\"no_img\">\n                    <img src={noDataFound} alt=\"data not found\" />\n                  </figure>\n                  <span>{\"No Data Found\"}</span>\n                </div>\n                // <div className=\"no_record  m-t-vh\">\n                //   <figure>\n                //     <figure className=\"no_img\">\n                //       <img src={activeJobs} alt=\"data not found\" />\n                //     </figure>\n                //   </figure>\n\n                //   <span className=\"empty_screen_text\">\n                //     You don't have any active job yet\n                //   </span>\n                //   <button\n                //     className=\"empty_screen_button\"\n                //     onClick={() => history.push(\"/\")}\n                //   >\n                //     View recommened jobs\n                //   </button>\n                // </div>\n              )}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default ActiveJobs;\n"]},"metadata":{},"sourceType":"module"}