{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/milestones/addEditMilestone.tsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment'; // import AddMilestone from '../../../postJob/components/addMilestone copy';\n\nimport ChooseTimings from './chooseTimings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// for error messages\nconst label = {\n  milestone_name: 'Milestone Name',\n  from_date: 'From Date',\n  recommended_hours: 'Recommended Hours'\n};\nconst pattern = \"^([0-9][0-9]?[0-9]?[0-9]?[0-9]):[0-9][0-9]$\";\n\nclass AddEditMilestone extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handleChange = (name, value) => {\n      let error_clone = this.state.errors;\n\n      if (name === \"milestone_name\") {\n        value = value.trimLeft().replace(/[^a-zA-Z|0-9 ]/g, \"\");\n      }\n\n      if (name === \"recommended_hours\") {\n        value = value.trimLeft();\n      }\n\n      if (['milestone_name', 'from_date', 'recommended_hours'].includes(name)) {\n        error_clone[name] = this.isInvalid(name, value);\n      }\n\n      this.setState({ ...this.state,\n        [name]: value,\n        errors: error_clone\n      });\n    };\n\n    this.handleContinue = () => {\n      var _props$items;\n\n      let props = this.props;\n      let {\n        milestone_name,\n        isPhotoevidence,\n        from_date,\n        to_date,\n        recommended_hours,\n        order\n      } = this.state;\n      this.props.backToScreen({\n        index: props === null || props === void 0 ? void 0 : props.index,\n        data: {\n          milestone_name,\n          isPhotoevidence,\n          from_date,\n          to_date,\n          recommended_hours,\n          order: order === -1 ? (props === null || props === void 0 ? void 0 : (_props$items = props.items) === null || _props$items === void 0 ? void 0 : _props$items.length) + 1 : order\n        }\n      });\n    };\n\n    this.checkHoursVal = (value, lable, name) => {\n      if (value === null || value === void 0 ? void 0 : value.length) {\n        if (value.match(pattern) !== null) {\n          let splitItem = value.split(':')[1];\n          let IntItem = +splitItem;\n          let conditionItem = IntItem % 15 === 0;\n\n          if (!conditionItem) {\n            return 'Time should be in mutiples of 15 like 10:15, 10:30';\n          }\n        } else {\n          return 'Please enter a valid pattern like : 10:15';\n        }\n      } else {\n        return `${label[name]} is required.`;\n      }\n    };\n\n    this.isInvalid = (name, value) => {\n      switch (name) {\n        case 'milestone_name':\n          return !(value === null || value === void 0 ? void 0 : value.length) ? `${label[name]} is required.` : (value === null || value === void 0 ? void 0 : value.length) > 50 ? 'Maximum 50 characters are allowed.' : '';\n\n        case 'from_date':\n          return !(value === null || value === void 0 ? void 0 : value.length) ? `${label[name]} is required.` : '';\n\n        case 'recommended_hours':\n          return this.checkHoursVal(value, label, name);\n      }\n    };\n\n    this.checkErrors = () => {\n      let {\n        from_date,\n        isPhotoevidence,\n        milestone_name,\n        recommended_hours,\n        to_date,\n        order\n      } = this.state;\n      let error_1 = this.isInvalid('milestone_name', milestone_name);\n      let error_2 = this.isInvalid('from_date', from_date);\n      let error_3 = this.isInvalid('recommended_hours', recommended_hours);\n      let errorItems = {};\n      errorItems['milestone_name'] = error_1;\n      errorItems['from_date'] = error_2;\n      errorItems['recommended_hours'] = error_3;\n\n      if (!(error_1 === null || error_1 === void 0 ? void 0 : error_1.length) && !(error_2 === null || error_2 === void 0 ? void 0 : error_2.length) && !(error_3 === null || error_3 === void 0 ? void 0 : error_3.length)) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.renderTimeWithCustomFormat = (fromDate, toDate, format, formatSet) => {\n      if (moment(fromDate, format).isValid() && !moment(toDate, format).isValid()) {\n        return `${moment(fromDate, format).format('DD MMM')}`;\n      }\n\n      if (moment(fromDate, format).isValid() && moment(toDate, format).isValid()) {\n        let yearEnd = moment().endOf(\"year\").toISOString();\n        let monthEnd = moment(fromDate, format).endOf(\"month\").toISOString();\n        let item = moment(toDate, format).diff(moment(fromDate, format), 'months', true);\n        let item_year = moment(toDate, format).diff(moment(fromDate, format), 'years', true);\n        let monthDiff = parseInt(item.toString());\n        let yearDiff = parseInt(item_year.toString());\n\n        if (yearDiff > 0 || moment(toDate, format).isAfter(yearEnd) || moment(toDate, format).isAfter(yearEnd)) {\n          return `${moment(fromDate, format).format(formatSet[1])} - ${moment(toDate, format).format(formatSet[1])}`;\n        }\n\n        if (monthDiff > 0 || moment(toDate, format).isAfter(monthEnd)) {\n          return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`;\n        }\n\n        return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`;\n      }\n\n      return 'Choose';\n    };\n\n    this.toggleCalenderTime = data => {\n      console.log({\n        data\n      }, '----------------------------------------------------------------------->');\n      this.setState({\n        toggleAddTimings: false,\n        from_date: data && moment(data === null || data === void 0 ? void 0 : data.startDate).isValid() ? moment(data === null || data === void 0 ? void 0 : data.startDate).format('MM-DD-YYYY') : '',\n        to_date: data && moment(data === null || data === void 0 ? void 0 : data.endDate).isValid() ? moment(data === null || data === void 0 ? void 0 : data.endDate).format('MM-DD-YYYY') : ''\n      });\n    };\n\n    this.state = {\n      milestone_name: '',\n      isPhotoevidence: false,\n      from_date: '',\n      to_date: '',\n      recommended_hours: '',\n      order: -1,\n      errors: {\n        milestone_name: '',\n        from_date: '',\n        recommended_hours: '',\n        pattern_error: ''\n      },\n      toggleAddTimings: false\n    };\n  }\n\n  componentDidMount() {\n    let props = this.props;\n    let props_item = props === null || props === void 0 ? void 0 : props.item;\n    this.setState({\n      from_date: props_item === null || props_item === void 0 ? void 0 : props_item.from_date,\n      isPhotoevidence: props_item === null || props_item === void 0 ? void 0 : props_item.isPhotoevidence,\n      milestone_name: props_item === null || props_item === void 0 ? void 0 : props_item.milestone_name,\n      recommended_hours: props_item === null || props_item === void 0 ? void 0 : props_item.recommended_hours,\n      to_date: props_item === null || props_item === void 0 ? void 0 : props_item.to_date,\n      order: props_item === null || props_item === void 0 ? void 0 : props_item.order\n    });\n  }\n\n  render() {\n    // const { handleStepForward, handleStepBack, milestones, editMileStone } = this.props;\n    let {\n      milestone_name,\n      isPhotoevidence,\n      recommended_hours,\n      from_date,\n      to_date,\n      errors\n    } = this.state;\n    let from_date_format = from_date;\n    let to_date_format = to_date;\n    let props = this.props;\n    let check_errors = this.checkErrors();\n    let props_item = props === null || props === void 0 ? void 0 : props.item;\n    let props_items = props === null || props === void 0 ? void 0 : props.items;\n    let props_index = props === null || props === void 0 ? void 0 : props.index;\n\n    if (this.state.toggleAddTimings) {\n      return /*#__PURE__*/_jsxDEV(ChooseTimings, {\n        toggleCalenderTime: this.toggleCalenderTime,\n        items: props_items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_field\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                style: {\n                  zIndex: 999\n                },\n                onClick: () => {\n                  props.backToScreen(); // handleStepForward(6) \n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"title\",\n                children: `${props_item == null ? `Milestone ${(props_items === null || props_items === void 0 ? void 0 : props_items.length) + 1}` : `Edit Milestone ${props_index + 1}`}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex_row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_col_sm_7\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Milestone name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter Milestone name\",\n                onChange: e => {\n                  this.handleChange('milestone_name', e.target.value);\n                },\n                value: milestone_name,\n                name: \"milestone_name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors === null || errors === void 0 ? void 0 : errors.milestone_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkbox_wrap agree_check\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: () => {\n                  this.handleChange('isPhotoevidence', !isPhotoevidence);\n                },\n                checked: isPhotoevidence,\n                className: \"filter-type filled-in\",\n                type: \"checkbox\",\n                id: \"milestone1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"milestone1\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: 'Photo evidence required'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"f_spacebw\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Duration of milestone (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  // handleStepForward(8) \n                  this.setState({\n                    toggleAddTimings: true\n                  });\n                },\n                className: \"fill_btn fill_grey_btn choose_btn\",\n                children: this.renderTimeWithCustomFormat(from_date_format, to_date_format, 'MM-DD-YYYY', ['DD MMM', 'DD MM YYYY'] // ['MMM DD', 'MMM DD YYYY'] // to keep the date format stable on front-end (TIC-2467)\n                )\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form_label\",\n              children: \"Estimated hours (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => {\n                  this.setState({\n                    recommended_hours: e.target.value.trimLeft()\n                  }, () => {\n                    let rh_value = this.state.recommended_hours;\n                    let error_item = this.state.errors; // \"^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$\";\n\n                    if (!(rh_value === null || rh_value === void 0 ? void 0 : rh_value.length) || rh_value.match(pattern) !== null) {\n                      error_item['pattern_error'] = '';\n                      let splitItem = rh_value.split(':')[1];\n                      let IntItem = +splitItem;\n                      let conditionItem = IntItem % 15 === 0;\n\n                      if (!conditionItem) {\n                        error_item['pattern_error'] = 'Time should be in mutiples of 15 like 10:15, 10:30';\n                      }\n                    } else {\n                      error_item['pattern_error'] = 'Please enter a valid pattern like : 10:15';\n                    }\n\n                    this.setState({\n                      errors: error_item\n                    });\n                  });\n                } // onChange={(e) => { this.handleChange('recommended_hours', e.target.value) }}\n                ,\n                value: recommended_hours,\n                autoComplete: \"off\",\n                type: \"text\",\n                placeholder: \"Enter Estimated hours\",\n                name: \"recommended_hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors.recommended_hours\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_msg\",\n              children: errors.pattern_error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_field\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleContinue // className=\"fill_btn full_btn\">\n              ,\n              className: `fill_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`,\n              children: 'Continue'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddEditMilestone;","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/tradieEditProfile/components/milestones/addEditMilestone.tsx"],"names":["React","Component","moment","ChooseTimings","label","milestone_name","from_date","recommended_hours","pattern","AddEditMilestone","constructor","props","handleChange","name","value","error_clone","state","errors","trimLeft","replace","includes","isInvalid","setState","handleContinue","isPhotoevidence","to_date","order","backToScreen","index","data","items","length","checkHoursVal","lable","match","splitItem","split","IntItem","conditionItem","checkErrors","error_1","error_2","error_3","errorItems","renderTimeWithCustomFormat","fromDate","toDate","format","formatSet","isValid","yearEnd","endOf","toISOString","monthEnd","item","diff","item_year","monthDiff","parseInt","toString","yearDiff","isAfter","toggleCalenderTime","console","log","toggleAddTimings","startDate","endDate","pattern_error","componentDidMount","props_item","render","from_date_format","to_date_format","check_errors","props_items","props_index","zIndex","e","target","rh_value","error_item"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport moment from 'moment';\n// import AddMilestone from '../../../postJob/components/addMilestone copy';\nimport ChooseTimings from './chooseTimings';\n\ninterface Props {\n    item: any;\n    items: any;\n    index: any;\n    backToScreen: (data?: any,) => void;\n}\n\ninterface State {\n    milestone_name: string,\n    isPhotoevidence: boolean,\n    from_date: string,\n    to_date: string,\n    recommended_hours: any\n    errors: any;\n    order: number;\n    toggleAddTimings: boolean,\n}\n\n// for error messages\nconst label: { [index: string]: string } = {\n    milestone_name: 'Milestone Name',\n    from_date: 'From Date',\n    recommended_hours: 'Recommended Hours',\n}\n\nconst pattern = \"^([0-9][0-9]?[0-9]?[0-9]?[0-9]):[0-9][0-9]$\";\nclass AddEditMilestone extends Component<Props, State> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            milestone_name: '',\n            isPhotoevidence: false,\n            from_date: '',\n            to_date: '',\n            recommended_hours: '',\n            order: -1,\n            errors: {\n                milestone_name: '',\n                from_date: '',\n                recommended_hours: '',\n                pattern_error: ''\n            },\n            toggleAddTimings: false\n        }\n    }\n\n    componentDidMount() {\n        let props = this.props;\n        let props_item: any = props?.item;\n\n        this.setState({\n            from_date: props_item?.from_date,\n            isPhotoevidence: props_item?.isPhotoevidence,\n            milestone_name: props_item?.milestone_name,\n            recommended_hours: props_item?.recommended_hours,\n            to_date: props_item?.to_date,\n            order: props_item?.order,\n        })\n    }\n\n    handleChange = (name: string, value: any) => {\n        let error_clone: any = this.state.errors;\n\n\n        if (name === \"milestone_name\") {\n            value = (value).trimLeft().replace(/[^a-zA-Z|0-9 ]/g, \"\")\n        }\n\n        if (name === \"recommended_hours\") {\n            value = (value).trimLeft();\n        }\n\n\n        if (['milestone_name', 'from_date', 'recommended_hours'].includes(name)) {\n            error_clone[name] = this.isInvalid(name, value)\n        }\n        this.setState({ ...this.state, [name]: value, errors: error_clone });\n    }\n\n    handleContinue = () => {\n        let props = this.props;\n\n        let {\n            milestone_name,\n            isPhotoevidence,\n            from_date,\n            to_date,\n            recommended_hours,\n            order\n        } = this.state;\n\n        this.props.backToScreen({\n            index: props?.index,\n            data: {\n                milestone_name,\n                isPhotoevidence,\n                from_date,\n                to_date,\n                recommended_hours,\n                order: order === -1 ? props?.items?.length + 1 : order\n            }\n        })\n    }\n\n    checkHoursVal = (value: any, lable: any, name: any) => {\n        if (value?.length) {\n            if (value.match(pattern) !== null) {\n                let splitItem = value.split(':')[1];\n                let IntItem = +splitItem;\n                let conditionItem = IntItem % 15 === 0;\n\n                if (!conditionItem) {\n                    return 'Time should be in mutiples of 15 like 10:15, 10:30';\n                }\n            } else {\n                return 'Please enter a valid pattern like : 10:15';\n            }\n        } else {\n            return `${label[name]} is required.`\n        }\n    }\n\n    isInvalid = (name: string, value: string) => {\n        switch (name) {\n            case 'milestone_name':\n                return !value?.length ? `${label[name]} is required.` : value?.length > 50 ? 'Maximum 50 characters are allowed.' : '';\n            case 'from_date':\n                return !value?.length ? `${label[name]} is required.` : '';\n            case 'recommended_hours':\n                return this.checkHoursVal(value, label, name);\n        }\n    }\n\n    checkErrors = () => {\n        let {\n            from_date,\n            isPhotoevidence,\n            milestone_name,\n            recommended_hours,\n            to_date,\n            order\n        } = this.state;\n\n\n        let error_1 = this.isInvalid('milestone_name', milestone_name);\n        let error_2 = this.isInvalid('from_date', from_date);\n        let error_3 = this.isInvalid('recommended_hours', recommended_hours);\n\n        let errorItems: any = {};\n        errorItems['milestone_name'] = error_1;\n        errorItems['from_date'] = error_2;\n        errorItems['recommended_hours'] = error_3;\n\n        if (!error_1?.length && !error_2?.length && !error_3?.length) {\n            return false;\n        }\n        return true;\n    }\n\n    renderTimeWithCustomFormat = (fromDate: any, toDate: any, format: any, formatSet?: any) => {\n\n        if (moment(fromDate, format).isValid() && !moment(toDate, format).isValid()) {\n            return `${moment(fromDate, format).format('DD MMM')}`\n        }\n\n        if (moment(fromDate, format).isValid() && moment(toDate, format).isValid()) {\n            let yearEnd = moment().endOf(\"year\").toISOString();\n            let monthEnd = moment(fromDate, format).endOf(\"month\").toISOString();\n\n            let item: any = moment(toDate, format).diff(moment(fromDate, format), 'months', true);\n            let item_year: any = moment(toDate, format).diff(moment(fromDate, format), 'years', true);\n\n            let monthDiff = parseInt(item.toString());\n            let yearDiff = parseInt(item_year.toString());\n\n            if (yearDiff > 0 || moment(toDate, format).isAfter(yearEnd) || moment(toDate, format).isAfter(yearEnd)) {\n                return `${moment(fromDate, format).format(formatSet[1])} - ${moment(toDate, format).format(formatSet[1])}`\n            }\n            if (monthDiff > 0 || moment(toDate, format).isAfter(monthEnd)) {\n                return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`\n            }\n            return `${moment(fromDate, format).format(formatSet[0])} - ${moment(toDate, format).format(formatSet[0])}`\n        }\n\n        return 'Choose';\n    }\n\n    toggleCalenderTime = (data?: any) => {\n        console.log({ data }, '----------------------------------------------------------------------->')\n        this.setState({\n            toggleAddTimings: false,\n            from_date: data && moment(data?.startDate).isValid() ? moment(data?.startDate).format('MM-DD-YYYY') : '',\n            to_date: data && moment(data?.endDate).isValid() ? moment(data?.endDate).format('MM-DD-YYYY') : '',\n        })\n    }\n\n    render() {\n        // const { handleStepForward, handleStepBack, milestones, editMileStone } = this.props;\n        let { milestone_name, isPhotoevidence, recommended_hours, from_date, to_date, errors } = this.state;\n        let from_date_format = from_date;\n        let to_date_format = to_date;\n        let props = this.props;\n        let check_errors = this.checkErrors();\n\n        let props_item = props?.item;\n        let props_items = props?.items;\n        let props_index = props?.index;\n\n        if (this.state.toggleAddTimings) {\n            return (\n                <ChooseTimings\n                    toggleCalenderTime={this.toggleCalenderTime}\n                    items={props_items}\n                />\n            )\n        }\n\n        return (\n            <div className=\"custom_container\">\n                <div className=\"form_field\">\n                    <div className=\"flex_row\">\n                        <div className=\"flex_col_sm_8\">\n                            <div className=\"relate\">\n                                <button\n                                    className=\"back\"\n                                    style={{ zIndex: 999 }}\n                                    onClick={() => {\n                                        props.backToScreen();\n                                        // handleStepForward(6) \n                                    }}>\n                                </button>\n                                <span className=\"title\">\n                                    {`${props_item == null ? `Milestone ${props_items?.length + 1}` : `Edit Milestone ${props_index + 1}`}`}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex_row\">\n                    <div className=\"flex_col_sm_7\">\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">Milestone name</label>\n                            <div className=\"text_field\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Enter Milestone name\"\n                                    onChange={(e) => { this.handleChange('milestone_name', e.target.value) }}\n                                    value={milestone_name}\n                                    name=\"milestone_name\" />\n                            </div>\n                            <span className=\"error_msg\">{errors?.milestone_name}</span>\n                        </div>\n                        <div className=\"form_field\">\n\n                            <div className=\"checkbox_wrap agree_check\">\n                                <input\n                                    onChange={() => { this.handleChange('isPhotoevidence', !isPhotoevidence) }}\n                                    checked={isPhotoevidence}\n                                    className=\"filter-type filled-in\"\n                                    type=\"checkbox\"\n                                    id=\"milestone1\" />\n                                <label htmlFor=\"milestone1\">\n                                    <b>\n                                        {'Photo evidence required'}\n                                    </b>\n                                </label>\n                            </div>\n                        </div>\n                        <div className=\"form_field\">\n                            <div className=\"f_spacebw\">\n                                <label className=\"form_label\">Duration of milestone (optional)</label>\n                                <button\n                                    onClick={() => {\n                                        // handleStepForward(8) \n                                        this.setState({\n                                            toggleAddTimings: true\n                                        })\n                                    }}\n                                    className=\"fill_btn fill_grey_btn choose_btn\">\n                                    {this.renderTimeWithCustomFormat(\n                                        from_date_format,\n                                        to_date_format,\n                                        'MM-DD-YYYY',\n                                        ['DD MMM', 'DD MM YYYY']\n                                        // ['MMM DD', 'MMM DD YYYY'] // to keep the date format stable on front-end (TIC-2467)\n                                    )}\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"form_field\">\n                            <label className=\"form_label\">Estimated hours (optional)</label>\n                            <div className=\"text_field\">\n                                <input\n                                    onChange={(e) => {\n                                        this.setState({ recommended_hours: (e.target.value).trimLeft() }, () => {\n                                            let rh_value = this.state.recommended_hours;\n                                            let error_item = this.state.errors;\n\n                                            // \"^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$\";\n\n                                            if (!rh_value?.length || rh_value.match(pattern) !== null) {\n                                                error_item['pattern_error'] = '';\n                                                let splitItem = rh_value.split(':')[1];\n                                                let IntItem = +splitItem;\n                                                let conditionItem = IntItem % 15 === 0;\n                                                if (!conditionItem) {\n                                                    error_item['pattern_error'] = 'Time should be in mutiples of 15 like 10:15, 10:30';\n                                                }\n                                            } else {\n                                                error_item['pattern_error'] = 'Please enter a valid pattern like : 10:15';\n                                            }\n                                            this.setState({ errors: error_item });\n                                        });\n                                    }}\n                                    // onChange={(e) => { this.handleChange('recommended_hours', e.target.value) }}\n                                    value={recommended_hours}\n                                    autoComplete=\"off\"\n                                    type=\"text\"\n                                    placeholder=\"Enter Estimated hours\"\n                                    name=\"recommended_hours\" />\n                            </div>\n                            <span className=\"error_msg\">{errors.recommended_hours}</span>\n                            <span className=\"error_msg\">{errors.pattern_error}</span>\n                        </div>\n\n                        <div className=\"form_field\">\n                            <button\n                                onClick={this.handleContinue}\n                                // className=\"fill_btn full_btn\">\n                                className={`fill_btn full_btn btn-effect ${check_errors ? 'disable_btn' : ''}`}>\n                                {'Continue'}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddEditMilestone;"]},"metadata":{},"sourceType":"module"}