{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/markMilestone.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport UploadMedia from \"../../postJob/components/uploadMedia\";\nimport { renderTime } from \"../../../utils/common\";\nimport LodgeDispute from \"./lodgeDispute/lodgeDispute\";\nimport CancelJobs from \"./cancelJobs/cancelJob\";\nimport DigitalIdVerification from \"../../tradieEditProfile/components/digitalIdVerification\";\nimport Modal from \"@material-ui/core/Modal\"; //@ts-ignore\n\nimport FsLightbox from \"fslightbox-react\";\nimport storageService from \"../../../utils/storageService\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport editIconBlue from \"../../../assets/images/ic-edit-blue.png\";\nimport more from \"../../../assets/images/icon-direction-right.png\";\nimport check from \"../../../assets/images/checked-2.png\";\nimport pendingIcon from \"../../../assets/images/exclamation-icon.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst digitalInfoPoints = [\"Passport\", \"Driver Licence (Driver's license) - scans of front and back are required\", \"Photo Card - scans of front and back are required\", \"New South Wales Driving Instructor Licence - scans of front and back are required\", \"Tasmanian Government Personal Information Card - scans of front and back are required\", \"ImmiCard - scans of front and back are required\", \"Proof of Age card - scans of front and back are required\", \"Australian Defence Force (ADF) identification card (Military ID) - scans of front and back are required\"];\nconst declinedImages = {\n  desktop: {\n    breakpoint: {\n      max: 3000,\n      min: 1200\n    },\n    items: 2,\n    slidesToSlide: 1 // optional, default to 1.\n\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 768\n    },\n    items: 1\n  },\n  mobile: {\n    breakpoint: {\n      max: 650,\n      min: 0\n    },\n    items: 1\n  }\n};\n\nconst MarkMilestone = props => {\n  _s();\n\n  var _history$location, _data$actualHours, _isMilestoneList$;\n\n  const {\n    getMilestoneList,\n    milestoneList,\n    showJobCompletePage,\n    showMilestoneCompletePage,\n    getBankDetails,\n    addBankDetails,\n    updateBankDetails,\n    removeBankDetails,\n    markMilestoneComplete,\n    bankDetails\n  } = props;\n  const history = useHistory();\n  let params = new URLSearchParams((_history$location = history.location) === null || _history$location === void 0 ? void 0 : _history$location.search);\n  params = {\n    jobId: params.get(\"jobId\"),\n    tradeId: params.get(\"tradeId\"),\n    specializationId: params.get(\"specializationId\")\n  };\n  const defaultData = {\n    urls: [],\n    description: \"\",\n    actualHours: \"\",\n    totalAmount: \"0\",\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n    accountVerified: false,\n    stripeAccountId: \"\"\n  };\n  const [data, setData] = useState(defaultData);\n  const [errors, setErrors] = useState({\n    actualHours: \"\",\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\"\n  });\n  const [step, setStep] = useState(1);\n  const [stepCompleted, setStepCompleted] = useState([]);\n  const [isLastMilestone, setIsLastMilestone] = useState(false);\n  const [milestoneIndex, setMilestoneIndex] = useState(0);\n  const [readOnly, setReadOnly] = useState(false);\n  const [toggleItem, setToggleItem] = useState({\n    edit: false,\n    cancel: false,\n    lodge: false\n  });\n  const [milestoneDeclineData, setMilestoneDeclineData] = useState({\n    multipleDeclineListCount: 0,\n    prevMilestoneDeclineId: \"\",\n    currentMilestoneDeclineId: \"\"\n  });\n  const [mediaList, setMediaList] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [digitalIDInfo, setDigitalIDInfo] = useState(false);\n  useEffect(() => {\n    var _history$location2;\n\n    const params = new URLSearchParams((_history$location2 = history.location) === null || _history$location2 === void 0 ? void 0 : _history$location2.search);\n    const jobActionType = params.get(\"jobAction\");\n\n    if (jobActionType === \"dispute\") {\n      setToggleItem(prev => ({ ...prev,\n        lodge: true\n      }));\n    } else if (jobActionType === \"cancel\") {\n      setToggleItem(prev => ({ ...prev,\n        cancel: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    getMilestoneList(params.jobId);\n    getBankDetails();\n  }, [params.jobId, getMilestoneList, getBankDetails]);\n  useEffect(() => {\n    setData(prevData => ({ ...prevData,\n      ...bankDetails\n    }));\n    setReadOnly(!!(bankDetails === null || bankDetails === void 0 ? void 0 : bankDetails.userId));\n  }, [bankDetails]);\n\n  const validateActualHours = value => {\n    if (!value) {\n      return \"Time Spent is required.\";\n    }\n\n    let pattern = \"^([0-9]?[0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\n\n    if (value.match(pattern) !== null) {\n      if (!(+value.split(\":\")[1] % 5 === 0)) {\n        return \"Time should be in mutiples of 5 like 10:05, 10:10\";\n      }\n\n      return \"\";\n    }\n\n    return \"Please enter a valid pattern like : 10:05\"; // '([0-9]?[0-9]{1}|2[0-9]{1}|3[0-9]{1}|4[0-9]{1}|5[0-9]{1}|6[0-9]{1}):[0-5]{1}[0-9]{1}';\n    // return 'Hours should be in hh:mm format.';\n  };\n\n  const errorLabel = {\n    account_number: \"Account Number\",\n    account_name: \"Account Name\",\n    bsb_number: \"BSB Number\"\n  };\n\n  const validateBankDetails = (name, value) => {\n    if (!value) {\n      return `${errorLabel[name]} is required`;\n    }\n\n    switch (name) {\n      case \"account_number\":\n        return value.length > 10 ? \"Maximum 10 digits are allowed\" : value.length < 6 ? \"Minimum 6 digits are required\" : \"\";\n\n      case \"bsb_number\":\n        return !/^\\d{3}-\\d{3}$/.test(value) ? \"Please enter valid BSB Number like 123-444\" : \"\";\n    }\n\n    return \"\";\n  };\n\n  const handleChange = ({\n    target: {\n      name,\n      value\n    }\n  }) => {\n    let newVal;\n    value = value.trimLeft();\n\n    if (name === \"actualHours\") {\n      var _value;\n\n      let tim = (_value = value) === null || _value === void 0 ? void 0 : _value.split(\":\")[0];\n\n      if (value.includes(\":\") && (tim === null || tim === void 0 ? void 0 : tim.length) < 3) {\n        if ((tim === null || tim === void 0 ? void 0 : tim.length) === 2) {\n          newVal = value;\n        } else {\n          newVal = value.split(\":\")[0] < 10 && value.split(\":\")[0] > 0 ? `0${value}` : value;\n        }\n      } else {\n        newVal = value;\n      }\n    }\n\n    setData(prevData => ({ ...prevData,\n      [name]: name === \"actualHours\" ? newVal : value\n    }));\n\n    if (step === 3 && stepCompleted.includes(3)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        [name]: validateActualHours(value)\n      }));\n    }\n\n    if (step === 5 && stepCompleted.includes(5)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        [name]: validateBankDetails(name, value)\n      }));\n    }\n  };\n\n  const {\n    jobId,\n    jobName,\n    milestones,\n    postedBy\n  } = milestoneList || {};\n  const {\n    builderId,\n    builderImage,\n    builderName,\n    reviews,\n    ratings\n  } = postedBy || {};\n  const hoursMinutes = (_data$actualHours = data.actualHours) === null || _data$actualHours === void 0 ? void 0 : _data$actualHours.split(\":\").map(key => parseInt(key));\n  const totalAmount = (milestones === null || milestones === void 0 ? void 0 : milestones[milestoneIndex].amount) * ((milestones === null || milestones === void 0 ? void 0 : milestones[milestoneIndex].pay_type) === \"Fixed price\" ? 1 : (hoursMinutes === null || hoursMinutes === void 0 ? void 0 : hoursMinutes[0]) + (hoursMinutes === null || hoursMinutes === void 0 ? void 0 : hoursMinutes[1]) / 60);\n  useEffect(() => {\n    const multipleList = milestones === null || milestones === void 0 ? void 0 : milestones.filter(({\n      status\n    }) => status === 3);\n\n    if ((multipleList === null || multipleList === void 0 ? void 0 : multipleList.length) > 1) {\n      var _list$declinedReason;\n\n      const list = milestones === null || milestones === void 0 ? void 0 : milestones.find(({\n        status\n      }) => status === 3);\n      setMilestoneDeclineData(prevData => ({ ...prevData,\n        multipleDeclineListCount: multipleList === null || multipleList === void 0 ? void 0 : multipleList.length,\n        prevMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId,\n        currentMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId\n      }));\n      setMediaList(list === null || list === void 0 ? void 0 : (_list$declinedReason = list.declinedReason) === null || _list$declinedReason === void 0 ? void 0 : _list$declinedReason.url);\n    } else if ((multipleList === null || multipleList === void 0 ? void 0 : multipleList.length) === 1) {\n      var _list$declinedReason2;\n\n      const list = milestones === null || milestones === void 0 ? void 0 : milestones.find(({\n        status\n      }) => status === 3);\n      setMilestoneDeclineData(prevData => ({ ...prevData,\n        multipleDeclineListCount: multipleList === null || multipleList === void 0 ? void 0 : multipleList.length,\n        prevMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId,\n        currentMilestoneDeclineId: list === null || list === void 0 ? void 0 : list.milestoneId\n      }));\n      setMediaList(list === null || list === void 0 ? void 0 : (_list$declinedReason2 = list.declinedReason) === null || _list$declinedReason2 === void 0 ? void 0 : _list$declinedReason2.url);\n    }\n  }, [milestones]);\n  console.log(milestoneDeclineData, \"milestoneDeclineData\");\n\n  const setItemToggle = index => {\n    setToggler(prev => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderFilteredItems = () => {\n    let sources = [];\n    let types = [];\n\n    if (mediaList === null || mediaList === void 0 ? void 0 : mediaList.length) {\n      mediaList.forEach(item => {\n        if ((item === null || item === void 0 ? void 0 : item.mediaType) === 2) {\n          sources.push(item.link);\n          types.push(\"video\");\n        } else if ((item === null || item === void 0 ? void 0 : item.mediaType) === 1) {\n          sources.push(item.link);\n          types.push(\"image\");\n        } else {\n          sources.push(item);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return {\n      sources,\n      types\n    };\n  };\n\n  const backTab = name => {\n    var _history$location3;\n\n    const params = new URLSearchParams((_history$location3 = history.location) === null || _history$location3 === void 0 ? void 0 : _history$location3.search);\n    const jobActionType = params.get(\"jobAction\");\n\n    if (jobActionType) {\n      history.goBack();\n      return;\n    }\n\n    setToggleItem(prev => ({ ...prev,\n      [name]: false\n    }));\n  };\n\n  if (toggleItem === null || toggleItem === void 0 ? void 0 : toggleItem.lodge) {\n    return /*#__PURE__*/_jsxDEV(LodgeDispute, {\n      item: {\n        jobId: jobId,\n        jobName: jobName\n      },\n      backTab: backTab,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (toggleItem === null || toggleItem === void 0 ? void 0 : toggleItem.cancel) {\n    return /*#__PURE__*/_jsxDEV(CancelJobs, {\n      item: {\n        jobId: jobId,\n        jobName: jobName\n      },\n      backTab: backTab,\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this);\n  }\n\n  const markMilestoneVerif = val => {\n    if (val === \"backStep\") setStep(5);\n\n    if (val === \"verifSuccess\") {\n      setData(prevData => ({ ...prevData,\n        accountVerified: true\n      }));\n      setStep(5);\n    }\n  };\n\n  const {\n    sources,\n    types\n  } = renderFilteredItems();\n  let page = null;\n  let isMilestoneList = (props === null || props === void 0 ? void 0 : props.milestoneList) || false;\n  let isShowError = false;\n\n  if (isMilestoneList && isMilestoneList[0] && ((_isMilestoneList$ = isMilestoneList[0]) === null || _isMilestoneList$ === void 0 ? void 0 : _isMilestoneList$.status) === 404) {\n    isShowError = true;\n  }\n\n  const renderSteps = () => {\n    var _milestones$sort;\n\n    switch (step) {\n      case 1:\n        return page = !isShowError ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => history.push(\"/active-jobs\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"dot_menu\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: editIconBlue,\n                  alt: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit_menu\",\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => {\n                        setToggleItem(prev => ({ ...prev,\n                          lodge: true\n                        }));\n                      },\n                      className: \"icon lodge\",\n                      children: \"Lodge dispute\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => {\n                        setToggleItem(prev => ({ ...prev,\n                          cancel: true\n                        }));\n                      },\n                      className: \"icon delete\",\n                      children: \"Cancel job\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: \"Your job point of contact has indicated they want to be notified when you reach the following milestones. Tap the milestone and Submit when a milestone is completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), milestoneDeclineData.multipleDeclineListCount > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn full_btn pending_info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: pendingIcon,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), `${milestoneDeclineData.multipleDeclineListCount} Milestones were declined`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"milestones_check\",\n              children: milestones === null || milestones === void 0 ? void 0 : (_milestones$sort = milestones.sort(({\n                order: prevOrder\n              }, {\n                order\n              }) => prevOrder - order)) === null || _milestones$sort === void 0 ? void 0 : _milestones$sort.map(({\n                milestoneId,\n                milestoneName,\n                isPhotoevidence,\n                status,\n                fromDate,\n                toDate,\n                declinedReason,\n                declinedCount\n              }, index) => {\n                var _milestones, _Object$keys, _declinedReason$url, _declinedReason$url2;\n\n                // As discussed now we take this status 4 as status 0 bacause after the decline on the change-request the status becomes 4.\n                const prevMilestoneStatus = (_milestones = milestones[index - 1]) === null || _milestones === void 0 ? void 0 : _milestones.status;\n                const isActive = (status === 0 || status === 4 || status === 5) && ([1, 2].includes(prevMilestoneStatus) || prevMilestoneStatus === undefined);\n                const isDeclined = status === 3;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: [1, 2].includes(status) ? `check` : isActive ? \"active\" : status === 3 ? \"declined\" : \"disabled\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"circle_stepper\",\n                    onClick: () => {\n                      setMediaList(declinedReason === null || declinedReason === void 0 ? void 0 : declinedReason.url);\n                      setMilestoneDeclineData(prevData => ({ ...prevData,\n                        currentMilestoneDeclineId: milestoneId\n                      }));\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: `${milestoneName} ${status === 3 ? \"declined\" : \"\"}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 29\n                    }, this), isPhotoevidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Photo evidence required\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: renderTime(fromDate, toDate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 27\n                  }, this), isDeclined && milestoneDeclineData.currentMilestoneDeclineId === milestoneId && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [((_Object$keys = Object.keys(declinedReason)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"decline_reason\",\n                      children: [/*#__PURE__*/_jsxDEV(FsLightbox, {\n                        toggler: toggler,\n                        slide: selectedSlide,\n                        sources: sources,\n                        types: types\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 508,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"form_label\",\n                        children: \"Decline reason:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 514,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"text_field\",\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"commn_para\",\n                          children: declinedReason === null || declinedReason === void 0 ? void 0 : declinedReason.reason\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 518,\n                          columnNumber: 39\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 37\n                      }, this), (declinedReason === null || declinedReason === void 0 ? void 0 : (_declinedReason$url = declinedReason.url) === null || _declinedReason$url === void 0 ? void 0 : _declinedReason$url.length) > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n                        className: \"decline_media\",\n                        responsive: declinedImages,\n                        showDots: false,\n                        arrows: true,\n                        children: declinedReason === null || declinedReason === void 0 ? void 0 : (_declinedReason$url2 = declinedReason.url) === null || _declinedReason$url2 === void 0 ? void 0 : _declinedReason$url2.map((image, index) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"upload_img_video\",\n                            children: /*#__PURE__*/_jsxDEV(\"figure\", {\n                              className: \"img_video\",\n                              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                                src: image,\n                                alt: \"image\",\n                                onClick: () => setItemToggle(index)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 535,\n                                columnNumber: 51\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 534,\n                              columnNumber: 49\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 533,\n                            columnNumber: 47\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        if (declinedCount >= 5) {\n                          setShowToast(true, \"You have exceeded maximum number of chances to submit the milestone\");\n                          return;\n                        }\n\n                        setMilestoneIndex(index);\n\n                        if (index === (milestones === null || milestones === void 0 ? void 0 : milestones.length) - 1) {\n                          setIsLastMilestone(true);\n                        }\n\n                        if (isPhotoevidence) {\n                          setStep(2);\n                        } else {\n                          setStep(3);\n                        }\n                      },\n                      className: `fill_btn full_btn btn-effect ${milestoneDeclineData.prevMilestoneDeclineId !== milestoneId ? \"disable_btn\" : \"\"}`,\n                      children: \"Remark as Complete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true), isActive && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"fill_btn full_btn btn-effect\",\n                    onClick: () => {\n                      setMilestoneIndex(index);\n\n                      if (index === (milestones === null || milestones === void 0 ? void 0 : milestones.length) - 1) {\n                        setIsLastMilestone(true);\n                      }\n\n                      if (isPhotoevidence) {\n                        setStep(2);\n                      } else {\n                        setStep(3);\n                      }\n                    },\n                    children: \"Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 29\n                  }, this)]\n                }, milestoneId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_6 col_ruler\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Posted by\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tradie_card posted_by \",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"javascript:void(0)\",\n                className: \"chat circle\",\n                onClick: e => {\n                  var _storageService$getIt;\n\n                  e.preventDefault();\n                  history.push({\n                    pathname: `/chat`,\n                    state: {\n                      tradieId: (_storageService$getIt = storageService.getItem(\"userInfo\")) === null || _storageService$getIt === void 0 ? void 0 : _storageService$getIt._id,\n                      builderId: builderId,\n                      jobId: jobId,\n                      jobName: jobName\n                    }\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user_wrap\",\n                onClick: () => history.push(`/builder-info?builderId=${builderId}`),\n                children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"u_img\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: builderImage || dummy,\n                    alt: \"traide-img\",\n                    onError: e => {\n                      var _e$target, _e$target2;\n\n                      if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.onerror) {\n                        e.target.onerror = null;\n                      }\n\n                      if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.src) {\n                        e.target.src = dummy;\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: builderName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"rating\",\n                    children: [ratings, \" | \", reviews, \" reviews\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sub_title\",\n                children: \"Job details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edit_icon\",\n                title: \"More\",\n                onClick: () => history.push(`/job-details-page?jobId=${params.jobId}&redirect_from=jobs`),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: more,\n                  alt: \"more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vid_img_wrapper pt-20\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex_row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_8 relative\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"back\",\n                  onClick: () => {\n                    history.goBack();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no_record  m-t-vh\",\n            children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n              className: \"no_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: noDataFound,\n                alt: \"data not found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"This builder is no longer available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Please contact admin.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return page = /*#__PURE__*/_jsxDEV(UploadMedia, {\n          jobName: jobName,\n          title: \"Photo required\",\n          para: \"Your job point of contact has indicated they want to be notified when you reach the following milestones. Tap the milestone and Submit when a milestone is completed\",\n          stepCompleted: stepCompleted.includes(2),\n          data: data,\n          handleStepBack: () => setStep(1),\n          handleStepForward: () => {},\n          handleStepComplete: stepData => {\n            setData(prevData => ({ ...prevData,\n              ...stepData\n            }));\n            setStepCompleted(prevValue => prevValue.concat([2]));\n            setStep(3);\n          },\n          hasDescription: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => {\n                  var _milestones$milestone;\n\n                  if ((_milestones$milestone = milestones[milestoneIndex]) === null || _milestones$milestone === void 0 ? void 0 : _milestones$milestone.isPhotoevidence) {\n                    setStep(2);\n                  } else {\n                    setStep(1);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Worked hours in this milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: \"The amount paid will be recalculated based on approval of the actual hours by the Builder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Time Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 744,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field time_spent\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"hh:mm\",\n                  name: \"actualHours\",\n                  value: data.actualHours,\n                  onChange: handleChange,\n                  maxLength: 5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 746,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detect_icon\",\n                  children: \"hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.actualHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: () => {\n                setStepCompleted(prevValue => prevValue.concat([3]));\n                const error = validateActualHours(data.actualHours);\n\n                if (error) {\n                  setErrors(prevErrors => ({ ...prevErrors,\n                    actualHours: error\n                  }));\n                } else {\n                  setStep(4);\n                }\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this);\n\n      case 4:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_7\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => setStep(3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: isLastMilestone ? \"Job Complete\" : \"Add payment details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: isLastMilestone ? \"Please enter your prefered payment method below so your point of contact can organise payment\" : \"You need to add your bank account details for payment from the builder after approving this milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this), isLastMilestone && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"f_spacebw total_payment\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total payment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"$\", totalAmount === null || totalAmount === void 0 ? void 0 : totalAmount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_grey_btn bank_btn\",\n              children: [data.userId && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: check,\n                alt: \"check\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 33\n              }, this), \" Bank account\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_9\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"payment_note\",\n                children: [\"Tickt does not store your payment information.\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"commn_para\",\n                children: [\" \", \"Tickt does not handle payment for jobs, we only facilitate communication between tradespeople and builders. If you have problems receiving your payment, please contact your builder.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fill_btn full_btn btn-effect\",\n              onClick: () => setStep(5),\n              children: data.userId ? \"Continue\" : \"Add Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this);\n\n      case 5:\n        return page = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex_row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_col_sm_8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relate\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back\",\n                onClick: () => setStep(4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"xs_sub_title\",\n                children: jobName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this), (data === null || data === void 0 ? void 0 : data.userId) && readOnly && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"edit_delete\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"edit\",\n                    title: \"Edit\",\n                    onClick: () => setReadOnly(!readOnly)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 836,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"delete\",\n                    title: \"Remove\",\n                    onClick: () => removeBankDetails()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 835,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sub_title\",\n              children: \"Payment Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commn_para\",\n              children: \"Enter your bank account details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter Account Name\",\n                  name: \"account_name\",\n                  value: data.account_name,\n                  onChange: handleChange,\n                  maxLength: 50,\n                  readOnly: readOnly\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.account_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"BSB Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter BSB Number\",\n                  name: \"bsb_number\",\n                  value: data.bsb_number,\n                  onChange: handleChange,\n                  maxLength: 7,\n                  readOnly: readOnly\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.bsb_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form_label\",\n                children: \"Account Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text_field\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"Enter Account Number\",\n                  name: \"account_number\",\n                  value: data.account_number,\n                  onChange: handleChange,\n                  maxLength: 10,\n                  max: 9999999999,\n                  readOnly: readOnly\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_msg\",\n                children: errors.account_number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this), data.account_name && data.account_number && data.bsb_number && data.stripeAccountId && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form_field\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"fill_grey_btn full_btn btn-effect id_verified\",\n                  onClick: () => {\n                    if (data === null || data === void 0 ? void 0 : data.accountVerified) return;\n                    setStep(6);\n                  },\n                  children: [(data === null || data === void 0 ? void 0 : data.accountVerified) && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: check,\n                    alt: \"verified\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 27\n                  }, this), `${(data === null || data === void 0 ? void 0 : data.accountVerified) ? \"ID Verified\" : \"Add ID Verification\"}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 905,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"show_label id_info\",\n                onClick: () => setDigitalIDInfo(true),\n                children: \"ID verification is required as part of Stripe ID verification process.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n              className: \"custom_modal\",\n              open: digitalIDInfo,\n              onClose: () => setDigitalIDInfo(false),\n              \"aria-labelledby\": \"simple-modal-title\",\n              \"aria-describedby\": \"simple-modal-description\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom_wh profile_modal\",\n                \"data-aos\": \"zoom-in\",\n                \"data-aos-delay\": \"30\",\n                \"data-aos-duration\": \"1000\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"heading\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sub_title\",\n                    children: \"ID verification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 946,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"close_btn\",\n                    onClick: () => setDigitalIDInfo(false),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: cancel,\n                      alt: \"cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 951,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inner_wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: \"ID verification is required as part of Stripe ID verification process.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"show_label\",\n                    children: \"Below is a spansting of documents that can accept as proof of identity, address, and entity.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 959,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"verificationid_list\",\n                    children: digitalInfoPoints.map((info, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"show_label\",\n                      children: info\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 965,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 963,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bottom_btn custom_btn center\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: `fill_btn full_btn btn-effect`,\n                      onClick: () => setDigitalIDInfo(false),\n                      children: \"Ok\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 971,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 954,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 939,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `fill_btn full_btn btn-effect ${readOnly ? (data === null || data === void 0 ? void 0 : data.accountVerified) ? \"\" : \"disable_btn\" : \"\"}`,\n              onClick: readOnly ? () => {\n                const milestoneData = {\n                  evidence: milestones[milestoneIndex].isPhotoevidence ? data.urls : undefined,\n                  jobId: params.jobId,\n                  milestoneId: milestones[milestoneIndex].milestoneId,\n                  description: milestones[milestoneIndex].isPhotoevidence ? data.description : undefined,\n                  actualHours: data.actualHours,\n                  totalAmount: `${totalAmount === null || totalAmount === void 0 ? void 0 : totalAmount.toFixed(2)}`\n                };\n\n                const callback = jobCompletedCount => {\n                  var _milestoneList$catego, _milestoneList$catego2;\n\n                  const mData = {\n                    timeStamp: moengage.getCurrentTimeStamp(),\n                    category: milestoneList === null || milestoneList === void 0 ? void 0 : (_milestoneList$catego = milestoneList.categories) === null || _milestoneList$catego === void 0 ? void 0 : (_milestoneList$catego2 = _milestoneList$catego[0]) === null || _milestoneList$catego2 === void 0 ? void 0 : _milestoneList$catego2.trade_name,\n                    \"Milestone number\": milestoneIndex + 1\n                  };\n                  moengage.moE_SendEvent(MoEConstants.MILESTONE_COMPLETED, mData);\n                  mixPanel.mixP_SendEvent(MoEConstants.MILESTONE_COMPLETED, mData);\n\n                  if (isLastMilestone) {\n                    showJobCompletePage(jobCompletedCount);\n                  } else {\n                    setStepCompleted([]);\n                    setData(defaultData);\n                    showMilestoneCompletePage();\n                  }\n                };\n\n                markMilestoneComplete(milestoneData, callback);\n              } : () => {\n                setStepCompleted(prevValue => prevValue.concat([5]));\n                const hasErrors = [\"account_name\", \"account_number\", \"bsb_number\"].reduce((prevValue, name) => {\n                  const error = validateBankDetails(name, data[name]);\n                  setErrors(prevErrors => ({ ...prevErrors,\n                    [name]: error\n                  }));\n                  return prevValue || error;\n                }, \"\");\n                const updatedBankDetails = {\n                  account_name: data.account_name,\n                  account_number: data.account_number,\n                  bsb_number: data.bsb_number\n                };\n\n                if (!hasErrors) {\n                  if (bankDetails.userId) {\n                    updateBankDetails({\n                      userId: data.userId,\n                      ...updatedBankDetails\n                    });\n                  } else {\n                    addBankDetails(updatedBankDetails);\n                    const mData = {\n                      timeStamp: moengage.getCurrentTimeStamp()\n                    };\n                    moengage.moE_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n                    mixPanel.mixP_SendEvent(MoEConstants.ADDED_PAYMENT_DETAILS, mData);\n                  }\n                }\n              },\n              children: readOnly ? \"Continue\" : \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this);\n\n      case 6:\n        return page = /*#__PURE__*/_jsxDEV(DigitalIdVerification, {\n          redirect_from: \"mark-milestone\",\n          markMilestoneVerif: markMilestoneVerif,\n          stripeAccountId: data.stripeAccountId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail_col\",\n    children: renderSteps()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1094,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MarkMilestone, \"wbNa4vQ8jNxszABRclbAOtluKz0=\", false, function () {\n  return [useHistory];\n});\n\n_c = MarkMilestone;\nexport default MarkMilestone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkMilestone\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/jobDashboard/components/markMilestone.tsx"],"names":["useEffect","useState","useHistory","setShowToast","UploadMedia","renderTime","LodgeDispute","CancelJobs","DigitalIdVerification","Modal","FsLightbox","storageService","Carousel","dummy","editIconBlue","more","check","pendingIcon","noDataFound","cancel","moengage","mixPanel","MoEConstants","digitalInfoPoints","declinedImages","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","MarkMilestone","props","getMilestoneList","milestoneList","showJobCompletePage","showMilestoneCompletePage","getBankDetails","addBankDetails","updateBankDetails","removeBankDetails","markMilestoneComplete","bankDetails","history","params","URLSearchParams","location","search","jobId","get","tradeId","specializationId","defaultData","urls","description","actualHours","totalAmount","account_name","account_number","bsb_number","accountVerified","stripeAccountId","data","setData","errors","setErrors","step","setStep","stepCompleted","setStepCompleted","isLastMilestone","setIsLastMilestone","milestoneIndex","setMilestoneIndex","readOnly","setReadOnly","toggleItem","setToggleItem","edit","lodge","milestoneDeclineData","setMilestoneDeclineData","multipleDeclineListCount","prevMilestoneDeclineId","currentMilestoneDeclineId","mediaList","setMediaList","toggler","setToggler","selectedSlide","setSelectSlide","digitalIDInfo","setDigitalIDInfo","jobActionType","prev","prevData","userId","validateActualHours","value","pattern","match","split","errorLabel","validateBankDetails","name","length","test","handleChange","target","newVal","trimLeft","tim","includes","prevErrors","jobName","milestones","postedBy","builderId","builderImage","builderName","reviews","ratings","hoursMinutes","map","key","parseInt","amount","pay_type","multipleList","filter","status","list","find","milestoneId","declinedReason","url","console","log","setItemToggle","index","renderFilteredItems","sources","types","forEach","item","mediaType","push","link","backTab","goBack","markMilestoneVerif","val","page","isMilestoneList","isShowError","renderSteps","sort","order","prevOrder","milestoneName","isPhotoevidence","fromDate","toDate","declinedCount","prevMilestoneStatus","isActive","undefined","isDeclined","Object","keys","reason","image","e","preventDefault","pathname","state","tradieId","getItem","_id","onerror","src","stepData","prevValue","concat","error","toFixed","info","milestoneData","evidence","callback","jobCompletedCount","mData","timeStamp","getCurrentTimeStamp","category","categories","trade_name","moE_SendEvent","MILESTONE_COMPLETED","mixP_SendEvent","hasErrors","reduce","updatedBankDetails","ADDED_PAYMENT_DETAILS"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { setShowToast } from \"../../../redux/common/actions\";\nimport UploadMedia from \"../../postJob/components/uploadMedia\";\nimport { renderTime } from \"../../../utils/common\";\nimport LodgeDispute from \"./lodgeDispute/lodgeDispute\";\nimport CancelJobs from \"./cancelJobs/cancelJob\";\nimport DigitalIdVerification from \"../../tradieEditProfile/components/digitalIdVerification\";\nimport Modal from \"@material-ui/core/Modal\";\n\n//@ts-ignore\nimport FsLightbox from \"fslightbox-react\";\nimport storageService from \"../../../utils/storageService\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nimport dummy from \"../../../assets/images/u_placeholder.jpg\";\nimport editIconBlue from \"../../../assets/images/ic-edit-blue.png\";\nimport more from \"../../../assets/images/icon-direction-right.png\";\nimport check from \"../../../assets/images/checked-2.png\";\nimport pendingIcon from \"../../../assets/images/exclamation-icon.png\";\nimport noDataFound from \"../../../assets/images/no-search-data.png\";\nimport verifiedIcon from \"../../../assets/images/checked-2.png\";\nimport cancel from \"../../../assets/images/ic-cancel.png\";\nimport { moengage, mixPanel } from \"../../../services/analyticsTools\";\nimport { MoEConstants } from \"../../../utils/constants\";\n\nconst digitalInfoPoints: Array<string> = [\n  \"Passport\",\n  \"Driver Licence (Driver's license) - scans of front and back are required\",\n  \"Photo Card - scans of front and back are required\",\n  \"New South Wales Driving Instructor Licence - scans of front and back are required\",\n  \"Tasmanian Government Personal Information Card - scans of front and back are required\",\n  \"ImmiCard - scans of front and back are required\",\n  \"Proof of Age card - scans of front and back are required\",\n  \"Australian Defence Force (ADF) identification card (Military ID) - scans of front and back are required\",\n];\n\nconst declinedImages = {\n  desktop: {\n    breakpoint: { max: 3000, min: 1200 },\n    items: 2,\n    slidesToSlide: 1, // optional, default to 1.\n  },\n  tablet: {\n    breakpoint: { max: 1024, min: 768 },\n    items: 1,\n  },\n  mobile: {\n    breakpoint: { max: 650, min: 0 },\n    items: 1,\n  },\n};\n\ninterface BuilderDetails {\n  builderId: string;\n  builderImage: string;\n  builderName: string;\n  ratings: number;\n  reviews: number;\n}\n\ninterface JobDetails {\n  jobId: string;\n  jobName: string;\n  milestones: Array<any>;\n  postedBy: BuilderDetails;\n  categories: Array<any>;\n}\n\ninterface BankDetails {\n  userId: string;\n  account_name: string;\n  account_number: string;\n  bsb_number: string;\n  accountVerified: boolean;\n  stripeAccountId: string;\n}\ninterface Proptypes {\n  getMilestoneList: (jobId: string) => void;\n  milestoneList: JobDetails;\n  showMilestoneCompletePage: () => void;\n  showJobCompletePage: (jobCompletedCount: number) => void;\n  addBankDetails: (data: any) => void;\n  updateBankDetails: (data: any) => void;\n  getBankDetails: () => void;\n  removeBankDetails: () => void;\n  markMilestoneComplete: (\n    data: any,\n    callback: (jobCompletedCount: number) => void\n  ) => void;\n  bankDetails: BankDetails;\n}\n\nconst MarkMilestone = (props: Proptypes) => {\n  const {\n    getMilestoneList,\n    milestoneList,\n    showJobCompletePage,\n    showMilestoneCompletePage,\n    getBankDetails,\n    addBankDetails,\n    updateBankDetails,\n    removeBankDetails,\n    markMilestoneComplete,\n    bankDetails,\n  } = props;\n  const history: any = useHistory();\n  let params: any = new URLSearchParams(history.location?.search);\n  params = {\n    jobId: params.get(\"jobId\"),\n    tradeId: params.get(\"tradeId\"),\n    specializationId: params.get(\"specializationId\"),\n  };\n\n  const defaultData = {\n    urls: [],\n    description: \"\",\n    actualHours: \"\",\n    totalAmount: \"0\",\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n    accountVerified: false,\n    stripeAccountId: \"\",\n  };\n  const [data, setData] = useState<any>(defaultData);\n  const [errors, setErrors] = useState({\n    actualHours: \"\",\n    account_name: \"\",\n    account_number: \"\",\n    bsb_number: \"\",\n  });\n  const [step, setStep] = useState(1);\n  const [stepCompleted, setStepCompleted] = useState<Array<number>>([]);\n  const [isLastMilestone, setIsLastMilestone] = useState(false);\n  const [milestoneIndex, setMilestoneIndex] = useState(0);\n  const [readOnly, setReadOnly] = useState(false);\n  const [toggleItem, setToggleItem] = useState<{ [index: string]: boolean }>({\n    edit: false,\n    cancel: false,\n    lodge: false,\n  });\n\n  const [milestoneDeclineData, setMilestoneDeclineData] = useState<any>({\n    multipleDeclineListCount: 0,\n    prevMilestoneDeclineId: \"\",\n    currentMilestoneDeclineId: \"\",\n  });\n  const [mediaList, setMediaList] = useState([]);\n  const [toggler, setToggler] = useState(false);\n  const [selectedSlide, setSelectSlide] = useState(1);\n  const [digitalIDInfo, setDigitalIDInfo] = useState<boolean>(false);\n\n  useEffect(() => {\n    const params = new URLSearchParams(history.location?.search);\n    const jobActionType: any = params.get(\"jobAction\");\n    if (jobActionType === \"dispute\") {\n      setToggleItem((prev: any) => ({ ...prev, lodge: true }));\n    } else if (jobActionType === \"cancel\") {\n      setToggleItem((prev: any) => ({ ...prev, cancel: true }));\n    }\n  }, []);\n\n  useEffect(() => {\n    getMilestoneList(params.jobId);\n    getBankDetails();\n  }, [params.jobId, getMilestoneList, getBankDetails]);\n\n  useEffect(() => {\n    setData((prevData: any) => ({\n      ...prevData,\n      ...bankDetails,\n    }));\n\n    setReadOnly(!!bankDetails?.userId);\n  }, [bankDetails]);\n\n  const validateActualHours = (value: any) => {\n    if (!value) {\n      return \"Time Spent is required.\";\n    }\n\n    let pattern = \"^([0-9]?[0-9]?[0-9]?[0-9]?[0-9]):[0-5][0-9]$\";\n    if (value.match(pattern) !== null) {\n      if (!(+value.split(\":\")[1] % 5 === 0)) {\n        return \"Time should be in mutiples of 5 like 10:05, 10:10\";\n      }\n      return \"\";\n    }\n    return \"Please enter a valid pattern like : 10:05\";\n    // '([0-9]?[0-9]{1}|2[0-9]{1}|3[0-9]{1}|4[0-9]{1}|5[0-9]{1}|6[0-9]{1}):[0-5]{1}[0-9]{1}';\n    // return 'Hours should be in hh:mm format.';\n  };\n\n  const errorLabel = {\n    account_number: \"Account Number\",\n    account_name: \"Account Name\",\n    bsb_number: \"BSB Number\",\n  } as { [key: string]: string };\n\n  const validateBankDetails = (name: string, value: string) => {\n    if (!value) {\n      return `${errorLabel[name]} is required`;\n    }\n\n    switch (name) {\n      case \"account_number\":\n        return value.length > 10\n          ? \"Maximum 10 digits are allowed\"\n          : value.length < 6\n          ? \"Minimum 6 digits are required\"\n          : \"\";\n      case \"bsb_number\":\n        return !/^\\d{3}-\\d{3}$/.test(value)\n          ? \"Please enter valid BSB Number like 123-444\"\n          : \"\";\n    }\n\n    return \"\";\n  };\n\n  const handleChange = ({ target: { name, value } }: any) => {\n    let newVal: \"\";\n    value = value.trimLeft();\n    if (name === \"actualHours\") {\n      let tim = value?.split(\":\")[0];\n      if (value.includes(\":\") && tim?.length < 3) {\n        if (tim?.length === 2) {\n          newVal = value;\n        } else {\n          newVal =\n            value.split(\":\")[0] < 10 && value.split(\":\")[0] > 0\n              ? `0${value}`\n              : value;\n        }\n      } else {\n        newVal = value;\n      }\n    }\n    setData((prevData: any) => ({\n      ...prevData,\n      [name]: name === \"actualHours\" ? newVal : value,\n    }));\n\n    if (step === 3 && stepCompleted.includes(3)) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: validateActualHours(value),\n      }));\n    }\n\n    if (step === 5 && stepCompleted.includes(5)) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: validateBankDetails(name, value),\n      }));\n    }\n  };\n\n  const { jobId, jobName, milestones, postedBy } = milestoneList || {};\n  const { builderId, builderImage, builderName, reviews, ratings } =\n    postedBy || {};\n\n  const hoursMinutes = data.actualHours\n    ?.split(\":\")\n    .map((key: string) => parseInt(key));\n  const totalAmount =\n    milestones?.[milestoneIndex].amount *\n    (milestones?.[milestoneIndex].pay_type === \"Fixed price\"\n      ? 1\n      : hoursMinutes?.[0] + hoursMinutes?.[1] / 60);\n\n  useEffect(() => {\n    const multipleList: any = milestones?.filter(\n      ({ status }: { status: number }) => status === 3\n    );\n    if (multipleList?.length > 1) {\n      const list: any = milestones?.find(\n        ({ status }: { status: number }) => status === 3\n      );\n      setMilestoneDeclineData((prevData: any) => ({\n        ...prevData,\n        multipleDeclineListCount: multipleList?.length,\n        prevMilestoneDeclineId: list?.milestoneId,\n        currentMilestoneDeclineId: list?.milestoneId,\n      }));\n      setMediaList(list?.declinedReason?.url);\n    } else if (multipleList?.length === 1) {\n      const list: any = milestones?.find(\n        ({ status }: { status: number }) => status === 3\n      );\n      setMilestoneDeclineData((prevData: any) => ({\n        ...prevData,\n        multipleDeclineListCount: multipleList?.length,\n        prevMilestoneDeclineId: list?.milestoneId,\n        currentMilestoneDeclineId: list?.milestoneId,\n      }));\n      setMediaList(list?.declinedReason?.url);\n    }\n  }, [milestones]);\n  console.log(milestoneDeclineData, \"milestoneDeclineData\");\n\n  const setItemToggle = (index: any) => {\n    setToggler((prev: boolean) => !prev);\n    setSelectSlide(index + 1);\n  };\n\n  const renderFilteredItems = () => {\n    let sources: any = [];\n    let types: any = [];\n\n    if (mediaList?.length) {\n      mediaList.forEach((item: any) => {\n        if (item?.mediaType === 2) {\n          sources.push(item.link);\n          types.push(\"video\");\n        } else if (item?.mediaType === 1) {\n          sources.push(item.link);\n          types.push(\"image\");\n        } else {\n          sources.push(item);\n          types.push(\"image\");\n        }\n      });\n    }\n\n    return { sources, types };\n  };\n\n  const backTab = (name: string) => {\n    const params = new URLSearchParams(history.location?.search);\n    const jobActionType: any = params.get(\"jobAction\");\n    if (jobActionType) {\n      history.goBack();\n      return;\n    }\n    setToggleItem((prev: any) => ({ ...prev, [name]: false }));\n  };\n\n  if (toggleItem?.lodge) {\n    return (\n      <LodgeDispute\n        item={{ jobId: jobId, jobName: jobName }}\n        backTab={backTab}\n        history={history}\n      />\n    );\n  }\n\n  if (toggleItem?.cancel) {\n    return (\n      <CancelJobs\n        item={{ jobId: jobId, jobName: jobName }}\n        backTab={backTab}\n        history={history}\n      />\n    );\n  }\n\n  const markMilestoneVerif = (val: any) => {\n    if (val === \"backStep\") setStep(5);\n    if (val === \"verifSuccess\") {\n      setData((prevData: any) => ({\n        ...prevData,\n        accountVerified: true,\n      }));\n      setStep(5);\n    }\n  };\n\n  const { sources, types } = renderFilteredItems();\n  let page = null;\n  let isMilestoneList: any = props?.milestoneList || false;\n  let isShowError = false;\n  if (\n    isMilestoneList &&\n    isMilestoneList[0] &&\n    isMilestoneList[0]?.status === 404\n  ) {\n    isShowError = true;\n  }\n  const renderSteps = () => {\n    switch (step) {\n      case 1:\n        return (page = !isShowError ? (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_6\">\n              <div className=\"relate\">\n                <button\n                  className=\"back\"\n                  onClick={() => history.push(\"/active-jobs\")}\n                ></button>\n\n                <span className=\"xs_sub_title\">{jobName}</span>\n                <span className=\"dot_menu\">\n                  <img src={editIconBlue} alt=\"edit\" />\n                  <div className=\"edit_menu\">\n                    <ul>\n                      <li\n                        onClick={() => {\n                          setToggleItem((prev: any) => ({\n                            ...prev,\n                            lodge: true,\n                          }));\n                        }}\n                        className=\"icon lodge\"\n                      >\n                        Lodge dispute\n                      </li>\n                      <li\n                        onClick={() => {\n                          setToggleItem((prev: any) => ({\n                            ...prev,\n                            cancel: true,\n                          }));\n                        }}\n                        className=\"icon delete\"\n                      >\n                        Cancel job\n                      </li>\n                    </ul>\n                  </div>\n                </span>\n              </div>\n\n              <p className=\"commn_para\">\n                Your job point of contact has indicated they want to be notified\n                when you reach the following milestones. Tap the milestone and\n                Submit when a milestone is completed\n              </p>\n              {milestoneDeclineData.multipleDeclineListCount > 1 && (\n                <button className=\"fill_grey_btn full_btn pending_info\">\n                  <span>\n                    <img src={pendingIcon} alt=\"icon\" />\n                    {`${milestoneDeclineData.multipleDeclineListCount} Milestones were declined`}\n                  </span>\n                </button>\n              )}\n\n              <ul className=\"milestones_check\">\n                {milestones\n                  ?.sort(({ order: prevOrder }, { order }) => prevOrder - order)\n                  ?.map(\n                    (\n                      {\n                        milestoneId,\n                        milestoneName,\n                        isPhotoevidence,\n                        status,\n                        fromDate,\n                        toDate,\n                        declinedReason,\n                        declinedCount,\n                      },\n                      index\n                    ) => {\n                      // As discussed now we take this status 4 as status 0 bacause after the decline on the change-request the status becomes 4.\n                      const prevMilestoneStatus = milestones[index - 1]?.status;\n                      const isActive =\n                        (status === 0 || status === 4 || status === 5) && // here changes done for status 4\n                        // completed or approved\n                        ([1, 2].includes(prevMilestoneStatus) ||\n                          prevMilestoneStatus === undefined);\n                      const isDeclined = status === 3;\n\n                      return (\n                        <li\n                          key={milestoneId}\n                          className={\n                            [1, 2].includes(status)\n                              ? `check`\n                              : isActive\n                              ? \"active\"\n                              : status === 3\n                              ? \"declined\"\n                              : \"disabled\"\n                          }\n                        >\n                          <div\n                            className=\"circle_stepper\"\n                            onClick={() => {\n                              setMediaList(declinedReason?.url);\n                              setMilestoneDeclineData((prevData: any) => ({\n                                ...prevData,\n                                currentMilestoneDeclineId: milestoneId,\n                              }));\n                            }}\n                          >\n                            <span></span>\n                          </div>\n                          <div className=\"info\">\n                            <label>{`${milestoneName} ${\n                              status === 3 ? \"declined\" : \"\"\n                            }`}</label>\n                            {isPhotoevidence && (\n                              <span>Photo evidence required</span>\n                            )}\n                            <span>{renderTime(fromDate, toDate)}</span>\n                          </div>\n\n                          {isDeclined &&\n                            milestoneDeclineData.currentMilestoneDeclineId ===\n                              milestoneId && (\n                              <>\n                                {Object.keys(declinedReason)?.length > 0 && (\n                                  <div className=\"decline_reason\">\n                                    <FsLightbox\n                                      toggler={toggler}\n                                      slide={selectedSlide}\n                                      sources={sources}\n                                      types={types}\n                                    />\n                                    <label className=\"form_label\">\n                                      Decline reason:\n                                    </label>\n                                    <div className=\"text_field\">\n                                      <p className=\"commn_para\">\n                                        {declinedReason?.reason}\n                                      </p>\n                                    </div>\n\n                                    {declinedReason?.url?.length > 0 && (\n                                      <Carousel\n                                        className=\"decline_media\"\n                                        responsive={declinedImages}\n                                        showDots={false}\n                                        arrows={true}\n                                      >\n                                        {declinedReason?.url?.map(\n                                          (image: string, index: number) => {\n                                            return (\n                                              <div className=\"upload_img_video\">\n                                                <figure className=\"img_video\">\n                                                  <img\n                                                    src={image}\n                                                    alt=\"image\"\n                                                    onClick={() =>\n                                                      setItemToggle(index)\n                                                    }\n                                                  />\n                                                </figure>\n                                              </div>\n                                            );\n                                          }\n                                        )}\n                                      </Carousel>\n                                    )}\n                                  </div>\n                                )}\n                                <button\n                                  onClick={() => {\n                                    if (declinedCount >= 5) {\n                                      setShowToast(\n                                        true,\n                                        \"You have exceeded maximum number of chances to submit the milestone\"\n                                      );\n                                      return;\n                                    }\n                                    setMilestoneIndex(index);\n\n                                    if (index === milestones?.length - 1) {\n                                      setIsLastMilestone(true);\n                                    }\n\n                                    if (isPhotoevidence) {\n                                      setStep(2);\n                                    } else {\n                                      setStep(3);\n                                    }\n                                  }}\n                                  className={`fill_btn full_btn btn-effect ${\n                                    milestoneDeclineData.prevMilestoneDeclineId !==\n                                    milestoneId\n                                      ? \"disable_btn\"\n                                      : \"\"\n                                  }`}\n                                >\n                                  Remark as Complete\n                                </button>\n                              </>\n                            )}\n                          {isActive && (\n                            <button\n                              className=\"fill_btn full_btn btn-effect\"\n                              onClick={() => {\n                                setMilestoneIndex(index);\n\n                                if (index === milestones?.length - 1) {\n                                  setIsLastMilestone(true);\n                                }\n\n                                if (isPhotoevidence) {\n                                  setStep(2);\n                                } else {\n                                  setStep(3);\n                                }\n                              }}\n                            >\n                              Done\n                            </button>\n                          )}\n                        </li>\n                      );\n                    }\n                  )}\n              </ul>\n            </div>\n            {/* )} */}\n            <div className=\"flex_col_sm_6 col_ruler\">\n              <span className=\"sub_title\">Posted by</span>\n              <div className=\"tradie_card posted_by \">\n                <a\n                  href=\"javascript:void(0)\"\n                  className=\"chat circle\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    history.push({\n                      pathname: `/chat`,\n                      state: {\n                        tradieId: storageService.getItem(\"userInfo\")?._id,\n                        builderId: builderId,\n                        jobId: jobId,\n                        jobName: jobName,\n                      },\n                    });\n                  }}\n                />\n                <div\n                  className=\"user_wrap\"\n                  onClick={() =>\n                    history.push(`/builder-info?builderId=${builderId}`)\n                  }\n                >\n                  <figure className=\"u_img\">\n                    <img\n                      src={builderImage || dummy}\n                      alt=\"traide-img\"\n                      onError={(e: any) => {\n                        if (e?.target?.onerror) {\n                          e.target.onerror = null;\n                        }\n                        if (e?.target?.src) {\n                          e.target.src = dummy;\n                        }\n                      }}\n                    />\n                  </figure>\n                  <div className=\"details\">\n                    <span className=\"name\">{builderName}</span>\n                    <span className=\"rating\">\n                      {ratings} | {reviews} reviews\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"relate\">\n                <span className=\"sub_title\">Job details</span>\n                <span\n                  className=\"edit_icon\"\n                  title=\"More\"\n                  onClick={() =>\n                    history.push(\n                      `/job-details-page?jobId=${params.jobId}&redirect_from=jobs`\n                    )\n                  }\n                >\n                  <img src={more} alt=\"more\" />\n                </span>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"custom_container\">\n            <div className=\"vid_img_wrapper pt-20\">\n              <div className=\"flex_row\">\n                <div className=\"flex_col_sm_8 relative\">\n                  <button\n                    className=\"back\"\n                    onClick={() => {\n                      history.goBack();\n                    }}\n                  ></button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"no_record  m-t-vh\">\n              <figure className=\"no_img\">\n                <img src={noDataFound} alt=\"data not found\" />\n              </figure>\n              <span>{\"This builder is no longer available.\"}</span>\n              <span>{\"Please contact admin.\"}</span>\n            </div>\n          </div>\n        ));\n      case 2:\n        return (page = (\n          <UploadMedia\n            jobName={jobName}\n            title=\"Photo required\"\n            para=\"Your job point of contact has indicated they want to be notified when you reach the following milestones. Tap the milestone and Submit when a milestone is completed\"\n            stepCompleted={stepCompleted.includes(2)}\n            data={data}\n            handleStepBack={() => setStep(1)}\n            handleStepForward={() => {}}\n            handleStepComplete={(stepData: any) => {\n              setData((prevData: any) => ({\n                ...prevData,\n                ...stepData,\n              }));\n\n              setStepCompleted((prevValue) => prevValue.concat([2]));\n              setStep(3);\n            }}\n            hasDescription\n          />\n        ));\n      case 3:\n        return (page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n              <div className=\"relate\">\n                <button\n                  className=\"back\"\n                  onClick={() => {\n                    if (milestones[milestoneIndex]?.isPhotoevidence) {\n                      setStep(2);\n                    } else {\n                      setStep(1);\n                    }\n                  }}\n                ></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n              </div>\n              <span className=\"sub_title\">Worked hours in this milestone</span>\n\n              <p className=\"commn_para\">\n                The amount paid will be recalculated based on approval of the\n                actual hours by the Builder\n              </p>\n\n              <div className=\"form_field\">\n                <label className=\"form_label\">Time Spent</label>\n                <div className=\"text_field time_spent\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"hh:mm\"\n                    name=\"actualHours\"\n                    value={data.actualHours}\n                    onChange={handleChange}\n                    maxLength={5}\n                  />\n                  <span className=\"detect_icon\">hours</span>\n                </div>\n                <span className=\"error_msg\">{errors.actualHours}</span>\n              </div>\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={() => {\n                  setStepCompleted((prevValue) => prevValue.concat([3]));\n\n                  const error = validateActualHours(data.actualHours);\n                  if (error) {\n                    setErrors((prevErrors) => ({\n                      ...prevErrors,\n                      actualHours: error,\n                    }));\n                  } else {\n                    setStep(4);\n                  }\n                }}\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        ));\n      case 4:\n        return (page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_7\">\n              <div className=\"relate\">\n                <button className=\"back\" onClick={() => setStep(3)}></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n              </div>\n              <span className=\"sub_title\">\n                {isLastMilestone ? \"Job Complete\" : \"Add payment details\"}\n              </span>\n              <p className=\"commn_para\">\n                {isLastMilestone\n                  ? \"Please enter your prefered payment method below so your point of contact can organise payment\"\n                  : \"You need to add your bank account details for payment from the builder after approving this milestone\"}\n              </p>\n              {isLastMilestone && (\n                <div className=\"f_spacebw total_payment\">\n                  <span>Total payment</span>\n                  <span>${totalAmount?.toFixed(2)}</span>\n                </div>\n              )}\n              <button className=\"fill_grey_btn bank_btn\">\n                {data.userId && <img src={check} alt=\"check\" />} Bank account\n              </button>\n            </div>\n            <div className=\"flex_col_sm_9\">\n              <div className=\"form_field\">\n                <span className=\"payment_note\">\n                  Tickt does not store your payment information.{\" \"}\n                </span>\n                <p className=\"commn_para\">\n                  {\" \"}\n                  Tickt does not handle payment for jobs, we only facilitate\n                  communication between tradespeople and builders. If you have\n                  problems receiving your payment, please contact your builder.\n                </p>\n              </div>\n              <button\n                className=\"fill_btn full_btn btn-effect\"\n                onClick={() => setStep(5)}\n              >\n                {data.userId ? \"Continue\" : \"Add Details\"}\n              </button>\n            </div>\n          </div>\n        ));\n      case 5:\n        return (page = (\n          <div className=\"flex_row\">\n            <div className=\"flex_col_sm_8\">\n              <div className=\"relate\">\n                <button className=\"back\" onClick={() => setStep(4)}></button>\n                <span className=\"xs_sub_title\">{jobName}</span>\n                {data?.userId && readOnly && (\n                  <>\n                    <div className=\"edit_delete\">\n                      <span\n                        className=\"edit\"\n                        title=\"Edit\"\n                        onClick={() => setReadOnly(!readOnly)}\n                      ></span>\n                      <span\n                        className=\"delete\"\n                        title=\"Remove\"\n                        onClick={() => removeBankDetails()}\n                      ></span>\n                    </div>\n                  </>\n                )}\n              </div>\n              <span className=\"sub_title\">Payment Details</span>\n              <p className=\"commn_para\">Enter your bank account details</p>\n\n              <div className=\"form_field\">\n                <label className=\"form_label\">Account Name</label>\n                <div className=\"text_field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Account Name\"\n                    name=\"account_name\"\n                    value={data.account_name}\n                    onChange={handleChange}\n                    maxLength={50}\n                    readOnly={readOnly}\n                  />\n                </div>\n                <span className=\"error_msg\">{errors.account_name}</span>\n              </div>\n              <div className=\"form_field\">\n                <label className=\"form_label\">BSB Number</label>\n                <div className=\"text_field\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter BSB Number\"\n                    name=\"bsb_number\"\n                    value={data.bsb_number}\n                    onChange={handleChange}\n                    maxLength={7}\n                    readOnly={readOnly}\n                  />\n                </div>\n                <span className=\"error_msg\">{errors.bsb_number}</span>\n              </div>\n              <div className=\"form_field\">\n                <label className=\"form_label\">Account Number</label>\n                <div className=\"text_field\">\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter Account Number\"\n                    name=\"account_number\"\n                    value={data.account_number}\n                    onChange={handleChange}\n                    maxLength={10}\n                    max={9999999999}\n                    readOnly={readOnly}\n                  />\n                </div>\n                <span className=\"error_msg\">{errors.account_number}</span>\n              </div>\n              {data.account_name &&\n                data.account_number &&\n                data.bsb_number &&\n                data.stripeAccountId && (\n                  <>\n                    <div className=\"form_field\">\n                      <button\n                        className=\"fill_grey_btn full_btn btn-effect id_verified\"\n                        onClick={() => {\n                          if (data?.accountVerified) return;\n                          setStep(6);\n                        }}\n                      >\n                        {data?.accountVerified && (\n                          <img src={check} alt=\"verified\" />\n                        )}\n                        {`${\n                          data?.accountVerified\n                            ? \"ID Verified\"\n                            : \"Add ID Verification\"\n                        }`}\n                      </button>\n                    </div>\n                    <span\n                      className=\"show_label id_info\"\n                      onClick={() => setDigitalIDInfo(true)}\n                    >\n                      ID verification is required as part of Stripe ID\n                      verification process.\n                    </span>\n                  </>\n                )}\n\n              <Modal\n                className=\"custom_modal\"\n                open={digitalIDInfo}\n                onClose={() => setDigitalIDInfo(false)}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                <div\n                  className=\"custom_wh profile_modal\"\n                  data-aos=\"zoom-in\"\n                  data-aos-delay=\"30\"\n                  data-aos-duration=\"1000\"\n                >\n                  <div className=\"heading\">\n                    <span className=\"sub_title\">ID verification</span>\n                    <button\n                      className=\"close_btn\"\n                      onClick={() => setDigitalIDInfo(false)}\n                    >\n                      <img src={cancel} alt=\"cancel\" />\n                    </button>\n                  </div>\n                  <div className=\"inner_wrap\">\n                    <span className=\"show_label\">\n                      ID verification is required as part of Stripe ID\n                      verification process.\n                    </span>\n                    <span className=\"show_label\">\n                      Below is a spansting of documents that can accept as proof\n                      of identity, address, and entity.\n                    </span>\n                    <ul className=\"verificationid_list\">\n                      {digitalInfoPoints.map((info, index) => (\n                        <li className=\"show_label\" key={index}>\n                          {info}\n                        </li>\n                      ))}\n                    </ul>\n                    <div className=\"bottom_btn custom_btn center\">\n                      <button\n                        className={`fill_btn full_btn btn-effect`}\n                        onClick={() => setDigitalIDInfo(false)}\n                      >\n                        Ok\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Modal>\n\n              <button\n                className={`fill_btn full_btn btn-effect ${\n                  readOnly ? (data?.accountVerified ? \"\" : \"disable_btn\") : \"\"\n                }`}\n                onClick={\n                  readOnly\n                    ? () => {\n                        const milestoneData = {\n                          evidence: milestones[milestoneIndex].isPhotoevidence\n                            ? data.urls\n                            : undefined,\n                          jobId: params.jobId,\n                          milestoneId: milestones[milestoneIndex].milestoneId,\n                          description: milestones[milestoneIndex]\n                            .isPhotoevidence\n                            ? data.description\n                            : undefined,\n                          actualHours: data.actualHours,\n                          totalAmount: `${totalAmount?.toFixed(2)}`,\n                        };\n\n                        const callback = (jobCompletedCount: number) => {\n                          const mData = {\n                            timeStamp: moengage.getCurrentTimeStamp(),\n                            category:\n                              milestoneList?.categories?.[0]?.trade_name,\n                            \"Milestone number\": milestoneIndex + 1,\n                          };\n                          moengage.moE_SendEvent(\n                            MoEConstants.MILESTONE_COMPLETED,\n                            mData\n                          );\n                          mixPanel.mixP_SendEvent(\n                            MoEConstants.MILESTONE_COMPLETED,\n                            mData\n                          );\n                          if (isLastMilestone) {\n                            showJobCompletePage(jobCompletedCount);\n                          } else {\n                            setStepCompleted([]);\n                            setData(defaultData);\n                            showMilestoneCompletePage();\n                          }\n                        };\n\n                        markMilestoneComplete(milestoneData, callback);\n                      }\n                    : () => {\n                        setStepCompleted((prevValue) => prevValue.concat([5]));\n\n                        const hasErrors = [\n                          \"account_name\",\n                          \"account_number\",\n                          \"bsb_number\",\n                        ].reduce((prevValue, name) => {\n                          const error = validateBankDetails(name, data[name]);\n                          setErrors((prevErrors) => ({\n                            ...prevErrors,\n                            [name]: error,\n                          }));\n\n                          return prevValue || error;\n                        }, \"\");\n\n                        const updatedBankDetails = {\n                          account_name: data.account_name,\n                          account_number: data.account_number,\n                          bsb_number: data.bsb_number,\n                        };\n                        if (!hasErrors) {\n                          if (bankDetails.userId) {\n                            updateBankDetails({\n                              userId: data.userId,\n                              ...updatedBankDetails,\n                            });\n                          } else {\n                            addBankDetails(updatedBankDetails);\n                            const mData = {\n                              timeStamp: moengage.getCurrentTimeStamp(),\n                            };\n                            moengage.moE_SendEvent(\n                              MoEConstants.ADDED_PAYMENT_DETAILS,\n                              mData\n                            );\n                            mixPanel.mixP_SendEvent(\n                              MoEConstants.ADDED_PAYMENT_DETAILS,\n                              mData\n                            );\n                          }\n                        }\n                      }\n                }\n              >\n                {readOnly ? \"Continue\" : \"Save changes\"}\n              </button>\n            </div>\n          </div>\n        ));\n      case 6:\n        return (page = (\n          <DigitalIdVerification\n            redirect_from={\"mark-milestone\"}\n            markMilestoneVerif={markMilestoneVerif}\n            stripeAccountId={data.stripeAccountId}\n          />\n        ));\n\n      default:\n        return null;\n    }\n  };\n\n  return <div className=\"detail_col\">{renderSteps()}</div>;\n};\n\nexport default MarkMilestone;\n"]},"metadata":{},"sourceType":"module"}