{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/selectYourSphere.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { setShowToast } from '../../../redux/common/actions';\nimport spherePlaceholder from \"../../../assets/images/ic_categories_placeholder.svg\";\nimport noData from '../../../assets/images/no-search-data.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCategories = props => {\n  _s();\n\n  var _props$tradeListData;\n\n  const [trade, setTrade] = useState(props.trade);\n  const [imgPath, setimagePath] = useState([]);\n\n  const onClick = item => {\n    if (item == trade) {\n      return setTrade('');\n    }\n\n    setTrade(item);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (trade) {\n      props.updateSteps(props.step + 1, {\n        trade\n      });\n    } else {\n      setShowToast(true, \"Please select a trade\");\n    }\n  };\n\n  const onImageError = index => {\n    let tmp = [...imgPath];\n    tmp[index] = true;\n    setimagePath(tmp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select_sphere form_wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ((_props$tradeListData = props.tradeListData) === null || _props$tradeListData === void 0 ? void 0 : _props$tradeListData.length) ? props.tradeListData.map((item, index) => {\n        const active = trade === item._id;\n        const imgSrc = item.selected_url && !imgPath[index] ? item.selected_url : spherePlaceholder; // console.log(index,imgSrc, \"imgSrc\")\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: active ? 'active' : '',\n          onClick: () => onClick(item._id),\n          children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onError: () => onImageError(index),\n              src: imgSrc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"name\",\n            children: item.trade_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"no_data\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: noData,\n          alt: \"no-data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fill_btn btn-effect\",\n      onClick: onSubmit,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectCategories, \"SMbSmUtziTpSnfqnXqjlaAcxU4Q=\");\n\n_c = SelectCategories;\nexport default SelectCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCategories\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/signup/components/selectYourSphere.tsx"],"names":["useState","setShowToast","noData","SelectCategories","props","trade","setTrade","imgPath","setimagePath","onClick","item","onSubmit","e","preventDefault","updateSteps","step","onImageError","index","tmp","tradeListData","length","map","active","_id","imgSrc","selected_url","spherePlaceholder","trade_name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,YAAT,QAA6B,+BAA7B;;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;;;AASA,MAAMC,gBAAgB,GAAIC,KAAD,IAAsB;AAAA;;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,YAAV,IAA0BR,QAAQ,CAAM,EAAN,CAAxC;;AAEA,QAAMS,OAAO,GAAIC,IAAD,IAAkB;AAC9B,QAAIA,IAAI,IAAIL,KAAZ,EAAmB;AACf,aAAOC,QAAQ,CAAC,EAAD,CAAf;AACH;;AACDA,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAkB;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIR,KAAJ,EAAW;AACPD,MAAAA,KAAK,CAACU,WAAN,CAAkBV,KAAK,CAACW,IAAN,GAAa,CAA/B,EAAkC;AAAEV,QAAAA;AAAF,OAAlC;AACH,KAFD,MAEO;AACHJ,MAAAA,YAAY,CAAC,IAAD,EAAO,uBAAP,CAAZ;AACH;AACJ,GAPD;;AASA,QAAMe,YAAY,GAAIC,KAAD,IAAmB;AACpC,QAAIC,GAAG,GAAG,CAAC,GAAGX,OAAJ,CAAV;AACAW,IAAAA,GAAG,CAACD,KAAD,CAAH,GAAa,IAAb;AACAT,IAAAA,YAAY,CAACU,GAAD,CAAZ;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,4BACI;AAAA,gBACK,yBAAAd,KAAK,CAACe,aAAN,8EAAqBC,MAArB,IAA8BhB,KAAK,CAACe,aAAN,CAAoBE,GAApB,CAAwB,CAACX,IAAD,EAAOO,KAAP,KAAiB;AACpE,cAAMK,MAAM,GAAGjB,KAAK,KAAKK,IAAI,CAACa,GAA9B;AACA,cAAMC,MAAM,GAAId,IAAI,CAACe,YAAL,IAAqB,CAAClB,OAAO,CAACU,KAAD,CAA9B,GAAyCP,IAAI,CAACe,YAA9C,GAA6DC,iBAA5E,CAFoE,CAGpE;;AACA,4BACI;AAAmB,UAAA,SAAS,EAAEJ,MAAM,GAAG,QAAH,GAAc,EAAlD;AAAsD,UAAA,OAAO,EAAE,MAAMb,OAAO,CAACC,IAAI,CAACa,GAAN,CAA5E;AAAA,kCACI;AAAA,mCAGI;AAAK,cAAA,OAAO,EAAE,MAAMP,YAAY,CAACC,KAAD,CAAhC;AAAyC,cAAA,GAAG,EAAEO;AAA9C;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAwBd,IAAI,CAACiB;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA,WAASjB,IAAI,CAACa,GAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAf8B,CAA9B,gBAeI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,+BACD;AAAK,UAAA,GAAG,EAAErB,MAAV;AAAkB,UAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA;AAhBT;AAAA;AAAA;AAAA;AAAA,YADJ,eAqBI;AAAQ,MAAA,SAAS,EAAC,qBAAlB;AAAwC,MAAA,OAAO,EAAES,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAnDD;;GAAMR,gB;;KAAAA,gB;AAqDN,eAAeA,gBAAf","sourcesContent":["import { useState } from 'react';\nimport Constants from '../../../utils/constants';\nimport { setShowToast } from '../../../redux/common/actions';\nimport spherePlaceholder from '../../../assets/images/ic_categories_placeholder.svg';\nimport noData from '../../../assets/images/no-search-data.png';\n\ninterface Propstype {\n    updateSteps: (num: number, data: any) => void\n    step: number\n    tradeListData: Array<any>,\n    trade: string,\n}\n\nconst SelectCategories = (props: Propstype) => {\n    const [trade, setTrade] = useState(props.trade);\n    const [imgPath, setimagePath] = useState<any>([]);\n\n    const onClick = (item: string) => {\n        if (item == trade) {\n            return setTrade('')\n        }\n        setTrade(item)\n    }\n\n    const onSubmit = async (e: any) => {\n        e.preventDefault();\n        if (trade) {\n            props.updateSteps(props.step + 1, { trade })\n        } else {\n            setShowToast(true, \"Please select a trade\")\n        }\n    }\n\n    const onImageError = (index: number) => {\n        let tmp = [...imgPath]\n        tmp[index] = true\n        setimagePath(tmp)\n    }\n\n    return (\n        <div className=\"select_sphere form_wrapper\">\n            <ul>\n                {props.tradeListData?.length ? props.tradeListData.map((item, index) => {\n                    const active = trade === item._id;\n                    const imgSrc = (item.selected_url && !imgPath[index]) ? item.selected_url : spherePlaceholder\n                    // console.log(index,imgSrc, \"imgSrc\")\n                    return (\n                        <li key={item._id} className={active ? 'active' : ''} onClick={() => onClick(item._id)}>\n                            <figure>\n                                {/* <img src={item[active ? 'selected_url' : 'unselected_url']} alt={item.trade_name} /> */}\n                                {/* <img onError={() => onImageError(index)} src={(item.selected_url && !imgPath[index]) ? item.selected_url : spherePlaceholder} /> */}\n                                <img onError={() => onImageError(index)} src={imgSrc} />\n                                {/* {item.selected_url && console.log(item.selected_url, \"selected url\")} */}\n                            </figure>\n                            <span className=\"name\">{item.trade_name}</span>\n                        </li>\n                    )\n                }) : <li className='no_data'>\n                    <img src={noData} alt=\"no-data\" />\n                </li>}\n            </ul>\n            <button className=\"fill_btn btn-effect\" onClick={onSubmit}>Next</button>\n        </div>\n    )\n}\n\nexport default SelectCategories\n"]},"metadata":{},"sourceType":"module"}