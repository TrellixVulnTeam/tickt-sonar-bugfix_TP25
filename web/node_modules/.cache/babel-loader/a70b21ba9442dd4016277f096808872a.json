{"ast":null,"code":"var _jsxFileName = \"/home/appinventiv/Documents/Project/tickt/web/src/pages/shared/bannerSearchProps.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Constants, { MoEConstants } from \"../../utils/constants\"; // @ts-ignore\n\nimport PlacesAutocomplete from \"react-places-autocomplete\"; // @ts-ignore\n\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\n\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { getSearchJobList, getRecentSearchList, postHomeSearchData, getRecentLocationList } from \"../../redux/homeSearch/actions\";\nimport { isHandleChanges } from \"../../redux/jobs/actions\"; // @ts-ignore\n\nimport { useDetectClickOutside } from \"react-detect-click-outside\";\nimport moment from \"moment\";\nimport Geocode from \"react-geocode\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport { deleteRecentSearch } from \"../../redux/homeSearch/actions\";\nimport { renderTimeWithCustomFormat } from \"../../utils/common\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\nconst example_calender = {\n  startDate: \"\",\n  endDate: \"\",\n  key: \"selection1\"\n};\nexport function useStateFromProp(initialValue) {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n  useEffect(() => setValue(initialValue), [initialValue]);\n  return [value, setValue];\n}\n\n_s(useStateFromProp, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\n\nconst BannerSearch = props => {\n  _s2();\n\n  var _state_data$specializ, _props$recentLocation2, _props$recentLocation3;\n\n  let props_selected = props.selectedItem;\n  const {\n    selectedItem,\n    isHandleChanges,\n    localChanges,\n    getRecentSearchList,\n    getRecentLocationList\n  } = props;\n  const [checkOnChange, setOnChange] = useState(false);\n  const [showOnlyTradeName, setShowOnlyTradeName] = useState(false);\n  const [locationStatus, setLocationStatus] = useState(null);\n  const [stateData, setStateData] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [addressText, setAddressText] = useState(null);\n  const [recentLocation, setRecentLocation] = useState([]); // recentLocation\n\n  const [selectedAddress, setSelectedAddress] = useState({});\n  const [enableCurrentLocation, setCurrentLocations] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [selectedTrade, setSelectedTrade] = useState({});\n  const [inputFocus1, setInputFocus1] = useState(false);\n  const [inputFocus2, setInputFocus2] = useState(false);\n  const [inputFocus3, setInputFocus3] = useState(false);\n  const [calenderRange1, setCalenderRange1] = useState(example_calender);\n  const [suggestionSelected, setSuggestion] = useState({});\n\n  const handleOnOutsideSearch = () => {\n    setOnChange(false);\n    setInputFocus1(false);\n  };\n\n  const handleOnOutsideLocation = () => setInputFocus2(false);\n\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: () => {\n      // if (addressText?.length > 3) {\n      handleOnOutsideLocation(); // }\n    }\n  });\n  const locationRefClone = useDetectClickOutside({\n    onTriggered: () => {//     if (!addressText || addressText?.length < 2) {\n      //         handleOnOutsideLocation()\n      //     }\n    }\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender\n  });\n  const [sortBy, setSortBy] = useState(0);\n\n  const handleCalenderRange = item => {\n    var _item$selection, _item$selection2;\n\n    setCalenderRange1(item.selection1);\n    console.log({\n      localInfo: props.localInfo\n    });\n    props.getTitleInfo({ ...props.localInfo,\n      from_date: moment((_item$selection = item.selection1) === null || _item$selection === void 0 ? void 0 : _item$selection.startDate).format(\"YYYY-MM-DD\"),\n      to_date: moment((_item$selection2 = item.selection1) === null || _item$selection2 === void 0 ? void 0 : _item$selection2.endDate).format(\"YYYY-MM-DD\")\n    });\n  };\n\n  const [checkRender, setRender] = useState(false);\n  useEffect(() => {\n    console.log({\n      selectedAddress\n    }, \"!!@\");\n  }, [selectedAddress]);\n  useEffect(() => {\n    let state = props.location.state;\n    let local_info = props.localInfo;\n\n    if (!(searchText === null || searchText === void 0 ? void 0 : searchText.length) && !checkRender) {\n      var _state$location, _state$location$coord;\n\n      setSearchText(state.name);\n      setStateData({\n        createdAt: null,\n        image: null,\n        name: state === null || state === void 0 ? void 0 : state.name,\n        specializationsId: state === null || state === void 0 ? void 0 : state.specializations,\n        trade_name: state === null || state === void 0 ? void 0 : state.name,\n        _id: state === null || state === void 0 ? void 0 : state.tradeId\n      });\n\n      if (state.calender && Object.keys(state.calender).length) {\n        setCalenderRange1(state.calender);\n      }\n\n      if ((state === null || state === void 0 ? void 0 : state.location) && (state === null || state === void 0 ? void 0 : (_state$location = state.location) === null || _state$location === void 0 ? void 0 : (_state$location$coord = _state$location.coordinates) === null || _state$location$coord === void 0 ? void 0 : _state$location$coord.length)) {\n        let coordinates = state.location.coordinates;\n        let valueItem = {\n          lat: coordinates[1],\n          lng: coordinates[0]\n        };\n        setSelectedAddress(valueItem);\n      }\n\n      if (state === null || state === void 0 ? void 0 : state.address) {\n        setAddressText(state.address);\n      }\n\n      setRender(true);\n    } // doingLocalChanges\n    // when this option true it the props will set.\n\n\n    if (Object.keys(local_info).length && !(local_info === null || local_info === void 0 ? void 0 : local_info.doingLocalChanges)) {\n      if ((searchText === null || searchText === void 0 ? void 0 : searchText.length) !== (local_info === null || local_info === void 0 ? void 0 : local_info.name)) {\n        if (local_info === null || local_info === void 0 ? void 0 : local_info.sortBy) {\n          setSortBy(local_info === null || local_info === void 0 ? void 0 : local_info.sortBy);\n        }\n\n        if (!(local_info === null || local_info === void 0 ? void 0 : local_info.isTradeName)) {\n          setSearchText(local_info.name);\n        } else {\n          setSearchText(\"\");\n        }\n\n        setStateData({\n          createdAt: null,\n          image: null,\n          name: local_info === null || local_info === void 0 ? void 0 : local_info.name,\n          specializationsId: local_info === null || local_info === void 0 ? void 0 : local_info.specializationId,\n          trade_name: null,\n          _id: local_info === null || local_info === void 0 ? void 0 : local_info.tradeId\n        });\n      }\n    }\n  }, [props]);\n  useEffect(() => {\n    if ((!addressText || !(addressText === null || addressText === void 0 ? void 0 : addressText.length)) && inputFocus2) {\n      setSelectedAddress({});\n      setSelectedTrade({});\n    }\n\n    if (!(addressText === null || addressText === void 0 ? void 0 : addressText.length)) {\n      fetchItemsSearchWithLocation(1);\n    }\n  }, [addressText]);\n  useEffect(() => {\n    fetchItemsSearchWithLocation();\n    setShowOnlyTradeName(props.showOnlyTradeName);\n  }, []);\n\n  const fetchItemsSearchWithLocation = fetch => {\n    if (getRecentSearchList && fetch !== 1) {\n      getRecentSearchList();\n    }\n\n    if (getRecentLocationList) {\n      getRecentLocationList();\n    }\n  };\n\n  useEffect(() => {// if (props.recentLocationData?.length &&\n    //     JSON.stringify(props.recentLocationData[0]?.location?.coordinates) !== JSON.stringify(recentLocation[0]?.location?.coordinates)) {\n    //     getRecentLocationData();\n    // }\n  }, [props.recentLocationData, recentLocation]);\n\n  const updateGetTitleInfo = () => {\n    props === null || props === void 0 ? void 0 : props.getTitleInfo({ ...(props === null || props === void 0 ? void 0 : props.localInfo),\n      doingLocalChanges: true\n    });\n  };\n\n  useEffect(() => {\n    updateGetTitleInfo();\n\n    if ((searchText === null || searchText === void 0 ? void 0 : searchText.length) > 2) {\n      props.getSearchJobList(searchText);\n    }\n\n    if (!(searchText === null || searchText === void 0 ? void 0 : searchText.length)) {\n      setSelectedTrade({});\n    }\n  }, [searchText]);\n  useEffect(() => {}, [selectedAddress]);\n\n  const getRecentLocationData = async () => {\n    var recentLocationDetails = [];\n    let recentLocationData = props.recentLocationData;\n\n    for (let index = 0; index < recentLocationData.length; index++) {\n      let item = recentLocationData[index];\n\n      try {\n        var _cityText, _cityText2, _cityText3, _cityText4, _cityText5, _cityText6, _cityText7, _cityText8, _item$location, _props$recentLocation;\n\n        let lat = item.location.coordinates[1];\n        let long = item.location.coordinates[0];\n        let response = await Geocode.fromLatLng(lat, long);\n        let formatedCityText = JSON.parse(JSON.stringify(response === null || response === void 0 ? void 0 : response.results[0]));\n        let cityText = null;\n\n        if (formatedCityText === null || formatedCityText === void 0 ? void 0 : formatedCityText.formatted_address.includes(\",\")) {\n          cityText = formatedCityText === null || formatedCityText === void 0 ? void 0 : formatedCityText.formatted_address.split(\",\");\n        } else {\n          cityText = formatedCityText === null || formatedCityText === void 0 ? void 0 : formatedCityText.formatted_address.split(\"-\");\n        }\n\n        const newData = {\n          mainText: ((_cityText = cityText) === null || _cityText === void 0 ? void 0 : _cityText.length) > 3 ? (_cityText2 = cityText) === null || _cityText2 === void 0 ? void 0 : _cityText2.slice(0, 2).join(\",\") : (_cityText3 = cityText) === null || _cityText3 === void 0 ? void 0 : _cityText3.slice(0, 1).join(\",\"),\n          secondaryText: ((_cityText4 = cityText) === null || _cityText4 === void 0 ? void 0 : _cityText4.length) > 3 ? (_cityText5 = cityText) === null || _cityText5 === void 0 ? void 0 : _cityText5.slice(2, (_cityText6 = cityText) === null || _cityText6 === void 0 ? void 0 : _cityText6.length).join(\",\") : (_cityText7 = cityText) === null || _cityText7 === void 0 ? void 0 : _cityText7.slice(1, (_cityText8 = cityText) === null || _cityText8 === void 0 ? void 0 : _cityText8.length).join(\",\")\n        };\n        recentLocationDetails[index] = {\n          formatted_address: formatedCityText === null || formatedCityText === void 0 ? void 0 : formatedCityText.formatted_address,\n          location: {\n            coordinates: item === null || item === void 0 ? void 0 : (_item$location = item.location) === null || _item$location === void 0 ? void 0 : _item$location.coordinates\n          },\n          allText: newData\n        };\n\n        if ((recentLocationDetails === null || recentLocationDetails === void 0 ? void 0 : recentLocationDetails.length) === ((_props$recentLocation = props.recentLocationData) === null || _props$recentLocation === void 0 ? void 0 : _props$recentLocation.length)) {\n          setRecentLocation(recentLocationDetails);\n        }\n      } catch (err) {\n        console.log({\n          err\n        });\n      }\n    }\n  };\n\n  const checkIfExist = _id => {\n    if (selectedTrade) {\n      let isLength = Object.keys(selectedTrade).length;\n\n      if (isLength) {\n        let item = selectedTrade;\n\n        if ((item === null || item === void 0 ? void 0 : item._id) === _id) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  const cleanRecentSearch = async (event, recentSearchId) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0\n    };\n    const res = await deleteRecentSearch(data);\n\n    if (res.success) {\n      if (getRecentSearchList) {\n        getRecentSearchList();\n      }\n    }\n  };\n\n  const recentJobSearches = () => {\n    var _props$recentSearchJo, _props$recentSearchJo2, _props$recentSearchJo3;\n\n    let props_Clone = props;\n    let tradeListData = props_Clone.tradeListData;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_autosuggestion\",\n        id: \"recent-job-search-div\",\n        children: [(props === null || props === void 0 ? void 0 : (_props$recentSearchJo = props.recentSearchJobData) === null || _props$recentSearchJo === void 0 ? void 0 : _props$recentSearchJo.length) ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Recent searches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row recent_search\",\n            children: ((_props$recentSearchJo2 = props.recentSearchJobData) === null || _props$recentSearchJo2 === void 0 ? void 0 : _props$recentSearchJo2.length) > 0 && ((_props$recentSearchJo3 = props.recentSearchJobData) === null || _props$recentSearchJo3 === void 0 ? void 0 : _props$recentSearchJo3.slice(0, 2).map(item => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_3\",\n                onClick: () => {\n                  setItemSearch({\n                    createdAt: item === null || item === void 0 ? void 0 : item.createdAt,\n                    image: item.image,\n                    name: item.name,\n                    specializationsId: [item.specializationsId],\n                    trade_name: item.trade_name,\n                    _id: item._id\n                  });\n                  setSelectedTrade({});\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card ico_txt_wrap\",\n                  children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                    className: \"ico\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: (item === null || item === void 0 ? void 0 : item.image) || residential,\n                      alt: \"icon\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"f_column\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"name\",\n                      children: item.trade_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"remove_card\",\n                    onClick: event => {\n                      cleanRecentSearch(event, item.recentSearchId);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: close,\n                      alt: \"remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this);\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select_sphere recent_search\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tradeListData === null || tradeListData === void 0 ? void 0 : tradeListData.map(({\n              _id,\n              trade_name,\n              selected_url,\n              specialisations\n            }) => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                let item_spec = specialisations;\n\n                if (item_spec === null || item_spec === void 0 ? void 0 : item_spec.length) {\n                  let getItem = item_spec[0];\n\n                  if (getItem) {\n                    setStateData({\n                      image: selected_url,\n                      name: getItem === null || getItem === void 0 ? void 0 : getItem.name,\n                      specializationsId: specialisations.map(sp => sp._id),\n                      trade_name: trade_name,\n                      _id: _id\n                    });\n                    setSearchText(trade_name);\n                  }\n\n                  setShowOnlyTradeName(true);\n                  setSelectedTrade({\n                    _id,\n                    trade_name,\n                    selected_url,\n                    specialisations\n                  });\n                }\n              },\n              className: checkIfExist(_id) ? \"active\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selected_url,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: trade_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const renderJobResult = () => {\n    var _props$searchJobListD;\n\n    if (props === null || props === void 0 ? void 0 : (_props$searchJobListD = props.searchJobListData) === null || _props$searchJobListD === void 0 ? void 0 : _props$searchJobListD.length) {\n      var _props$searchJobListD2;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom_autosuggestion\",\n        id: \"fetched-custom-job-category-div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recent_search\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"drop_data\",\n            children: (_props$searchJobListD2 = props.searchJobListData) === null || _props$searchJobListD2 === void 0 ? void 0 : _props$searchJobListD2.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: () => {\n                  setItemSearch(item);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                  className: \"category\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.image ? item.image : residential,\n                    alt: \"icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: item.name || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"prof\",\n                    children: item.trade_name || \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  };\n\n  const onError = (status, clearSuggestions) => {\n    console.log(\"Google Maps API returned error with status: \", status);\n    clearSuggestions();\n  };\n\n  const validateForm = () => {\n    return true;\n  };\n\n  const setItemSearch = item => {\n    setStateData(item);\n    setSelectedTrade({});\n    setSearchText((item === null || item === void 0 ? void 0 : item.name) || \"\");\n  };\n\n  const bannerSearchClicked = () => {\n    var _props$location, _props$location$state;\n\n    let selected_address = selectedAddress;\n    let selected_item = props === null || props === void 0 ? void 0 : props.selectedItem;\n    let props_trade = selected_item === null || selected_item === void 0 ? void 0 : selected_item.selectedTrade;\n    let local_info = props === null || props === void 0 ? void 0 : props.localInfo;\n    let prev_address = props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : (_props$location$state = _props$location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.address;\n    let suggestion_selected = local_info === null || local_info === void 0 ? void 0 : local_info.suggestionSelected;\n\n    if (suggestion_selected) {\n      suggestion_selected = JSON.stringify(local_info === null || local_info === void 0 ? void 0 : local_info.suggestionSelected);\n    }\n\n    if (suggestionSelected && Object.keys(suggestionSelected).length) {\n      if (JSON.stringify(local_info === null || local_info === void 0 ? void 0 : local_info.suggestionSelected) !== JSON.stringify(suggestionSelected)) {\n        suggestion_selected = JSON.stringify(suggestionSelected);\n      }\n    }\n\n    let tradeId = null;\n    let specializationId = null;\n\n    if (!(local_info === null || local_info === void 0 ? void 0 : local_info.doingLocalChanges)) {\n      tradeId = Array.isArray(local_info === null || local_info === void 0 ? void 0 : local_info.tradeId) ? local_info === null || local_info === void 0 ? void 0 : local_info.tradeId : [local_info === null || local_info === void 0 ? void 0 : local_info.tradeId];\n      specializationId = Array.isArray(local_info === null || local_info === void 0 ? void 0 : local_info.specializationId) ? local_info === null || local_info === void 0 ? void 0 : local_info.specializationId : [local_info === null || local_info === void 0 ? void 0 : local_info.specializationId];\n    } else {\n      if (Object.keys(stateData).length) {\n        tradeId = Array.isArray(stateData._id) ? stateData._id : [stateData._id];\n        specializationId = Array.isArray(stateData.specializationsId) ? stateData.specializationsId : [stateData.specializationsId];\n      }\n    }\n\n    if (!(stateData === null || stateData === void 0 ? void 0 : stateData._id) && !(props_trade === null || props_trade === void 0 ? void 0 : props_trade._id)) {\n      setShowToast(true, \"Please enter the valid search text\");\n      return;\n    }\n\n    if (validateForm()) {\n      var _tradeId, _specializationId, _props$tradeListData$, _JSON$parse, _JSON$parse2;\n\n      let data = {\n        page: 1,\n        isFiltered: true,\n        tradeId: tradeId,\n        specializationId: specializationId\n      };\n\n      if (!((_tradeId = tradeId) === null || _tradeId === void 0 ? void 0 : _tradeId.length)) {\n        setShowToast(true, \"Please enter the valid search text\");\n        return;\n      }\n\n      if (!((_specializationId = specializationId) === null || _specializationId === void 0 ? void 0 : _specializationId.length)) {\n        delete data.specializationId;\n      }\n\n      if (sortBy > 0) {\n        data[\"sortBy\"] = sortBy;\n      }\n\n      if (Object.keys(selectedAddress).length) {\n        data[\"location\"] = {\n          coordinates: [parseFloat(selected_address === null || selected_address === void 0 ? void 0 : selected_address.lng), parseFloat(selected_address === null || selected_address === void 0 ? void 0 : selected_address.lat)]\n        };\n\n        if (suggestion_selected) {\n          if (addressText) {\n            data[\"address\"] = suggestion_selected;\n          }\n        }\n      } else {\n        delete data.location;\n      }\n\n      if (moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate).isValid()) {\n        data[\"from_date\"] = moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate).format(\"YYYY-MM-DD\");\n      } else {\n        delete data.from_date;\n      }\n\n      if (moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.endDate).isValid()) {\n        data[\"to_date\"] = moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.endDate).format(\"YYYY-MM-DD\");\n      } else {\n        delete data.to_date;\n      }\n\n      if (sortBy === 2) {\n        var _Object$keys;\n\n        if ((_Object$keys = Object.keys(selected_address)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) {\n          data[\"location\"] = {\n            coordinates: [parseFloat(selected_address === null || selected_address === void 0 ? void 0 : selected_address.lng), parseFloat(selected_address === null || selected_address === void 0 ? void 0 : selected_address.lat)]\n          };\n        }\n\n        if (suggestion_selected) {\n          if (addressText) {\n            let case_1 = typeof suggestion_selected == \"string\" ? suggestion_selected : JSON.stringify(suggestion_selected);\n            data[\"address\"] = addressText && suggestion_selected ? case_1 : \"\";\n          }\n        }\n      }\n\n      props.getTitleInfo({\n        name: searchText,\n        isTradeName: false,\n        // count: data?.specializationId?.length,\n        count: 0,\n        tradeId: data.tradeId,\n        specializationId: data.specializationId,\n        location: data.location,\n        from_date: data === null || data === void 0 ? void 0 : data.from_date,\n        to_date: data === null || data === void 0 ? void 0 : data.to_date,\n        doingLocalChanges: true,\n        address: data === null || data === void 0 ? void 0 : data.address,\n        suggestionSelected: suggestion_selected ? JSON.parse(suggestion_selected) : null\n      });\n      props.postHomeSearchData(data);\n      const mData = {\n        timeStamp: moengage.getCurrentTimeStamp(),\n        category: props === null || props === void 0 ? void 0 : (_props$tradeListData$ = props.tradeListData.find(i => i._id === (data === null || data === void 0 ? void 0 : data.tradeId[0]))) === null || _props$tradeListData$ === void 0 ? void 0 : _props$tradeListData$.trade_name,\n        ...(data.address && {\n          location: `${(_JSON$parse = JSON.parse(data.address)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.mainText} ${(_JSON$parse2 = JSON.parse(data.address)) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.secondaryText}`\n        }),\n        //'length of hire': '',\n        ...((data === null || data === void 0 ? void 0 : data.from_date) && {\n          \"start date\": data === null || data === void 0 ? void 0 : data.from_date\n        }),\n        ...((data === null || data === void 0 ? void 0 : data.to_date) && {\n          \"end date\": data === null || data === void 0 ? void 0 : data.to_date\n        })\n      };\n      moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n    }\n  };\n\n  const filterFromAddress = response => {\n    let city,\n        state,\n        country = null;\n\n    for (let i = 0; i < response.results[0].address_components.length; i++) {\n      for (let j = 0; j < response.results[0].address_components[i].types.length; j++) {\n        switch (response.results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = response.results[0].address_components[i].long_name;\n            break;\n\n          case \"administrative_area_level_1\":\n            state = response.results[0].address_components[i].long_name;\n            break;\n\n          case \"country\":\n            country = response.results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n\n    return {\n      city,\n      state,\n      country: country.toLowerCase()\n    };\n  };\n\n  const getCurrentLocation = async () => {\n    var _navigator, _navigator$permission;\n\n    let itemToggle = await ((_navigator = navigator) === null || _navigator === void 0 ? void 0 : (_navigator$permission = _navigator.permissions) === null || _navigator$permission === void 0 ? void 0 : _navigator$permission.query({\n      name: \"geolocation\"\n    }));\n    setLocationStatus(itemToggle.state);\n    let local_position = localStorage.getItem(\"position\");\n    let position = JSON.parse(local_position);\n\n    if (position === null || position === void 0 ? void 0 : position.length) {\n      let lng = position[0].toString();\n      let lat = position[1].toString();\n      let response = await Geocode.fromLatLng(lat, lng);\n      const {\n        city,\n        state,\n        country\n      } = filterFromAddress(response);\n\n      if (response && [\"australia\", \"au\"].includes(country)) {\n        var _response$results;\n\n        if ((response === null || response === void 0 ? void 0 : response.results) && Array.isArray(response.results) && (response === null || response === void 0 ? void 0 : (_response$results = response.results) === null || _response$results === void 0 ? void 0 : _response$results.length)) {\n          const address = response.results[0].formatted_address;\n          setSelectedAddress({\n            lat,\n            lng\n          });\n          setAddressText(address);\n          setInputFocus2(true);\n          setInputFocus1(false);\n          setInputFocus3(false);\n          setCurrentLocations(true); // this.setState({ currentAddressLatLng: { long, lat }, addressText: address, enableCurrentLocation: true, inputFocus2: true })\n        }\n      } else {\n        if ((itemToggle === null || itemToggle === void 0 ? void 0 : itemToggle.state) !== \"denied\") {\n          setShowToast(true, \"Uh Oh! We don't provide service currently in your location\");\n        }\n      }\n    }\n  };\n\n  const checkPlaceholder = calenderRange1 => {\n    let fromDate = calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate;\n    let toDate = calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.endDate;\n    let result = renderTimeWithCustomFormat(fromDate, toDate, \"\", [\"DD MMM\", \"DD MMM YYYY\"], \"When?\");\n\n    if (!result) {\n      return \"When?\";\n    }\n\n    return result;\n  };\n\n  let state_data = stateData;\n  let length_spec = 0;\n\n  if ((state_data === null || state_data === void 0 ? void 0 : (_state_data$specializ = state_data.specializationsId) === null || _state_data$specializ === void 0 ? void 0 : _state_data$specializ.length) && Array.isArray(state_data === null || state_data === void 0 ? void 0 : state_data.specializationsId)) {\n    var _state_data$specializ2;\n\n    length_spec = state_data === null || state_data === void 0 ? void 0 : (_state_data$specializ2 = state_data.specializationsId) === null || _state_data$specializ2 === void 0 ? void 0 : _state_data$specializ2.length;\n  }\n\n  let custom_name = searchText;\n\n  if (!checkOnChange) {\n    var _custom_name;\n\n    if (length_spec > 1 && ((_custom_name = custom_name) === null || _custom_name === void 0 ? void 0 : _custom_name.length)) {\n      custom_name = `${custom_name} +${length_spec - 1}`;\n    }\n  }\n\n  console.log(\"searchText\", searchText, \"custom_name\", custom_name, \"propsbannerSearch\", props, \"zz\", props.showOnlyTradeName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home_search\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (props === null || props === void 0 ? void 0 : props.handleChangeToggle) {\n          props.handleChangeToggle(false);\n        }\n      },\n      className: \"modal_srch_close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search_wrapr\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"categ_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text_field\",\n            id: \"text-field-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: searchRef,\n              placeholder: \"What jobs are you after?\",\n              value: showOnlyTradeName ? searchText : custom_name,\n              onChange: e => {\n                isHandleChanges(true);\n                setOnChange(true);\n                setSearchText(e.target.value.trimLeft());\n              } // readOnly={props?.selectedItem ? true : false}\n              ,\n              onFocus: () => {\n                setInputFocus1(true);\n                setInputFocus2(false);\n                setInputFocus3(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border_eff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon_ltr\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Searchicon,\n                alt: \"search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this), (searchText === null || searchText === void 0 ? void 0 : searchText.length) && inputFocus1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detect_icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: cross,\n                alt: \"cross\",\n                onClick: () => {\n                  // clear here\n                  setStateData({});\n                  setSelectedTrade({});\n                  isHandleChanges(true);\n                  setSearchText(\"\");\n                  setOnChange(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 13\n          }, this), !!errors.searchedJob && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.searchedJob\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 11\n        }, this), !(searchText === null || searchText === void 0 ? void 0 : searchText.length) && inputFocus1 ? recentJobSearches() : null, (searchText === null || searchText === void 0 ? void 0 : searchText.length) > 2 && inputFocus1 ? renderJobResult() : null, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"loc_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"location-text-field-div\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n                value: addressText,\n                searchOptions: {\n                  componentRestrictions: {\n                    country: \"au\"\n                  },\n                  //  types: [\"address\"]\n                  types: [\"(cities)\"]\n                },\n                shouldFetchSuggestions: (addressText === null || addressText === void 0 ? void 0 : addressText.length) > 2,\n                onChange: item => {\n                  setAddressText(item);\n                },\n                onSelect: async (address, placeId, suggestion) => {\n                  var _suggestion$formatted, _response$results2;\n\n                  let selected_address = address;\n\n                  if (address.indexOf(\",\")) {\n                    selected_address = address.split(\",\")[0];\n                  }\n\n                  console.log({\n                    address: suggestion === null || suggestion === void 0 ? void 0 : suggestion.formattedSuggestion\n                  });\n                  setSuggestion(suggestion === null || suggestion === void 0 ? void 0 : suggestion.formattedSuggestion);\n                  setAddressText(suggestion === null || suggestion === void 0 ? void 0 : (_suggestion$formatted = suggestion.formattedSuggestion) === null || _suggestion$formatted === void 0 ? void 0 : _suggestion$formatted.mainText);\n                  let response = await Geocode.fromAddress(address);\n\n                  if (response === null || response === void 0 ? void 0 : (_response$results2 = response.results) === null || _response$results2 === void 0 ? void 0 : _response$results2.length) {\n                    const {\n                      lat,\n                      lng\n                    } = response.results[0].geometry.location;\n                    setSelectedAddress({\n                      lat,\n                      lng\n                    });\n                    setInputFocus2(false);\n                  }\n                },\n                highlightFirstSuggestion: true,\n                onError: onError,\n                debounce: 0,\n                children: ({\n                  getInputProps,\n                  suggestions,\n                  getSuggestionItemProps,\n                  loading\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `text_field`,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n                        placeholder: \"Where?\",\n                        className: \"line-1\"\n                      }),\n                      id: \"location-input-tag\",\n                      autoComplete: \"off\",\n                      ref: locationRef,\n                      onFocus: () => {\n                        setInputFocus2(true);\n                        setInputFocus1(false);\n                        setInputFocus3(false);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 878,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"detect_icon_ltr\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: Location,\n                        alt: \"location\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 893,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 892,\n                      columnNumber: 25\n                    }, this), inputFocus2 && (addressText === null || addressText === void 0 ? void 0 : addressText.length) > 2 ?\n                    /*#__PURE__*/\n                    // {inputFocus2 && addressText?.length > 2 ?\n                    _jsxDEV(\"span\", {\n                      className: \"detect_icon\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: cross,\n                        alt: \"cross\",\n                        onClick: () => {\n                          setAddressText(\"\");\n                          setSelectedAddress({});\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 898,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 27\n                    }, this) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 23\n                  }, this), (suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) && inputFocus2 && (addressText === null || addressText === void 0 ? void 0 : addressText.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom_autosuggestion location\",\n                    id: \"autocomplete-dropdown-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex_row recent_search auto_loc\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex_col_sm_4\",\n                        children: [!!errors.selectedMapLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"error_msg\",\n                          children: errors.selectedMapLocation\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 919,\n                          columnNumber: 33\n                        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 923,\n                          columnNumber: 43\n                        }, this), suggestions.map(suggestion => {\n                          const className = \"autosuggestion_icon card loc name\";\n                          const style = suggestion.active ? {\n                            backgroundColor: \"#fafafa\",\n                            cursor: \"pointer\"\n                          } : {\n                            backgroundColor: \"#ffffff\",\n                            cursor: \"pointer\"\n                          };\n                          return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                              className,\n                              style\n                            }),\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              children: suggestion.formattedSuggestion.mainText\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 943,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"name\",\n                              children: suggestion.formattedSuggestion.secondaryText\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 946,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 937,\n                            columnNumber: 35\n                          }, this);\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 917,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 916,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 912,\n                    columnNumber: 25\n                  }, this) : null, inputFocus2 && !(suggestions === null || suggestions === void 0 ? void 0 : suggestions.length) && !Object.keys(selectedAddress).length ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      minHeight: \"50px\"\n                    },\n                    className: \"custom_autosuggestion location\",\n                    id: \"autocomplete-dropdown-container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex_row recent_search auto_loc\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex_col_sm_4\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"loc_suggestions\",\n                          children: \"No Result Found.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 969,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 968,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 967,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 962,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), !!errors.selectedMapLocation && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error_msg\",\n            children: errors.selectedMapLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this), !(addressText === null || addressText === void 0 ? void 0 : addressText.length) && inputFocus2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom_autosuggestion location\",\n          id: \"current-location-search-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"location-btn\",\n            onClick: getCurrentLocation,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gps_icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: icgps,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 17\n            }, this), \" \", \"Use my current location\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 15\n          }, this), locationStatus === \"denied\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blocked_note\",\n            children: \"You have blocked your location. To use this, change your location settings in browser.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 17\n          }, this), (props === null || props === void 0 ? void 0 : (_props$recentLocation2 = props.recentLocationData) === null || _props$recentLocation2 === void 0 ? void 0 : _props$recentLocation2.length) > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sub_title\",\n            children: \"Recent searches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex_row recent_search auto_loc\",\n            children: props === null || props === void 0 ? void 0 : (_props$recentLocation3 = props.recentLocationData) === null || _props$recentLocation3 === void 0 ? void 0 : _props$recentLocation3.map(item => {\n              var _item$address, _JSON$parse4, _JSON$parse5;\n\n              return (item === null || item === void 0 ? void 0 : (_item$address = item.address) === null || _item$address === void 0 ? void 0 : _item$address.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex_col_sm_4\",\n                onClick: () => {\n                  var _JSON$parse3, _item$location2, _item$location3;\n\n                  setAddressText((_JSON$parse3 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse3 === void 0 ? void 0 : _JSON$parse3.mainText);\n                  setSelectedAddress({\n                    lat: item === null || item === void 0 ? void 0 : (_item$location2 = item.location) === null || _item$location2 === void 0 ? void 0 : _item$location2.coordinates[1],\n                    lng: item === null || item === void 0 ? void 0 : (_item$location3 = item.location) === null || _item$location3 === void 0 ? void 0 : _item$location3.coordinates[0]\n                  });\n                  setSuggestion(JSON.parse(item === null || item === void 0 ? void 0 : item.address));\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"autosuggestion_icon card loc name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: (_JSON$parse4 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse4 === void 0 ? void 0 : _JSON$parse4.mainText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1023,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"name\",\n                    children: (_JSON$parse5 = JSON.parse(item === null || item === void 0 ? void 0 : item.address)) === null || _JSON$parse5 === void 0 ? void 0 : _JSON$parse5.secondaryText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1024,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1022,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `date_box ${(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate) ? \"date_value\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: calenderRef,\n            className: \"custom_date_range\",\n            id: \"date-range-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text_field\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon_ltr calendar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: checkPlaceholder(calenderRange1),\n                onFocus: () => {\n                  setInputFocus3(true);\n                  setInputFocus1(false);\n                  setInputFocus2(false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 17\n              }, this), (calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate) && inputFocus3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detect_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: cross,\n                  alt: \"cross\",\n                  onClick: () => {\n                    setCalenderRange1({\n                      startDate: \"\",\n                      endDate: \"\",\n                      key: \"selection1\"\n                    });\n                    console.log({\n                      localInfo: props.localInfo\n                    });\n                    props.getTitleInfo({ ...props.localInfo,\n                      from_date: \"\",\n                      to_date: \"\"\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1058,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 15\n            }, this), inputFocus3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom_autosuggestion\",\n              id: \"custom-date-range-div\",\n              children: /*#__PURE__*/_jsxDEV(DateRange, {\n                onChange: handleCalenderRange,\n                ranges: !moment(calenderRange1 === null || calenderRange1 === void 0 ? void 0 : calenderRange1.startDate).isValid() ? [{\n                  startDate: new Date(),\n                  endDate: new Date(),\n                  key: \"selection1\"\n                }] : [calenderRange1],\n                moveRangeOnFirstSelection: false,\n                rangeColors: [\"#fee600\", \"#b5b5b5\"],\n                showDateDisplay: false,\n                showSelectionPreview: true,\n                months: 2,\n                showPreview: true,\n                minDate: new Date(),\n                maxDate: moment().add(2, \"years\").toDate(),\n                direction: \"horizontal\",\n                fixedHeight: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1080,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"fill_btn btn-effect\",\n            onClick: bannerSearchClicked,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: search,\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 766,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(BannerSearch, \"/tg9NrKewdVxFVHeArTKL5hh6Cc=\", false, function () {\n  return [useDetectClickOutside, useDetectClickOutside, useDetectClickOutside, useDetectClickOutside];\n});\n\n_c = BannerSearch;\n\nconst mapStateToProps = state => {\n  return {\n    searchJobListData: state.homeSearch.searchJobListData,\n    recentSearchJobData: state.homeSearch.recentSearchJobData,\n    homeSearchJobData: state.homeSearch.homeSearchJobData,\n    tradeListData: state.auth.tradeListData,\n    localChanges: state.jobs.localChanges,\n    recentLocationData: state.homeSearch.recentLocationData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSearchJobList,\n    getRecentSearchList,\n    postHomeSearchData,\n    isHandleChanges,\n    getRecentLocationList\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerSearch);\n/**\n!loading &&\naddressText?.length > 2 &&\n!suggestions?.length &&\n!enableCurrentLocation &&\n!Object.keys(selectedAddress).length\n**/\n\nvar _c;\n\n$RefreshReg$(_c, \"BannerSearch\");","map":{"version":3,"sources":["/home/appinventiv/Documents/Project/tickt/web/src/pages/shared/bannerSearchProps.tsx"],"names":["React","useState","useEffect","Constants","MoEConstants","PlacesAutocomplete","DateRange","Searchicon","search","Location","cross","icgps","residential","close","connect","bindActionCreators","getSearchJobList","getRecentSearchList","postHomeSearchData","getRecentLocationList","isHandleChanges","useDetectClickOutside","moment","Geocode","setShowToast","deleteRecentSearch","renderTimeWithCustomFormat","moengage","mixPanel","setApiKey","SocialAuth","GOOGLE_GEOCODE_KEY","setLanguage","example_calender","startDate","endDate","key","useStateFromProp","initialValue","value","setValue","BannerSearch","props","props_selected","selectedItem","localChanges","checkOnChange","setOnChange","showOnlyTradeName","setShowOnlyTradeName","locationStatus","setLocationStatus","stateData","setStateData","searchText","setSearchText","addressText","setAddressText","recentLocation","setRecentLocation","selectedAddress","setSelectedAddress","enableCurrentLocation","setCurrentLocations","errors","setErrors","selectedTrade","setSelectedTrade","inputFocus1","setInputFocus1","inputFocus2","setInputFocus2","inputFocus3","setInputFocus3","calenderRange1","setCalenderRange1","suggestionSelected","setSuggestion","handleOnOutsideSearch","handleOnOutsideLocation","handleOnOutsideCalender","searchRef","onTriggered","locationRef","locationRefClone","calenderRef","sortBy","setSortBy","handleCalenderRange","item","selection1","console","log","localInfo","getTitleInfo","from_date","format","to_date","checkRender","setRender","state","location","local_info","length","name","createdAt","image","specializationsId","specializations","trade_name","_id","tradeId","calender","Object","keys","coordinates","valueItem","lat","lng","address","doingLocalChanges","isTradeName","specializationId","fetchItemsSearchWithLocation","fetch","recentLocationData","updateGetTitleInfo","getRecentLocationData","recentLocationDetails","index","long","response","fromLatLng","formatedCityText","JSON","parse","stringify","results","cityText","formatted_address","includes","split","newData","mainText","slice","join","secondaryText","allText","err","checkIfExist","isLength","cleanRecentSearch","event","recentSearchId","stopPropagation","data","id","status","res","success","recentJobSearches","props_Clone","tradeListData","recentSearchJobData","map","setItemSearch","selected_url","specialisations","item_spec","getItem","sp","renderJobResult","searchJobListData","onError","clearSuggestions","validateForm","bannerSearchClicked","selected_address","selected_item","props_trade","prev_address","suggestion_selected","Array","isArray","page","isFiltered","parseFloat","isValid","case_1","count","mData","timeStamp","getCurrentTimeStamp","category","find","i","moE_SendEvent","SEARCHED_FOR_TRADIES","mixP_SendEvent","filterFromAddress","city","country","address_components","j","types","long_name","toLowerCase","getCurrentLocation","itemToggle","navigator","permissions","query","local_position","localStorage","position","toString","checkPlaceholder","fromDate","toDate","result","state_data","length_spec","custom_name","handleChangeToggle","e","target","trimLeft","searchedJob","componentRestrictions","placeId","suggestion","indexOf","formattedSuggestion","fromAddress","geometry","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","selectedMapLocation","style","active","backgroundColor","cursor","minHeight","Date","add","mapStateToProps","homeSearch","homeSearchJobData","auth","jobs","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Constants,{ MoEConstants }  from \"../../utils/constants\";\n// @ts-ignore\nimport PlacesAutocomplete from \"react-places-autocomplete\";\n// @ts-ignore\nimport { DateRange } from \"react-date-range\";\nimport \"react-date-range/dist/styles.css\"; // main style file\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\n\nimport Searchicon from \"../../assets/images/main-search.png\";\nimport search from \"../../assets/images/ic-search.png\";\nimport Location from \"../../assets/images/ic-location.png\";\nimport cross from \"../../assets/images/close-black.png\";\nimport icgps from \"../../assets/images/ic-gps.png\";\nimport residential from \"../../assets/images/ic-residential.png\";\nimport close from \"../../assets/images/icon-close-1.png\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  getSearchJobList,\n  getRecentSearchList,\n  postHomeSearchData,\n  getRecentLocationList,\n} from \"../../redux/homeSearch/actions\";\nimport { isHandleChanges } from \"../../redux/jobs/actions\";\n// @ts-ignore\nimport { useDetectClickOutside } from \"react-detect-click-outside\";\nimport moment from \"moment\";\nimport Geocode from \"react-geocode\";\nimport { setShowToast } from \"../../redux/common/actions\";\nimport { deleteRecentSearch } from \"../../redux/homeSearch/actions\";\n\nimport { renderTimeWithCustomFormat } from \"../../utils/common\";\nimport { moengage, mixPanel } from \"../../services/analyticsTools\";\n\nGeocode.setApiKey(Constants.SocialAuth.GOOGLE_GEOCODE_KEY);\nGeocode.setLanguage(\"en\");\n\ninterface PropsType {\n  history: any;\n  location?: any;\n  bannerData: any;\n  selectedItem: any;\n  selectedTrade: any;\n  current_address: any;\n  getTitleInfo: any;\n  searchText: any;\n  stateData: any;\n  addressText: any;\n  selectedAddress: any;\n  isHandleChanges: (item: any) => void;\n  localChanges: boolean;\n  searchJobListData: Array<object>;\n  recentSearchJobData: Array<object>;\n  homeSearchJobData: Array<object>;\n  setBannerData: (data: any) => void;\n  getSearchJobList: (data: any) => void;\n  postHomeSearchData: (data: any) => void;\n  handleChangeToggle?: (data: any) => void;\n  getRecentSearchList?: () => void;\n  getRecentLocationList: () => void;\n  localInfo: any;\n  recentLocationData: Array<any>;\n  tradeListData: Array<any>;\n  showOnlyTradeName: boolean;\n}\n\nconst example_calender = { startDate: \"\", endDate: \"\", key: \"selection1\" };\n\nexport function useStateFromProp(initialValue: any) {\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => setValue(initialValue), [initialValue]);\n\n  return [value, setValue];\n}\n\nconst BannerSearch = (props: PropsType) => {\n  let props_selected = props.selectedItem;\n  const {\n    selectedItem,\n    isHandleChanges,\n    localChanges,\n    getRecentSearchList,\n    getRecentLocationList,\n  } = props;\n\n  const [checkOnChange, setOnChange] = useState(false);\n  const [showOnlyTradeName, setShowOnlyTradeName] = useState(false);\n\n  const [locationStatus, setLocationStatus] = useState(null);\n  const [stateData, setStateData] = useState<any>(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [addressText, setAddressText] = useState<any>(null);\n  const [recentLocation, setRecentLocation] = useState<any>([]); // recentLocation\n  const [selectedAddress, setSelectedAddress] = useState({});\n  const [enableCurrentLocation, setCurrentLocations] = useState<boolean>(false);\n  const [errors, setErrors] = useState<any>({});\n  const [selectedTrade, setSelectedTrade] = useState({});\n\n  const [inputFocus1, setInputFocus1] = useState<boolean>(false);\n  const [inputFocus2, setInputFocus2] = useState<boolean>(false);\n  const [inputFocus3, setInputFocus3] = useState<boolean>(false);\n\n  const [calenderRange1, setCalenderRange1] = useState<any>(example_calender);\n\n  const [suggestionSelected, setSuggestion] = useState({});\n\n  const handleOnOutsideSearch = () => {\n    setOnChange(false);\n    setInputFocus1(false);\n  };\n  const handleOnOutsideLocation = () => setInputFocus2(false);\n  const handleOnOutsideCalender = () => setInputFocus3(false);\n\n  const searchRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideSearch,\n  });\n  const locationRef = useDetectClickOutside({\n    onTriggered: () => {\n      // if (addressText?.length > 3) {\n      handleOnOutsideLocation();\n      // }\n    },\n  });\n\n  const locationRefClone = useDetectClickOutside({\n    onTriggered: () => {\n      //     if (!addressText || addressText?.length < 2) {\n      //         handleOnOutsideLocation()\n      //     }\n    },\n  });\n  const calenderRef = useDetectClickOutside({\n    onTriggered: handleOnOutsideCalender,\n  });\n\n  const [sortBy, setSortBy] = useState(0);\n\n  const handleCalenderRange = (item: any) => {\n    setCalenderRange1(item.selection1);\n    console.log({\n      localInfo: props.localInfo,\n    });\n    props.getTitleInfo({\n      ...props.localInfo,\n      from_date: moment(item.selection1?.startDate).format(\"YYYY-MM-DD\"),\n      to_date: moment(item.selection1?.endDate).format(\"YYYY-MM-DD\"),\n    });\n  };\n\n  const [checkRender, setRender] = useState(false);\n\n  useEffect(() => {\n    console.log({ selectedAddress }, \"!!@\");\n  }, [selectedAddress]);\n\n  useEffect(() => {\n    let state = props.location.state;\n    let local_info: any = props.localInfo;\n\n    if (!searchText?.length && !checkRender) {\n      setSearchText(state.name);\n      setStateData({\n        createdAt: null,\n        image: null,\n        name: state?.name,\n        specializationsId: state?.specializations,\n        trade_name: state?.name,\n        _id: state?.tradeId,\n      });\n\n      if (state.calender && Object.keys(state.calender).length) {\n        setCalenderRange1(state.calender);\n      }\n\n      if (state?.location && state?.location?.coordinates?.length) {\n        let coordinates = state.location.coordinates;\n        let valueItem = {\n          lat: coordinates[1],\n          lng: coordinates[0],\n        };\n        setSelectedAddress(valueItem);\n      }\n\n      if (state?.address) {\n        setAddressText(state.address);\n      }\n      setRender(true);\n    }\n    // doingLocalChanges\n    // when this option true it the props will set.\n    if (Object.keys(local_info).length && !local_info?.doingLocalChanges) {\n      if (searchText?.length !== local_info?.name) {\n        if (local_info?.sortBy) {\n          setSortBy(local_info?.sortBy);\n        }\n\n        if (!local_info?.isTradeName) {\n          setSearchText(local_info.name);\n        } else {\n          setSearchText(\"\");\n        }\n\n        setStateData({\n          createdAt: null,\n          image: null,\n          name: local_info?.name,\n          specializationsId: local_info?.specializationId,\n          trade_name: null,\n          _id: local_info?.tradeId,\n        });\n      }\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if ((!addressText || !addressText?.length) && inputFocus2) {\n      setSelectedAddress({});\n      setSelectedTrade({});\n    }\n\n    if (!addressText?.length) {\n      fetchItemsSearchWithLocation(1);\n    }\n  }, [addressText]);\n\n  useEffect(() => {\n    fetchItemsSearchWithLocation();\n    setShowOnlyTradeName(props.showOnlyTradeName);\n  }, []);\n\n  const fetchItemsSearchWithLocation = (fetch?: any) => {\n    if (getRecentSearchList && fetch !== 1) {\n      getRecentSearchList();\n    }\n    if (getRecentLocationList) {\n      getRecentLocationList();\n    }\n  };\n\n  useEffect(() => {\n    // if (props.recentLocationData?.length &&\n    //     JSON.stringify(props.recentLocationData[0]?.location?.coordinates) !== JSON.stringify(recentLocation[0]?.location?.coordinates)) {\n    //     getRecentLocationData();\n    // }\n  }, [props.recentLocationData, recentLocation]);\n\n  const updateGetTitleInfo = () => {\n    props?.getTitleInfo({\n      ...props?.localInfo,\n      doingLocalChanges: true,\n    });\n  };\n\n  useEffect(() => {\n    updateGetTitleInfo();\n    if (searchText?.length > 2) {\n      props.getSearchJobList(searchText);\n    }\n    if (!searchText?.length) {\n      setSelectedTrade({});\n    }\n  }, [searchText]);\n\n  useEffect(() => {}, [selectedAddress]);\n\n  const getRecentLocationData = async () => {\n    var recentLocationDetails: any = [];\n\n    let recentLocationData = props.recentLocationData;\n    for (let index = 0; index < recentLocationData.length; index++) {\n      let item = recentLocationData[index];\n      try {\n        let lat = item.location.coordinates[1];\n        let long = item.location.coordinates[0];\n        let response = await Geocode.fromLatLng(lat, long);\n        let formatedCityText = JSON.parse(JSON.stringify(response?.results[0]));\n        let cityText: any = null;\n        if (formatedCityText?.formatted_address.includes(\",\")) {\n          cityText = formatedCityText?.formatted_address.split(\",\");\n        } else {\n          cityText = formatedCityText?.formatted_address.split(\"-\");\n        }\n        const newData = {\n          mainText:\n            cityText?.length > 3\n              ? cityText?.slice(0, 2).join(\",\")\n              : cityText?.slice(0, 1).join(\",\"),\n          secondaryText:\n            cityText?.length > 3\n              ? cityText?.slice(2, cityText?.length).join(\",\")\n              : cityText?.slice(1, cityText?.length).join(\",\"),\n        };\n        recentLocationDetails[index] = {\n          formatted_address: formatedCityText?.formatted_address,\n          location: { coordinates: item?.location?.coordinates },\n          allText: newData,\n        };\n\n        if (\n          recentLocationDetails?.length === props.recentLocationData?.length\n        ) {\n          setRecentLocation(recentLocationDetails);\n        }\n      } catch (err) {\n        console.log({ err });\n      }\n    }\n  };\n\n  const checkIfExist = (_id: any) => {\n    if (selectedTrade) {\n      let isLength = Object.keys(selectedTrade).length;\n      if (isLength) {\n        let item: any = selectedTrade;\n        if (item?._id === _id) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  const cleanRecentSearch = async (event: any, recentSearchId: string) => {\n    event.stopPropagation();\n    const data = {\n      id: recentSearchId,\n      status: 0,\n    };\n    const res = await deleteRecentSearch(data);\n    if (res.success) {\n      if (getRecentSearchList) {\n        getRecentSearchList();\n      }\n    }\n  };\n\n  const recentJobSearches = () => {\n    let props_Clone: any = props;\n    let tradeListData = props_Clone.tradeListData;\n    return (\n      <>\n        <div className=\"custom_autosuggestion\" id=\"recent-job-search-div\">\n          {props?.recentSearchJobData?.length ? (\n            <React.Fragment>\n              <span className=\"sub_title\">Recent searches</span>\n              <div className=\"flex_row recent_search\">\n                {props.recentSearchJobData?.length > 0 &&\n                  props.recentSearchJobData?.slice(0, 2).map((item: any) => {\n                    return (\n                      <div\n                        className=\"flex_col_sm_3\"\n                        onClick={() => {\n                          setItemSearch({\n                            createdAt: item?.createdAt,\n                            image: item.image,\n                            name: item.name,\n                            specializationsId: [item.specializationsId],\n                            trade_name: item.trade_name,\n                            _id: item._id,\n                          });\n                          setSelectedTrade({});\n                        }}\n                      >\n                        <div className=\"card ico_txt_wrap\">\n                          <figure className=\"ico\">\n                            <img src={item?.image || residential} alt=\"icon\" />\n                          </figure>\n                          <div className=\"f_column\">\n                            <span>{item.name}</span>\n                            <span className=\"name\">{item.trade_name}</span>\n                          </div>\n                          <span\n                            className=\"remove_card\"\n                            onClick={(event) => {\n                              cleanRecentSearch(event, item.recentSearchId);\n                            }}\n                          >\n                            <img src={close} alt=\"remove\" />\n                          </span>\n                        </div>\n                      </div>\n                    );\n                  })}\n              </div>\n            </React.Fragment>\n          ) : null}\n\n          <div className=\"select_sphere recent_search\">\n            <span className=\"sub_title\">{\"Categories\"}</span>\n            <ul>\n              {tradeListData?.map(\n                ({\n                  _id,\n                  trade_name,\n                  selected_url,\n                  specialisations,\n                }: {\n                  _id: string;\n                  trade_name: string;\n                  selected_url: string;\n                  specialisations: [];\n                }) => (\n                  <li\n                    onClick={() => {\n                      let item_spec: any = specialisations;\n                      if (item_spec?.length) {\n                        let getItem = item_spec[0];\n                        if (getItem) {\n                          setStateData({\n                            image: selected_url,\n                            name: getItem?.name,\n                            specializationsId: specialisations.map(\n                              (sp: any) => sp._id\n                            ),\n                            trade_name: trade_name,\n                            _id: _id,\n                          });\n                          setSearchText(trade_name);\n                        }\n                        setShowOnlyTradeName(true);\n                        setSelectedTrade({\n                          _id,\n                          trade_name,\n                          selected_url,\n                          specialisations,\n                        });\n                      }\n                    }}\n                    className={checkIfExist(_id) ? \"active\" : \"\"}\n                  >\n                    <figure>\n                      <img src={selected_url} alt=\"\" />\n                    </figure>\n                    <span className=\"name\">{trade_name}</span>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  const renderJobResult = () => {\n    if (props?.searchJobListData?.length) {\n      return (\n        <div\n          className=\"custom_autosuggestion\"\n          id=\"fetched-custom-job-category-div\"\n        >\n          <div className=\"recent_search\">\n            <ul className=\"drop_data\">\n              {props.searchJobListData?.map((item: any) => {\n                return (\n                  <li\n                    onClick={() => {\n                      setItemSearch(item);\n                    }}\n                  >\n                    <figure className=\"category\">\n                      <img\n                        src={item.image ? item.image : residential}\n                        alt=\"icon\"\n                      />\n                    </figure>\n                    <div className=\"details\">\n                      <span className=\"name\">{item.name || \"\"}</span>\n                      <span className=\"prof\">{item.trade_name || \"\"}</span>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const onError = (status: string, clearSuggestions: Function) => {\n    console.log(\"Google Maps API returned error with status: \", status);\n    clearSuggestions();\n  };\n\n  const validateForm = () => {\n    return true;\n  };\n\n  const setItemSearch = (item: any) => {\n    setStateData(item);\n    setSelectedTrade({});\n    setSearchText(item?.name || \"\");\n  };\n\n  const bannerSearchClicked = () => {\n    let selected_address: any = selectedAddress;\n    let selected_item: any = props?.selectedItem;\n    let props_trade: any = selected_item?.selectedTrade;\n    let local_info: any = props?.localInfo;\n    let prev_address: any = props?.location?.state?.address;\n\n    let suggestion_selected: any = local_info?.suggestionSelected;\n\n    if (suggestion_selected) {\n      suggestion_selected = JSON.stringify(local_info?.suggestionSelected);\n    }\n\n    if (suggestionSelected && Object.keys(suggestionSelected).length) {\n      if (\n        JSON.stringify(local_info?.suggestionSelected) !==\n        JSON.stringify(suggestionSelected)\n      ) {\n        suggestion_selected = JSON.stringify(suggestionSelected);\n      }\n    }\n\n    let tradeId: any = null;\n    let specializationId: any = null;\n\n    if (!local_info?.doingLocalChanges) {\n      tradeId = Array.isArray(local_info?.tradeId)\n        ? local_info?.tradeId\n        : [local_info?.tradeId];\n      specializationId = Array.isArray(local_info?.specializationId)\n        ? local_info?.specializationId\n        : [local_info?.specializationId];\n    } else {\n      if (Object.keys(stateData).length) {\n        tradeId = Array.isArray(stateData._id)\n          ? stateData._id\n          : [stateData._id];\n        specializationId = Array.isArray(stateData.specializationsId)\n          ? stateData.specializationsId\n          : [stateData.specializationsId];\n      }\n    }\n\n    if (!stateData?._id && !props_trade?._id) {\n      setShowToast(true, \"Please enter the valid search text\");\n      return;\n    }\n\n    if (validateForm()) {\n      let data: any = {\n        page: 1,\n        isFiltered: true,\n        tradeId: tradeId,\n        specializationId: specializationId,\n      };\n\n      if (!tradeId?.length) {\n        setShowToast(true, \"Please enter the valid search text\");\n        return;\n      }\n\n      if (!specializationId?.length) {\n        delete data.specializationId;\n      }\n\n      if (sortBy > 0) {\n        data[\"sortBy\"] = sortBy;\n      }\n\n      if (Object.keys(selectedAddress).length) {\n        data[\"location\"] = {\n          coordinates: [\n            parseFloat(selected_address?.lng),\n            parseFloat(selected_address?.lat),\n          ],\n        };\n\n        if (suggestion_selected) {\n          if (addressText) {\n            data[\"address\"] = suggestion_selected;\n          }\n        }\n      } else {\n        delete data.location;\n      }\n\n      if (moment(calenderRange1?.startDate).isValid()) {\n        data[\"from_date\"] = moment(calenderRange1?.startDate).format(\n          \"YYYY-MM-DD\"\n        );\n      } else {\n        delete data.from_date;\n      }\n\n      if (moment(calenderRange1?.endDate).isValid()) {\n        data[\"to_date\"] = moment(calenderRange1?.endDate).format(\"YYYY-MM-DD\");\n      } else {\n        delete data.to_date;\n      }\n\n      if (sortBy === 2) {\n        if (Object.keys(selected_address)?.length) {\n          data[\"location\"] = {\n            coordinates: [\n              parseFloat(selected_address?.lng),\n              parseFloat(selected_address?.lat),\n            ],\n          };\n        }\n        if (suggestion_selected) {\n          if (addressText) {\n            let case_1 =\n              typeof suggestion_selected == \"string\"\n                ? suggestion_selected\n                : JSON.stringify(suggestion_selected);\n            data[\"address\"] = addressText && suggestion_selected ? case_1 : \"\";\n          }\n        }\n      }\n\n      props.getTitleInfo({\n        name: searchText,\n        isTradeName: false,\n        // count: data?.specializationId?.length,\n        count: 0,\n        tradeId: data.tradeId,\n        specializationId: data.specializationId,\n        location: data.location,\n        from_date: data?.from_date,\n        to_date: data?.to_date,\n        doingLocalChanges: true,\n        address: data?.address,\n        suggestionSelected: suggestion_selected\n          ? JSON.parse(suggestion_selected)\n          : null,\n      });\n      props.postHomeSearchData(data);\n      const mData = {\n        timeStamp: moengage.getCurrentTimeStamp(),\n        category: props?.tradeListData.find(\n          (i: any) => i._id === data?.tradeId[0]\n        )?.trade_name,\n        ...(data.address && {\n          location: `${JSON.parse(data.address)?.mainText} ${\n            JSON.parse(data.address)?.secondaryText\n          }`,\n        }),\n        //'length of hire': '',\n        ...(data?.from_date && { \"start date\": data?.from_date }),\n        ...(data?.to_date && { \"end date\": data?.to_date }),\n      };\n      moengage.moE_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n      mixPanel.mixP_SendEvent(MoEConstants.SEARCHED_FOR_TRADIES, mData);\n    }\n  };\n\n  const filterFromAddress = (response: any) => {\n    let city,\n      state,\n      country = null;\n    for (let i = 0; i < response.results[0].address_components.length; i++) {\n      for (\n        let j = 0;\n        j < response.results[0].address_components[i].types.length;\n        j++\n      ) {\n        switch (response.results[0].address_components[i].types[j]) {\n          case \"locality\":\n            city = response.results[0].address_components[i].long_name;\n            break;\n          case \"administrative_area_level_1\":\n            state = response.results[0].address_components[i].long_name;\n            break;\n          case \"country\":\n            country = response.results[0].address_components[i].long_name;\n            break;\n        }\n      }\n    }\n    return { city, state, country: country.toLowerCase() };\n  };\n\n  const getCurrentLocation = async () => {\n    let itemToggle: any = await navigator?.permissions?.query({\n      name: \"geolocation\",\n    });\n    setLocationStatus(itemToggle.state);\n    let local_position: any = localStorage.getItem(\"position\");\n    let position: any = JSON.parse(local_position);\n\n    if (position?.length) {\n      let lng = position[0].toString();\n      let lat = position[1].toString();\n      let response: any = await Geocode.fromLatLng(lat, lng);\n      const { city, state, country } = filterFromAddress(response);\n\n      if (response && [\"australia\", \"au\"].includes(country)) {\n        if (\n          response?.results &&\n          Array.isArray(response.results) &&\n          response?.results?.length\n        ) {\n          const address = response.results[0].formatted_address;\n          setSelectedAddress({ lat, lng });\n          setAddressText(address);\n          setInputFocus2(true);\n          setInputFocus1(false);\n          setInputFocus3(false);\n          setCurrentLocations(true);\n          // this.setState({ currentAddressLatLng: { long, lat }, addressText: address, enableCurrentLocation: true, inputFocus2: true })\n        }\n      } else {\n        if (itemToggle?.state !== \"denied\") {\n          setShowToast(\n            true,\n            \"Uh Oh! We don't provide service currently in your location\"\n          );\n        }\n      }\n    }\n  };\n\n  const checkPlaceholder = (calenderRange1: any) => {\n    let fromDate: any = calenderRange1?.startDate;\n    let toDate: any = calenderRange1?.endDate;\n    let result = renderTimeWithCustomFormat(\n      fromDate,\n      toDate,\n      \"\",\n      [\"DD MMM\", \"DD MMM YYYY\"],\n      \"When?\"\n    );\n\n    if (!result) {\n      return \"When?\";\n    }\n\n    return result;\n  };\n\n  let state_data: any = stateData;\n  let length_spec = 0;\n  if (\n    state_data?.specializationsId?.length &&\n    Array.isArray(state_data?.specializationsId)\n  ) {\n    length_spec = state_data?.specializationsId?.length;\n  }\n\n  let custom_name = searchText;\n  if (!checkOnChange) {\n    if (length_spec > 1 && custom_name?.length) {\n      custom_name = `${custom_name} +${length_spec - 1}`;\n    }\n  }\n  console.log(\n    \"searchText\",\n    searchText,\n    \"custom_name\",\n    custom_name,\n    \"propsbannerSearch\",\n    props,\n    \"zz\",\n    props.showOnlyTradeName\n  );\n  return (\n    <div className=\"home_search\">\n      <button\n        onClick={() => {\n          if (props?.handleChangeToggle) {\n            props.handleChangeToggle(false);\n          }\n        }}\n        className=\"modal_srch_close\"\n      >\n        <img src={close} alt=\"close\" />\n      </button>\n      <form className=\"search_wrapr\">\n        <ul>\n          <li className=\"categ_box\">\n            <div className=\"text_field\" id=\"text-field-div\">\n              <input\n                type=\"text\"\n                ref={searchRef}\n                placeholder=\"What jobs are you after?\"\n                value={showOnlyTradeName ? searchText : custom_name}\n                onChange={(e) => {\n                  isHandleChanges(true);\n                  setOnChange(true);\n                  setSearchText(e.target.value.trimLeft());\n                }}\n                // readOnly={props?.selectedItem ? true : false}\n                onFocus={() => {\n                  setInputFocus1(true);\n                  setInputFocus2(false);\n                  setInputFocus3(false);\n                }}\n              />\n              <div className=\"border_eff\"></div>\n              <span className=\"detect_icon_ltr\">\n                <img src={Searchicon} alt=\"search\" />\n              </span>\n              {searchText?.length && inputFocus1 ? (\n                <span className=\"detect_icon\">\n                  <img\n                    src={cross}\n                    alt=\"cross\"\n                    onClick={() => {\n                      // clear here\n                      setStateData({});\n                      setSelectedTrade({});\n                      isHandleChanges(true);\n                      setSearchText(\"\");\n                      setOnChange(false);\n                    }}\n                  />\n                </span>\n              ) : null}\n            </div>\n            {!!errors.searchedJob && (\n              <span className=\"error_msg\">{errors.searchedJob}</span>\n            )}\n          </li>\n          {!searchText?.length && inputFocus1 ? recentJobSearches() : null}\n          {searchText?.length > 2 && inputFocus1 ? renderJobResult() : null}\n\n          {/* {'location search start here!'} */}\n          <li className=\"loc_box\">\n            <div id=\"location-text-field-div\">\n              <div>\n                <PlacesAutocomplete\n                  value={addressText}\n                  searchOptions={{\n                    componentRestrictions: {\n                      country: \"au\",\n                    },\n                    //  types: [\"address\"]\n                    types: [\"(cities)\"],\n                  }}\n                  shouldFetchSuggestions={addressText?.length > 2}\n                  onChange={(item: any) => {\n                    setAddressText(item);\n                  }}\n                  onSelect={async (\n                    address: string,\n                    placeId?: any,\n                    suggestion?: any\n                  ) => {\n                    let selected_address: any = address;\n                    if (address.indexOf(\",\")) {\n                      selected_address = address.split(\",\")[0];\n                    }\n                    console.log({\n                      address: suggestion?.formattedSuggestion,\n                    });\n                    setSuggestion(suggestion?.formattedSuggestion);\n                    setAddressText(suggestion?.formattedSuggestion?.mainText);\n                    let response = await Geocode.fromAddress(address);\n                    if (response?.results?.length) {\n                      const { lat, lng } =\n                        response.results[0].geometry.location;\n                      setSelectedAddress({ lat, lng });\n                      setInputFocus2(false);\n                    }\n                  }}\n                  highlightFirstSuggestion={true}\n                  onError={onError}\n                  debounce={0}\n                >\n                  {({\n                    getInputProps,\n                    suggestions,\n                    getSuggestionItemProps,\n                    loading,\n                  }: any) => (\n                    <div>\n                      <div className={`text_field`}>\n                        {/* className={`text_field ${addressText?.length > 2 ? '' : 'none'}`}> */}\n                        <input\n                          {...getInputProps({\n                            placeholder: \"Where?\",\n                            className: \"line-1\",\n                          })}\n                          id=\"location-input-tag\"\n                          autoComplete=\"off\"\n                          ref={locationRef}\n                          onFocus={() => {\n                            setInputFocus2(true);\n                            setInputFocus1(false);\n                            setInputFocus3(false);\n                          }}\n                        />\n                        <span className=\"detect_icon_ltr\">\n                          <img src={Location} alt=\"location\" />\n                        </span>\n                        {inputFocus2 && addressText?.length > 2 ? (\n                          // {inputFocus2 && addressText?.length > 2 ?\n                          <span className=\"detect_icon\">\n                            <img\n                              src={cross}\n                              alt=\"cross\"\n                              onClick={() => {\n                                setAddressText(\"\");\n                                setSelectedAddress({});\n                              }}\n                            />\n                          </span>\n                        ) : null}\n                      </div>\n                      {suggestions?.length &&\n                      inputFocus2 &&\n                      addressText?.length ? (\n                        <div\n                          className=\"custom_autosuggestion location\"\n                          id=\"autocomplete-dropdown-container\"\n                        >\n                          <div className=\"flex_row recent_search auto_loc\">\n                            <div className=\"flex_col_sm_4\">\n                              {!!errors.selectedMapLocation && (\n                                <span className=\"error_msg\">\n                                  {errors.selectedMapLocation}\n                                </span>\n                              )}\n                              {loading && <div>Loading...</div>}\n                              {suggestions.map((suggestion: any) => {\n                                const className =\n                                  \"autosuggestion_icon card loc name\";\n                                const style = suggestion.active\n                                  ? {\n                                      backgroundColor: \"#fafafa\",\n                                      cursor: \"pointer\",\n                                    }\n                                  : {\n                                      backgroundColor: \"#ffffff\",\n                                      cursor: \"pointer\",\n                                    };\n                                return (\n                                  <div\n                                    {...getSuggestionItemProps(suggestion, {\n                                      className,\n                                      style,\n                                    })}\n                                  >\n                                    <span>\n                                      {suggestion.formattedSuggestion.mainText}\n                                    </span>\n                                    <span className=\"name\">\n                                      {\n                                        suggestion.formattedSuggestion\n                                          .secondaryText\n                                      }\n                                    </span>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        </div>\n                      ) : null}\n                      {inputFocus2 &&\n                      !suggestions?.length &&\n                      !Object.keys(selectedAddress).length ? (\n                        <div\n                          style={{ minHeight: \"50px\" }}\n                          className=\"custom_autosuggestion location\"\n                          id=\"autocomplete-dropdown-container\"\n                        >\n                          <div className=\"flex_row recent_search auto_loc\">\n                            <div className=\"flex_col_sm_4\">\n                              <div className=\"loc_suggestions\">\n                                {\"No Result Found.\"}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ) : null}\n                    </div>\n                  )}\n                </PlacesAutocomplete>\n              </div>\n            </div>\n            {!!errors.selectedMapLocation && (\n              <span className=\"error_msg\">{errors.selectedMapLocation}</span>\n            )}\n          </li>\n\n          {/* {'location search end here!'} */}\n          {!addressText?.length && inputFocus2 ? (\n            <div\n              className=\"custom_autosuggestion location\"\n              id=\"current-location-search-div\"\n            >\n              <span className=\"location-btn\" onClick={getCurrentLocation}>\n                <span className=\"gps_icon\">\n                  <img src={icgps} alt=\"\" />\n                </span>{\" \"}\n                Use my current location\n              </span>\n              {locationStatus === \"denied\" && (\n                <span className=\"blocked_note\">\n                  You have blocked your location. To use this, change your\n                  location settings in browser.\n                </span>\n              )}\n              {props?.recentLocationData?.length > 0 && (\n                <span className=\"sub_title\">{\"Recent searches\"}</span>\n              )}\n              <div className=\"flex_row recent_search auto_loc\">\n                {props?.recentLocationData?.map((item: any) => {\n                  return (\n                    item?.address?.length > 0 && (\n                      <div\n                        className=\"flex_col_sm_4\"\n                        onClick={() => {\n                          setAddressText(JSON.parse(item?.address)?.mainText);\n                          setSelectedAddress({\n                            lat: item?.location?.coordinates[1],\n                            lng: item?.location?.coordinates[0],\n                          });\n                          setSuggestion(JSON.parse(item?.address));\n                        }}\n                      >\n                        <div className=\"autosuggestion_icon card loc name\">\n                          <span>{JSON.parse(item?.address)?.mainText}</span>\n                          <span className=\"name\">\n                            {JSON.parse(item?.address)?.secondaryText}\n                          </span>\n                        </div>\n                      </div>\n                    )\n                  );\n                })}\n              </div>\n            </div>\n          ) : null}\n          <li\n            className={`date_box ${\n              calenderRange1?.startDate ? \"date_value\" : \"\"\n            }`}\n          >\n            <div\n              ref={calenderRef}\n              className=\"custom_date_range\"\n              id=\"date-range-div\"\n            >\n              <div className=\"text_field\">\n                <span className=\"detect_icon_ltr calendar\"></span>\n                <input\n                  type=\"text\"\n                  placeholder={checkPlaceholder(calenderRange1)}\n                  onFocus={() => {\n                    setInputFocus3(true);\n                    setInputFocus1(false);\n                    setInputFocus2(false);\n                  }}\n                />\n                {calenderRange1?.startDate && inputFocus3 && (\n                  <span className=\"detect_icon\">\n                    <img\n                      src={cross}\n                      alt=\"cross\"\n                      onClick={() => {\n                        setCalenderRange1({\n                          startDate: \"\",\n                          endDate: \"\",\n                          key: \"selection1\",\n                        });\n                        console.log({ localInfo: props.localInfo });\n                        props.getTitleInfo({\n                          ...props.localInfo,\n                          from_date: \"\",\n                          to_date: \"\",\n                        });\n                      }}\n                    />\n                  </span>\n                )}\n              </div>\n              {/* {inputFocus3 && */}\n              {inputFocus3 ? (\n                <div\n                  className=\"custom_autosuggestion\"\n                  id=\"custom-date-range-div\"\n                >\n                  <DateRange\n                    onChange={handleCalenderRange}\n                    ranges={\n                      !moment(calenderRange1?.startDate).isValid()\n                        ? [\n                            {\n                              startDate: new Date(),\n                              endDate: new Date(),\n                              key: \"selection1\",\n                            },\n                          ]\n                        : [calenderRange1]\n                    }\n                    moveRangeOnFirstSelection={false}\n                    rangeColors={[\"#fee600\", \"#b5b5b5\"]}\n                    showDateDisplay={false}\n                    showSelectionPreview={true}\n                    months={2}\n                    showPreview={true}\n                    minDate={new Date()}\n                    maxDate={moment().add(2, \"years\").toDate()}\n                    direction=\"horizontal\"\n                    fixedHeight={true}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </li>\n          <div className=\"search_btn\">\n            <button\n              type=\"button\"\n              className=\"fill_btn btn-effect\"\n              onClick={bannerSearchClicked}\n            >\n              <img src={search} alt=\"search\" />\n            </button>\n          </div>\n        </ul>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    searchJobListData: state.homeSearch.searchJobListData,\n    recentSearchJobData: state.homeSearch.recentSearchJobData,\n    homeSearchJobData: state.homeSearch.homeSearchJobData,\n    tradeListData: state.auth.tradeListData,\n    localChanges: state.jobs.localChanges,\n    recentLocationData: state.homeSearch.recentLocationData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators(\n    {\n      getSearchJobList,\n      getRecentSearchList,\n      postHomeSearchData,\n      isHandleChanges,\n      getRecentLocationList,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BannerSearch);\n\n/**\n!loading &&\naddressText?.length > 2 &&\n!suggestions?.length &&\n!enableCurrentLocation &&\n!Object.keys(selectedAddress).length\n**/\n"]},"metadata":{},"sourceType":"module"}